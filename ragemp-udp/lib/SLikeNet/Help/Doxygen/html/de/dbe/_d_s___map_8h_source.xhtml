<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/include/slikenet/DS_Map.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('de/dbe/_d_s___map_8h_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DS_Map.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../de/dbe/_d_s___map_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef __RAKNET_MAP_H</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __RAKNET_MAP_H</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d4d/_d_s___ordered_list_8h.xhtml">DS_OrderedList.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/dbd/_export_8h.xhtml">Export.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/dc5/memoryoverride_8h.xhtml" title="If _USE_RAK_MEMORY_OVERRIDE is defined, memory allocations go through rakMalloc, rakRealloc, and rakFree.">memoryoverride.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">assert.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// If I want to change this to a red-black tree, this is a good site: http://www.cs.auckland.ac.nz/software/AlgAnim/red_black.html</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">// This makes insertions and deletions faster.  But then traversals are slow, while they are currently fast.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>DataStructures</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type&gt;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a141573e51ef42434451188a050e9a577">   40</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="../../da/d80/namespace_data_structures.xhtml#a141573e51ef42434451188a050e9a577">defaultMapKeyComparison</a>(<span class="keyword">const</span> key_type &amp;a, <span class="keyword">const</span> key_type &amp;b)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">if</span> (a&lt;b) <span class="keywordflow">return</span> -1; <span class="keywordflow">if</span> (a==b) <span class="keywordflow">return</span> 0; <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;, const key_type&amp;)=defaultMapKeyComparison&lt;key_type&gt; &gt;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">   47</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5ff3a8c0572c98d5c2efa3e1380c77d5">   50</a></span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5ff3a8c0572c98d5c2efa3e1380c77d5">IMPLEMENT_DEFAULT_COMPARISON</a>(<span class="keywordtype">void</span>) {DataStructures::defaultMapKeyComparison&lt;key_type&gt;(key_type(),key_type());}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">   52</a></span>&#160;        <span class="keyword">struct </span><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        {</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#ad7a367c76cca4428e613d73440382e71">   54</a></span>&#160;            <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#ad7a367c76cca4428e613d73440382e71">MapNode</a>() {}</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a20a985503a20b50231ef96c3a3f6f8eb">   55</a></span>&#160;            <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a20a985503a20b50231ef96c3a3f6f8eb">MapNode</a>(key_type _key, data_type _data) : mapNodeKey(_key), mapNodeData(_data) {}</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#afd59b6776d8868500d5ba38e420df786">   56</a></span>&#160;            <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a>&amp; operator = ( <span class="keyword">const</span> <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a>&amp; input ) {mapNodeKey=input.<a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#aca55378ca42d7c2d1db962237616ca35">mapNodeKey</a>; mapNodeData=input.<a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a50e78c2975af586d38624a517fd56b73">mapNodeData</a>; <span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a51cfb66fb6174f9336b90470f0c97686">   57</a></span>&#160;            <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a51cfb66fb6174f9336b90470f0c97686">MapNode</a>( <span class="keyword">const</span> <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a> &amp; input) {mapNodeKey=input.<a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#aca55378ca42d7c2d1db962237616ca35">mapNodeKey</a>; mapNodeData=input.<a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a50e78c2975af586d38624a517fd56b73">mapNodeData</a>;}</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#aca55378ca42d7c2d1db962237616ca35">   58</a></span>&#160;            key_type <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#aca55378ca42d7c2d1db962237616ca35">mapNodeKey</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a50e78c2975af586d38624a517fd56b73">   59</a></span>&#160;            data_type <a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml#a50e78c2975af586d38624a517fd56b73">mapNodeData</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        };</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">// Has to be a static because the comparison callback for DataStructures::OrderedList is a C function</span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a4737e24f5ae78118399dbeb80d2bd8a7">   63</a></span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span> NodeComparisonFunc(<span class="keyword">const</span> key_type &amp;a, <span class="keyword">const</span> MapNode &amp;b)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">return</span> key_comparison_func(a, b.mapNodeKey);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        ~<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>( <span class="keyword">const</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&amp; original_copy );</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&amp; operator= ( <span class="keyword">const</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&amp; original_copy );</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        data_type&amp; Get(<span class="keyword">const</span> key_type &amp;key) <span class="keyword">const</span>; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        data_type Pop(<span class="keyword">const</span> key_type &amp;key);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// Add if needed</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordtype">void</span> Set(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> data_type &amp;data);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// Must already exist</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordtype">void</span> SetExisting(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> data_type &amp;data);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="comment">// Must add</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordtype">void</span> SetNew(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> data_type &amp;data);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordtype">bool</span> Has(<span class="keyword">const</span> key_type &amp;key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordtype">bool</span> Delete(<span class="keyword">const</span> key_type &amp;key);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        data_type&amp; operator[] ( <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        key_type GetKeyAtIndex( <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordtype">unsigned</span> GetIndexAtKey( <span class="keyword">const</span> key_type &amp;key );</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordtype">void</span> RemoveAtIndex(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> index);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordtype">unsigned</span> Size(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a6da1ceaa9a89aacf8469576a09e2bb33">   91</a></span>&#160;        <a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList&lt; key_type,MapNode,&amp;Map::NodeComparisonFunc &gt;</a> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a6da1ceaa9a89aacf8469576a09e2bb33">mapNodeList</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordtype">void</span> SaveLastSearch(<span class="keyword">const</span> key_type &amp;key, <span class="keywordtype">unsigned</span> index) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordtype">bool</span> HasSavedSearchResult(<span class="keyword">const</span> key_type &amp;key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a56fa2a6d431b06152fb0cd9b9f7ae1e5">   96</a></span>&#160;        <span class="keywordtype">unsigned</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a56fa2a6d431b06152fb0cd9b9f7ae1e5">lastSearchIndex</a>;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aceac06eff85ef63c2e1e49e65e74f0f3">   97</a></span>&#160;        key_type <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aceac06eff85ef63c2e1e49e65e74f0f3">lastSearchKey</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#acf98e8afa54e3a773569f719802bb47a">   98</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#acf98e8afa54e3a773569f719802bb47a">lastSearchIndexValid</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    };</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a122af88527b9e7ed41d72f86064bcf27">  102</a></span>&#160;    <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a122af88527b9e7ed41d72f86064bcf27">Map&lt;key_type, data_type, key_comparison_func&gt;::Map</a>()</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        lastSearchIndexValid=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a69f77bd0f72b8292b6f0fb134409aa05">  108</a></span>&#160;    <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a69f77bd0f72b8292b6f0fb134409aa05">Map&lt;key_type, data_type, key_comparison_func&gt;::~Map</a>()</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        Clear();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5e7e6f886dc9dfe2e51f576bc492af9f">  114</a></span>&#160;    <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a122af88527b9e7ed41d72f86064bcf27">Map&lt;key_type, data_type, key_comparison_func&gt;::Map</a>( <span class="keyword">const</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&amp; original_copy )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        mapNodeList=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a6da1ceaa9a89aacf8469576a09e2bb33">mapNodeList</a>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        lastSearchIndex=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a56fa2a6d431b06152fb0cd9b9f7ae1e5">lastSearchIndex</a>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        lastSearchKey=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aceac06eff85ef63c2e1e49e65e74f0f3">lastSearchKey</a>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        lastSearchIndexValid=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#acf98e8afa54e3a773569f719802bb47a">lastSearchIndexValid</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a8a100e16ebbae848f9ef51892bc41cdb">  123</a></span>&#160;    <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map&lt;key_type, data_type, key_comparison_func&gt;</a>&amp; <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a8a100e16ebbae848f9ef51892bc41cdb">Map&lt;key_type, data_type, key_comparison_func&gt;::operator= </a>( <span class="keyword">const</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&amp; original_copy )</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        mapNodeList=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a6da1ceaa9a89aacf8469576a09e2bb33">mapNodeList</a>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        lastSearchIndex=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a56fa2a6d431b06152fb0cd9b9f7ae1e5">lastSearchIndex</a>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        lastSearchKey=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aceac06eff85ef63c2e1e49e65e74f0f3">lastSearchKey</a>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        lastSearchIndexValid=original_copy.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#acf98e8afa54e3a773569f719802bb47a">lastSearchIndexValid</a>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a3514ebacc6a333e824d4fda7382275df">  133</a></span>&#160;    data_type&amp; <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a3514ebacc6a333e824d4fda7382275df">Map&lt;key_type, data_type, key_comparison_func&gt;::Get</a>(<span class="keyword">const</span> key_type &amp;key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">return</span> mapNodeList[lastSearchIndex].mapNodeData;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(objectExists);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        SaveLastSearch(key,index);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">return</span> mapNodeList[index].mapNodeData;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aacb6191d7d678267acc8bf6286033b21">  147</a></span>&#160;    <span class="keywordtype">unsigned</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aacb6191d7d678267acc8bf6286033b21">Map&lt;key_type, data_type, key_comparison_func&gt;::GetIndexAtKey</a>( <span class="keyword">const</span> key_type &amp;key )</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">return</span> lastSearchIndex;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">if</span> (objectExists==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(objectExists);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        SaveLastSearch(key,index);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">return</span> index;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab746756b18b120eed088420d9e289c0e">  164</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab746756b18b120eed088420d9e289c0e">Map&lt;key_type, data_type, key_comparison_func&gt;::RemoveAtIndex</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> index)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        mapNodeList.RemoveAtIndex(index);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        lastSearchIndexValid=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a59bf633e857535b30db9bc81531bd5c3">  171</a></span>&#160;        data_type <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a59bf633e857535b30db9bc81531bd5c3">Map&lt;key_type, data_type, key_comparison_func&gt;::Pop</a>(<span class="keyword">const</span> key_type &amp;key)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            index=lastSearchIndex;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(objectExists);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }       </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        data_type tmp = mapNodeList[index].mapNodeData;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        mapNodeList.RemoveAtIndex(index);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        lastSearchIndexValid=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">return</span> tmp;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a835a751752d457c333853bfecd30e9b0">  189</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a835a751752d457c333853bfecd30e9b0">Map&lt;key_type, data_type, key_comparison_func&gt;::Set</a>(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> data_type &amp;data)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            mapNodeList[lastSearchIndex].mapNodeData=data;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            SaveLastSearch(key,index);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            mapNodeList[index].mapNodeData=data;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            SaveLastSearch(key,mapNodeList.Insert(key,<a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a>(key,data), <span class="keyword">true</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>));</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac1af66c855c322746bca61e7b9b26e8d">  214</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac1af66c855c322746bca61e7b9b26e8d">Map&lt;key_type, data_type, key_comparison_func&gt;::SetExisting</a>(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> data_type &amp;data)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            index=lastSearchIndex;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(objectExists);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            SaveLastSearch(key,index);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        }       </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        mapNodeList[index].mapNodeData=data;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }   </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a101bf20cd6e9a46ed582618a48a1cfb4">  234</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a101bf20cd6e9a46ed582618a48a1cfb4">Map&lt;key_type, data_type, key_comparison_func&gt;::SetNew</a>(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> data_type &amp;data)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(objectExists==<span class="keyword">false</span>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor"></span>        SaveLastSearch(key,mapNodeList.Insert(key,<a class="code" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a>(key,data), <span class="keyword">true</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>));</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac4620bb554cace55c0f093abafad01d9">  245</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac4620bb554cace55c0f093abafad01d9">Map&lt;key_type, data_type, key_comparison_func&gt;::Has</a>(<span class="keyword">const</span> key_type &amp;key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            SaveLastSearch(key,index);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">return</span> objectExists;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#af7be78b0821c0a775b3f0acfd7560abe">  259</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#af7be78b0821c0a775b3f0acfd7560abe">Map&lt;key_type, data_type, key_comparison_func&gt;::Delete</a>(<span class="keyword">const</span> key_type &amp;key)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">if</span> (HasSavedSearchResult(key))</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            lastSearchIndexValid=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            mapNodeList.RemoveAtIndex(lastSearchIndex);   </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        index=mapNodeList.GetIndexFromKey(key, &amp;objectExists);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            lastSearchIndexValid=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            mapNodeList.RemoveAtIndex(index);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a2d01e7c2be0ebd431ada0da5f3ebe98f">  282</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a2d01e7c2be0ebd431ada0da5f3ebe98f">Map&lt;key_type, data_type, key_comparison_func&gt;::Clear</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        lastSearchIndexValid=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        mapNodeList.Clear(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a18776c79d20486b7bd48e2e90b9c8005">  289</a></span>&#160;    data_type&amp; <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a18776c79d20486b7bd48e2e90b9c8005">Map&lt;key_type, data_type, key_comparison_func&gt;::operator[]</a>( <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position )<span class="keyword"> const</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span> mapNodeList[position].mapNodeData;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a9472d4b96dd3a7919819120c6a1c1466">  295</a></span>&#160;        key_type <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a9472d4b96dd3a7919819120c6a1c1466">Map&lt;key_type, data_type, key_comparison_func&gt;::GetKeyAtIndex</a>( <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position )<span class="keyword"> const</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">return</span> mapNodeList[position].mapNodeKey;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00301"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ad33475fbf642a7df45a48d9f453c3566">  301</a></span>&#160;    <span class="keywordtype">unsigned</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ad33475fbf642a7df45a48d9f453c3566">Map&lt;key_type, data_type, key_comparison_func&gt;::Size</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">return</span> mapNodeList.Size();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5b781a91324274f597aaabde5b3d6c51">  307</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5b781a91324274f597aaabde5b3d6c51">Map&lt;key_type, data_type, key_comparison_func&gt;::SaveLastSearch</a>(<span class="keyword">const</span> key_type &amp;key, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        (void) key;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        (void) index;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">        lastSearchIndex=index;</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">        lastSearchKey=key;</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">        lastSearchIndexValid=true;</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> key_type, <span class="keyword">class</span> data_type, <span class="keywordtype">int</span> (*key_comparison_func)(const key_type&amp;,const key_type&amp;)&gt;</div>
<div class="line"><a name="l00320"></a><span class="lineno"><a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab3fd77fe360c86c40332ee05d2dcfeed">  320</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab3fd77fe360c86c40332ee05d2dcfeed">Map&lt;key_type, data_type, key_comparison_func&gt;::HasSavedSearchResult</a>(<span class="keyword">const</span> key_type &amp;key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        (void) key;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="comment">// Not threadsafe!</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="comment">// return lastSearchIndexValid &amp;&amp; key_comparison_func(key,lastSearchKey)==0;</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_bbb90e3ef9167a594ae33323139a2595.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_88467e66686deb9d3756fe4fc298e321.xhtml">slikenet</a></li><li class="navelem"><a class="el" href="../../de/dbe/_d_s___map_8h.xhtml">DS_Map.h</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

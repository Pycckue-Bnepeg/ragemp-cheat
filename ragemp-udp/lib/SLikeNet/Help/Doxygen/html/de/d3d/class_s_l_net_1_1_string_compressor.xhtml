<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::StringCompressor Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('de/d3d/class_s_l_net_1_1_string_compressor.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d4/da2/class_s_l_net_1_1_string_compressor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::StringCompressor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Writes and reads strings to and from bitstreams.  
 <a href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/d78/_string_compressor_8h_source.xhtml">slikenet/StringCompressor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acbe22b1af7872e9a4272560c3f274cd0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbe22b1af7872e9a4272560c3f274cd0">~StringCompressor</a> ()</td></tr>
<tr class="separator:acbe22b1af7872e9a4272560c3f274cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad856d59ee5d65d4085e2aa68c0a7588e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#ad856d59ee5d65d4085e2aa68c0a7588e">GenerateTreeFromStrings</a> (unsigned char *input, unsigned inputLength, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId)</td></tr>
<tr class="separator:ad856d59ee5d65d4085e2aa68c0a7588e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44be8cc8a469a28085a7502650040459"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a44be8cc8a469a28085a7502650040459">EncodeString</a> (const char *input, int maxCharsToWrite, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *output, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId=0)</td></tr>
<tr class="separator:a44be8cc8a469a28085a7502650040459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ff01d168653fbd47d917e7ffd3675cd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a5ff01d168653fbd47d917e7ffd3675cd">DecodeString</a> (char *output, int maxCharsToWrite, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *input, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId=0)</td></tr>
<tr class="separator:a5ff01d168653fbd47d917e7ffd3675cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae42817a37f2065d35df28c1ea1b9b495"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#ae42817a37f2065d35df28c1ea1b9b495">EncodeString</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> *input, int maxCharsToWrite, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *output, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId=0)</td></tr>
<tr class="separator:ae42817a37f2065d35df28c1ea1b9b495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f6c5faa599067a47f254a83aef1b45e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a3f6c5faa599067a47f254a83aef1b45e">DecodeString</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> *output, int maxCharsToWrite, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *input, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId=0)</td></tr>
<tr class="separator:a3f6c5faa599067a47f254a83aef1b45e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53e37f9b3b4647c83f3f67e3cc531bf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#af53e37f9b3b4647c83f3f67e3cc531bf">StringCompressor</a> ()</td></tr>
<tr class="separator:af53e37f9b3b4647c83f3f67e3cc531bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acbd6add1c51c15fbbb616ce17b527aab"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml">StringCompressor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">Instance</a> (void)</td></tr>
<tr class="separator:acbd6add1c51c15fbbb616ce17b527aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa237e63b4793abc8e6bb0e6f1b744f50"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#aa237e63b4793abc8e6bb0e6f1b744f50">AddReference</a> (void)</td></tr>
<tr class="memdesc:aa237e63b4793abc8e6bb0e6f1b744f50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used so I can allocate and deallocate this singleton at runtime.  <a href="#aa237e63b4793abc8e6bb0e6f1b744f50"></a><br/></td></tr>
<tr class="separator:aa237e63b4793abc8e6bb0e6f1b744f50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c521f3b23b8fdc4b8a62e3b1d3f505"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a20c521f3b23b8fdc4b8a62e3b1d3f505">RemoveReference</a> (void)</td></tr>
<tr class="memdesc:a20c521f3b23b8fdc4b8a62e3b1d3f505"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used so I can allocate and deallocate this singleton at runtime.  <a href="#a20c521f3b23b8fdc4b8a62e3b1d3f505"></a><br/></td></tr>
<tr class="separator:a20c521f3b23b8fdc4b8a62e3b1d3f505"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Writes and reads strings to and from bitstreams. </p>
<p>Only works with ASCII strings. The default compression is for English. You can call GenerateTreeFromStrings to compress and decompress other languages efficiently as well. </p>

<p>Definition at line <a class="el" href="../../df/d78/_string_compressor_8h_source.xhtml#l00051">51</a> of file <a class="el" href="../../df/d78/_string_compressor_8h_source.xhtml">StringCompressor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acbe22b1af7872e9a4272560c3f274cd0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">StringCompressor::~StringCompressor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00365">365</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00301">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="af53e37f9b3b4647c83f3f67e3cc531bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">StringCompressor::StringCompressor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00327">327</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00067">englishCharacterFrequencies</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00069">SLNet::HuffmanEncodingTree::GenerateFromFrequencyTable()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00050">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::IMPLEMENT_DEFAULT_COMPARISON()</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00189">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Set()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aa237e63b4793abc8e6bb0e6f1b744f50"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void StringCompressor::AddReference </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Used so I can allocate and deallocate this singleton at runtime. </p>

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00192">SLNet::RakPeer::RakPeer()</a>.</p>

</div>
</div>
<a class="anchor" id="a5ff01d168653fbd47d917e7ffd3675cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool StringCompressor::DecodeString </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxCharsToWrite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Writes input to output, uncompressed. Takes care of the null terminator for you. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>A block of bytes to receive the output </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxCharsToWrite</td><td>Size, in bytes, of <em>output</em> . A NULL terminator will always be appended to the output string. If the maxCharsToWrite is not large enough, the string will be truncated. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>The bitstream containing the compressed string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">languageID</td><td>Which language to use </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">404</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00200">SLNet::HuffmanEncodingTree::DecodeArray()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00133">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Get()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00534">SLNet::BitStream::GetNumberOfUnreadBits()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00245">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Has()</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01450">SLNet::BitStream::ReadCompressed()</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00116">SLNet::StringTable::DecodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00486">DecodeString()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00088">SLNet::TableSerializer::DeserializeColumns()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01283">SLNet::RakString::DeserializeCompressed()</a>, and <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00253">SLNet::TableSerializer::DeserializeFilterQuery()</a>.</p>

</div>
</div>
<a class="anchor" id="a3f6c5faa599067a47f254a83aef1b45e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool StringCompressor::DecodeString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxCharsToWrite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00486">486</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">SLNet::RakString::Clear()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">DecodeString()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00065">MAX_ALLOCA_STACK_ALLOCATION</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00064">rakFree_Ex</a>, and <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00062">rakMalloc_Ex</a>.</p>

</div>
</div>
<a class="anchor" id="a44be8cc8a469a28085a7502650040459"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StringCompressor::EncodeString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxCharsToWrite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Writes input to output, compressed. Takes care of the null terminator for you. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Pointer to an ASCII string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxCharsToWrite</td><td>The max number of bytes to write of <em>input</em>. Use 0 to mean no limit. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>The bitstream to write the compressed string to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">languageID</td><td>Which language to use </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00371">371</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00169">SLNet::HuffmanEncodingTree::EncodeArray()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00133">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Get()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00549">SLNet::BitStream::GetData()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00521">SLNet::BitStream::GetNumberOfBitsUsed()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00245">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Has()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00303">return</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00428">SLNet::BitStream::WriteBits()</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01116">SLNet::BitStream::WriteCompressed()</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00097">SLNet::StringTable::EncodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00482">EncodeString()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00164">SLNet::TableSerializer::SerializeCell()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00040">SLNet::TableSerializer::SerializeColumns()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01243">SLNet::RakString::SerializeCompressed()</a>, and <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00239">SLNet::TableSerializer::SerializeFilterQuery()</a>.</p>

</div>
</div>
<a class="anchor" id="ae42817a37f2065d35df28c1ea1b9b495"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StringCompressor::EncodeString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxCharsToWrite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00482">482</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">SLNet::RakString::C_String()</a>, and <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00371">EncodeString()</a>.</p>

</div>
</div>
<a class="anchor" id="ad856d59ee5d65d4085e2aa68c0a7588e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StringCompressor::GenerateTreeFromStrings </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>inputLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Given an array of strings, such as a chat log, generate the optimal encoding tree for it. This function is optional and if it is not called a default tree will be used instead. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>An array of bytes which should point to text. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inputLength</td><td>Length of <em>input</em> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">languageID</td><td>An identifier for the language / string table to generate the tree for. English is automatically created with ID 0 in the constructor. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00069">SLNet::HuffmanEncodingTree::GenerateFromFrequencyTable()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00133">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Get()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00245">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Has()</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00303">return</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00189">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Set()</a>.</p>

</div>
</div>
<a class="anchor" id="acbd6add1c51c15fbbb616ce17b527aab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml">StringCompressor</a> * StringCompressor::Instance </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>static function because only static functions can access static members The <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> constructor adds a reference to this class, so don't call this until an instance of <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> exists, or unless you call AddReference yourself. </p>
<dl class="section return"><dt>Returns</dt><dd>the unique instance of the <a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml" title="Writes and reads strings to and from bitstreams.">StringCompressor</a> </dd></dl>

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00116">SLNet::StringTable::DecodeString()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00193">SLNet::TableSerializer::DeserializeCell()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00088">SLNet::TableSerializer::DeserializeColumns()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01283">SLNet::RakString::DeserializeCompressed()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00253">SLNet::TableSerializer::DeserializeFilterQuery()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00097">SLNet::StringTable::EncodeString()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00164">SLNet::TableSerializer::SerializeCell()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00040">SLNet::TableSerializer::SerializeColumns()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01243">SLNet::RakString::SerializeCompressed()</a>, and <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00239">SLNet::TableSerializer::SerializeFilterQuery()</a>.</p>

</div>
</div>
<a class="anchor" id="a20c521f3b23b8fdc4b8a62e3b1d3f505"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void StringCompressor::RemoveReference </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Used so I can allocate and deallocate this singleton at runtime. </p>

<p>Definition at line <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, and <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00319">SLNet::RakPeer::~RakPeer()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Source/include/slikenet/<a class="el" href="../../df/d78/_string_compressor_8h_source.xhtml">StringCompressor.h</a></li>
<li>Source/src/<a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml">StringCompressor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml">StringCompressor</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

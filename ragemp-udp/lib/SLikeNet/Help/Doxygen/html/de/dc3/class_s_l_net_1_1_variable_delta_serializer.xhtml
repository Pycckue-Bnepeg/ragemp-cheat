<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::VariableDeltaSerializer Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d3/dec/class_s_l_net_1_1_variable_delta_serializer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::VariableDeltaSerializer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Class to compare memory values of variables in a current state to a prior state Results of the comparisons will be written to a bitStream, such that only changed variables get written<br/>
 Can be used with <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d4/d18/class_s_l_net_1_1_replica_manager3" title="System to help automate game object construction, destruction, and serialization.">ReplicaManager3</a> to Serialize a <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d3/d5b/class_s_l_net_1_1_replica3" title="Base class for your replicated objects for the ReplicaManager3 system.">Replica3</a> per-variable, rather than comparing the entire object against itself<br/>
 Usage:<br/>
 BR&gt;  
 <a href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">slikenet/VariableDeltaSerializer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a></td></tr>
<tr class="separator:d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a></td></tr>
<tr class="separator:d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a></td></tr>
<tr class="separator:d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a87cc7f2e964f98aae79a884e57ea57e2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a87cc7f2e964f98aae79a884e57ea57e2">VariableDeltaSerializer</a> ()</td></tr>
<tr class="separator:a87cc7f2e964f98aae79a884e57ea57e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50ce0a8aa41edbecbdf0a6d9f27ae488"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a50ce0a8aa41edbecbdf0a6d9f27ae488">~VariableDeltaSerializer</a> ()</td></tr>
<tr class="separator:a50ce0a8aa41edbecbdf0a6d9f27ae488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e535da230f0bae45cda69fe73688fd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd">BeginUnreliableAckedSerialize</a> (<a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *context, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> _guid, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *_bitStream, <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> _sendReceipt)</td></tr>
<tr class="memdesc:a27e535da230f0bae45cda69fe73688fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_RECEIPT The last value of each variable will be saved per remote system. Additionally, a history of <em>_sendReceipts</em> is stored to determine what to resend on packetloss. When variables are lost, they will be flagged dirty and always resent to the system that lost it Disadvantages: Every variable for every remote system is copied internally, in addition to a history list of what variables changed for which <em>_sendReceipt</em>. Very memory and CPU intensive for multiple connections. Advantages: When data needs to be resent by RakNet, RakNet can only resend the value it currently has. This allows the application to control the resend, sending the most recent value of the variable. The end result is that bandwidth is used more efficiently because old data is never sent.  <a href="#a27e535da230f0bae45cda69fe73688fd"></a><br/></td></tr>
<tr class="separator:a27e535da230f0bae45cda69fe73688fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6fe275e35d38525bbb1b6034d811377"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377">BeginUniqueSerialize</a> (<a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *context, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> _guid, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *_bitStream)</td></tr>
<tr class="memdesc:aa6fe275e35d38525bbb1b6034d811377"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call before doing one or more SerializeVariable calls for data that may be sent differently to every remote system (such as an invisibility flag that only teammates can see) The last value of each variable will be saved per remote system. Unlike <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, send receipts are not necessary Disadvantages: Every variable for every remote system is copied internally. Very memory and CPU intensive for multiple connections. Advantages: When data is sent differently depending on the recipient, this system can make things easier to use and is as efficient as it can be.  <a href="#aa6fe275e35d38525bbb1b6034d811377"></a><br/></td></tr>
<tr class="separator:aa6fe275e35d38525bbb1b6034d811377"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae60fb932dd24b2292b193f1b53d3f590"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590">BeginIdenticalSerialize</a> (<a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *context, bool _isFirstSerializeToThisSystem, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *_bitStream)</td></tr>
<tr class="memdesc:ae60fb932dd24b2292b193f1b53d3f590"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call before doing one or more SerializeVariable calls for data that is sent with the same value to every remote system (such as health, position, etc.) This is the most common type of serialization, and also the most efficient Disadvantages: A copy of every variable still needs to be held, although only once Advantages: After the first serialization, the last serialized bitStream will be used for subsequent sends.  <a href="#ae60fb932dd24b2292b193f1b53d3f590"></a><br/></td></tr>
<tr class="separator:ae60fb932dd24b2292b193f1b53d3f590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a62baf07ffe9e70c4c1804bf5040cf5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6a62baf07ffe9e70c4c1804bf5040cf5">EndSerialize</a> (<a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *context)</td></tr>
<tr class="memdesc:a6a62baf07ffe9e70c4c1804bf5040cf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call after <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a>, or <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a>, then after calling <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6479f25606d97e52b733aad01c053ad6">SerializeVariable()</a> one or more times.  <a href="#a6a62baf07ffe9e70c4c1804bf5040cf5"></a><br/></td></tr>
<tr class="separator:a6a62baf07ffe9e70c4c1804bf5040cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80d48bc80837bc19bb75ae979d864bb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a80d48bc80837bc19bb75ae979d864bb4">BeginDeserialize</a> (<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a> *context, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *_bitStream)</td></tr>
<tr class="memdesc:a80d48bc80837bc19bb75ae979d864bb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call when you receive the <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> written by <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6479f25606d97e52b733aad01c053ad6">SerializeVariable()</a>, before calling <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ac091c908520be4f109eec17ed8717485">DeserializeVariable()</a>  <a href="#a80d48bc80837bc19bb75ae979d864bb4"></a><br/></td></tr>
<tr class="separator:a80d48bc80837bc19bb75ae979d864bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada7beaf7f67bd626793ea9ed27563693"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ada7beaf7f67bd626793ea9ed27563693">EndDeserialize</a> (<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a> *context)</td></tr>
<tr class="separator:ada7beaf7f67bd626793ea9ed27563693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8d1b0916c123d04ad28c312c0f540b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#af8d1b0916c123d04ad28c312c0f540b0">AddRemoteSystemVariableHistory</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid)</td></tr>
<tr class="separator:af8d1b0916c123d04ad28c312c0f540b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219f45f790da8ee5f549acb2f46d8e06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a219f45f790da8ee5f549acb2f46d8e06">RemoveRemoteSystemVariableHistory</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid)</td></tr>
<tr class="separator:a219f45f790da8ee5f549acb2f46d8e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c4e2fa66f7ed24236a29fe58797e56f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a2c4e2fa66f7ed24236a29fe58797e56f">OnPreSerializeTick</a> (void)</td></tr>
<tr class="separator:a2c4e2fa66f7ed24236a29fe58797e56f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac60666b2e3d9fc991ed9549f8f4e8841"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ac60666b2e3d9fc991ed9549f8f4e8841">OnMessageReceipt</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid, <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receiptId, bool messageArrived)</td></tr>
<tr class="separator:ac60666b2e3d9fc991ed9549f8f4e8841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6479f25606d97e52b733aad01c053ad6"><td class="memTemplParams" colspan="2">template&lt;class VarType &gt; </td></tr>
<tr class="memitem:a6479f25606d97e52b733aad01c053ad6"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6479f25606d97e52b733aad01c053ad6">SerializeVariable</a> (<a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *context, const VarType &amp;variable)</td></tr>
<tr class="separator:a6479f25606d97e52b733aad01c053ad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac091c908520be4f109eec17ed8717485"><td class="memTemplParams" colspan="2">template&lt;class VarType &gt; </td></tr>
<tr class="memitem:ac091c908520be4f109eec17ed8717485"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ac091c908520be4f109eec17ed8717485">DeserializeVariable</a> (<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a> *context, VarType &amp;variable)</td></tr>
<tr class="separator:ac091c908520be4f109eec17ed8717485"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a44e95a007f9c0f8d7722bf43dc4ee870"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a44e95a007f9c0f8d7722bf43dc4ee870">FreeVarsAssociatedWithReceipt</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid, <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receiptId)</td></tr>
<tr class="separator:a44e95a007f9c0f8d7722bf43dc4ee870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a321e6c333ccc7e756612d3f12fd50ab5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a321e6c333ccc7e756612d3f12fd50ab5">DirtyAndFreeVarsAssociatedWithReceipt</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid, <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receiptId)</td></tr>
<tr class="separator:a321e6c333ccc7e756612d3f12fd50ab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ab8e12ac3d7daf0c1dc4e720a400291"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a3ab8e12ac3d7daf0c1dc4e720a400291">GetVarsWrittenPerRemoteSystemListIndex</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid)</td></tr>
<tr class="separator:a3ab8e12ac3d7daf0c1dc4e720a400291"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c2ca9d1f04862243e9c782e18a6c05c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a7c2ca9d1f04862243e9c782e18a6c05c">RemoveRemoteSystemVariableHistory</a> (void)</td></tr>
<tr class="separator:a7c2ca9d1f04862243e9c782e18a6c05c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad414f08fdff3e1870f61314a6cbec9f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ad414f08fdff3e1870f61314a6cbec9f1">GetRemoteSystemVariableHistory</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid)</td></tr>
<tr class="separator:ad414f08fdff3e1870f61314a6cbec9f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa7960238d4cf6ca59415954c9110483"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aaa7960238d4cf6ca59415954c9110483">AllocChangedVariablesList</a> (void)</td></tr>
<tr class="separator:aaa7960238d4cf6ca59415954c9110483"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a216c04caa1c23180c44767d9b0771ad2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a216c04caa1c23180c44767d9b0771ad2">FreeChangedVariablesList</a> (<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *changedVariables)</td></tr>
<tr class="separator:a216c04caa1c23180c44767d9b0771ad2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b12977f828e84705007f71f724c1bb9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a8b12977f828e84705007f71f724c1bb9">StoreChangedVariablesList</a> (<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a> *variableHistory, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *changedVariables, <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> sendReceipt)</td></tr>
<tr class="separator:a8b12977f828e84705007f71f724c1bb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0da02060b2b7231512fe5338eec38681"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a0da02060b2b7231512fe5338eec38681">StartVariableHistoryWrite</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid)</td></tr>
<tr class="separator:a0da02060b2b7231512fe5338eec38681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a624f7b6f597473c50f7ef3b762476878"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a624f7b6f597473c50f7ef3b762476878">GetRemoteSystemHistoryListIndex</a> (<a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid)</td></tr>
<tr class="separator:a624f7b6f597473c50f7ef3b762476878"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:a2abaed2b4742e3d19313bf842962d86d"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a2abaed2b4742e3d19313bf842962d86d">UpdatedVariablesListPtrComp</a> (const <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> &amp;key, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *const &amp;data)</td></tr>
<tr class="separator:a2abaed2b4742e3d19313bf842962d86d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a25b78c7f986aa0be55615f189b091116"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a25b78c7f986aa0be55615f189b091116">remoteSystemVariableHistoryList</a></td></tr>
<tr class="separator:a25b78c7f986aa0be55615f189b091116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a926333459e3dbaf7393b932e1bd4f0b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml">DataStructures::MemoryPool</a><br class="typebreak"/>
&lt; <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a926333459e3dbaf7393b932e1bd4f0b1">updatedVariablesMemoryPool</a></td></tr>
<tr class="separator:a926333459e3dbaf7393b932e1bd4f0b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b47a2b4bb6f14632ea6095463964cfd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6b47a2b4bb6f14632ea6095463964cfd">didComparisonThisTick</a></td></tr>
<tr class="separator:a6b47a2b4bb6f14632ea6095463964cfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63d462e54f010f9de7e724a48527b5b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a63d462e54f010f9de7e724a48527b5b8">identicalSerializationBs</a></td></tr>
<tr class="separator:a63d462e54f010f9de7e724a48527b5b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Class to compare memory values of variables in a current state to a prior state Results of the comparisons will be written to a bitStream, such that only changed variables get written<br/>
 Can be used with <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d4/d18/class_s_l_net_1_1_replica_manager3" title="System to help automate game object construction, destruction, and serialization.">ReplicaManager3</a> to Serialize a <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d3/d5b/class_s_l_net_1_1_replica3" title="Base class for your replicated objects for the ReplicaManager3 system.">Replica3</a> per-variable, rather than comparing the entire object against itself<br/>
 Usage:<br/>
 BR&gt; </p>
<ol type="1">
<li>Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a>, or <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a>. In the case of <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d3/d5b/class_s_l_net_1_1_replica3" title="Base class for your replicated objects for the ReplicaManager3 system.">Replica3</a>, this would be in the Serialize() call<br/>
</li>
<li>For each variable of the type in step 1, call Serialize(). The same variables must be serialized every tick()<br/>
</li>
<li>Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6a62baf07ffe9e70c4c1804bf5040cf5" title="Call after BeginUnreliableAckedSerialize(), BeginUniqueSerialize(), or BeginIdenticalSerialize(), then after calling SerializeVariable() one or more times.">EndSerialize()</a><br/>
</li>
<li>Repeat step 1 for each of the other categories of how to send varaibles<br/>
 BR&gt; On the receiver:<br/>
 BR&gt;</li>
</ol>
<ol type="1">
<li>Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a80d48bc80837bc19bb75ae979d864bb4" title="Call when you receive the BitStream written by SerializeVariable(), before calling DeserializeVariabl...">BeginDeserialize()</a>. In the case of <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d3/d5b/class_s_l_net_1_1_replica3" title="Base class for your replicated objects for the ReplicaManager3 system.">Replica3</a>, this would be in the Deserialize() call<br/>
</li>
<li>Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ac091c908520be4f109eec17ed8717485">DeserializeVariable()</a> for each variable, in the same order as was Serialized()<br/>
</li>
<li>Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6a62baf07ffe9e70c4c1804bf5040cf5" title="Call after BeginUnreliableAckedSerialize(), BeginUniqueSerialize(), or BeginIdenticalSerialize(), then after calling SerializeVariable() one or more times.">EndSerialize()</a><br/>
 <dl class="section see"><dt>See Also</dt><dd>The <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d4/d18/class_s_l_net_1_1_replica_manager3" title="System to help automate game object construction, destruction, and serialization.">ReplicaManager3</a> sample </dd></dl>
</li>
</ol>

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00045">45</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list" id="d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::VariableDeltaSerializer::ChangedVariablesList</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00224">224</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a3fa30f2a2b2c333222c96abba4ca8d9c"></a>unsigned char</td>
<td class="fieldname">
bitField</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a2880667171afe4b6fdfdaf471e235464"></a>unsigned short</td>
<td class="fieldname">
bitWriteIndex</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a6b48e6415f84b9698b2b656df7cf1cf7"></a><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a></td>
<td class="fieldname">
sendReceipt</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<a name="d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context" id="d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::VariableDeltaSerializer::DeserializationContext</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00073">73</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a3f891d261ac2cba1a28d341bcb0e9450"></a><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *</td>
<td class="fieldname">
bitStream</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<a name="d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history" id="d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00238">238</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ae5f1b132296b31f15a637f1ed7a11ab5"></a><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a></td>
<td class="fieldname">
guid</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a7ed27592c6d2b52de6a430fc9371a630"></a>OrderedList&lt; <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>, <br class="typebreak"/>
<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> <br class="typebreak"/>
*, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a2abaed2b4742e3d19313bf842962d86d">UpdatedVariablesListPtrComp</a> &gt;</td>
<td class="fieldname">
updatedVariablesHistory</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ac857066096425602b19c859fc5655280"></a><a class="el" href="../../d9/d15/class_s_l_net_1_1_variable_list_delta_tracker.xhtml">VariableListDeltaTracker</a></td>
<td class="fieldname">
variableListDeltaTracker</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a87cc7f2e964f98aae79a884e57ea57e2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">VariableDeltaSerializer::VariableDeltaSerializer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00251">didComparisonThisTick</a>.</p>

</div>
</div>
<a class="anchor" id="a50ce0a8aa41edbecbdf0a6d9f27ae488"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">VariableDeltaSerializer::~VariableDeltaSerializer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00021">21</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00216">RemoveRemoteSystemVariableHistory()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af8d1b0916c123d04ad28c312c0f540b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::AddRemoteSystemVariableHistory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a> and <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a> require knowledge of when connections are added and dropped Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#af8d1b0916c123d04ad28c312c0f540b0">AddRemoteSystemVariableHistory()</a> and <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a7c2ca9d1f04862243e9c782e18a6c05c">RemoveRemoteSystemVariableHistory()</a> to notify the system of these events </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">_guid</td><td>Which system we are sending to </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaa7960238d4cf6ca59415954c9110483"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">VariableDeltaSerializer::ChangedVariablesList</a> * VariableDeltaSerializer::AllocChangedVariablesList </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00237">237</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d6/d7e/_d_s___memory_pool_8h_source.xhtml#l00107">DataStructures::MemoryPool&lt; MemoryBlockType &gt;::Allocate()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00228">SLNet::VariableDeltaSerializer::ChangedVariablesList::bitField</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00227">SLNet::VariableDeltaSerializer::ChangedVariablesList::bitWriteIndex</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00249">updatedVariablesMemoryPool</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00036">BeginUnreliableAckedSerialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a80d48bc80837bc19bb75ae979d864bb4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::BeginDeserialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>_bitStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call when you receive the <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> written by <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6479f25606d97e52b733aad01c053ad6">SerializeVariable()</a>, before calling <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ac091c908520be4f109eec17ed8717485">DeserializeVariable()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Holds the context of this group of deserialize calls. This can be a stack object just passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_bitStream</td><td>Pass the bitStream originally passed to and written to by serialize calls </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00075">SLNet::VariableDeltaSerializer::DeserializationContext::bitStream</a>.</p>

</div>
</div>
<a class="anchor" id="ae60fb932dd24b2292b193f1b53d3f590"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::BeginIdenticalSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>_isFirstSerializeToThisSystem</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>_bitStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call before doing one or more SerializeVariable calls for data that is sent with the same value to every remote system (such as health, position, etc.) This is the most common type of serialization, and also the most efficient Disadvantages: A copy of every variable still needs to be held, although only once Advantages: After the first serialization, the last serialized bitStream will be used for subsequent sends. </p>
<dl class="section pre"><dt>Precondition</dt><dd>Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a2c4e2fa66f7ed24236a29fe58797e56f">OnPreSerializeTick()</a> before doing any calls to <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a> for each of your objects, once per game tick </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Holds the context of this group of serialize calls. This can be a stack object just passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_isFirstSerializeToThisSystem</td><td>Pass true if this is the first time ever serializing to this system (the initial download). This way all variables will be written, rather than checking against prior sent values. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_bitSteam</td><td>Which bitStream to write to </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00069">SLNet::VariableDeltaSerializer::SerializationContext::anyVariablesWritten</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00061">SLNet::VariableDeltaSerializer::SerializationContext::bitStream</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00060">SLNet::VariableDeltaSerializer::SerializationContext::guid</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00070">SLNet::VariableDeltaSerializer::SerializationContext::newSystemSend</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00056">RELIABLE</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00068">SLNet::VariableDeltaSerializer::SerializationContext::serializationMode</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">StartVariableHistoryWrite()</a>, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">SLNet::UNASSIGNED_RAKNET_GUID()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00063">SLNet::VariableDeltaSerializer::SerializationContext::variableHistory</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00064">SLNet::VariableDeltaSerializer::SerializationContext::variableHistoryIdentical</a>.</p>

</div>
</div>
<a class="anchor" id="aa6fe275e35d38525bbb1b6034d811377"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::BeginUniqueSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>_guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>_bitStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call before doing one or more SerializeVariable calls for data that may be sent differently to every remote system (such as an invisibility flag that only teammates can see) The last value of each variable will be saved per remote system. Unlike <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, send receipts are not necessary Disadvantages: Every variable for every remote system is copied internally. Very memory and CPU intensive for multiple connections. Advantages: When data is sent differently depending on the recipient, this system can make things easier to use and is as efficient as it can be. </p>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#af8d1b0916c123d04ad28c312c0f540b0">AddRemoteSystemVariableHistory()</a> and <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a7c2ca9d1f04862243e9c782e18a6c05c">RemoveRemoteSystemVariableHistory()</a> must be called for new and lost connections </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Holds the context of this group of serialize calls. This can be a stack object just passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_guid</td><td>Which system we are sending to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_bitSteam</td><td>Which bitStream to write to </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00069">SLNet::VariableDeltaSerializer::SerializationContext::anyVariablesWritten</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00061">SLNet::VariableDeltaSerializer::SerializationContext::bitStream</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00060">SLNet::VariableDeltaSerializer::SerializationContext::guid</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00070">SLNet::VariableDeltaSerializer::SerializationContext::newSystemSend</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00056">RELIABLE</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00068">SLNet::VariableDeltaSerializer::SerializationContext::serializationMode</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">StartVariableHistoryWrite()</a>, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">SLNet::UNASSIGNED_RAKNET_GUID()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00063">SLNet::VariableDeltaSerializer::SerializationContext::variableHistory</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00065">SLNet::VariableDeltaSerializer::SerializationContext::variableHistoryUnique</a>.</p>

</div>
</div>
<a class="anchor" id="a27e535da230f0bae45cda69fe73688fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::BeginUnreliableAckedSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>_guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>_bitStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td>
          <td class="paramname"><em>_sendReceipt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_RECEIPT The last value of each variable will be saved per remote system. Additionally, a history of <em>_sendReceipts</em> is stored to determine what to resend on packetloss. When variables are lost, they will be flagged dirty and always resent to the system that lost it Disadvantages: Every variable for every remote system is copied internally, in addition to a history list of what variables changed for which <em>_sendReceipt</em>. Very memory and CPU intensive for multiple connections. Advantages: When data needs to be resent by RakNet, RakNet can only resend the value it currently has. This allows the application to control the resend, sending the most recent value of the variable. The end result is that bandwidth is used more efficiently because old data is never sent. </p>
<dl class="section pre"><dt>Precondition</dt><dd>Upon getting ID_SND_RECEIPT_LOSS or ID_SND_RECEIPT_ACKED call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ac60666b2e3d9fc991ed9549f8f4e8841">OnMessageReceipt()</a> </dd>
<dd>
<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#af8d1b0916c123d04ad28c312c0f540b0">AddRemoteSystemVariableHistory()</a> and <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a7c2ca9d1f04862243e9c782e18a6c05c">RemoveRemoteSystemVariableHistory()</a> must be called for new and lost connections </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Holds the context of this group of serialize calls. This can be a stack object just passed to the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_guid</td><td>Which system we are sending to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_bitSteam</td><td>Which bitStream to write to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_sendReceipt</td><td>Returned from <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4780cb8a45fbbac8cb9c02bc72d20f33">RakPeer::IncrementNextSendReceipt()</a> and passed to the Send() or SendLists() function. Identifies this update for ID_SND_RECEIPT_LOSS and ID_SND_RECEIPT_ACKED </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00237">AllocChangedVariablesList()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00069">SLNet::VariableDeltaSerializer::SerializationContext::anyVariablesWritten</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00061">SLNet::VariableDeltaSerializer::SerializationContext::bitStream</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00066">SLNet::VariableDeltaSerializer::SerializationContext::changedVariables</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00060">SLNet::VariableDeltaSerializer::SerializationContext::guid</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00070">SLNet::VariableDeltaSerializer::SerializationContext::newSystemSend</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00067">SLNet::VariableDeltaSerializer::SerializationContext::sendReceipt</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00068">SLNet::VariableDeltaSerializer::SerializationContext::serializationMode</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">StartVariableHistoryWrite()</a>, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">SLNet::UNASSIGNED_RAKNET_GUID()</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00067">UNRELIABLE_WITH_ACK_RECEIPT</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00063">SLNet::VariableDeltaSerializer::SerializationContext::variableHistory</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00065">SLNet::VariableDeltaSerializer::SerializationContext::variableHistoryUnique</a>.</p>

</div>
</div>
<a class="anchor" id="ac091c908520be4f109eec17ed8717485"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class VarType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::VariableDeltaSerializer::DeserializeVariable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">VarType &amp;&#160;</td>
          <td class="paramname"><em>variable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Call to deserialize into a variable </p>
<dl class="section pre"><dt>Precondition</dt><dd>You have called <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a80d48bc80837bc19bb75ae979d864bb4" title="Call when you receive the BitStream written by SerializeVariable(), before calling DeserializeVariabl...">BeginDeserialize()</a> </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Be sure to call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ada7beaf7f67bd626793ea9ed27563693">EndDeserialize()</a> after finishing all deserializations </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Same context pointer passed to <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a80d48bc80837bc19bb75ae979d864bb4" title="Call when you receive the BitStream written by SerializeVariable(), before calling DeserializeVariabl...">BeginDeserialize()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">variable</td><td>A variable to write to the bitStream passed to <em>context</em> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00213">213</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00075">SLNet::VariableDeltaSerializer::DeserializationContext::bitStream</a>, and <a class="el" href="../../d8/d00/_variable_list_delta_tracker_8h_source.xhtml#l00113">SLNet::VariableListDeltaTracker::ReadVarFromBitstream()</a>.</p>

</div>
</div>
<a class="anchor" id="a321e6c333ccc7e756612d3f12fd50ab5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::DirtyAndFreeVarsAssociatedWithReceipt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td>
          <td class="paramname"><em>receiptId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">186</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d4/d61/_variable_list_delta_tracker_8cpp_source.xhtml#l00031">SLNet::VariableListDeltaTracker::FlagDirtyFromBitArray()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">FreeChangedVariablesList()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00124">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::GetIndexFromKey()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00206">GetVarsWrittenPerRemoteSystemListIndex()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00238">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::RemoveAtIndex()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00242">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::updatedVariablesHistory</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00241">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::variableListDeltaTracker</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00026">OnMessageReceipt()</a>.</p>

</div>
</div>
<a class="anchor" id="ada7beaf7f67bd626793ea9ed27563693"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::EndDeserialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d0/d9a/struct_s_l_net_1_1_variable_delta_serializer_1_1_deserialization_context">DeserializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Same context pointer passed to <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a80d48bc80837bc19bb75ae979d864bb4" title="Call when you receive the BitStream written by SerializeVariable(), before calling DeserializeVariabl...">BeginDeserialize()</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00128">128</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6a62baf07ffe9e70c4c1804bf5040cf5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::EndSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call after <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a>, or <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a>, then after calling <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6479f25606d97e52b733aad01c053ad6">SerializeVariable()</a> one or more times. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Same context pointer passed to <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a>, or <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00069">SLNet::VariableDeltaSerializer::SerializationContext::anyVariablesWritten</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00061">SLNet::VariableDeltaSerializer::SerializationContext::bitStream</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00066">SLNet::VariableDeltaSerializer::SerializationContext::changedVariables</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00251">didComparisonThisTick</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">FreeChangedVariablesList()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00252">identicalSerializationBs</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00144">SLNet::BitStream::Reset()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00293">SLNet::BitStream::ResetReadPointer()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00067">SLNet::VariableDeltaSerializer::SerializationContext::sendReceipt</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00068">SLNet::VariableDeltaSerializer::SerializationContext::serializationMode</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00248">StoreChangedVariablesList()</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00067">UNRELIABLE_WITH_ACK_RECEIPT</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00063">SLNet::VariableDeltaSerializer::SerializationContext::variableHistory</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00064">SLNet::VariableDeltaSerializer::SerializationContext::variableHistoryIdentical</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00922">SLNet::BitStream::Write()</a>.</p>

</div>
</div>
<a class="anchor" id="a216c04caa1c23180c44767d9b0771ad2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::FreeChangedVariablesList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *&#160;</td>
          <td class="paramname"><em>changedVariables</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">244</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d6/d7e/_d_s___memory_pool_8h_source.xhtml#l00159">DataStructures::MemoryPool&lt; MemoryBlockType &gt;::Release()</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00249">updatedVariablesMemoryPool</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">DirtyAndFreeVarsAssociatedWithReceipt()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00078">EndSerialize()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">FreeVarsAssociatedWithReceipt()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00138">RemoveRemoteSystemVariableHistory()</a>.</p>

</div>
</div>
<a class="anchor" id="a44e95a007f9c0f8d7722bf43dc4ee870"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::FreeVarsAssociatedWithReceipt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td>
          <td class="paramname"><em>receiptId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">FreeChangedVariablesList()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00124">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::GetIndexFromKey()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00206">GetVarsWrittenPerRemoteSystemListIndex()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00238">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::RemoveAtIndex()</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00242">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::updatedVariablesHistory</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00026">OnMessageReceipt()</a>.</p>

</div>
</div>
<a class="anchor" id="a624f7b6f597473c50f7ef3b762476878"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int VariableDeltaSerializer::GetRemoteSystemHistoryListIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00273">273</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00231">GetRemoteSystemVariableHistory()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">StartVariableHistoryWrite()</a>.</p>

</div>
</div>
<a class="anchor" id="ad414f08fdff3e1870f61314a6cbec9f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">VariableDeltaSerializer::RemoteSystemVariableHistory</a> * VariableDeltaSerializer::GetRemoteSystemVariableHistory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00231">231</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00273">GetRemoteSystemHistoryListIndex()</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>.</p>

</div>
</div>
<a class="anchor" id="a3ab8e12ac3d7daf0c1dc4e720a400291"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int VariableDeltaSerializer::GetVarsWrittenPerRemoteSystemListIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00206">206</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">DirtyAndFreeVarsAssociatedWithReceipt()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">FreeVarsAssociatedWithReceipt()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00138">RemoveRemoteSystemVariableHistory()</a>.</p>

</div>
</div>
<a class="anchor" id="ac60666b2e3d9fc991ed9549f8f4e8841"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::OnMessageReceipt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td>
          <td class="paramname"><em>receiptId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>messageArrived</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Call when getting ID_SND_RECEIPT_LOSS or ID_SND_RECEIPT_ACKED for a particular system Example:</p>
<p>uint32_t msgNumber; memcpy(&amp;msgNumber, packet-&gt;data+1, 4); DataStructures::List&lt;Replica3*&gt; replicaListOut; replicaManager.GetReplicasCreatedByMe(replicaListOut); unsigned int idx; for (idx=0; idx &lt; replicaListOut.GetSize(); idx++) { ((SampleReplica*)replicaListOut[idx])-&gt;NotifyReplicaOfMessageDeliveryStatus(packet-&gt;guid,msgNumber, packet-&gt;data[0]==ID_SND_RECEIPT_ACKED); }</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">guid</td><td>Which system we are sending to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">receiptId</td><td>Encoded in bytes 1-4 inclusive of ID_SND_RECEIPT_LOSS and ID_SND_RECEIPT_ACKED </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageArrived</td><td>True for ID_SND_RECEIPT_ACKED, false otherwise </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">DirtyAndFreeVarsAssociatedWithReceipt()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">FreeVarsAssociatedWithReceipt()</a>.</p>

</div>
</div>
<a class="anchor" id="a2c4e2fa66f7ed24236a29fe58797e56f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::OnPreSerializeTick </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a> requires knowledge of when serialization has started for an object across multiple systems This way it can setup the flag to do new comparisons against the last sent values, rather than just resending the last sent bitStream For <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#d3/d5b/class_s_l_net_1_1_replica3" title="Base class for your replicated objects for the ReplicaManager3 system.">Replica3</a>, overload and call this from <a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml#a77949227b670fd4194472b80886da28b" title="Called for each replica owned by the user, once per Serialization tick, before Serialize() is called...">Replica3::OnUserReplicaPreSerializeTick()</a> </p>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00287">287</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00251">didComparisonThisTick</a>.</p>

</div>
</div>
<a class="anchor" id="a219f45f790da8ee5f549acb2f46d8e06"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::RemoveRemoteSystemVariableHistory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a> and <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a> require knowledge of when connections are added and dropped Call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#af8d1b0916c123d04ad28c312c0f540b0">AddRemoteSystemVariableHistory()</a> and <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a7c2ca9d1f04862243e9c782e18a6c05c">RemoveRemoteSystemVariableHistory()</a> to notify the system of these events </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">_guid</td><td>Which system we are sending to </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">FreeChangedVariablesList()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00206">GetVarsWrittenPerRemoteSystemListIndex()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00416">DataStructures::List&lt; list_type &gt;::RemoveAtIndexFast()</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a7c2ca9d1f04862243e9c782e18a6c05c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::RemoveRemoteSystemVariableHistory </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00216">216</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00456">DataStructures::List&lt; list_type &gt;::Clear()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">FreeChangedVariablesList()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00021">~VariableDeltaSerializer()</a>.</p>

</div>
</div>
<a class="anchor" id="a6479f25606d97e52b733aad01c053ad6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class VarType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::VariableDeltaSerializer::SerializeVariable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d7c/struct_s_l_net_1_1_variable_delta_serializer_1_1_serialization_context.xhtml">SerializationContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const VarType &amp;&#160;</td>
          <td class="paramname"><em>variable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Call to Serialize a variable Will write to the bitSteam passed to <em>context</em> true, variableValue if the variable has changed or has never been written. Otherwise will write false. </p>
<dl class="section pre"><dt>Precondition</dt><dd>You have called <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a>, or <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a> </dd>
<dd>
Will also require calling <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a2c4e2fa66f7ed24236a29fe58797e56f">OnPreSerializeTick()</a> if using <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a> </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Be sure to call <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a6a62baf07ffe9e70c4c1804bf5040cf5" title="Call after BeginUnreliableAckedSerialize(), BeginUniqueSerialize(), or BeginIdenticalSerialize(), then after calling SerializeVariable() one or more times.">EndSerialize()</a> after finishing all serializations </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Same context pointer passed to <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#a27e535da230f0bae45cda69fe73688fd" title="Call before doing one or more SerializeVariable calls when the data will be sent UNRELIABLE_WITH_ACK_...">BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#aa6fe275e35d38525bbb1b6034d811377" title="Call before doing one or more SerializeVariable calls for data that may be sent differently to every ...">BeginUniqueSerialize()</a>, or <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#ae60fb932dd24b2292b193f1b53d3f590" title="Call before doing one or more SerializeVariable calls for data that is sent with the same value to ev...">BeginIdenticalSerialize()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">variable</td><td>A variable to write to the bitStream passed to <em>context</em> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00165">165</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00069">SLNet::VariableDeltaSerializer::SerializationContext::anyVariablesWritten</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00228">SLNet::VariableDeltaSerializer::ChangedVariablesList::bitField</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00061">SLNet::VariableDeltaSerializer::SerializationContext::bitStream</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00227">SLNet::VariableDeltaSerializer::ChangedVariablesList::bitWriteIndex</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00066">SLNet::VariableDeltaSerializer::SerializationContext::changedVariables</a>, <a class="el" href="../../d8/d00/_variable_list_delta_tracker_8h_source.xhtml#l00037">SLNet::VariableListDeltaTracker::IsPastEndOfList()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00070">SLNet::VariableDeltaSerializer::SerializationContext::newSystemSend</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00068">SLNet::VariableDeltaSerializer::SerializationContext::serializationMode</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00067">UNRELIABLE_WITH_ACK_RECEIPT</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00063">SLNet::VariableDeltaSerializer::SerializationContext::variableHistory</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00064">SLNet::VariableDeltaSerializer::SerializationContext::variableHistoryIdentical</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00241">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::variableListDeltaTracker</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00922">SLNet::BitStream::Write()</a>, and <a class="el" href="../../d8/d00/_variable_list_delta_tracker_8h_source.xhtml#l00076">SLNet::VariableListDeltaTracker::WriteVarToBitstream()</a>.</p>

</div>
</div>
<a class="anchor" id="a0da02060b2b7231512fe5338eec38681"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">VariableDeltaSerializer::RemoteSystemVariableHistory</a> * VariableDeltaSerializer::StartVariableHistoryWrite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00273">GetRemoteSystemHistoryListIndex()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00240">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::guid</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00232">DataStructures::List&lt; list_type &gt;::Push()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">remoteSystemVariableHistoryList</a>, <a class="el" href="../../d4/d61/_variable_list_delta_tracker_8cpp_source.xhtml#l00029">SLNet::VariableListDeltaTracker::StartWrite()</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00241">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::variableListDeltaTracker</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00066">BeginIdenticalSerialize()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00051">BeginUniqueSerialize()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00036">BeginUnreliableAckedSerialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a8b12977f828e84705007f71f724c1bb9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void VariableDeltaSerializer::StoreChangedVariablesList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a> *&#160;</td>
          <td class="paramname"><em>variableHistory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *&#160;</td>
          <td class="paramname"><em>changedVariables</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td>
          <td class="paramname"><em>sendReceipt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00248">248</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00176">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::Insert()</a>, <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00226">SLNet::VariableDeltaSerializer::ChangedVariablesList::sendReceipt</a>, and <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00242">SLNet::VariableDeltaSerializer::RemoteSystemVariableHistory::updatedVariablesHistory</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00078">EndSerialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a2abaed2b4742e3d19313bf842962d86d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::VariableDeltaSerializer::UpdatedVariablesListPtrComp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a> *const &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00159">159</a> of file <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a>.</p>

<p>References <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00226">SLNet::VariableDeltaSerializer::ChangedVariablesList::sendReceipt</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a6b47a2b4bb6f14632ea6095463964cfd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::VariableDeltaSerializer::didComparisonThisTick</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00251">251</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00078">EndSerialize()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00287">OnPreSerializeTick()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00020">VariableDeltaSerializer()</a>.</p>

</div>
</div>
<a class="anchor" id="a63d462e54f010f9de7e724a48527b5b8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> SLNet::VariableDeltaSerializer::identicalSerializationBs</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00252">252</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00078">EndSerialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a25b78c7f986aa0be55615f189b091116"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a>*&gt; SLNet::VariableDeltaSerializer::remoteSystemVariableHistoryList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A list of <a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d9/d38/struct_s_l_net_1_1_variable_delta_serializer_1_1_remote_system_variable_history">RemoteSystemVariableHistory</a> indexed by guid, one per connection that we serialize to List is added to when SerializeConstruction is called, and removed from when SerializeDestruction is called, or when a given connection is dropped </p>

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00246">246</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">DirtyAndFreeVarsAssociatedWithReceipt()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">FreeVarsAssociatedWithReceipt()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00273">GetRemoteSystemHistoryListIndex()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00231">GetRemoteSystemVariableHistory()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00206">GetVarsWrittenPerRemoteSystemListIndex()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00138">RemoveRemoteSystemVariableHistory()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">StartVariableHistoryWrite()</a>.</p>

</div>
</div>
<a class="anchor" id="a926333459e3dbaf7393b932e1bd4f0b1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml">DataStructures::MemoryPool</a>&lt;<a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml#d3/dc4/struct_s_l_net_1_1_variable_delta_serializer_1_1_changed_variables_list">ChangedVariablesList</a>&gt; SLNet::VariableDeltaSerializer::updatedVariablesMemoryPool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml#l00249">249</a> of file <a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00237">AllocChangedVariablesList()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">FreeChangedVariablesList()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Source/include/slikenet/<a class="el" href="../../df/ddf/_variable_delta_serializer_8h_source.xhtml">VariableDeltaSerializer.h</a></li>
<li>Source/src/<a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml">VariableDeltaSerializer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../de/dc3/class_s_l_net_1_1_variable_delta_serializer.xhtml">VariableDeltaSerializer</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../de/de9/class_data_structures_1_1_ordered_channel_heap-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">slikenet/DS_OrderedChannelHeap.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/da4/struct_data_structures_1_1_ordered_channel_heap_1_1_heap_channel_and_data.xhtml">HeapChannelAndData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight">QueueAndWeight</a></td></tr>
<tr class="separator:d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a26034476bf17dcc86e79c05e7ce761b3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a26034476bf17dcc86e79c05e7ce761b3">OrderedChannelHeap</a> ()</td></tr>
<tr class="separator:a26034476bf17dcc86e79c05e7ce761b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe40b812e8b80d5baf8c72067238467"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a2fe40b812e8b80d5baf8c72067238467">~OrderedChannelHeap</a> ()</td></tr>
<tr class="separator:a2fe40b812e8b80d5baf8c72067238467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8cc882acdd1045a805418b893fb65f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#ad8cc882acdd1045a805418b893fb65f2">Push</a> (const channel_key_type &amp;channelID, const heap_data_type &amp;data)</td></tr>
<tr class="separator:ad8cc882acdd1045a805418b893fb65f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a789c8a7b948ef02ca1513c830c16a358"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a789c8a7b948ef02ca1513c830c16a358">PushAtHead</a> (const unsigned index, const channel_key_type &amp;channelID, const heap_data_type &amp;data)</td></tr>
<tr class="separator:a789c8a7b948ef02ca1513c830c16a358"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61633143d38c47fedf2b5522f815437e"><td class="memItemLeft" align="right" valign="top">heap_data_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a61633143d38c47fedf2b5522f815437e">Pop</a> (const unsigned startingIndex=0)</td></tr>
<tr class="separator:a61633143d38c47fedf2b5522f815437e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfba44a3f552ddc905e686e97d91dedd"><td class="memItemLeft" align="right" valign="top">heap_data_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#abfba44a3f552ddc905e686e97d91dedd">Peek</a> (const unsigned startingIndex) const </td></tr>
<tr class="separator:abfba44a3f552ddc905e686e97d91dedd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77415d10c497a89faaf05022f7c68b48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a77415d10c497a89faaf05022f7c68b48">AddChannel</a> (const channel_key_type &amp;channelID, const double weight)</td></tr>
<tr class="separator:a77415d10c497a89faaf05022f7c68b48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a4af0cc8c59949997588d8efc04c5ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a6a4af0cc8c59949997588d8efc04c5ee">RemoveChannel</a> (channel_key_type channelID)</td></tr>
<tr class="separator:a6a4af0cc8c59949997588d8efc04c5ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa027bd584a0d968e999ab4cbaf851304"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#aa027bd584a0d968e999ab4cbaf851304">Clear</a> (void)</td></tr>
<tr class="separator:aa027bd584a0d968e999ab4cbaf851304"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a538d385a1eeaeee648511be50d93b88f"><td class="memItemLeft" align="right" valign="top">heap_data_type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a538d385a1eeaeee648511be50d93b88f">operator[]</a> (const unsigned int position) const </td></tr>
<tr class="separator:a538d385a1eeaeee648511be50d93b88f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f40384fe67108550b6152144b207dc"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a67f40384fe67108550b6152144b207dc">ChannelSize</a> (const channel_key_type &amp;channelID)</td></tr>
<tr class="separator:a67f40384fe67108550b6152144b207dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8a9a0b891209e681e13d293b0fe3149"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#af8a9a0b891209e681e13d293b0fe3149">Size</a> (void) const </td></tr>
<tr class="separator:af8a9a0b891209e681e13d293b0fe3149"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aed73f07f296769d86f0373f9cd2ede2d"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#aed73f07f296769d86f0373f9cd2ede2d">IMPLEMENT_DEFAULT_COMPARISON</a> (void)</td></tr>
<tr class="separator:aed73f07f296769d86f0373f9cd2ede2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a9e92458dd3bf27589f621ae4cfac76da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a9e92458dd3bf27589f621ae4cfac76da">GreatestRandResult</a> (void)</td></tr>
<tr class="separator:a9e92458dd3bf27589f621ae4cfac76da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:af858574a5f2f7b6618ae58f0cb4af52d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a><br class="typebreak"/>
&lt; channel_key_type, <br class="typebreak"/>
<a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight">QueueAndWeight</a> <br class="typebreak"/>
*, channel_key_comparison_func &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#af858574a5f2f7b6618ae58f0cb4af52d">map</a></td></tr>
<tr class="separator:af858574a5f2f7b6618ae58f0cb4af52d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ec113d9527b267cf7f000ff17c330a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; double, <br class="typebreak"/>
<a class="el" href="../../d4/da4/struct_data_structures_1_1_ordered_channel_heap_1_1_heap_channel_and_data.xhtml">HeapChannelAndData</a>, true &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#a71ec113d9527b267cf7f000ff17c330a">heap</a></td></tr>
<tr class="separator:a71ec113d9527b267cf7f000ff17c330a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class channel_key_type, class heap_data_type, int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func = defaultMapKeyComparison&lt;channel_key_type&gt;&gt;<br/>
class DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;</h3>


<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00037">37</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight" id="d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct DataStructures::OrderedChannelHeap::QueueAndWeight</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><h3>template&lt;class channel_key_type, class heap_data_type, int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func = defaultMapKeyComparison&lt;channel_key_type&gt;&gt;<br/>
struct DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight</h3>


<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00055">55</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aa2613a2d88d02022920c7e1e35acff14"></a><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">Queue</a>&lt; double &gt;</td>
<td class="fieldname">
randResultQueue</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a2906f6b6bb0f53c33dfd1ce8a7c3d3ba"></a>bool</td>
<td class="fieldname">
signalDeletion</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a223f9fd06aea86618c8cc771e374d82d"></a>double</td>
<td class="fieldname">
weight</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a26034476bf17dcc86e79c05e7ce761b3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::<a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">OrderedChannelHeap</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00077">77</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2fe40b812e8b80d5baf8c72067238467"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::~<a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">OrderedChannelHeap</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00082">82</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a77415d10c497a89faaf05022f7c68b48"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::AddChannel </td>
          <td>(</td>
          <td class="paramtype">const channel_key_type &amp;&#160;</td>
          <td class="paramname"><em>channelID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>weight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00197">197</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00059">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight::signalDeletion</a>, and <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00058">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight::weight</a>.</p>

</div>
</div>
<a class="anchor" id="a67f40384fe67108550b6152144b207dc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::ChannelSize </td>
          <td>(</td>
          <td class="paramtype">const channel_key_type &amp;&#160;</td>
          <td class="paramname"><em>channelID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00239">239</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00057">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight::randResultQueue</a>, and <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00070">DataStructures::Queue&lt; queue_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="aa027bd584a0d968e999ab4cbaf851304"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00246">246</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, and <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>.</p>

</div>
</div>
<a class="anchor" id="a9e92458dd3bf27589f621ae4cfac76da"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::GreatestRandResult </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00094">94</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<a class="anchor" id="aed73f07f296769d86f0373f9cd2ede2d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func = defaultMapKeyComparison&lt;channel_key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::IMPLEMENT_DEFAULT_COMPARISON </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00040">40</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<a class="anchor" id="a538d385a1eeaeee648511be50d93b88f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">heap_data_type &amp; <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00232">232</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<a class="anchor" id="abfba44a3f552ddc905e686e97d91dedd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">heap_data_type <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Peek </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>startingIndex</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00190">190</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00066">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::HeapChannelAndData::data</a>.</p>

</div>
</div>
<a class="anchor" id="a61633143d38c47fedf2b5522f815437e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">heap_data_type <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Pop </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>startingIndex</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00161">161</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00057">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight::randResultQueue</a>, and <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00420">DataStructures::Queue&lt; queue_type &gt;::RemoveAtIndex()</a>.</p>

</div>
</div>
<a class="anchor" id="ad8cc882acdd1045a805418b893fb65f2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Push </td>
          <td>(</td>
          <td class="paramtype">const channel_key_type &amp;&#160;</td>
          <td class="paramname"><em>channelID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const heap_data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00088">88</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00032">MAX_UNSIGNED_LONG</a>.</p>

</div>
</div>
<a class="anchor" id="a789c8a7b948ef02ca1513c830c16a358"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::PushAtHead </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const channel_key_type &amp;&#160;</td>
          <td class="paramname"><em>channelID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const heap_data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00108">108</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../da/d82/_rand_8cpp_source.xhtml#l00228">frandomMT()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00228">DataStructures::Queue&lt; queue_type &gt;::Push()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00163">DataStructures::Queue&lt; queue_type &gt;::PushAtHead()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00057">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight::randResultQueue</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00070">DataStructures::Queue&lt; queue_type &gt;::Size()</a>, and <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00058">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::QueueAndWeight::weight</a>.</p>

</div>
</div>
<a class="anchor" id="a6a4af0cc8c59949997588d8efc04c5ee"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::RemoveChannel </td>
          <td>(</td>
          <td class="paramtype">channel_key_type&#160;</td>
          <td class="paramname"><em>channelID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00206">206</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, and <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>.</p>

</div>
</div>
<a class="anchor" id="af8a9a0b891209e681e13d293b0fe3149"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00226">226</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a71ec113d9527b267cf7f000ff17c330a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func = defaultMapKeyComparison&lt;channel_key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt;double, <a class="el" href="../../d4/da4/struct_data_structures_1_1_ordered_channel_heap_1_1_heap_channel_and_data.xhtml">HeapChannelAndData</a>, true&gt; <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::heap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00072">72</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<a class="anchor" id="af858574a5f2f7b6618ae58f0cb4af52d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class channel_key_type , class heap_data_type , int(*)(const channel_key_type &amp;, const channel_key_type &amp;) channel_key_comparison_func = defaultMapKeyComparison&lt;channel_key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt;channel_key_type, <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml#d2/df0/struct_data_structures_1_1_ordered_channel_heap_1_1_queue_and_weight">QueueAndWeight</a>*, channel_key_comparison_func&gt; <a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">DataStructures::OrderedChannelHeap</a>&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::map</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00071">71</a> of file <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml">DS_OrderedChannelHeap.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a></li><li class="navelem"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">OrderedChannelHeap</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

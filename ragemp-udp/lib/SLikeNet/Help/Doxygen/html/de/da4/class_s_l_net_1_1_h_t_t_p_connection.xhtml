<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::HTTPConnection Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../dc/d15/class_s_l_net_1_1_h_t_t_p_connection-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::HTTPConnection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Use <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml" title="Use HTTPConnection to communicate with a web server.">HTTPConnection</a> to communicate with a web server.  
 <a href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">slikenet/HTTPConnection.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d07/struct_s_l_net_1_1_h_t_t_p_connection_1_1_bad_response.xhtml">BadResponse</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encapsulates a raw HTTP response and response code.  <a href="../../dd/d07/struct_s_l_net_1_1_h_t_t_p_connection_1_1_bad_response.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command">OutgoingCommand</a></td></tr>
<tr class="separator:d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a170f45d90987e40a5209d0490505d426"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a170f45d90987e40a5209d0490505d426">ResponseCodes</a> { <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a170f45d90987e40a5209d0490505d426a5e40b02b6726e2ae99f9174cb8bb6407">NoBody</a> =1001, 
<a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a170f45d90987e40a5209d0490505d426ab97f7918b4b02314141fcdba4c520bcf">OK</a> =200, 
<a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a170f45d90987e40a5209d0490505d426aaeb777b77c405d3fec7a382ea81aa014">Deleted</a> =1002
 }</td></tr>
<tr class="separator:a170f45d90987e40a5209d0490505d426"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af3114e4acc2865c600c2140ec2ca21e3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#af3114e4acc2865c600c2140ec2ca21e3">HTTPConnection</a> ()</td></tr>
<tr class="memdesc:af3114e4acc2865c600c2140ec2ca21e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a HTTP object associated with this tcp connection.  <a href="#af3114e4acc2865c600c2140ec2ca21e3"></a><br/></td></tr>
<tr class="separator:af3114e4acc2865c600c2140ec2ca21e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a464193beeabd012d2d1ecddacc634d77"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a464193beeabd012d2d1ecddacc634d77">~HTTPConnection</a> ()</td></tr>
<tr class="separator:a464193beeabd012d2d1ecddacc634d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4dd158399ab2bb1c26c4ac27b9fb2c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a8c4dd158399ab2bb1c26c4ac27b9fb2c">Init</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *_tcp, const char *host, unsigned short port=80)</td></tr>
<tr class="separator:a8c4dd158399ab2bb1c26c4ac27b9fb2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2915aeb07dd1ad3684be6dbb8771785b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a2915aeb07dd1ad3684be6dbb8771785b">Post</a> (const char *path, const char *data, const char *_contentType=&quot;application/x-www-form-urlencoded&quot;)</td></tr>
<tr class="separator:a2915aeb07dd1ad3684be6dbb8771785b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a485c73e39a601972de4328f922931225"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a485c73e39a601972de4328f922931225">Get</a> (const char *path)</td></tr>
<tr class="separator:a485c73e39a601972de4328f922931225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04d57d44cca79258bf646ec2901ed90c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a04d57d44cca79258bf646ec2901ed90c">HasRead</a> (void) const </td></tr>
<tr class="memdesc:a04d57d44cca79258bf646ec2901ed90c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is there a Read result ready?  <a href="#a04d57d44cca79258bf646ec2901ed90c"></a><br/></td></tr>
<tr class="separator:a04d57d44cca79258bf646ec2901ed90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a467a2cee536c32a0f74e0dc5cb6f0fb1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a467a2cee536c32a0f74e0dc5cb6f0fb1">Read</a> (void)</td></tr>
<tr class="separator:a467a2cee536c32a0f74e0dc5cb6f0fb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f085b28f447a77d88b3d87de565d34"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#ae8f085b28f447a77d88b3d87de565d34">Update</a> (void)</td></tr>
<tr class="memdesc:ae8f085b28f447a77d88b3d87de565d34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call periodically to do time-based updates.  <a href="#ae8f085b28f447a77d88b3d87de565d34"></a><br/></td></tr>
<tr class="separator:ae8f085b28f447a77d88b3d87de565d34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7a0bfc3624c6f5c3684bbdd8379263"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a5f7a0bfc3624c6f5c3684bbdd8379263">GetServerAddress</a> (void) const </td></tr>
<tr class="memdesc:a5f7a0bfc3624c6f5c3684bbdd8379263"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the address of the server we are connected to.  <a href="#a5f7a0bfc3624c6f5c3684bbdd8379263"></a><br/></td></tr>
<tr class="separator:a5f7a0bfc3624c6f5c3684bbdd8379263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b29065642b0ef3f616476928cf8e0c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a94b29065642b0ef3f616476928cf8e0c">ProcessTCPPacket</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a94b29065642b0ef3f616476928cf8e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0681736ceecafa2e9a797c711aa2a9cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml">HTTPConnection</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a0681736ceecafa2e9a797c711aa2a9cd">operator=</a> (const <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml">HTTPConnection</a> &amp;rhs)</td></tr>
<tr class="separator:a0681736ceecafa2e9a797c711aa2a9cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a603695ad380d961a72bb9051a557f92a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a603695ad380d961a72bb9051a557f92a">HasBadResponse</a> (int *code, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> *data)</td></tr>
<tr class="memdesc:a603695ad380d961a72bb9051a557f92a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queued events of failed exchanges with the HTTP server.  <a href="#a603695ad380d961a72bb9051a557f92a"></a><br/></td></tr>
<tr class="separator:a603695ad380d961a72bb9051a557f92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24dd376eada96acfe42bd20d11fd4ecc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a24dd376eada96acfe42bd20d11fd4ecc">IsBusy</a> (void) const </td></tr>
<tr class="memdesc:a24dd376eada96acfe42bd20d11fd4ecc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns false if the connection is not doing anything else.  <a href="#a24dd376eada96acfe42bd20d11fd4ecc"></a><br/></td></tr>
<tr class="separator:a24dd376eada96acfe42bd20d11fd4ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98302eca1a447a77d6988f3b6ea4d245"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a98302eca1a447a77d6988f3b6ea4d245">GetState</a> (void) const </td></tr>
<tr class="separator:a98302eca1a447a77d6988f3b6ea4d245"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aa65d5c3a2bdfff7d9b3a270555a44929"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a><br class="typebreak"/>
&lt; <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command">OutgoingCommand</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aa65d5c3a2bdfff7d9b3a270555a44929">outgoingCommand</a></td></tr>
<tr class="separator:aa65d5c3a2bdfff7d9b3a270555a44929"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2f74f4f84d363eaee24bdccac369fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command">OutgoingCommand</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a></td></tr>
<tr class="separator:aec2f74f4f84d363eaee24bdccac369fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Use <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml" title="Use HTTPConnection to communicate with a web server.">HTTPConnection</a> to communicate with a web server. </p>
<p>Start an instance of <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> via the Start() command. Instantiate a new instance of <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml" title="Use HTTPConnection to communicate with a web server.">HTTPConnection</a>, and associate <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> with the class in the constructor. Use <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a2915aeb07dd1ad3684be6dbb8771785b">Post()</a> to send commands to the web server, and ProcessDataPacket() to update the connection with packets returned from <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> that have the system address of the web server This class will handle connecting and reconnecting as necessary.</p>
<p>Note that only one <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a2915aeb07dd1ad3684be6dbb8771785b">Post()</a> can be handled at a time. </p>
<dl class="deprecated"><dt><b><a class="el" href="../../da/d58/deprecated.xhtml#_deprecated000001">Deprecated:</a></b></dt><dd>, use <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml" title="Use HTTPConnection2 to communicate with a web server.">HTTPConnection2</a> </dd></dl>

<p>Definition at line <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml#l00047">47</a> of file <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command" id="d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::HTTPConnection::OutgoingCommand</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml#l00126">126</a> of file <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a08012ac9b6785b16f64126e59871e160"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
contentType</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a361969502662f20bb221f9eba4db2579"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
data</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a5752e2ffb0dcaa5f5426f902810fd75d"></a>bool</td>
<td class="fieldname">
isPost</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="af7f2e006e454594c3912169393f0eb72"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
remotePath</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a170f45d90987e40a5209d0490505d426"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a170f45d90987e40a5209d0490505d426">SLNet::HTTPConnection::ResponseCodes</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Results of HTTP requests. Standard response codes are &lt; 999 ( define HTTP codes and our internal codes as needed ) </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a170f45d90987e40a5209d0490505d426a5e40b02b6726e2ae99f9174cb8bb6407"></a>NoBody</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a170f45d90987e40a5209d0490505d426ab97f7918b4b02314141fcdba4c520bcf"></a>OK</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a170f45d90987e40a5209d0490505d426aaeb777b77c405d3fec7a382ea81aa014"></a>Deleted</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml#l00095">95</a> of file <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af3114e4acc2865c600c2140ec2ca21e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::HTTPConnection::HTTPConnection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a HTTP object associated with this tcp connection. </p>

</div>
</div>
<a class="anchor" id="a464193beeabd012d2d1ecddacc634d77"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::HTTPConnection::~HTTPConnection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a485c73e39a601972de4328f922931225"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection::Get </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file from a webserver </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>the path on the remote server you want to GET from. For example "index.html" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5f7a0bfc3624c6f5c3684bbdd8379263"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::HTTPConnection::GetServerAddress </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the address of the server we are connected to. </p>

</div>
</div>
<a class="anchor" id="a98302eca1a447a77d6988f3b6ea4d245"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::HTTPConnection::GetState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a603695ad380d961a72bb9051a557f92a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection::HasBadResponse </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queued events of failed exchanges with the HTTP server. </p>

</div>
</div>
<a class="anchor" id="a04d57d44cca79258bf646ec2901ed90c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection::HasRead </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is there a Read result ready? </p>

</div>
</div>
<a class="anchor" id="a8c4dd158399ab2bb1c26c4ac27b9fb2c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection::Init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td>
          <td class="paramname"><em>_tcp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em> = <code>80</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section pre"><dt>Precondition</dt><dd>tcp should already be started </dd></dl>

</div>
</div>
<a class="anchor" id="a24dd376eada96acfe42bd20d11fd4ecc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection::IsBusy </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns false if the connection is not doing anything else. </p>

</div>
</div>
<a class="anchor" id="a0681736ceecafa2e9a797c711aa2a9cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml">HTTPConnection</a>&amp; SLNet::HTTPConnection::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml">HTTPConnection</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml#l00097">97</a> of file <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2915aeb07dd1ad3684be6dbb8771785b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection::Post </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>_contentType</em> = <code>&quot;application/x-www-form-urlencoded&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Submit data to the HTTP server HTTP only allows one request at a time per connection</p>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a24dd376eada96acfe42bd20d11fd4ecc" title="Returns false if the connection is not doing anything else.">IsBusy()</a>==false </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>the path on the remote server you want to POST to. For example "index.html" </td></tr>
    <tr><td class="paramname">data</td><td>A NULL terminated string to submit to the server </td></tr>
    <tr><td class="paramname">contentType</td><td>"Content-Type:" passed to post. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a94b29065642b0ef3f616476928cf8e0c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection::ProcessTCPPacket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Process an HTTP data packet returned from <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> Returns true when we have gotten all the data from the HTTP server. If this returns true then it's safe to <a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a2915aeb07dd1ad3684be6dbb8771785b">Post()</a> another request Deallocate the packet as usual via <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">packet</td><td>NULL or a packet associated with our host and port </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a467a2cee536c32a0f74e0dc5cb6f0fb1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::HTTPConnection::Read </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get one result from the server </p>
<dl class="section pre"><dt>Precondition</dt><dd>HasResult must return true </dd></dl>

</div>
</div>
<a class="anchor" id="ae8f085b28f447a77d88b3d87de565d34"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection::Update </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call periodically to do time-based updates. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aec2f74f4f84d363eaee24bdccac369fb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command">OutgoingCommand</a> SLNet::HTTPConnection::currentProcessingCommand</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml#l00135">135</a> of file <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa65d5c3a2bdfff7d9b3a270555a44929"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#d2/d2f/struct_s_l_net_1_1_h_t_t_p_connection_1_1_outgoing_command">OutgoingCommand</a>&gt; SLNet::HTTPConnection::outgoingCommand</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml#l00134">134</a> of file <a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../d9/db2/_h_t_t_p_connection_8h_source.xhtml">HTTPConnection.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml">HTTPConnection</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

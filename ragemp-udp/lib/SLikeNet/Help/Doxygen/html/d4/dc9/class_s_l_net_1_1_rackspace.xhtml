<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::Rackspace Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d4/dc9/class_s_l_net_1_1_rackspace.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../de/d69/class_s_l_net_1_1_rackspace-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::Rackspace Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Code that uses the <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> class to communicate with the <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml" title="Code that uses the TCPInterface class to communicate with the Rackspace API servers.">Rackspace</a> API servers.  
 <a href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">slikenet/Rackspace.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a></td></tr>
<tr class="separator:d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:affca40f9eab4a139e6d771f1ff606fdf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#affca40f9eab4a139e6d771f1ff606fdf">Rackspace</a> ()</td></tr>
<tr class="separator:affca40f9eab4a139e6d771f1ff606fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee5c0f61d4a3c675c4c7915f2996c4cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aee5c0f61d4a3c675c4c7915f2996c4cc">~Rackspace</a> ()</td></tr>
<tr class="separator:aee5c0f61d4a3c675c4c7915f2996c4cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf72c83e613d00369fe731f682b6e143"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#acf72c83e613d00369fe731f682b6e143">Authenticate</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *_tcpInterface, const char *_authenticationURL, const char *_rackspaceCloudUsername, const char *_apiAccessKey)</td></tr>
<tr class="memdesc:acf72c83e613d00369fe731f682b6e143"><td class="mdescLeft">&#160;</td><td class="mdescRight">Authenticate with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml" title="Code that uses the TCPInterface class to communicate with the Rackspace API servers.">Rackspace</a> servers, required before executing any commands.  <a href="#acf72c83e613d00369fe731f682b6e143"></a><br/></td></tr>
<tr class="separator:acf72c83e613d00369fe731f682b6e143"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae877ed1486626c67708cb06eb90bb12e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e">ListServers</a> (void)</td></tr>
<tr class="memdesc:ae877ed1486626c67708cb06eb90bb12e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a list of running servers.  <a href="#ae877ed1486626c67708cb06eb90bb12e"></a><br/></td></tr>
<tr class="separator:ae877ed1486626c67708cb06eb90bb12e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad77d156f6de503b34d6ab19d0b2a02d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad77d156f6de503b34d6ab19d0b2a02d2">ListServersWithDetails</a> (void)</td></tr>
<tr class="memdesc:ad77d156f6de503b34d6ab19d0b2a02d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a list of running servers, with extended details on each server.  <a href="#ad77d156f6de503b34d6ab19d0b2a02d2"></a><br/></td></tr>
<tr class="separator:ad77d156f6de503b34d6ab19d0b2a02d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bdb816ff69910f05437522ae7d1ee4f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a6bdb816ff69910f05437522ae7d1ee4f">CreateServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> name, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> imageId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> flavorId)</td></tr>
<tr class="memdesc:a6bdb816ff69910f05437522ae7d1ee4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a server.  <a href="#a6bdb816ff69910f05437522ae7d1ee4f"></a><br/></td></tr>
<tr class="separator:a6bdb816ff69910f05437522ae7d1ee4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33820561a614c96bcced059b5abded84"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a33820561a614c96bcced059b5abded84">GetServerDetails</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId)</td></tr>
<tr class="memdesc:a33820561a614c96bcced059b5abded84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get details on a particular server.  <a href="#a33820561a614c96bcced059b5abded84"></a><br/></td></tr>
<tr class="separator:a33820561a614c96bcced059b5abded84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a869094404371473dfdbb47b769b30a43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a869094404371473dfdbb47b769b30a43">UpdateServerNameOrPassword</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> newName, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> newPassword)</td></tr>
<tr class="memdesc:a869094404371473dfdbb47b769b30a43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the name or password for a server.  <a href="#a869094404371473dfdbb47b769b30a43"></a><br/></td></tr>
<tr class="separator:a869094404371473dfdbb47b769b30a43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6041be210383b5de1f4eb7d495d89b29"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a6041be210383b5de1f4eb7d495d89b29">DeleteServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId)</td></tr>
<tr class="memdesc:a6041be210383b5de1f4eb7d495d89b29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes a server.  <a href="#a6041be210383b5de1f4eb7d495d89b29"></a><br/></td></tr>
<tr class="separator:a6041be210383b5de1f4eb7d495d89b29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4937bfb74f40eb09051bd76395cf277"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad4937bfb74f40eb09051bd76395cf277">ListServerAddresses</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId)</td></tr>
<tr class="memdesc:ad4937bfb74f40eb09051bd76395cf277"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lists the IP addresses available to a server.  <a href="#ad4937bfb74f40eb09051bd76395cf277"></a><br/></td></tr>
<tr class="separator:ad4937bfb74f40eb09051bd76395cf277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cb72a21a76de1281a93dfa1de7852ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8cb72a21a76de1281a93dfa1de7852ce">ShareServerAddress</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> ipAddress)</td></tr>
<tr class="memdesc:a8cb72a21a76de1281a93dfa1de7852ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shares an IP address with a server.  <a href="#a8cb72a21a76de1281a93dfa1de7852ce"></a><br/></td></tr>
<tr class="separator:a8cb72a21a76de1281a93dfa1de7852ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2aade819c5b75bdcfc4b5dee28fccdc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae2aade819c5b75bdcfc4b5dee28fccdc">DeleteServerAddress</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> ipAddress)</td></tr>
<tr class="memdesc:ae2aade819c5b75bdcfc4b5dee28fccdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops sharing an IP address with a server.  <a href="#ae2aade819c5b75bdcfc4b5dee28fccdc"></a><br/></td></tr>
<tr class="separator:ae2aade819c5b75bdcfc4b5dee28fccdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e7b59b169f1771ce2a53a5433f52c3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a9e7b59b169f1771ce2a53a5433f52c3c">RebootServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> rebootType)</td></tr>
<tr class="memdesc:a9e7b59b169f1771ce2a53a5433f52c3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reboots a server.  <a href="#a9e7b59b169f1771ce2a53a5433f52c3c"></a><br/></td></tr>
<tr class="separator:a9e7b59b169f1771ce2a53a5433f52c3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af660feb40e3989a3f6e9b74bf13eb80d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#af660feb40e3989a3f6e9b74bf13eb80d">RebuildServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> imageId)</td></tr>
<tr class="memdesc:af660feb40e3989a3f6e9b74bf13eb80d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rebuilds a server with a different image (harddrive contents)  <a href="#af660feb40e3989a3f6e9b74bf13eb80d"></a><br/></td></tr>
<tr class="separator:af660feb40e3989a3f6e9b74bf13eb80d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb007f1afd7d254b0b2608fdcd3689d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#acb007f1afd7d254b0b2608fdcd3689d6">ResizeServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> flavorId)</td></tr>
<tr class="memdesc:acb007f1afd7d254b0b2608fdcd3689d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the hardware configuration of a server. This does not take effect until you call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a2cae87cd5d139d3220234dd425039f37" title="Confirm a resize for the specified server.">ConfirmResizedServer()</a>  <a href="#acb007f1afd7d254b0b2608fdcd3689d6"></a><br/></td></tr>
<tr class="separator:acb007f1afd7d254b0b2608fdcd3689d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cae87cd5d139d3220234dd425039f37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a2cae87cd5d139d3220234dd425039f37">ConfirmResizedServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId)</td></tr>
<tr class="memdesc:a2cae87cd5d139d3220234dd425039f37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Confirm a resize for the specified server.  <a href="#a2cae87cd5d139d3220234dd425039f37"></a><br/></td></tr>
<tr class="separator:a2cae87cd5d139d3220234dd425039f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a194535bfc74ff3253b3830d7bec4f3f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a194535bfc74ff3253b3830d7bec4f3f1">RevertResizedServer</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId)</td></tr>
<tr class="memdesc:a194535bfc74ff3253b3830d7bec4f3f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reverts a resize for the specified server.  <a href="#a194535bfc74ff3253b3830d7bec4f3f1"></a><br/></td></tr>
<tr class="separator:a194535bfc74ff3253b3830d7bec4f3f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec76bdc7443316cbd6440eed4684f59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a4ec76bdc7443316cbd6440eed4684f59">ListFlavors</a> (void)</td></tr>
<tr class="memdesc:a4ec76bdc7443316cbd6440eed4684f59"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all flavors (hardware configs, primarily memory)  <a href="#a4ec76bdc7443316cbd6440eed4684f59"></a><br/></td></tr>
<tr class="separator:a4ec76bdc7443316cbd6440eed4684f59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8aa2bab4b220197a8583243f16a5e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aa8aa2bab4b220197a8583243f16a5e36">GetFlavorDetails</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> flavorId)</td></tr>
<tr class="memdesc:aa8aa2bab4b220197a8583243f16a5e36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get extended details about a specific flavor.  <a href="#aa8aa2bab4b220197a8583243f16a5e36"></a><br/></td></tr>
<tr class="separator:aa8aa2bab4b220197a8583243f16a5e36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fed0d3e71e770be47e22bbe602560de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8fed0d3e71e770be47e22bbe602560de">ListImages</a> (void)</td></tr>
<tr class="memdesc:a8fed0d3e71e770be47e22bbe602560de"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all images (software configs, including operating systems), which includes images you create yourself.  <a href="#a8fed0d3e71e770be47e22bbe602560de"></a><br/></td></tr>
<tr class="separator:a8fed0d3e71e770be47e22bbe602560de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135667af7dbfda0802653641a805a23f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a135667af7dbfda0802653641a805a23f">CreateImage</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> serverId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> imageName)</td></tr>
<tr class="memdesc:a135667af7dbfda0802653641a805a23f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Images a running server. This essentially copies the harddrive, and lets you start a server with the same harddrive contents later.  <a href="#a135667af7dbfda0802653641a805a23f"></a><br/></td></tr>
<tr class="separator:a135667af7dbfda0802653641a805a23f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06984cd7a19d3647f352d0596e377b1a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a06984cd7a19d3647f352d0596e377b1a">GetImageDetails</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> imageId)</td></tr>
<tr class="memdesc:a06984cd7a19d3647f352d0596e377b1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get extended details about a particular image.  <a href="#a06984cd7a19d3647f352d0596e377b1a"></a><br/></td></tr>
<tr class="separator:a06984cd7a19d3647f352d0596e377b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad48d8095db174748173677c43113fb2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad48d8095db174748173677c43113fb2f">DeleteImage</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> imageId)</td></tr>
<tr class="memdesc:ad48d8095db174748173677c43113fb2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete a custom image created with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a135667af7dbfda0802653641a805a23f" title="Images a running server. This essentially copies the harddrive, and lets you start a server with the ...">CreateImage()</a>  <a href="#ad48d8095db174748173677c43113fb2f"></a><br/></td></tr>
<tr class="separator:ad48d8095db174748173677c43113fb2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0c8e7ce94e0529e76f06d5c9d792b79"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aa0c8e7ce94e0529e76f06d5c9d792b79">ListSharedIPGroups</a> (void)</td></tr>
<tr class="memdesc:aa0c8e7ce94e0529e76f06d5c9d792b79"><td class="mdescLeft">&#160;</td><td class="mdescRight">List IP groups.  <a href="#aa0c8e7ce94e0529e76f06d5c9d792b79"></a><br/></td></tr>
<tr class="separator:aa0c8e7ce94e0529e76f06d5c9d792b79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8eb3341a6fc4749d4d800aeae92aab1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aa8eb3341a6fc4749d4d800aeae92aab1">ListSharedIPGroupsWithDetails</a> (void)</td></tr>
<tr class="memdesc:aa8eb3341a6fc4749d4d800aeae92aab1"><td class="mdescLeft">&#160;</td><td class="mdescRight">List IP groups with extended details.  <a href="#aa8eb3341a6fc4749d4d800aeae92aab1"></a><br/></td></tr>
<tr class="separator:aa8eb3341a6fc4749d4d800aeae92aab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaacbea38c891ba703f05fde971adcc0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#abaacbea38c891ba703f05fde971adcc0">CreateSharedIPGroup</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> name, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> optionalServerId)</td></tr>
<tr class="separator:abaacbea38c891ba703f05fde971adcc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6227f6818a9fc89c4f56e90c0a2f0ab5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a6227f6818a9fc89c4f56e90c0a2f0ab5">GetSharedIPGroupDetails</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> groupId)</td></tr>
<tr class="separator:a6227f6818a9fc89c4f56e90c0a2f0ab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0505e0e76c1dc7a838d2a02b733af12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#af0505e0e76c1dc7a838d2a02b733af12">DeleteSharedIPGroup</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> groupId)</td></tr>
<tr class="separator:af0505e0e76c1dc7a838d2a02b733af12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57becee254bb4bee51bb673af644106c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a57becee254bb4bee51bb673af644106c">AddEventCallback</a> (<a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a> *callback)</td></tr>
<tr class="memdesc:a57becee254bb4bee51bb673af644106c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a callback to the list of callbacks to be called when any of the above functions finish executing The callbacks are called in the order they are added.  <a href="#a57becee254bb4bee51bb673af644106c"></a><br/></td></tr>
<tr class="separator:a57becee254bb4bee51bb673af644106c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50ef2c7f658fbd350053612dd83974e3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a50ef2c7f658fbd350053612dd83974e3">RemoveEventCallback</a> (<a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a> *callback)</td></tr>
<tr class="memdesc:a50ef2c7f658fbd350053612dd83974e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a callback from the list of callbacks to be called when any of the above functions finish executing The callbacks are called in the order they are added.  <a href="#a50ef2c7f658fbd350053612dd83974e3"></a><br/></td></tr>
<tr class="separator:a50ef2c7f658fbd350053612dd83974e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad00eafb7a8959f31da008ed3853a72ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad00eafb7a8959f31da008ed3853a72ea">ClearEventCallbacks</a> (void)</td></tr>
<tr class="memdesc:ad00eafb7a8959f31da008ed3853a72ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all callbacks.  <a href="#ad00eafb7a8959f31da008ed3853a72ea"></a><br/></td></tr>
<tr class="separator:ad00eafb7a8959f31da008ed3853a72ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a939351e17a21310b00c226cff7fc7799"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a939351e17a21310b00c226cff7fc7799">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="memdesc:a939351e17a21310b00c226cff7fc7799"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call this anytime <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> returns a packet.  <a href="#a939351e17a21310b00c226cff7fc7799"></a><br/></td></tr>
<tr class="separator:a939351e17a21310b00c226cff7fc7799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9912f124601f26c221252ed9703c99f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a9912f124601f26c221252ed9703c99f1">OnClosedConnection</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress)</td></tr>
<tr class="memdesc:a9912f124601f26c221252ed9703c99f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call this when <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> returns something other than UNASSIGNED_SYSTEM_ADDRESS from HasLostConnection()  <a href="#a9912f124601f26c221252ed9703c99f1"></a><br/></td></tr>
<tr class="separator:a9912f124601f26c221252ed9703c99f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f50d015a71811843142c6230970a5ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a3f50d015a71811843142c6230970a5ec">AddOperation</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a> type, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> httpCommand, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> operation, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> xml)</td></tr>
<tr class="memdesc:a3f50d015a71811843142c6230970a5ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mostly for internal use, but you can use it to execute an operation with more complex xml if desired See the <a class="el" href="../../da/d5c/_rackspace_8cpp.xhtml">Rackspace.cpp</a> on how to use it.  <a href="#a3f50d015a71811843142c6230970a5ec"></a><br/></td></tr>
<tr class="separator:a3f50d015a71811843142c6230970a5ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a2e97021b64f80c04fc8d7e8bfa3b2a9e"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a2e97021b64f80c04fc8d7e8bfa3b2a9e">EventTypeToString</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType)</td></tr>
<tr class="memdesc:a2e97021b64f80c04fc8d7e8bfa3b2a9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">String representation of each RackspaceEventType.  <a href="#a2e97021b64f80c04fc8d7e8bfa3b2a9e"></a><br/></td></tr>
<tr class="separator:a2e97021b64f80c04fc8d7e8bfa3b2a9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a7cea0ca71d469fffdcc8ae318c1fe4ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a7cea0ca71d469fffdcc8ae318c1fe4ce">HasOperationOfType</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a> t)</td></tr>
<tr class="separator:a7cea0ca71d469fffdcc8ae318c1fe4ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0207b34c85fbad9f93981616153333fa"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a0207b34c85fbad9f93981616153333fa">GetOperationOfTypeIndex</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a> t)</td></tr>
<tr class="separator:a0207b34c85fbad9f93981616153333fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8b332064232df19b6affadd12b8c315"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aa8b332064232df19b6affadd12b8c315">ExecuteOperation</a> (<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a> &amp;ro)</td></tr>
<tr class="separator:aa8b332064232df19b6affadd12b8c315"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51bb689eafbf076f647eb50868269195"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a51bb689eafbf076f647eb50868269195">ReadLine</a> (const char *data, const char *stringStart, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;output)</td></tr>
<tr class="separator:a51bb689eafbf076f647eb50868269195"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42b327eb301f36da22c4fec5880665a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aa42b327eb301f36da22c4fec5880665a">ConnectToServerManagementDomain</a> (<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a> &amp;ro)</td></tr>
<tr class="separator:aa42b327eb301f36da22c4fec5880665a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a990d107391a983a91f9568d91ecf0ce7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a990d107391a983a91f9568d91ecf0ce7">eventCallbacks</a></td></tr>
<tr class="separator:a990d107391a983a91f9568d91ecf0ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fe73d11bcad6ba5718ddb356affd179"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a9fe73d11bcad6ba5718ddb356affd179">tcpInterface</a></td></tr>
<tr class="separator:a9fe73d11bcad6ba5718ddb356affd179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58bff3ea37f0df4c2c333369a2291c84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a58bff3ea37f0df4c2c333369a2291c84">operations</a></td></tr>
<tr class="separator:a58bff3ea37f0df4c2c333369a2291c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4161abbb7b0146a6daeb6f8596abd852"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a4161abbb7b0146a6daeb6f8596abd852">serverManagementURL</a></td></tr>
<tr class="separator:a4161abbb7b0146a6daeb6f8596abd852"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d9fdc8190c46486eff0af1a0cde6ddc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8d9fdc8190c46486eff0af1a0cde6ddc">serverManagementDomain</a></td></tr>
<tr class="separator:a8d9fdc8190c46486eff0af1a0cde6ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18e03eef8f2d742e13f6dbba60bf0e1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a18e03eef8f2d742e13f6dbba60bf0e1e">serverManagementPath</a></td></tr>
<tr class="separator:a18e03eef8f2d742e13f6dbba60bf0e1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13aca4ff519895ad9e3f11ec5afdffee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a13aca4ff519895ad9e3f11ec5afdffee">storageURL</a></td></tr>
<tr class="separator:a13aca4ff519895ad9e3f11ec5afdffee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa542df3c410dd649a4b707e89834e5be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aa542df3c410dd649a4b707e89834e5be">storageDomain</a></td></tr>
<tr class="separator:aa542df3c410dd649a4b707e89834e5be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10b8f8b7dcb07a5ae34837345a0a20dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a10b8f8b7dcb07a5ae34837345a0a20dc">storagePath</a></td></tr>
<tr class="separator:a10b8f8b7dcb07a5ae34837345a0a20dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44dd4dc00c54938f8bc40125e6f56364"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a44dd4dc00c54938f8bc40125e6f56364">cdnManagementURL</a></td></tr>
<tr class="separator:a44dd4dc00c54938f8bc40125e6f56364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3189bb7d53cb2d9ce6cbd42daa6284f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a3189bb7d53cb2d9ce6cbd42daa6284f0">cdnManagementDomain</a></td></tr>
<tr class="separator:a3189bb7d53cb2d9ce6cbd42daa6284f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab3cc73ecd606ecb05d709c875a79497"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aab3cc73ecd606ecb05d709c875a79497">cdnManagementPath</a></td></tr>
<tr class="separator:aab3cc73ecd606ecb05d709c875a79497"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeadbecd19b15d593af45fefba52e5fa0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#aeadbecd19b15d593af45fefba52e5fa0">storageToken</a></td></tr>
<tr class="separator:aeadbecd19b15d593af45fefba52e5fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02be9f1f25b7aa1eea83ba0ebb0517b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a02be9f1f25b7aa1eea83ba0ebb0517b5">authToken</a></td></tr>
<tr class="separator:a02be9f1f25b7aa1eea83ba0ebb0517b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3f4e778bbc955cefb117b2f9ac82018"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad3f4e778bbc955cefb117b2f9ac82018">rackspaceCloudUsername</a></td></tr>
<tr class="separator:ad3f4e778bbc955cefb117b2f9ac82018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab385abfaafa213fde6a0172348a9920e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ab385abfaafa213fde6a0172348a9920e">apiAccessKey</a></td></tr>
<tr class="separator:ab385abfaafa213fde6a0172348a9920e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Code that uses the <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> class to communicate with the <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml" title="Code that uses the TCPInterface class to communicate with the Rackspace API servers.">Rackspace</a> API servers. </p>
<dl class="section pre"><dt>Precondition</dt><dd>Compile RakNet with OPEN_SSL_CLIENT_SUPPORT set to 1 </dd>
<dd>
Packets returned from TCPInterface::OnReceive() must be passed to <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a939351e17a21310b00c226cff7fc7799" title="Call this anytime TCPInterface returns a packet.">Rackspace::OnReceive()</a> </dd>
<dd>
Packets returned from <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0eb90925c3a0ae42d00019214446fb97" title="Queued events of lost connections.">TCPInterface::HasLostConnection()</a> must be passed to <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a9912f124601f26c221252ed9703c99f1" title="Call this when TCPInterface returns something other than UNASSIGNED_SYSTEM_ADDRESS from HasLostConnec...">Rackspace::OnClosedConnection()</a> </dd></dl>

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00171">171</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation" id="d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::Rackspace::RackspaceOperation</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00371">371</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a9928715e08718f181c67c7018ab992c9"></a><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a></td>
<td class="fieldname">
connectionAddress</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a819f987ceea53024c6b9074387c1249e"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
httpCommand</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a6516c8e8d23b1f3aa9cc08737dee874f"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
incomingStream</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ac96f1dbb30cdbc0b487d57804ffb644d"></a>bool</td>
<td class="fieldname">
isPendingAuthentication</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a438a0f2b053bdcc76536f008e403a2c8"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
operation</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a6b3a38889a07ff5bc8859ec34e1540df"></a><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a></td>
<td class="fieldname">
type</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a7e7e0ff25f44fb1dd023df915aedd263"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
xml</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="affca40f9eab4a139e6d771f1ff606fdf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::Rackspace::Rackspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aee5c0f61d4a3c675c4c7915f2996c4cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::Rackspace::~Rackspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a57becee254bb4bee51bb673af644106c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::AddEventCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a> *&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a callback to the list of callbacks to be called when any of the above functions finish executing The callbacks are called in the order they are added. </p>

</div>
</div>
<a class="anchor" id="a3f50d015a71811843142c6230970a5ec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::AddOperation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>httpCommand</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>operation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>xml</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mostly for internal use, but you can use it to execute an operation with more complex xml if desired See the <a class="el" href="../../da/d5c/_rackspace_8cpp.xhtml">Rackspace.cpp</a> on how to use it. </p>

</div>
</div>
<a class="anchor" id="acf72c83e613d00369fe731f682b6e143"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::Rackspace::Authenticate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td>
          <td class="paramname"><em>_tcpInterface</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>_authenticationURL</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>_rackspaceCloudUsername</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>_apiAccessKey</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Authenticate with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml" title="Code that uses the TCPInterface class to communicate with the Rackspace API servers.">Rackspace</a> servers, required before executing any commands. </p>
<p>All requests to authenticate and operate against Cloud Servers are performed using SSL over HTTP (HTTPS) on TCP port 443. Times out after 24 hours - if you get RET_Authenticate_Unauthorized in the RackspaceEventCallback callback, call again </p>
<dl class="section see"><dt>See Also</dt><dd>RackspaceEventCallback::OnAuthenticationResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">_tcpInterface</td><td>An instance of <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a>, build with OPEN_SSL_CLIENT_SUPPORT 1 and already started </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_authenticationURL</td><td>See <a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> . US-based accounts authenticate through auth.api.rackspacecloud.com. UK-based accounts authenticate through lon.auth.api.rackspacecloud.com </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_rackspaceCloudUsername</td><td>Username you registered with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml" title="Code that uses the TCPInterface class to communicate with the Rackspace API servers.">Rackspace</a> on their website </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_apiAccessKey</td><td>Obtain your API access key from the <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml" title="Code that uses the TCPInterface class to communicate with the Rackspace API servers.">Rackspace</a> Cloud Control Panel in the Your Account API Access section. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The address of the authentication server, or UNASSIGNED_SYSTEM_ADDRESS if the connection attempt failed </dd></dl>

</div>
</div>
<a class="anchor" id="ad00eafb7a8959f31da008ed3853a72ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ClearEventCallbacks </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all callbacks. </p>

</div>
</div>
<a class="anchor" id="a2cae87cd5d139d3220234dd425039f37"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ConfirmResizedServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Confirm a resize for the specified server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnConfirmResizedServerResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#acb007f1afd7d254b0b2608fdcd3689d6" title="Changes the hardware configuration of a server. This does not take effect until you call ConfirmResiz...">ResizeServer()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa42b327eb301f36da22c4fec5880665a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::Rackspace::ConnectToServerManagementDomain </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a> &amp;&#160;</td>
          <td class="paramname"><em>ro</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a135667af7dbfda0802653641a805a23f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::CreateImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>imageName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Images a running server. This essentially copies the harddrive, and lets you start a server with the same harddrive contents later. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnCreateImageResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8fed0d3e71e770be47e22bbe602560de" title="List all images (software configs, including operating systems), which includes images you create you...">ListImages()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imageName</td><td>What to call this image </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6bdb816ff69910f05437522ae7d1ee4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::CreateServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>imageId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>flavorId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a server. </p>
<p>Create a server with a given image (harddrive contents) and flavor (hardware configuration) Get the available images with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8fed0d3e71e770be47e22bbe602560de" title="List all images (software configs, including operating systems), which includes images you create you...">ListImages()</a> Get the available flavors with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a4ec76bdc7443316cbd6440eed4684f59" title="List all flavors (hardware configs, primarily memory)">ListFlavors()</a> It is possible to configure the server in more detail. See the XML schema at <a href="http://docs.rackspacecloud.com/servers/api/v1.0">http://docs.rackspacecloud.com/servers/api/v1.0</a> You can execute such a custom command by calling <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a3f50d015a71811843142c6230970a5ec" title="Mostly for internal use, but you can use it to execute an operation with more complex xml if desired ...">AddOperation()</a> manually. See the implementation of CreateServer for how to do so. The server takes a while to build. Call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a33820561a614c96bcced059b5abded84" title="Get details on a particular server.">GetServerDetails()</a> to get the current build status. Server id to pass to <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a33820561a614c96bcced059b5abded84" title="Get details on a particular server.">GetServerDetails()</a> is returned in the field &lt;server ... id="1234"&gt; </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnCreateServerResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the server. Only alphanumeric characters, periods, and hyphens are valid. Server Name cannot start or end with a period or hyphen. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imageId</td><td>Which image (harddrive contents, including OS) to use </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flavorId</td><td>Which flavor (hardware config) to use, primarily how much memory is available. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abaacbea38c891ba703f05fde971adcc0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::CreateSharedIPGroup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>optionalServerId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad48d8095db174748173677c43113fb2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::DeleteImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>imageId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delete a custom image created with <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a135667af7dbfda0802653641a805a23f" title="Images a running server. This essentially copies the harddrive, and lets you start a server with the ...">CreateImage()</a> </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnDeleteImageResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8fed0d3e71e770be47e22bbe602560de" title="List all images (software configs, including operating systems), which includes images you create you...">ListImages()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">imageId</td><td>Which image </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6041be210383b5de1f4eb7d495d89b29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::DeleteServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes a server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnDeleteServerResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to get details on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae2aade819c5b75bdcfc4b5dee28fccdc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::DeleteServerAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>ipAddress</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stops sharing an IP address with a server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnDeleteServerAddressResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ipAddress</td><td>Which IP address. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad4937bfb74f40eb09051bd76395cf277" title="Lists the IP addresses available to a server.">ListServerAddresses()</a> to get the list of addresses for the specified server </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af0505e0e76c1dc7a838d2a02b733af12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::DeleteSharedIPGroup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>groupId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2e97021b64f80c04fc8d7e8bfa3b2a9e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const char* SLNet::Rackspace::EventTypeToString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>String representation of each RackspaceEventType. </p>

</div>
</div>
<a class="anchor" id="aa8b332064232df19b6affadd12b8c315"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::Rackspace::ExecuteOperation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a> &amp;&#160;</td>
          <td class="paramname"><em>ro</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa8aa2bab4b220197a8583243f16a5e36"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::GetFlavorDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>flavorId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get extended details about a specific flavor. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnGetFlavorDetailsResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a4ec76bdc7443316cbd6440eed4684f59" title="List all flavors (hardware configs, primarily memory)">ListFlavors()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flavorId</td><td>Which flavor (hardware config) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a06984cd7a19d3647f352d0596e377b1a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::GetImageDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>imageId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get extended details about a particular image. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnGetImageDetailsResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a8fed0d3e71e770be47e22bbe602560de" title="List all images (software configs, including operating systems), which includes images you create you...">ListImages()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">imageId</td><td>Which image </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0207b34c85fbad9f93981616153333fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int SLNet::Rackspace::GetOperationOfTypeIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a>&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a33820561a614c96bcced059b5abded84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::GetServerDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get details on a particular server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnGetServerDetailsResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to get details on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6227f6818a9fc89c4f56e90c0a2f0ab5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::GetSharedIPGroupDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>groupId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7cea0ca71d469fffdcc8ae318c1fe4ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::Rackspace::HasOperationOfType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a>&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4ec76bdc7443316cbd6440eed4684f59"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListFlavors </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List all flavors (hardware configs, primarily memory) </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListFlavorsResult() </dd></dl>

</div>
</div>
<a class="anchor" id="a8fed0d3e71e770be47e22bbe602560de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListImages </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List all images (software configs, including operating systems), which includes images you create yourself. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListImagesResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a135667af7dbfda0802653641a805a23f" title="Images a running server. This essentially copies the harddrive, and lets you start a server with the ...">CreateImage()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ad4937bfb74f40eb09051bd76395cf277"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListServerAddresses </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Lists the IP addresses available to a server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListServerAddressesResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae877ed1486626c67708cb06eb90bb12e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListServers </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a list of running servers. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListServersResult() </dd></dl>

</div>
</div>
<a class="anchor" id="ad77d156f6de503b34d6ab19d0b2a02d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListServersWithDetails </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a list of running servers, with extended details on each server. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a33820561a614c96bcced059b5abded84" title="Get details on a particular server.">GetServerDetails()</a> </dd>
<dd>
<a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListServersWithDetailsResult() </dd></dl>

</div>
</div>
<a class="anchor" id="aa0c8e7ce94e0529e76f06d5c9d792b79"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListSharedIPGroups </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List IP groups. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListSharedIPGroupsResult() </dd></dl>

</div>
</div>
<a class="anchor" id="aa8eb3341a6fc4749d4d800aeae92aab1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ListSharedIPGroupsWithDetails </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List IP groups with extended details. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnListSharedIPGroupsWithDetailsResult() </dd></dl>

</div>
</div>
<a class="anchor" id="a9912f124601f26c221252ed9703c99f1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::OnClosedConnection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call this when <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> returns something other than UNASSIGNED_SYSTEM_ADDRESS from HasLostConnection() </p>

</div>
</div>
<a class="anchor" id="a939351e17a21310b00c226cff7fc7799"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call this anytime <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> returns a packet. </p>

</div>
</div>
<a class="anchor" id="a51bb689eafbf076f647eb50868269195"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ReadLine </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>stringStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9e7b59b169f1771ce2a53a5433f52c3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::RebootServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>rebootType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reboots a server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnRebootServerResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rebootType</td><td>Should be either "HARD" or "SOFT" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af660feb40e3989a3f6e9b74bf13eb80d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::RebuildServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>imageId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Rebuilds a server with a different image (harddrive contents) </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnRebuildServerResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">imageId</td><td>Which image (harddrive contents, including OS) to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a50ef2c7f658fbd350053612dd83974e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::RemoveEventCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a> *&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a callback from the list of callbacks to be called when any of the above functions finish executing The callbacks are called in the order they are added. </p>

</div>
</div>
<a class="anchor" id="acb007f1afd7d254b0b2608fdcd3689d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ResizeServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>flavorId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Changes the hardware configuration of a server. This does not take effect until you call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a2cae87cd5d139d3220234dd425039f37" title="Confirm a resize for the specified server.">ConfirmResizedServer()</a> </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnResizeServerResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#a194535bfc74ff3253b3830d7bec4f3f1" title="Reverts a resize for the specified server.">RevertResizedServer()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flavorId</td><td>Which flavor (hardware config) to use, primarily how much memory is available. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a194535bfc74ff3253b3830d7bec4f3f1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::RevertResizedServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reverts a resize for the specified server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnRevertResizedServerResult() </dd>
<dd>
<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#acb007f1afd7d254b0b2608fdcd3689d6" title="Changes the hardware configuration of a server. This does not take effect until you call ConfirmResiz...">ResizeServer()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8cb72a21a76de1281a93dfa1de7852ce"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::ShareServerAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>ipAddress</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Shares an IP address with a server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnShareServerAddressResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to operate on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ipAddress</td><td>Which IP address. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ad4937bfb74f40eb09051bd76395cf277" title="Lists the IP addresses available to a server.">ListServerAddresses()</a> to get the list of addresses for the specified server </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a869094404371473dfdbb47b769b30a43"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::Rackspace::UpdateServerNameOrPassword </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>newName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>newPassword</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Changes the name or password for a server. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf">http://docs.rackspacecloud.com/servers/api/v1.0/cs-devguide-20110112.pdf</a> </dd>
<dd>
RackspaceEventCallback::OnUpdateServerNameOrPasswordResult() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">serverId</td><td>Which server to get details on. You can call <a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#ae877ed1486626c67708cb06eb90bb12e" title="Get a list of running servers.">ListServers()</a> to get the list of active servers. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">newName</td><td>The new server name. Leave blank to leave unchanged. Only alphanumeric characters, periods, and hyphens are valid. Server Name cannot start or end with a period or hyphen. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">newPassword</td><td>The new server password. Leave blank to leave unchanged. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ab385abfaafa213fde6a0172348a9920e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::apiAccessKey</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00405">405</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a02be9f1f25b7aa1eea83ba0ebb0517b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::authToken</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00403">403</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3189bb7d53cb2d9ce6cbd42daa6284f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::cdnManagementDomain</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00399">399</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="aab3cc73ecd606ecb05d709c875a79497"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::cdnManagementPath</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00400">400</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a44dd4dc00c54938f8bc40125e6f56364"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::cdnManagementURL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00398">398</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a990d107391a983a91f9568d91ecf0ce7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a>*&gt; SLNet::Rackspace::eventCallbacks</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00369">369</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a58bff3ea37f0df4c2c333369a2291c84"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml#d6/d93/struct_s_l_net_1_1_rackspace_1_1_rackspace_operation">RackspaceOperation</a>&gt; SLNet::Rackspace::operations</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00388">388</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad3f4e778bbc955cefb117b2f9ac82018"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::rackspaceCloudUsername</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00404">404</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8d9fdc8190c46486eff0af1a0cde6ddc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::serverManagementDomain</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00393">393</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a18e03eef8f2d742e13f6dbba60bf0e1e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::serverManagementPath</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00394">394</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4161abbb7b0146a6daeb6f8596abd852"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::serverManagementURL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00392">392</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa542df3c410dd649a4b707e89834e5be"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::storageDomain</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00396">396</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a10b8f8b7dcb07a5ae34837345a0a20dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::storagePath</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00397">397</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="aeadbecd19b15d593af45fefba52e5fa0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::storageToken</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00402">402</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a13aca4ff519895ad9e3f11ec5afdffee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> SLNet::Rackspace::storageURL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00395">395</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9fe73d11bcad6ba5718ddb356affd179"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a>* SLNet::Rackspace::tcpInterface</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00383">383</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../d4/dc9/class_s_l_net_1_1_rackspace.xhtml">Rackspace</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

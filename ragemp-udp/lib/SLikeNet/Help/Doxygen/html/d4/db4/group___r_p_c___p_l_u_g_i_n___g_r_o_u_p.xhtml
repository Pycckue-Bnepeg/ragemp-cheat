<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: RPC</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle">
<div class="title">RPC</div>  </div>
<div class="ingroups"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml">Plugins</a></div></div><!--header-->
<div class="contents">

<p>Remote procedure calls, without external dependencies.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:de/d58/class_s_l_net_1_1_r_p_c4"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4">SLNet::RPC4</a></td></tr>
<tr class="memdesc:de/d58/class_s_l_net_1_1_r_p_c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">The <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a> plugin is just an association between a C function pointer and a string.  <a href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4">More...</a><br/></td></tr>
<tr class="separator:de/d58/class_s_l_net_1_1_r_p_c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback">SLNet::RPC4::LocalCallback</a></td></tr>
<tr class="separator:d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot">SLNet::RPC4::LocalSlot</a></td></tr>
<tr class="separator:d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">SLNet::RPC4::LocalSlotObject</a></td></tr>
<tr class="separator:d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gaf57aae36449dec5f2df3be031e658dc9"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#gaf57aae36449dec5f2df3be031e658dc9">SLNet::RPCErrorCodes</a> { <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ggaf57aae36449dec5f2df3be031e658dc9a1407810710bd678545cbe27c91263530">SLNet::RPC_ERROR_FUNCTION_NOT_REGISTERED</a>
 }</td></tr>
<tr class="memdesc:gaf57aae36449dec5f2df3be031e658dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error codes returned by a remote system as to why an RPC function call cannot execute.  <a href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#gaf57aae36449dec5f2df3be031e658dc9">More...</a><br/></td></tr>
<tr class="separator:gaf57aae36449dec5f2df3be031e658dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Remote procedure calls, without external dependencies. </p>
<p>This should not be used at the same time as RPC3. This is a less functional version of RPC3, and is here for users that do not want the Boost dependency of RPC3. </p>
<hr/><h2 class="groupheader">Class Documentation</h2>
<a name="de/d58/class_s_l_net_1_1_r_p_c4" id="de/d58/class_s_l_net_1_1_r_p_c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">class SLNet::RPC4</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>The <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a> plugin is just an association between a C function pointer and a string. </p>
<p>It is for users that want to use RPC, but do not want to use boost. You do not have the automatic serialization or other features of RPC3, and C++ member calls are not supported. </p>
<dl class="section note"><dt>Note</dt><dd>You cannot use <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a> at the same time as RPC3Plugin </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00079">79</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>
</div><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::RPC4:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d7/d63/class_s_l_net_1_1_r_p_c4__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a8cf7fc7da3d60685da38f0e9fba2b506"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a8cf7fc7da3d60685da38f0e9fba2b506">RPC4</a> ()</td></tr>
<tr class="separator:a8cf7fc7da3d60685da38f0e9fba2b506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf17a28094d0763464b43b3d8df7428c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#acf17a28094d0763464b43b3d8df7428c">~RPC4</a> ()</td></tr>
<tr class="separator:acf17a28094d0763464b43b3d8df7428c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d4f1373c622cf1a1d2c6b2bda30fd5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5">RegisterFunction</a> (const char *uniqueID, void(*functionPointer)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet))</td></tr>
<tr class="memdesc:a76d4f1373c622cf1a1d2c6b2bda30fd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a function pointer to be callable from a remote system.  <a href="#a76d4f1373c622cf1a1d2c6b2bda30fd5"></a><br/></td></tr>
<tr class="separator:a76d4f1373c622cf1a1d2c6b2bda30fd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08c1f1cde743bf2e8dbb2eea2031e9ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot</a> (const char *sharedIdentifier, void(*functionPointer)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet), int callPriority)</td></tr>
<tr class="separator:a08c1f1cde743bf2e8dbb2eea2031e9ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3b069b947e161794586f7b5c7addf00"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ad3b069b947e161794586f7b5c7addf00">RegisterBlockingFunction</a> (const char *uniqueID, void(*functionPointer)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *returnData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet))</td></tr>
<tr class="memdesc:ad3b069b947e161794586f7b5c7addf00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <em>RegisterFunction</em>, but is called with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a417b68c1979b3948a568c57d6cdf7d24" title="Same as call, but don&#39;t return until the remote system replies. Broadcasting parameter does not exist...">CallBlocking()</a> instead of <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a1614d680409aa30ea7c79112ad9a6877">Call()</a> and returns a value to the caller.  <a href="#ad3b069b947e161794586f7b5c7addf00"></a><br/></td></tr>
<tr class="separator:ad3b069b947e161794586f7b5c7addf00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508f3a63f49f9b76f55cae0dceb9fd21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a508f3a63f49f9b76f55cae0dceb9fd21">RegisterLocalCallback</a> (const char *uniqueID, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a> messageId)</td></tr>
<tr class="separator:a508f3a63f49f9b76f55cae0dceb9fd21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b44e827b381d406b9889b756019bc87"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a7b44e827b381d406b9889b756019bc87">UnregisterFunction</a> (const char *uniqueID)</td></tr>
<tr class="memdesc:a7b44e827b381d406b9889b756019bc87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister a function pointer previously registered with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a>  <a href="#a7b44e827b381d406b9889b756019bc87"></a><br/></td></tr>
<tr class="separator:a7b44e827b381d406b9889b756019bc87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb98185e7eb00039ccec299fcf48181"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#afdb98185e7eb00039ccec299fcf48181">UnregisterBlockingFunction</a> (const char *uniqueID)</td></tr>
<tr class="memdesc:afdb98185e7eb00039ccec299fcf48181"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as UnregisterFunction, except for a blocking function.  <a href="#afdb98185e7eb00039ccec299fcf48181"></a><br/></td></tr>
<tr class="separator:afdb98185e7eb00039ccec299fcf48181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c8b7eb5242eb1b2acf428b5bc338b09"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3c8b7eb5242eb1b2acf428b5bc338b09">UnregisterLocalCallback</a> (const char *uniqueID, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a> messageId)</td></tr>
<tr class="separator:a3c8b7eb5242eb1b2acf428b5bc338b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a766fec24de630fcc714f0d5b3431821c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a766fec24de630fcc714f0d5b3431821c">UnregisterSlot</a> (const char *sharedIdentifier)</td></tr>
<tr class="separator:a766fec24de630fcc714f0d5b3431821c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09dc786630a940baae7166f49823ee7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a09dc786630a940baae7166f49823ee7f">CallLoopback</a> (const char *uniqueID, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream)</td></tr>
<tr class="separator:a09dc786630a940baae7166f49823ee7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1614d680409aa30ea7c79112ad9a6877"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a1614d680409aa30ea7c79112ad9a6877">Call</a> (const char *uniqueID, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a1614d680409aa30ea7c79112ad9a6877"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a417b68c1979b3948a568c57d6cdf7d24"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a417b68c1979b3948a568c57d6cdf7d24">CallBlocking</a> (const char *uniqueID, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *returnData)</td></tr>
<tr class="memdesc:a417b68c1979b3948a568c57d6cdf7d24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as call, but don't return until the remote system replies. Broadcasting parameter does not exist, this can only call one remote system.  <a href="#a417b68c1979b3948a568c57d6cdf7d24"></a><br/></td></tr>
<tr class="separator:a417b68c1979b3948a568c57d6cdf7d24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60623a6701a366548a94000f5c656a26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a60623a6701a366548a94000f5c656a26">Signal</a> (const char *sharedIdentifier, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast, bool invokeLocal)</td></tr>
<tr class="separator:a60623a6701a366548a94000f5c656a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad80d046f69c427b68e7d087a4409a2b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ad80d046f69c427b68e7d087a4409a2b8">InterruptSignal</a> (void)</td></tr>
<tr class="memdesc:ad80d046f69c427b68e7d087a4409a2b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">If called while processing a slot, no further slots for the currently executing signal will be executed.  <a href="#ad80d046f69c427b68e7d087a4409a2b8"></a><br/></td></tr>
<tr class="separator:ad80d046f69c427b68e7d087a4409a2b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">Update</a> (void)</td></tr>
<tr class="memdesc:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#aa181a0ff58765c3d7878ac6dfd5e5a10"></a><br/></td></tr>
<tr class="separator:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#aea8a90c4078ecc0db77545e44531b1de"></a><br/></td></tr>
<tr class="separator:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95cb6fb37ada42840dafdbf6ffe078e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:a95cb6fb37ada42840dafdbf6ffe078e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225b5a285e1cf2b0f9b03f6133c409e8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:a225b5a285e1cf2b0f9b03f6133c409e8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Static Public Member Functions</h3></td></tr>
<tr class="memitem:aeaa88b77476e12830903a7962be1458a"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aeaa88b77476e12830903a7962be1458a">LocalCallbackComp</a> (const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a> &amp;key, <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback">LocalCallback</a> *const &amp;data)</td></tr>
<tr class="separator:aeaa88b77476e12830903a7962be1458a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe1b27195128d90fb4fbf3a4b96fabe8"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#abe1b27195128d90fb4fbf3a4b96fabe8">LocalSlotObjectComp</a> (const <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">LocalSlotObject</a> &amp;key, const <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">LocalSlotObject</a> &amp;data)</td></tr>
<tr class="separator:abe1b27195128d90fb4fbf3a4b96fabe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Public Attributes</h3></td></tr>
<tr class="memitem:a668b14b2e79ab303943992d4c52881aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a><br class="typebreak"/>
&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot">LocalSlot</a> <br class="typebreak"/>
*, 256, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a></td></tr>
<tr class="separator:a668b14b2e79ab303943992d4c52881aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Member Functions</h3></td></tr>
<tr class="memitem:aaa352dac20c481024c71b96ac8e98f39"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aaa352dac20c481024c71b96ac8e98f39">OnAttach</a> (void)</td></tr>
<tr class="memdesc:aaa352dac20c481024c71b96ac8e98f39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#aaa352dac20c481024c71b96ac8e98f39"></a><br/></td></tr>
<tr class="separator:aaa352dac20c481024c71b96ac8e98f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacbb8dd9ddba653c9df0f8ad8f154f78"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aacbb8dd9ddba653c9df0f8ad8f154f78">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:aacbb8dd9ddba653c9df0f8ad8f154f78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b121d95631c2b115d924301ef0f2db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a99b121d95631c2b115d924301ef0f2db">GetLocalSlotIndex</a> (const char *sharedIdentifier)</td></tr>
<tr class="separator:a99b121d95631c2b115d924301ef0f2db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ac33fb920cab36b21a2ceb58f91d4dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a6ac33fb920cab36b21a2ceb58f91d4dc">InvokeSignal</a> (<a class="el" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> functionIndex, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *serializedParameters, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a6ac33fb920cab36b21a2ceb58f91d4dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Attributes</h3></td></tr>
<tr class="memitem:a931e229b11729ab1d674aff512092d6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a><br class="typebreak"/>
&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, void(*)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> <br class="typebreak"/>
*, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> <br class="typebreak"/>
*), 64, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a></td></tr>
<tr class="separator:a931e229b11729ab1d674aff512092d6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a521111ffd556bddcf29ae207187063b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a><br class="typebreak"/>
&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, void(*)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> <br class="typebreak"/>
*, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> <br class="typebreak"/>
*), 64, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a521111ffd556bddcf29ae207187063b6">registeredBlockingFunctions</a></td></tr>
<tr class="separator:a521111ffd556bddcf29ae207187063b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d27be774422190974d5fe9bffe3f7a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a><br class="typebreak"/>
&lt; <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a>, <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback">LocalCallback</a> <br class="typebreak"/>
*, <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aeaa88b77476e12830903a7962be1458a">RPC4::LocalCallbackComp</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a></td></tr>
<tr class="separator:a3d27be774422190974d5fe9bffe3f7a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada24147085c7bdf3612df36348863c39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ada24147085c7bdf3612df36348863c39">blockingReturnValue</a></td></tr>
<tr class="separator:ada24147085c7bdf3612df36348863c39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42c6def740ccc00e4e43d3654ec91aa8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a42c6def740ccc00e4e43d3654ec91aa8">gotBlockingReturnValue</a></td></tr>
<tr class="separator:a42c6def740ccc00e4e43d3654ec91aa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13e1e510840bb04488c9d65c367872ac"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a13e1e510840bb04488c9d65c367872ac">nextSlotRegistrationCount</a></td></tr>
<tr class="memdesc:a13e1e510840bb04488c9d65c367872ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used so slots are called in the order they are registered.  <a href="#a13e1e510840bb04488c9d65c367872ac"></a><br/></td></tr>
<tr class="separator:a13e1e510840bb04488c9d65c367872ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11e089e6f6518965d73bef62ed54b70a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a11e089e6f6518965d73bef62ed54b70a">interruptSignal</a></td></tr>
<tr class="separator:a11e089e6f6518965d73bef62ed54b70a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a8cf7fc7da3d60685da38f0e9fba2b506"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::RPC4::RPC4 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acf17a28094d0763464b43b3d8df7428c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::RPC4::~RPC4 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Function Documentation</h4>
<a class="anchor" id="a1614d680409aa30ea7c79112ad9a6877"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::Call </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>bitStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a>&#160;</td>
          <td class="paramname"><em>reliability</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>orderingChannel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>systemIdentifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>broadcast</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="../../da/d58/deprecated.xhtml#_deprecated000008">Deprecated:</a></b></dt><dd>, use <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a60623a6701a366548a94000f5c656a26">Signal()</a> Send to the specified remote instance of <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uniqueID</td><td>Identifier originally passed to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a> on the remote system(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bitStream</td><td>bitStream encoded data to send to the function callback </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">priority</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reliability</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderingChannel</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">systemIdentifier</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">broadcast</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a417b68c1979b3948a568c57d6cdf7d24"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::CallBlocking </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>bitStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a>&#160;</td>
          <td class="paramname"><em>reliability</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>orderingChannel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>systemIdentifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>returnData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as call, but don't return until the remote system replies. Broadcasting parameter does not exist, this can only call one remote system. </p>
<dl class="section note"><dt>Note</dt><dd>This function does not return until the remote system responds, disconnects, or was never connected to begin with </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">Identifier</td><td>originally passed to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ad3b069b947e161794586f7b5c7addf00" title="Same as RegisterFunction, but is called with CallBlocking() instead of Call() and returns a value to ...">RegisterBlockingFunction()</a> on the remote system(s) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bitStream</td><td>bitStream encoded data to send to the function callback </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">priority</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reliability</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderingChannel</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">systemIdentifier</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">returnData</td><td>Written to by the function registered with RegisterBlockingFunction. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfully called. False on disconnect, function not registered, or not connected to begin with </dd></dl>

</div>
</div>
<a class="anchor" id="a09dc786630a940baae7166f49823ee7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::CallLoopback </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>bitStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="../../da/d58/deprecated.xhtml#_deprecated000007">Deprecated:</a></b></dt><dd>Use <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot()</a> and <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a60623a6701a366548a94000f5c656a26">Signal()</a> with your own <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> as the send target Send to the attached instance of <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a>. See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a767b0d7cceca6daebaea5b65560ffb77">RakPeerInterface::SendLoopback()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">Identifier</td><td>originally passed to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a> on the local system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bitStream</td><td>bitStream encoded data to send to the function callback </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a99b121d95631c2b115d924301ef0f2db"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> SLNet::RPC4::GetLocalSlotIndex </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sharedIdentifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad80d046f69c427b68e7d087a4409a2b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::InterruptSignal </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If called while processing a slot, no further slots for the currently executing signal will be executed. </p>

</div>
</div>
<a class="anchor" id="a6ac33fb920cab36b21a2ceb58f91d4dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::InvokeSignal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a>&#160;</td>
          <td class="paramname"><em>functionIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>serializedParameters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aeaa88b77476e12830903a7962be1458a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int SLNet::RPC4::LocalCallbackComp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback">LocalCallback</a> *const &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="abe1b27195128d90fb4fbf3a4b96fabe8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int SLNet::RPC4::LocalSlotObjectComp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">LocalSlotObject</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">LocalSlotObject</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aaa352dac20c481024c71b96ac8e98f39"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::RPC4::OnAttach </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the interface is attached. </p>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="aacbb8dd9ddba653c9df0f8ad8f154f78"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::RPC4::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>OnReceive is called for every packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td>the packet that is being returned to the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to allow the game and other plugins to get this message, false to absorb it </dd></dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="ad3b069b947e161794586f7b5c7addf00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::RegisterBlockingFunction </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *returnData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)&#160;</td>
          <td class="paramname"><em>functionPointer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as <em>RegisterFunction</em>, but is called with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a417b68c1979b3948a568c57d6cdf7d24" title="Same as call, but don&#39;t return until the remote system replies. Broadcasting parameter does not exist...">CallBlocking()</a> instead of <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a1614d680409aa30ea7c79112ad9a6877">Call()</a> and returns a value to the caller. </p>

</div>
</div>
<a class="anchor" id="a76d4f1373c622cf1a1d2c6b2bda30fd5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::RegisterFunction </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)&#160;</td>
          <td class="paramname"><em>functionPointer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register a function pointer to be callable from a remote system. </p>
<dl class="deprecated"><dt><b><a class="el" href="../../da/d58/deprecated.xhtml#_deprecated000005">Deprecated:</a></b></dt><dd>Use RegisterSlot </dd></dl>
<p>The hash of the function name will be stored as an association with the function pointer When a call is made to call this function from the <em><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a1614d680409aa30ea7c79112ad9a6877">Call()</a></em> or <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a09dc786630a940baae7166f49823ee7f">CallLoopback()</a> function, the function pointer will be invoked with the passed bitStream to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a1614d680409aa30ea7c79112ad9a6877">Call()</a> and the actual <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> that RakNet got. </p>
<dl class="section see"><dt>See Also</dt><dd>RegisterPacketCallback() </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uniqueID</td><td>Identifier to be associated with <em>functionPointer</em>. If this identifier is already in use, the call will return false. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">functionPointer</td><td>C function pointer to be called </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the hash of uniqueID is not in use, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a508f3a63f49f9b76f55cae0dceb9fd21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::RegisterLocalCallback </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a>&#160;</td>
          <td class="paramname"><em>messageId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="../../da/d58/deprecated.xhtml#_deprecated000006">Deprecated:</a></b></dt><dd>Use RegisterSlot and invoke on self only when the packet you want arrives When a RakNet <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> with the specified identifier is returned, execute <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a09dc786630a940baae7166f49823ee7f">CallLoopback()</a> on a function previously registered with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a> For example, you could call "OnClosedConnection" whenever you get ID_DISCONNECTION_NOTIFICATION or ID_CONNECTION_LOST </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uniqueID</td><td>Identifier passed to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageId</td><td>What RakNet packet ID to call on, for example ID_DISCONNECTION_NOTIFICATION or ID_CONNECTION_LOST </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a08c1f1cde743bf2e8dbb2eea2031e9ab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::RegisterSlot </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sharedIdentifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)&#160;</td>
          <td class="paramname"><em>functionPointer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>callPriority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register a slot, which is a function pointer to one or more implementations that supports this function signature When a signal occurs, all slots with the same identifier are called. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sharedIdentifier</td><td>A string to identify the slot. Recommended to be the same as the name of the function. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">functionPtr</td><td>Pointer to the function. For C, just pass the name of the function. For C++, use ARPC_REGISTER_CPP_FUNCTION </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">callPriority</td><td>Slots are called by order of the highest callPriority first. For slots with the same priority, they are called in the order they are registered </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a60623a6701a366548a94000f5c656a26"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RPC4::Signal </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sharedIdentifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>bitStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a>&#160;</td>
          <td class="paramname"><em>reliability</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>orderingChannel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>systemIdentifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>broadcast</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>invokeLocal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calls zero or more functions identified by sharedIdentifier registered with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sharedIdentifier</td><td>parameter of the same name passed to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot()</a> on the remote system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bitStream</td><td>bitStream encoded data to send to the function callback </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">priority</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reliability</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderingChannel</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">systemIdentifier</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">broadcast</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">invokeLocal</td><td>If true, also sends to self. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afdb98185e7eb00039ccec299fcf48181"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::UnregisterBlockingFunction </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as UnregisterFunction, except for a blocking function. </p>

</div>
</div>
<a class="anchor" id="a7b44e827b381d406b9889b756019bc87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::UnregisterFunction </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unregister a function pointer previously registered with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">Identifier</td><td>originally passed to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction()</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the hash of uniqueID was in use, and hence removed. false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a3c8b7eb5242eb1b2acf428b5bc338b09"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::UnregisterLocalCallback </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a>&#160;</td>
          <td class="paramname"><em>messageId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove the association created with RegisterPacketCallback() </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uniqueID</td><td>Identifier passed as uniqueID to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a508f3a63f49f9b76f55cae0dceb9fd21">RegisterLocalCallback()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageId</td><td>Identifier passed as messageId to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a508f3a63f49f9b76f55cae0dceb9fd21">RegisterLocalCallback()</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the combination of uniqueID and messageId was in use, and hence removed </dd></dl>

</div>
</div>
<a class="anchor" id="a766fec24de630fcc714f0d5b3431821c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::UnregisterSlot </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sharedIdentifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove the association created with <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sharedIdentifier</td><td>Identifier passed as sharedIdentifier to <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot()</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="ada24147085c7bdf3612df36348863c39"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> SLNet::RPC4::blockingReturnValue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00224">224</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a42c6def740ccc00e4e43d3654ec91aa8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::gotBlockingReturnValue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00225">225</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a11e089e6f6518965d73bef62ed54b70a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RPC4::interruptSignal</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00232">232</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3d27be774422190974d5fe9bffe3f7a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a>,<a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback">LocalCallback</a>*,<a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aeaa88b77476e12830903a7962be1458a">RPC4::LocalCallbackComp</a>&gt; SLNet::RPC4::localCallbacks</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00222">222</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a668b14b2e79ab303943992d4c52881aa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a>&lt;<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot">LocalSlot</a>*,256, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a>&gt; SLNet::RPC4::localSlots</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00210">210</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a13e1e510840bb04488c9d65c367872ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int SLNet::RPC4::nextSlotRegistrationCount</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Used so slots are called in the order they are registered. </p>

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00230">230</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a521111ffd556bddcf29ae207187063b6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a>&lt;<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, void ( * ) (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> * ),64, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a>&gt; SLNet::RPC4::registeredBlockingFunctions</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00221">221</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a931e229b11729ab1d674aff512092d6e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a>&lt;<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, void ( * ) (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> * ),64, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a>&gt; SLNet::RPC4::registeredNonblockingFunctions</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00220">220</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>

</div>
</div>
<a name="d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback" id="d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::RPC4::LocalCallback</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00181">181</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aff897330f1bba23b9250b2d00a41f79e"></a>OrderedList&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a>, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &gt;</td>
<td class="fieldname">
functions</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ab3f0bb19b886c587d873d8e4eecbeb4e"></a><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a></td>
<td class="fieldname">
messageId</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<a name="d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot" id="d3/d5e/struct_s_l_net_1_1_r_p_c4_1_1_local_slot"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::RPC4::LocalSlot</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00206">206</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a75d9d2c343ebe27effb3cfd12664cbbd"></a>OrderedList&lt; <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">LocalSlotObject</a>, <br class="typebreak"/>
<a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object">LocalSlotObject</a>, <br class="typebreak"/>
<a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#abe1b27195128d90fb4fbf3a4b96fabe8">LocalSlotObjectComp</a> &gt;</td>
<td class="fieldname">
slotObjects</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<a name="d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object" id="d1/d96/struct_s_l_net_1_1_r_p_c4_1_1_local_slot_object"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::RPC4::LocalSlotObject</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00190">190</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>
</div><table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a34d0ed981e4c752ed90459f08dade1c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a34d0ed981e4c752ed90459f08dade1c3">LocalSlotObject</a> ()</td></tr>
<tr class="separator:a34d0ed981e4c752ed90459f08dade1c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af27181d8f354d4406ac97634243d4df0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#af27181d8f354d4406ac97634243d4df0">LocalSlotObject</a> (unsigned int _registrationCount, int _callPriority, void(*_functionPointer)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet))</td></tr>
<tr class="separator:af27181d8f354d4406ac97634243d4df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a7ee5ff9e405df8db81a7588d535ff0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a4a7ee5ff9e405df8db81a7588d535ff0">~LocalSlotObject</a> ()</td></tr>
<tr class="separator:a4a7ee5ff9e405df8db81a7588d535ff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Public Attributes</h3></td></tr>
<tr class="memitem:aea190ff9fe91060e1c3b0fb4807bb28e"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aea190ff9fe91060e1c3b0fb4807bb28e">registrationCount</a></td></tr>
<tr class="separator:aea190ff9fe91060e1c3b0fb4807bb28e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af39cc842a62602104020c493deacf49f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#af39cc842a62602104020c493deacf49f">callPriority</a></td></tr>
<tr class="separator:af39cc842a62602104020c493deacf49f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f7216b704882f40e886cf295b8f1211"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a6f7216b704882f40e886cf295b8f1211">functionPointer</a> )(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a6f7216b704882f40e886cf295b8f1211"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a34d0ed981e4c752ed90459f08dade1c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::RPC4::LocalSlotObject::LocalSlotObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00192">192</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="af27181d8f354d4406ac97634243d4df0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::RPC4::LocalSlotObject::LocalSlotObject </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>_registrationCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>_callPriority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)&#160;</td>
          <td class="paramname"><em>_functionPointer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00193">193</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4a7ee5ff9e405df8db81a7588d535ff0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::RPC4::LocalSlotObject::~LocalSlotObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00195">195</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="af39cc842a62602104020c493deacf49f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::RPC4::LocalSlotObject::callPriority</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00199">199</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6f7216b704882f40e886cf295b8f1211"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void( * SLNet::RPC4::LocalSlotObject::functionPointer)(<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00200">200</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
<a class="anchor" id="aea190ff9fe91060e1c3b0fb4807bb28e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int SLNet::RPC4::LocalSlotObject::registrationCount</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00198">198</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="gaf57aae36449dec5f2df3be031e658dc9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#gaf57aae36449dec5f2df3be031e658dc9">SLNet::RPCErrorCodes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error codes returned by a remote system as to why an RPC function call cannot execute. </p>
<p>Error code follows packet ID ID_RPC_REMOTE_ERROR, that is packet-&gt;data[1]<br/>
 Name of the function will be appended starting at packet-&gt;data[2] </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggaf57aae36449dec5f2df3be031e658dc9a1407810710bd678545cbe27c91263530"></a>RPC_ERROR_FUNCTION_NOT_REGISTERED</em>&nbsp;</td><td>
<p>Named function was not registered with RegisterFunction(). Check your spelling. </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml#l00051">51</a> of file <a class="el" href="../../d0/d30/_r_p_c4_plugin_8h_source.xhtml">RPC4Plugin.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

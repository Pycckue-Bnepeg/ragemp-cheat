<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/EmailSender.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d4/dad/_email_sender_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">EmailSender.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d4/dad/_email_sender_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/ddb/_native_feature_includes_8h.xhtml">slikenet/NativeFeatureIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_EmailSender==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1 &amp;&amp; _RAKNET_SUPPORT_FileOperations==1</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">// Useful sites</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">// http://www.faqs.org\rfcs\rfc2821.html</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// http://www2.rad.com\networks/1995/mime/examples.htm</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d8/de4/_email_sender_8h.xhtml" title="Rudimentary class to send email from code. Don&#39;t expect anything fancy.">slikenet/EmailSender.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/dd1/_t_c_p_interface_8h.xhtml" title="A simple TCP based server allowing sends and receives. Can be connected by any TCP client...">slikenet/TCPInterface.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d76/_get_time_8h.xhtml" title="Returns the value from QueryPerformanceCounter. This is the function RakNet uses to represent time...">slikenet/GetTime.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/d10/_rand_8h.xhtml" title="[Internal] Random number generator">slikenet/Rand.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/dc4/_file_list_8h.xhtml">slikenet/FileList.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/dc3/_bit_stream_8h.xhtml" title="This class allows you to write and read native types as a string of bits.">slikenet/BitStream.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/d4c/_base64_encoder_8h.xhtml">slikenet/Base64Encoder.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/db2/linux__adapter_8h.xhtml">slikenet/linux_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/dff/osx__adapter_8h.xhtml">slikenet/osx_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d81/sleep_8h.xhtml">slikenet/sleep.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<a class="code" href="../../db/dbd/_export_8h.xhtml#aa00165c970bdb25e1c757b432509533b">STATIC_FACTORY_DEFINITIONS</a>(<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml" title="Rudimentary class to send email from code.">EmailSender</a>,<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml" title="Rudimentary class to send email from code.">EmailSender</a>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#a13221d180b5a94feda1355c6331f8fce" title="Sends an email.">EmailSender::Send</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *hostAddress, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> hostPort, <span class="keyword">const</span> <span class="keywordtype">char</span> *sender, <span class="keyword">const</span> <span class="keywordtype">char</span> *recipient, <span class="keyword">const</span> <span class="keywordtype">char</span> *senderName, <span class="keyword">const</span> <span class="keywordtype">char</span> *recipientName, <span class="keyword">const</span> <span class="keywordtype">char</span> *subject, <span class="keyword">const</span> <span class="keywordtype">char</span> *body, <a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> *attachedFiles, <span class="keywordtype">bool</span> doPrintf, <span class="keyword">const</span> <span class="keywordtype">char</span> *password)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *packet;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">char</span> query[1024];</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> tcpInterface;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> emailServer;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">if</span> (tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aacace1fc8ab33669952e9dc97596c8a3">Start</a>(0, 0)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Unknown error starting TCP&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    emailServer=tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aef31dfbd383b7864e0e9deb074291cb7" title="Connect to the specified host on the specified port.">Connect</a>(hostAddress, hostPort,<span class="keyword">true</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (emailServer==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Failed to connect to host&quot;</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#if  OPEN_SSL_CLIENT_SUPPORT==1</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor"></span>    tcpInterface.StartSSLClient(emailServer);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutTime = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>()+3000;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    packet=0;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">while</span> (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>() &lt; timeoutTime)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        packet = tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">Receive</a>();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">if</span> (packet)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">if</span> (doPrintf)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%s&quot;</span>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27" title="Deallocates a packet returned by Receive.">DeallocatePacket</a>(packet);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(250);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">if</span> (packet==0)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Timeout while waiting for initial data from server.&quot;</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(<span class="stringliteral">&quot;EHLO\r\n&quot;</span>, 6, emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *response;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">bool</span> authenticate=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">for</span>(;;)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span> (response!=0 &amp;&amp; strcmp(response, <span class="stringliteral">&quot;AUTHENTICATE&quot;</span>)==0)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            authenticate=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment">// Something other than continue?</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> (response!=0 &amp;&amp; strcmp(response, <span class="stringliteral">&quot;CONTINUE&quot;</span>)!=0)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment">// Success?</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">if</span> (response==0)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">if</span> (authenticate)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;EHLO %s\r\n&quot;</span>, sender);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span> (response!=0)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">if</span> (password==0)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;Password needed&quot;</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordtype">char</span> *outputData = SLNet::OP_NEW_ARRAY&lt;char &gt;((<span class="keyword">const</span> int) (strlen(sender)+strlen(password)+2)*3, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordtype">char</span> zero=0;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(&amp;zero,1);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(sender,(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(sender));</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment">//bs.Write(&quot;jms1@jms1.net&quot;,(const unsigned int)strlen(&quot;jms1@jms1.net&quot;));</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(&amp;zero,1);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(password,(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(password));</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(&amp;zero,1);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="comment">//bs.Write(&quot;not.my.real.password&quot;,(const unsigned int)strlen(&quot;not.my.real.password&quot;));</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a8139edc5f6d1b0e1716c4ce4b830ef53" title="Returns how many bytes were written.">Base64Encoding</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*)bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>(), outputData);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;AUTH PLAIN %s&quot;</span>, outputData);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span> (response!=0)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">if</span> (sender)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;MAIL From: &lt;%s&gt;\r\n&quot;</span>, sender);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;MAIL From: &lt;&gt;\r\n&quot;</span>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">if</span> (response!=0)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (recipient)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;RCPT TO: &lt;%s&gt;\r\n&quot;</span>, recipient);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;RCPT TO: &lt;&gt;\r\n&quot;</span>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span> (response!=0)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(<span class="stringliteral">&quot;DATA\r\n&quot;</span>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(<span class="stringliteral">&quot;DATA\r\n&quot;</span>), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">// Wait for 354...</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span> (response!=0)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">if</span> (subject)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;Subject: %s\r\n&quot;</span>, subject);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">if</span> (senderName)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;From: %s\r\n&quot;</span>, senderName);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">if</span> (recipientName)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;To: %s\r\n&quot;</span>, recipientName);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> boundarySize=60;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">char</span> boundary[boundarySize+1];</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">int</span> i,j;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">if</span> (attachedFiles &amp;&amp; attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>())</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#a7ff0521c85b5e8bcea2fa798c0183816">rakNetRandom</a>.<a class="code" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml#a2d1a9a274688d7fd1554607d46cc5296">SeedMT</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>());</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// Random multipart message boundary</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; boundarySize; i++)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            boundary[i]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a60674731c56f7ab8cfab678ee5511998">Base64Map</a>()[<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#a7ff0521c85b5e8bcea2fa798c0183816">rakNetRandom</a>.<a class="code" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml#ac2661b0600af7f2a6f1d904c553c31bb">RandomMT</a>()%64];</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        boundary[boundarySize]=0;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    sprintf_s(query, <span class="stringliteral">&quot;MIME-version: 1.0\r\n&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">if</span> (attachedFiles &amp;&amp; attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>())</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;Content-type: multipart/mixed; BOUNDARY=\&quot;%s\&quot;\r\n\r\n&quot;</span>, boundary);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;This is a multi-part message in MIME format.\r\n\r\n--%s\r\n&quot;</span>, boundary);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    sprintf_s(query, <span class="stringliteral">&quot;Content-Type: text/plain; charset=\&quot;US-ASCII\&quot;\r\n\r\n&quot;</span>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment">// Write the body of the email, doing some lame shitty shit where I have to make periods at the start of a newline have a second period.</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">char</span> *newBody;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordtype">int</span> bodyLength;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    bodyLength=(int)strlen(body);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    newBody = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( bodyLength*3, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">if</span> (bodyLength&gt;=0)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        newBody[0]=body[0];</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">for</span> (i=1, j=1; i &lt; bodyLength; i++)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="comment">// Transform \n . \r \n into \n . . \r \n</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">if</span> (i &lt; bodyLength-2 &amp;&amp;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            body[i-1]==<span class="charliteral">&#39;\n&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            body[i+0]==<span class="charliteral">&#39;.&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            body[i+1]==<span class="charliteral">&#39;\r&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            body[i+2]==<span class="charliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            i+=2;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="comment">// Transform \n . . \r \n into \n . . . \r \n</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">// Having to process .. is a bug in the mail server - the spec says ONLY \r\n.\r\n should be transformed</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (i &lt;= bodyLength-3 &amp;&amp;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            body[i-1]==<span class="charliteral">&#39;\n&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            body[i+0]==<span class="charliteral">&#39;.&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            body[i+1]==<span class="charliteral">&#39;.&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            body[i+2]==<span class="charliteral">&#39;\r&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            body[i+3]==<span class="charliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            i+=3;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="comment">// Transform \n . \n into \n . . \r \n (this is a bug in the mail server - the spec says do not count \n alone but it does)</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (i &lt; bodyLength-1 &amp;&amp;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            body[i-1]==<span class="charliteral">&#39;\n&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            body[i+0]==<span class="charliteral">&#39;.&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            body[i+1]==<span class="charliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            i+=1;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="comment">// Transform \n . . \n into \n . . . \r \n (this is a bug in the mail server - the spec says do not count \n alone but it does)</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="comment">// In fact having to process .. is a bug too - because the spec says ONLY \r\n.\r\n should be transformed</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (i &lt;= bodyLength-2 &amp;&amp;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            body[i-1]==<span class="charliteral">&#39;\n&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            body[i+0]==<span class="charliteral">&#39;.&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            body[i+1]==<span class="charliteral">&#39;.&#39;</span> &amp;&amp;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            body[i+2]==<span class="charliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            newBody[j++]=<span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            newBody[j++]=<span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            i+=2;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            newBody[j++]=body[i];</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    newBody[j++]=<span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    newBody[j++]=<span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(newBody, j, emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(newBody, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordtype">int</span> outputOffset;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="comment">// What a pain in the rear.  I have to map the binary to printable characters using 6 bits per character.</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">if</span> (attachedFiles &amp;&amp; attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>())</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; (int) attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <span class="comment">// Write boundary</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            sprintf_s(query, <span class="stringliteral">&quot;\r\n--%s\r\n&quot;</span>, boundary);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            sprintf_s(query, <span class="stringliteral">&quot;Content-Type: APPLICATION/Octet-Stream; SizeOnDisk=%i; name=\&quot;%s\&quot;\r\nContent-Transfer-Encoding: BASE64\r\nContent-Description: %s\r\n\r\n&quot;</span>, attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>[i].dataLengthBytes, attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>[i].filename.C_String(), attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>[i].filename.C_String());</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            newBody = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (<span class="keywordtype">size_t</span>) (attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>[i].dataLengthBytes*3)/2, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            outputOffset=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a8139edc5f6d1b0e1716c4ce4b830ef53" title="Returns how many bytes were written.">Base64Encoding</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>[i].data, (<span class="keywordtype">int</span>) attachedFiles-&gt;<a class="code" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml#aba78be96dad9e9014e2392cae3d731eb">fileList</a>[i].dataLengthBytes, newBody);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="comment">// Send the base64 mapped file.</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(newBody, outputOffset, emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(newBody, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">// Write last boundary</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        sprintf_s(query, <span class="stringliteral">&quot;\r\n--%s--\r\n&quot;</span>, boundary);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    sprintf_s(query, <span class="stringliteral">&quot;\r\n.\r\n&quot;</span>);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(query, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(query), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    response=<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">GetResponse</a>(&amp;tcpInterface, emailServer, doPrintf);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">if</span> (response!=0)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(<span class="stringliteral">&quot;QUIT\r\n&quot;</span>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)strlen(<span class="stringliteral">&quot;QUIT\r\n&quot;</span>), emailServer,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(30);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span> (doPrintf)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        packet = tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">Receive</a>();</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keywordflow">while</span> (packet)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%s&quot;</span>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27" title="Deallocates a packet returned by Receive.">DeallocatePacket</a>(packet);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            packet = tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">Receive</a>();</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    tcpInterface.<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab8e38a1a18cac128a2bb22ed5374cb04" title="Stops the TCP server.">Stop</a>();</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">return</span> 0; <span class="comment">// Success</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../dc/dfd/class_s_l_net_1_1_email_sender.xhtml#aaaedccdf998f78eba9efa66bcbb9b6c3">EmailSender::GetResponse</a>(<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *tcpInterface, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;emailServer, <span class="keywordtype">bool</span> doPrintf)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;{</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *packet;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeout;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    timeout= <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>()+5000;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">for</span>(;;)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="keywordflow">if</span> (tcpInterface-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0eb90925c3a0ae42d00019214446fb97" title="Queued events of lost connections.">HasLostConnection</a>()==emailServer)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;Connection to server lost.&quot;</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        packet = tcpInterface-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">Receive</a>();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span> (packet)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            <span class="keywordflow">if</span> (doPrintf)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            {</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%s&quot;</span>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="preprocessor">#if OPEN_SSL_CLIENT_SUPPORT==1</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;220&quot;</span>))</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                tcpInterface-&gt;StartSSLClient(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;AUTHENTICATE&quot;</span>; <span class="comment">// OK</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">//          if (strstr((const char*)packet-&gt;data, &quot;250-AUTH LOGIN PLAIN&quot;))</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">//          {</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">//              tcpInterface-&gt;StartSSLClient(packet-&gt;systemAddress);</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">//              return &quot;AUTHENTICATE&quot;; // OK</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">//          }</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;235&quot;</span>))</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                <span class="keywordflow">return</span> 0; <span class="comment">// Authentication accepted</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;354&quot;</span>))</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="keywordflow">return</span> 0; <span class="comment">// Go ahead</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="preprocessor">#if OPEN_SSL_CLIENT_SUPPORT==1</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;250-STARTTLS&quot;</span>))</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            {</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                tcpInterface-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(<span class="stringliteral">&quot;STARTTLS\r\n&quot;</span>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) strlen(<span class="stringliteral">&quot;STARTTLS\r\n&quot;</span>), packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;CONTINUE&quot;</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;250&quot;</span>))</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                <span class="keywordflow">return</span> 0; <span class="comment">// OK</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;550&quot;</span>))</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;Failed on error code 550&quot;</span>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keywordflow">if</span> (strstr((<span class="keyword">const</span> <span class="keywordtype">char</span>*)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <span class="stringliteral">&quot;553&quot;</span>))</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;Failed on error code 553&quot;</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        }</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>() &gt; timeout)</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;Timed out&quot;</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(100);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="preprocessor">#endif // _RAKNET_SUPPORT_*</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d4/dad/_email_sender_8cpp.xhtml">EmailSender.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

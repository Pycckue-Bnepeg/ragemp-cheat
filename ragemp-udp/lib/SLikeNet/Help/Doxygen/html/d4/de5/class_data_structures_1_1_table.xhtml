<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: DataStructures::Table Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d4/de5/class_data_structures_1_1_table.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d9/d22/class_data_structures_1_1_table-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataStructures::Table Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Holds a set of columns, a set of rows, and rows times columns cells.  
 <a href="../../d4/de5/class_data_structures_1_1_table.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">slikenet/DS_Table.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml">Cell</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds the actual data in the table.  <a href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d84/struct_data_structures_1_1_table_1_1_column_descriptor.xhtml">ColumnDescriptor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">FilterQuery</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores the list of cells for this row, and a special flag used for internal sorting.  <a href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:dc/dea/struct_data_structures_1_1_table_1_1_sort_query"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#dc/dea/struct_data_structures_1_1_table_1_1_sort_query">SortQuery</a></td></tr>
<tr class="separator:dc/dea/struct_data_structures_1_1_table_1_1_sort_query"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af24fe2724b507f329c7754ea6985abed"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">ColumnType</a> { <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda3c22480145b2a7c8818f3c3baf7c8692">NUMERIC</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abedaf2b7a2432e2c786ff02052286df310af">STRING</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda2550a73a55b0ab443d0bd782927f7acd">BINARY</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda5f31a94399b1ed3b469c71b3c55cace1">POINTER</a>
 }</td></tr>
<tr class="separator:af24fe2724b507f329c7754ea6985abed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a115f6653bf7b0b7fddfcbc769ef74"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74">FilterQueryType</a> { <br/>
&#160;&#160;<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74a636c5c889fb0a8e264b45554d339f143">QF_EQUAL</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74a174ccaad3f061def3348ad7d0a8e22f6">QF_NOT_EQUAL</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74a448b10241a1158d283f72e7245e251b5">QF_GREATER_THAN</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74a06caf624eb7a17b6b6a8b036d9d36d7c">QF_GREATER_THAN_EQ</a>, 
<br/>
&#160;&#160;<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74aa65b69a190af229184b358fd684c1007">QF_LESS_THAN</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74a562f8468079cabad214dcf56a3a46b59">QF_LESS_THAN_EQ</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74ae31852182687b0a57072b78d0e75d65f">QF_IS_EMPTY</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74a0630f71e2ede7c11002f40afc262cd0a">QF_NOT_EMPTY</a>
<br/>
 }</td></tr>
<tr class="separator:a64a115f6653bf7b0b7fddfcbc769ef74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a736b2ab44bd8d4159bad88d4ae04665d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a736b2ab44bd8d4159bad88d4ae04665d">SortQueryType</a> { <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a736b2ab44bd8d4159bad88d4ae04665da6b0a1454dd5cd763982d571adc76ce81">QS_INCREASING_ORDER</a>, 
<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a736b2ab44bd8d4159bad88d4ae04665daf2109e473e388613032a18e30c8ef2e7">QS_DECREASING_ORDER</a>
 }</td></tr>
<tr class="memdesc:a736b2ab44bd8d4159bad88d4ae04665d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increasing or decreasing sort order.  <a href="../../d4/de5/class_data_structures_1_1_table.xhtml#a736b2ab44bd8d4159bad88d4ae04665d">More...</a><br/></td></tr>
<tr class="separator:a736b2ab44bd8d4159bad88d4ae04665d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a049f2e06391781ae255c6698869c4ad1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a049f2e06391781ae255c6698869c4ad1">Table</a> ()</td></tr>
<tr class="separator:a049f2e06391781ae255c6698869c4ad1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a559f2e7beb37b511ee9f88873164f8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a9a559f2e7beb37b511ee9f88873164f8">~Table</a> ()</td></tr>
<tr class="separator:a9a559f2e7beb37b511ee9f88873164f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c2015a75baeec5db76f56cd60f16059"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a3c2015a75baeec5db76f56cd60f16059">AddColumn</a> (const char columnName[<a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>], <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">ColumnType</a> columnType)</td></tr>
<tr class="memdesc:a3c2015a75baeec5db76f56cd60f16059"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a column to the table.  <a href="#a3c2015a75baeec5db76f56cd60f16059"></a><br/></td></tr>
<tr class="separator:a3c2015a75baeec5db76f56cd60f16059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ee961572de1236cc64d502abcaca369"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a4ee961572de1236cc64d502abcaca369">RemoveColumn</a> (unsigned columnIndex)</td></tr>
<tr class="memdesc:a4ee961572de1236cc64d502abcaca369"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a column by index.  <a href="#a4ee961572de1236cc64d502abcaca369"></a><br/></td></tr>
<tr class="separator:a4ee961572de1236cc64d502abcaca369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cbc38a3f3df19ff1131165b1f929e1"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad3cbc38a3f3df19ff1131165b1f929e1">ColumnIndex</a> (char columnName[<a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>]) const </td></tr>
<tr class="memdesc:ad3cbc38a3f3df19ff1131165b1f929e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the index of a column by name.  <a href="#ad3cbc38a3f3df19ff1131165b1f929e1"></a><br/></td></tr>
<tr class="separator:ad3cbc38a3f3df19ff1131165b1f929e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab064ed28cc2fc43bfe1c293d5ae3c485"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ab064ed28cc2fc43bfe1c293d5ae3c485">ColumnIndex</a> (const char *columnName) const </td></tr>
<tr class="separator:ab064ed28cc2fc43bfe1c293d5ae3c485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29f31372b2c0ef0c70eb24905bde7a75"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a29f31372b2c0ef0c70eb24905bde7a75">ColumnName</a> (unsigned index) const </td></tr>
<tr class="memdesc:a29f31372b2c0ef0c70eb24905bde7a75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the string name of the column at a certain index.  <a href="#a29f31372b2c0ef0c70eb24905bde7a75"></a><br/></td></tr>
<tr class="separator:a29f31372b2c0ef0c70eb24905bde7a75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab59438e4627af7a1de543357cc8bdf87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">ColumnType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ab59438e4627af7a1de543357cc8bdf87">GetColumnType</a> (unsigned index) const </td></tr>
<tr class="memdesc:ab59438e4627af7a1de543357cc8bdf87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of a column, referenced by index.  <a href="#ab59438e4627af7a1de543357cc8bdf87"></a><br/></td></tr>
<tr class="separator:ab59438e4627af7a1de543357cc8bdf87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2b9b78e1442c3141966159fcafdbec9"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ae2b9b78e1442c3141966159fcafdbec9">GetColumnCount</a> (void) const </td></tr>
<tr class="separator:ae2b9b78e1442c3141966159fcafdbec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c9d8fa5c48b53d853106eb4dc0d9c77"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5c9d8fa5c48b53d853106eb4dc0d9c77">GetRowCount</a> (void) const </td></tr>
<tr class="separator:a5c9d8fa5c48b53d853106eb4dc0d9c77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2692e5348c98bcf1328ed40f72fcae60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a2692e5348c98bcf1328ed40f72fcae60">AddRow</a> (unsigned rowId)</td></tr>
<tr class="memdesc:a2692e5348c98bcf1328ed40f72fcae60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a row to the table.  <a href="#a2692e5348c98bcf1328ed40f72fcae60"></a><br/></td></tr>
<tr class="separator:a2692e5348c98bcf1328ed40f72fcae60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add6a2128c677804b3c632bcee6657cc0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#add6a2128c677804b3c632bcee6657cc0">AddRow</a> (unsigned rowId, <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml">Cell</a> &gt; &amp;initialCellValues)</td></tr>
<tr class="separator:add6a2128c677804b3c632bcee6657cc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e94a83faddf086738c0a1f5cc8a4f0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5e94a83faddf086738c0a1f5cc8a4f0e">AddRow</a> (unsigned rowId, <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml">Cell</a> * &gt; &amp;initialCellValues, bool copyCells=false)</td></tr>
<tr class="separator:a5e94a83faddf086738c0a1f5cc8a4f0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe51f45747401157b45ec7d5a74f1a41"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#afe51f45747401157b45ec7d5a74f1a41">RemoveRow</a> (unsigned rowId)</td></tr>
<tr class="memdesc:afe51f45747401157b45ec7d5a74f1a41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a row specified by rowId.  <a href="#afe51f45747401157b45ec7d5a74f1a41"></a><br/></td></tr>
<tr class="separator:afe51f45747401157b45ec7d5a74f1a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a507e418b8f2b208c5178c4860b26d736"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a507e418b8f2b208c5178c4860b26d736">RemoveRows</a> (<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> *tableContainingRowIDs)</td></tr>
<tr class="memdesc:a507e418b8f2b208c5178c4860b26d736"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all the rows with IDs that the specified table also has.  <a href="#a507e418b8f2b208c5178c4860b26d736"></a><br/></td></tr>
<tr class="separator:a507e418b8f2b208c5178c4860b26d736"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29a82fdfc3cbbe1807d942b2a5e8f59a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a29a82fdfc3cbbe1807d942b2a5e8f59a">UpdateCell</a> (unsigned rowId, unsigned columnIndex, int value)</td></tr>
<tr class="memdesc:a29a82fdfc3cbbe1807d942b2a5e8f59a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates a particular cell in the table.  <a href="#a29a82fdfc3cbbe1807d942b2a5e8f59a"></a><br/></td></tr>
<tr class="separator:a29a82fdfc3cbbe1807d942b2a5e8f59a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa06af34adffba892a5f97188854da995"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#aa06af34adffba892a5f97188854da995">UpdateCell</a> (unsigned rowId, unsigned columnIndex, char *str)</td></tr>
<tr class="separator:aa06af34adffba892a5f97188854da995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95dfa60835984102bc4bf63727ee2447"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a95dfa60835984102bc4bf63727ee2447">UpdateCell</a> (unsigned rowId, unsigned columnIndex, int byteLength, char *data)</td></tr>
<tr class="separator:a95dfa60835984102bc4bf63727ee2447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a835c4468deece06016b8717ff3da9058"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a835c4468deece06016b8717ff3da9058">UpdateCellByIndex</a> (unsigned rowIndex, unsigned columnIndex, int value)</td></tr>
<tr class="separator:a835c4468deece06016b8717ff3da9058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ee0119ce0029639f21fc49b6585ef13"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a6ee0119ce0029639f21fc49b6585ef13">UpdateCellByIndex</a> (unsigned rowIndex, unsigned columnIndex, char *str)</td></tr>
<tr class="separator:a6ee0119ce0029639f21fc49b6585ef13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad47a84657b2ca3da9389789590485592"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad47a84657b2ca3da9389789590485592">UpdateCellByIndex</a> (unsigned rowIndex, unsigned columnIndex, int byteLength, char *data)</td></tr>
<tr class="separator:ad47a84657b2ca3da9389789590485592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9161220f934e20abf9fbd00b149540b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a9161220f934e20abf9fbd00b149540b8">GetCellValueByIndex</a> (unsigned rowIndex, unsigned columnIndex, int *output)</td></tr>
<tr class="memdesc:a9161220f934e20abf9fbd00b149540b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Note this is much less efficient to call than GetRow, then working with the cells directly. Numeric, string, binary.  <a href="#a9161220f934e20abf9fbd00b149540b8"></a><br/></td></tr>
<tr class="separator:a9161220f934e20abf9fbd00b149540b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc8a0582ca67cd833f46c76e145069b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#afc8a0582ca67cd833f46c76e145069b5">GetCellValueByIndex</a> (unsigned rowIndex, unsigned columnIndex, char *output)</td></tr>
<tr class="separator:afc8a0582ca67cd833f46c76e145069b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac55ae24585dbf6bda8bbc0217c3e0e45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ac55ae24585dbf6bda8bbc0217c3e0e45">GetCellValueByIndex</a> (unsigned rowIndex, unsigned columnIndex, char *output, size_t outputLength)</td></tr>
<tr class="separator:ac55ae24585dbf6bda8bbc0217c3e0e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40ec8206e20b0ca897baacb74bb48a1c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a40ec8206e20b0ca897baacb74bb48a1c">GetCellValueByIndex</a> (unsigned rowIndex, unsigned columnIndex, char *output, int *outputLength)</td></tr>
<tr class="separator:a40ec8206e20b0ca897baacb74bb48a1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a210e9c793ad3791abb7ac2f85bbb999a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a210e9c793ad3791abb7ac2f85bbb999a">GetRowByID</a> (unsigned rowId) const </td></tr>
<tr class="memdesc:a210e9c793ad3791abb7ac2f85bbb999a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a row. More efficient to do this and access <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml#adf9117523954e44aca862cdfaf19a2b8">Row::cells</a> than to repeatedly call GetCell. You can also update cells in rows from this function.  <a href="#a210e9c793ad3791abb7ac2f85bbb999a"></a><br/></td></tr>
<tr class="separator:a210e9c793ad3791abb7ac2f85bbb999a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5adf57e72953f28c56b29283089b7a12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5adf57e72953f28c56b29283089b7a12">GetRowByIndex</a> (unsigned rowIndex, unsigned *key) const </td></tr>
<tr class="memdesc:a5adf57e72953f28c56b29283089b7a12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a row at a specific index. rowIndex should be less than <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5c9d8fa5c48b53d853106eb4dc0d9c77">GetRowCount()</a>  <a href="#a5adf57e72953f28c56b29283089b7a12"></a><br/></td></tr>
<tr class="separator:a5adf57e72953f28c56b29283089b7a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a1773dc843e80235fe33893bc4a639c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a2a1773dc843e80235fe33893bc4a639c">QueryTable</a> (unsigned *columnIndicesSubset, unsigned numColumnSubset, <a class="el" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">FilterQuery</a> *inclusionFilters, unsigned numInclusionFilters, unsigned *rowIds, unsigned numRowIDs, <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> *result)</td></tr>
<tr class="memdesc:a2a1773dc843e80235fe33893bc4a639c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries the table, optionally returning only a subset of columns and rows.  <a href="#a2a1773dc843e80235fe33893bc4a639c"></a><br/></td></tr>
<tr class="separator:a2a1773dc843e80235fe33893bc4a639c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72f2c9f7e6ccf3997b18c2fa70f3704d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a72f2c9f7e6ccf3997b18c2fa70f3704d">SortTable</a> (<a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#dc/dea/struct_data_structures_1_1_table_1_1_sort_query">Table::SortQuery</a> *sortQueries, unsigned numSortQueries, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> **out)</td></tr>
<tr class="memdesc:a72f2c9f7e6ccf3997b18c2fa70f3704d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts the table by rows.  <a href="#a72f2c9f7e6ccf3997b18c2fa70f3704d"></a><br/></td></tr>
<tr class="separator:a72f2c9f7e6ccf3997b18c2fa70f3704d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6deddcab925ca223177ecf9caf611e08"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a6deddcab925ca223177ecf9caf611e08">Clear</a> (void)</td></tr>
<tr class="memdesc:a6deddcab925ca223177ecf9caf611e08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees all memory in the table.  <a href="#a6deddcab925ca223177ecf9caf611e08"></a><br/></td></tr>
<tr class="separator:a6deddcab925ca223177ecf9caf611e08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af6460bb3e2de14f9b1d9b9b624007d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a4af6460bb3e2de14f9b1d9b9b624007d">PrintColumnHeaders</a> (char *out, int outLength, char columnDelineator) const </td></tr>
<tr class="memdesc:a4af6460bb3e2de14f9b1d9b9b624007d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints out the names of all the columns.  <a href="#a4af6460bb3e2de14f9b1d9b9b624007d"></a><br/></td></tr>
<tr class="separator:a4af6460bb3e2de14f9b1d9b9b624007d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a92bac56cce20e4a1b5495d5290482e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a8a92bac56cce20e4a1b5495d5290482e">PrintRow</a> (char *out, int outLength, char columnDelineator, bool printDelineatorForBinary, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *inputRow) const </td></tr>
<tr class="memdesc:a8a92bac56cce20e4a1b5495d5290482e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a text representation of the row to <em>out</em>.  <a href="#a8a92bac56cce20e4a1b5495d5290482e"></a><br/></td></tr>
<tr class="separator:a8a92bac56cce20e4a1b5495d5290482e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad91aa7d4f82573bbd2ab0033397e4d8c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../d9/d84/struct_data_structures_1_1_table_1_1_column_descriptor.xhtml">ColumnDescriptor</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad91aa7d4f82573bbd2ab0033397e4d8c">GetColumns</a> (void) const </td></tr>
<tr class="memdesc:ad91aa7d4f82573bbd2ab0033397e4d8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Direct access to make things easier.  <a href="#ad91aa7d4f82573bbd2ab0033397e4d8c"></a><br/></td></tr>
<tr class="separator:ad91aa7d4f82573bbd2ab0033397e4d8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e64c5424930e8ca30081e3d997871d7"><td class="memItemLeft" align="right" valign="top">const <br class="typebreak"/>
<a class="el" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">DataStructures::BPlusTree</a><br class="typebreak"/>
&lt; unsigned, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> <br class="typebreak"/>
*, <a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#ad563ab101b446870855bf1fdc7b2b0df">_TABLE_BPLUS_TREE_ORDER</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a9e64c5424930e8ca30081e3d997871d7">GetRows</a> (void) const </td></tr>
<tr class="memdesc:a9e64c5424930e8ca30081e3d997871d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Direct access to make things easier.  <a href="#a9e64c5424930e8ca30081e3d997871d7"></a><br/></td></tr>
<tr class="separator:a9e64c5424930e8ca30081e3d997871d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e1605b4081ed2d76bfb5d629fd11a30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page</a>&lt; unsigned, <br class="typebreak"/>
<a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> *, <a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#ad563ab101b446870855bf1fdc7b2b0df">_TABLE_BPLUS_TREE_ORDER</a> &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a9e1605b4081ed2d76bfb5d629fd11a30">GetListHead</a> (void)</td></tr>
<tr class="memdesc:a9e1605b4081ed2d76bfb5d629fd11a30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the head of a linked list containing all the row data.  <a href="#a9e1605b4081ed2d76bfb5d629fd11a30"></a><br/></td></tr>
<tr class="separator:a9e1605b4081ed2d76bfb5d629fd11a30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68cc0e1cf1e1d03ca5087ddf91c74c6f"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a68cc0e1cf1e1d03ca5087ddf91c74c6f">GetAvailableRowId</a> (void) const </td></tr>
<tr class="memdesc:a68cc0e1cf1e1d03ca5087ddf91c74c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first free row id. This could be made more efficient.  <a href="#a68cc0e1cf1e1d03ca5087ddf91c74c6f"></a><br/></td></tr>
<tr class="separator:a68cc0e1cf1e1d03ca5087ddf91c74c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f8c5f184b35b8f764ed1a6099fe0d48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a6f8c5f184b35b8f764ed1a6099fe0d48">operator=</a> (const <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> &amp;input)</td></tr>
<tr class="separator:a6f8c5f184b35b8f764ed1a6099fe0d48"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a952f70d813ff248c4c6ebf9000903b6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a952f70d813ff248c4c6ebf9000903b6c">AddRowColumns</a> (unsigned rowId, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> *row, <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; unsigned &gt; columnIndices)</td></tr>
<tr class="separator:a952f70d813ff248c4c6ebf9000903b6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29caf257d5c491a56c897e35b82fd7d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a29caf257d5c491a56c897e35b82fd7d6">DeleteRow</a> (<a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> *row)</td></tr>
<tr class="separator:a29caf257d5c491a56c897e35b82fd7d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f6ab894e9dfaaba22c2ff84041523fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a1f6ab894e9dfaaba22c2ff84041523fc">QueryRow</a> (<a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; unsigned &gt; &amp;inclusionFilterColumnIndices, <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; unsigned &gt; &amp;columnIndicesToReturn, unsigned key, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *row, <a class="el" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">FilterQuery</a> *inclusionFilters, <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> *result)</td></tr>
<tr class="separator:a1f6ab894e9dfaaba22c2ff84041523fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a5dbe3b763c4ba74b34c02b08fd4ad88e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">DataStructures::BPlusTree</a><br class="typebreak"/>
&lt; unsigned, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> <br class="typebreak"/>
*, <a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#ad563ab101b446870855bf1fdc7b2b0df">_TABLE_BPLUS_TREE_ORDER</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5dbe3b763c4ba74b34c02b08fd4ad88e">rows</a></td></tr>
<tr class="separator:a5dbe3b763c4ba74b34c02b08fd4ad88e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db7dd0db18e0403b760b984defbafc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../d9/d84/struct_data_structures_1_1_table_1_1_column_descriptor.xhtml">ColumnDescriptor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a4db7dd0db18e0403b760b984defbafc9">columns</a></td></tr>
<tr class="separator:a4db7dd0db18e0403b760b984defbafc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Holds a set of columns, a set of rows, and rows times columns cells. </p>
<p>The table data structure is useful if you want to store a set of structures and perform queries on those structures.<br/>
 This is a relatively simple and fast implementation of the types of tables commonly used in databases.<br/>
 See TableSerializer to serialize data members of the table.<br/>
 See LightweightDatabaseClient and LightweightDatabaseServer to transmit the table over the network. </p>

<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00042">42</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="dc/dea/struct_data_structures_1_1_table_1_1_sort_query" id="dc/dea/struct_data_structures_1_1_table_1_1_sort_query"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct DataStructures::Table::SortQuery</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00178">178</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aba3987126a70fa6aa50a0abfc60b91ab"></a>unsigned</td>
<td class="fieldname">
columnIndex</td>
<td class="fielddoc">
The index of the table column we are sorting on. </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a34d1df32067ec566580fe72aea8f0d9c"></a><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a736b2ab44bd8d4159bad88d4ae04665d">SortQueryType</a></td>
<td class="fieldname">
operation</td>
<td class="fielddoc">
See SortQueryType. </td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="af24fe2724b507f329c7754ea6985abed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">DataStructures::Table::ColumnType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="af24fe2724b507f329c7754ea6985abeda3c22480145b2a7c8818f3c3baf7c8692"></a>NUMERIC</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="af24fe2724b507f329c7754ea6985abedaf2b7a2432e2c786ff02052286df310af"></a>STRING</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="af24fe2724b507f329c7754ea6985abeda2550a73a55b0ab443d0bd782927f7acd"></a>BINARY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="af24fe2724b507f329c7754ea6985abeda5f31a94399b1ed3b469c71b3c55cace1"></a>POINTER</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00046">46</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>

</div>
</div>
<a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74">DataStructures::Table::FilterQueryType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74a636c5c889fb0a8e264b45554d339f143"></a>QF_EQUAL</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74a174ccaad3f061def3348ad7d0a8e22f6"></a>QF_NOT_EQUAL</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74a448b10241a1158d283f72e7245e251b5"></a>QF_GREATER_THAN</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74a06caf624eb7a17b6b6a8b036d9d36d7c"></a>QF_GREATER_THAN_EQ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74aa65b69a190af229184b358fd684c1007"></a>QF_LESS_THAN</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74a562f8468079cabad214dcf56a3a46b59"></a>QF_LESS_THAN_EQ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74ae31852182687b0a57072b78d0e75d65f"></a>QF_IS_EMPTY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64a115f6653bf7b0b7fddfcbc769ef74a0630f71e2ede7c11002f40afc262cd0a"></a>QF_NOT_EMPTY</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00142">142</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>

</div>
</div>
<a class="anchor" id="a736b2ab44bd8d4159bad88d4ae04665d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a736b2ab44bd8d4159bad88d4ae04665d">DataStructures::Table::SortQueryType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Increasing or decreasing sort order. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a736b2ab44bd8d4159bad88d4ae04665da6b0a1454dd5cd763982d571adc76ce81"></a>QS_INCREASING_ORDER</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a736b2ab44bd8d4159bad88d4ae04665daf2109e473e388613032a18e30c8ef2e7"></a>QS_DECREASING_ORDER</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00170">170</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a049f2e06391781ae255c6698869c4ad1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Table::Table </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00284">284</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9a559f2e7beb37b511ee9f88873164f8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Table::~Table </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00287">287</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">Clear()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3c2015a75baeec5db76f56cd60f16059"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Table::AddColumn </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>columnName</em>[_TABLE_MAX_COLUMN_NAME_LENGTH], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">ColumnType</a>&#160;</td>
          <td class="paramname"><em>columnType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a column to the table. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">columnName</td><td>The name of the column </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">columnType</td><td>What type of data this column will hold </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index of the new column </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00291">291</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00027">ExtendRows()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00988">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::ForEachData()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00088">SLNet::TableSerializer::DeserializeColumns()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">QueryTable()</a>.</p>

</div>
</div>
<a class="anchor" id="a2692e5348c98bcf1328ed40f72fcae60"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> * Table::AddRow </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a row to the table. </p>
<p>New rows are added with empty values for all cells. However, if you specify initialCelLValues you can specify initial values It's up to you to ensure that the values in the specific cells match the type of data used by that row rowId can be considered the primary key for the row. It is much faster to lookup a row by its rowId than by searching keys. rowId must be unique Rows are stored in sorted order in the table, using rowId as the sort key </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rowId</td><td>The UNIQUE primary key for the row. This can never be changed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">initialCellValues</td><td>Initial values to give the row (optional) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The newly added row </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00359">359</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00835">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Insert()</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00141">SLNet::TableSerializer::DeserializeRow()</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="add6a2128c677804b3c632bcee6657cc0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> * Table::AddRow </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml">Cell</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>initialCellValues</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00373">373</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00835">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Insert()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00205">DataStructures::Table::Cell::SetByType()</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a5e94a83faddf086738c0a1f5cc8a4f0e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> * Table::AddRow </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml">Cell</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>initialCellValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>copyCells</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00392">392</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00835">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Insert()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a952f70d813ff248c4c6ebf9000903b6c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> * Table::AddRowColumns </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a> *&#160;</td>
          <td class="paramname"><em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; unsigned &gt;&#160;</td>
          <td class="paramname"><em>columnIndices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00415">415</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00835">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Insert()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00688">QueryRow()</a>.</p>

</div>
</div>
<a class="anchor" id="a6deddcab925ca223177ecf9caf611e08"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees all memory in the table. </p>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">1073</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00890">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Clear()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00456">DataStructures::List&lt; list_type &gt;::Clear()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00988">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::ForEachData()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00032">FreeRow()</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>.</p>

<p>Referenced by <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00088">SLNet::TableSerializer::DeserializeColumns()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">QueryTable()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00083">DataStructures::Table::Cell::Set()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00139">DataStructures::Table::Cell::SetPtr()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00050">DataStructures::Table::Cell::~Cell()</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00287">~Table()</a>.</p>

</div>
</div>
<a class="anchor" id="ad3cbc38a3f3df19ff1131165b1f929e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Table::ColumnIndex </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>columnName</em>[_TABLE_MAX_COLUMN_NAME_LENGTH]</td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the index of a column by name. </p>
<p>Column indices are stored in the order they are added. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">columnName</td><td>The name of the column </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index of the column, or (unsigned)-1 if no such column </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00333">333</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">QueryTable()</a>.</p>

</div>
</div>
<a class="anchor" id="ab064ed28cc2fc43bfe1c293d5ae3c485"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Table::ColumnIndex </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>columnName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00325">325</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a29f31372b2c0ef0c70eb24905bde7a75"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * Table::ColumnName </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gives the string name of the column at a certain index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The index of the column </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The name of the column, or 0 if an invalid index </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a29caf257d5c491a56c897e35b82fd7d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Table::DeleteRow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td>
          <td class="paramname"><em>row</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01119">1119</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00438">RemoveRow()</a>.</p>

</div>
</div>
<a class="anchor" id="a68cc0e1cf1e1d03ca5087ddf91c74c6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Table::GetAvailableRowId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the first free row id. This could be made more efficient. </p>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01091">1091</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00063">DataStructures::Page&lt; KeyType, DataType, order &gt;::keys</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>.</p>

</div>
</div>
<a class="anchor" id="a9161220f934e20abf9fbd00b149540b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::GetCellValueByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Note this is much less efficient to call than GetRow, then working with the cells directly. Numeric, string, binary. </p>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00534">534</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00226">DataStructures::List&lt; list_type &gt;::Get()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00049">NUMERIC</a>, and <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="afc8a0582ca67cd833f46c76e145069b5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::GetCellValueByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00544">544</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00226">DataStructures::List&lt; list_type &gt;::Get()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00052">STRING</a>.</p>

</div>
</div>
<a class="anchor" id="ac55ae24585dbf6bda8bbc0217c3e0e45"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::GetCellValueByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>outputLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00554">554</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00226">DataStructures::List&lt; list_type &gt;::Get()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00052">STRING</a>.</p>

</div>
</div>
<a class="anchor" id="a40ec8206e20b0ca897baacb74bb48a1c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::GetCellValueByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>outputLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00564">564</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00055">BINARY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00226">DataStructures::List&lt; list_type &gt;::Get()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, and <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="ae2b9b78e1442c3141966159fcafdbec9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Table::GetColumnCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the number of columns </p>
<dl class="section return"><dt>Returns</dt><dd>The number of columns in the table </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00351">351</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="ad91aa7d4f82573bbd2ab0033397e4d8c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">List</a>&lt; <a class="el" href="../../d9/d84/struct_data_structures_1_1_table_1_1_column_descriptor.xhtml">Table::ColumnDescriptor</a> &gt; &amp; Table::GetColumns </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Direct access to make things easier. </p>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01079">1079</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>.</p>

<p>Referenced by <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00141">SLNet::TableSerializer::DeserializeRow()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00040">SLNet::TableSerializer::SerializeColumns()</a>, and <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00024">SLNet::TableSerializer::SerializeTable()</a>.</p>

</div>
</div>
<a class="anchor" id="ab59438e4627af7a1de543357cc8bdf87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">Table::ColumnType</a> Table::GetColumnType </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the type of a column, referenced by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The index of the column </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The type of the column </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00344">344</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a9e1605b4081ed2d76bfb5d629fd11a30"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page</a>&lt; unsigned, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">DataStructures::Table::Row</a> *, <a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#ad563ab101b446870855bf1fdc7b2b0df">_TABLE_BPLUS_TREE_ORDER</a> &gt; * Table::GetListHead </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the head of a linked list containing all the row data. </p>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01087">1087</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>.</p>

</div>
</div>
<a class="anchor" id="a210e9c793ad3791abb7ac2f85bbb999a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> * Table::GetRowByID </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a row. More efficient to do this and access <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml#adf9117523954e44aca862cdfaf19a2b8">Row::cells</a> than to repeatedly call GetCell. You can also update cells in rows from this function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rowId</td><td>The ID of the row </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The desired row, or 0 if no such row. </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00588">588</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00150">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Get()</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00462">UpdateCell()</a>.</p>

</div>
</div>
<a class="anchor" id="a5adf57e72953f28c56b29283089b7a12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> * Table::GetRowByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a row at a specific index. rowIndex should be less than <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5c9d8fa5c48b53d853106eb4dc0d9c77">GetRowCount()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rowIndex</td><td>The index of the row </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">key</td><td>The ID of the row returned </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The desired row, or 0 if no such row. </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">596</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00066">DataStructures::Page&lt; KeyType, DataType, order &gt;::data</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00063">DataStructures::Page&lt; KeyType, DataType, order &gt;::keys</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00534">GetCellValueByIndex()</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00498">UpdateCellByIndex()</a>.</p>

</div>
</div>
<a class="anchor" id="a5c9d8fa5c48b53d853106eb4dc0d9c77"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned Table::GetRowCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the number of rows </p>
<dl class="section return"><dt>Returns</dt><dd>The number of rows in the table </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00355">355</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00901">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a9e64c5424930e8ca30081e3d997871d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">DataStructures::BPlusTree</a>&lt; unsigned, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *, <a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#ad563ab101b446870855bf1fdc7b2b0df">_TABLE_BPLUS_TREE_ORDER</a> &gt; &amp; Table::GetRows </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Direct access to make things easier. </p>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01083">1083</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">operator=()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00448">RemoveRows()</a>, and <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00024">SLNet::TableSerializer::SerializeTable()</a>.</p>

</div>
</div>
<a class="anchor" id="a6f8c5f184b35b8f764ed1a6099fe0d48"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> &amp; Table::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01128">1128</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00291">AddColumn()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00359">AddRow()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">Clear()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00337">ColumnName()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00066">DataStructures::Page&lt; KeyType, DataType, order &gt;::data</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00351">GetColumnCount()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00344">GetColumnType()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01083">GetRows()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00063">DataStructures::Page&lt; KeyType, DataType, order &gt;::keys</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, and <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>.</p>

</div>
</div>
<a class="anchor" id="a4af6460bb3e2de14f9b1d9b9b624007d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::PrintColumnHeaders </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>outLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>columnDelineator</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints out the names of all the columns. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>A pointer to an array of bytes which will hold the output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">outLength</td><td>The size of the <em>out</em> array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">columnDelineator</td><td>What character to print to delineate columns </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00958">958</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a8a92bac56cce20e4a1b5495d5290482e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::PrintRow </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>outLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>columnDelineator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>printDelineatorForBinary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td>
          <td class="paramname"><em>inputRow</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a text representation of the row to <em>out</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>A pointer to an array of bytes which will hold the output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">outLength</td><td>The size of the <em>out</em> array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">columnDelineator</td><td>What character to print to delineate columns </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">printDelineatorForBinary</td><td>Binary output is not printed. True to still print the delineator. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inputRow</td><td>The row to print </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00989">989</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00049">NUMERIC</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00058">POINTER</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00052">STRING</a>.</p>

</div>
</div>
<a class="anchor" id="a1f6ab894e9dfaaba22c2ff84041523fc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Table::QueryRow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; unsigned &gt; &amp;&#160;</td>
          <td class="paramname"><em>inclusionFilterColumnIndices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; unsigned &gt; &amp;&#160;</td>
          <td class="paramname"><em>columnIndicesToReturn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> *&#160;</td>
          <td class="paramname"><em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">FilterQuery</a> *&#160;</td>
          <td class="paramname"><em>inclusionFilters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00688">688</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00415">AddRowColumns()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00055">BINARY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00107">DataStructures::Table::Cell::c</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00165">DataStructures::Table::FilterQuery::cellValue</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00106">DataStructures::Table::Cell::i</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00049">NUMERIC</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00058">POINTER</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00108">DataStructures::Table::Cell::ptr</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00144">QF_EQUAL</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00146">QF_GREATER_THAN</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00147">QF_GREATER_THAN_EQ</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00150">QF_IS_EMPTY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00148">QF_LESS_THAN</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00149">QF_LESS_THAN_EQ</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00151">QF_NOT_EMPTY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00145">QF_NOT_EQUAL</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00052">STRING</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">QueryTable()</a>.</p>

</div>
</div>
<a class="anchor" id="a2a1773dc843e80235fe33893bc4a639c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::QueryTable </td>
          <td>(</td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>columnIndicesSubset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>numColumnSubset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">FilterQuery</a> *&#160;</td>
          <td class="paramname"><em>inclusionFilters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>numInclusionFilters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>rowIds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>numRowIDs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queries the table, optionally returning only a subset of columns and rows. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">columnSubset</td><td>An array of column indices. Only columns in this array are returned. Pass 0 for all columns </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numColumnSubset</td><td>The number of elements in <em>columnSubset</em> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inclusionFilters</td><td>An array of <a class="el" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">FilterQuery</a>. All filters must pass for the row to be returned. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numInclusionFilters</td><td>The number of elements in <em>inclusionFilters</em> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rowIds</td><td>An arrow of row IDs. Only these rows with these IDs are returned. Pass 0 for all rows. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numRowIDs</td><td>The number of elements in <em>rowIds</em> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The result of the query. If no rows are returned, the table will only have columns. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">616</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00291">AddColumn()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">Clear()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00164">DataStructures::Table::FilterQuery::columnIndex</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00333">ColumnIndex()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00066">DataStructures::Page&lt; KeyType, DataType, order &gt;::data</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00150">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Get()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00063">DataStructures::Page&lt; KeyType, DataType, order &gt;::keys</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00688">QueryRow()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ee961572de1236cc64d502abcaca369"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::RemoveColumn </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a column by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">columnIndex</td><td>The index of the column to remove </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00304">304</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00129">DataStructures::Table::Row::cells</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00066">DataStructures::Page&lt; KeyType, DataType, order &gt;::data</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00393">DataStructures::List&lt; list_type &gt;::RemoveAtIndex()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="afe51f45747401157b45ec7d5a74f1a41"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::RemoveRow </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a row specified by rowId. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rowId</td><td>The ID of the row </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the row was deleted. False if not. </dd></dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00438">438</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00184">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Delete()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01119">DeleteRow()</a>, and <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>.</p>

<p>Referenced by <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00141">SLNet::TableSerializer::DeserializeRow()</a>.</p>

</div>
</div>
<a class="anchor" id="a507e418b8f2b208c5178c4860b26d736"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::RemoveRows </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a> *&#160;</td>
          <td class="paramname"><em>tableContainingRowIDs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all the rows with IDs that the specified table also has. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tableContainingRowIDs</td><td>The IDs of the rows </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00448">448</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00184">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Delete()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01083">GetRows()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00063">DataStructures::Page&lt; KeyType, DataType, order &gt;::keys</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, and <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>.</p>

</div>
</div>
<a class="anchor" id="a72f2c9f7e6ccf3997b18c2fa70f3704d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Table::SortTable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#dc/dea/struct_data_structures_1_1_table_1_1_sort_query">Table::SortQuery</a> *&#160;</td>
          <td class="paramname"><em>sortQueries</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>numSortQueries</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Table::Row</a> **&#160;</td>
          <td class="paramname"><em>out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sorts the table by rows. </p>
<p>You can sort the table in ascending or descending order on one or more columns Columns have precedence in the order they appear in the <em>sortQueries</em> array If a row cell on column n has the same value as a a different row on column n, then the row will be compared on column n+1 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sortQueries</td><td>A list of <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#dc/dea/struct_data_structures_1_1_table_1_1_sort_query">SortQuery</a> structures, defining the sorts to perform on the table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numColumnSubset</td><td>The number of elements in <em>numSortQueries</em> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>The address of an array of Rows, which will receive the sorted output. The array must be long enough to contain all returned rows, up to <a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a5c9d8fa5c48b53d853106eb4dc0d9c77">GetRowCount()</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">904</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00847">_columnIndices</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00848">_columns</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00846">_numSortQueries</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00845">_sortQueries</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00055">BINARY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00181">DataStructures::Table::SortQuery::columnIndex</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00066">DataStructures::Page&lt; KeyType, DataType, order &gt;::data</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00967">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetListHead()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00176">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::Insert()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00067">DataStructures::Page&lt; KeyType, DataType, order &gt;::next</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">rows</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00060">DataStructures::Page&lt; KeyType, DataType, order &gt;::size</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00274">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::Size()</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

</div>
</div>
<a class="anchor" id="a29a82fdfc3cbbe1807d942b2a5e8f59a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::UpdateCell </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates a particular cell in the table. </p>
<dl class="section note"><dt>Note</dt><dd>If you are going to update many cells of a particular row, it is more efficient to call GetRow and perform the operations on the row directly. </dd>
<dd>
<a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml" title="Stores the list of cells for this row, and a special flag used for internal sorting.">Row</a> pointers do not change, so you can also write directly to the rows for more efficiency. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">rowId</td><td>The ID of the row </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">columnIndex</td><td>The column of the cell </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The data to set </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00462">462</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00588">GetRowByID()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00049">NUMERIC</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00265">DataStructures::Table::Row::UpdateCell()</a>.</p>

</div>
</div>
<a class="anchor" id="aa06af34adffba892a5f97188854da995"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::UpdateCell </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00474">474</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00588">GetRowByID()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00052">STRING</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00265">DataStructures::Table::Row::UpdateCell()</a>.</p>

</div>
</div>
<a class="anchor" id="a95dfa60835984102bc4bf63727ee2447"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::UpdateCell </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>byteLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00486">486</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00055">BINARY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00588">GetRowByID()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00265">DataStructures::Table::Row::UpdateCell()</a>.</p>

</div>
</div>
<a class="anchor" id="a835c4468deece06016b8717ff3da9058"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::UpdateCellByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00498">498</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00049">NUMERIC</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00265">DataStructures::Table::Row::UpdateCell()</a>.</p>

</div>
</div>
<a class="anchor" id="a6ee0119ce0029639f21fc49b6585ef13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::UpdateCellByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00510">510</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00052">STRING</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00265">DataStructures::Table::Row::UpdateCell()</a>.</p>

</div>
</div>
<a class="anchor" id="ad47a84657b2ca3da9389789590485592"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Table::UpdateCellByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rowIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>columnIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>byteLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00522">522</a> of file <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a>.</p>

<p>References <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00055">BINARY</a>, <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">columns</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00265">DataStructures::Table::Row::UpdateCell()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a4db7dd0db18e0403b760b984defbafc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../d9/d84/struct_data_structures_1_1_table_1_1_column_descriptor.xhtml">ColumnDescriptor</a>&gt; DataStructures::Table::columns</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00346">346</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00291">AddColumn()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00359">AddRow()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00415">AddRowColumns()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">Clear()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00325">ColumnIndex()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00337">ColumnName()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00534">GetCellValueByIndex()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00351">GetColumnCount()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01079">GetColumns()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00344">GetColumnType()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00958">PrintColumnHeaders()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00989">PrintRow()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00688">QueryRow()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">QueryTable()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00304">RemoveColumn()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">SortTable()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00462">UpdateCell()</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00498">UpdateCellByIndex()</a>.</p>

</div>
</div>
<a class="anchor" id="a5dbe3b763c4ba74b34c02b08fd4ad88e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">DataStructures::BPlusTree</a>&lt;unsigned, <a class="el" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml">Row</a>*, <a class="el" href="../../d3/d5d/_d_s___table_8h.xhtml#ad563ab101b446870855bf1fdc7b2b0df">_TABLE_BPLUS_TREE_ORDER</a>&gt; DataStructures::Table::rows</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml#l00343">343</a> of file <a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a>.</p>

<p>Referenced by <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00291">AddColumn()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00359">AddRow()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00415">AddRowColumns()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">Clear()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01091">GetAvailableRowId()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01087">GetListHead()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00588">GetRowByID()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00596">GetRowByIndex()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00355">GetRowCount()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01083">GetRows()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">QueryTable()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00304">RemoveColumn()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00438">RemoveRow()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00448">RemoveRows()</a>, and <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">SortTable()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Source/include/slikenet/<a class="el" href="../../d3/d5d/_d_s___table_8h_source.xhtml">DS_Table.h</a></li>
<li>Source/src/<a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml">DS_Table.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a></li><li class="navelem"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: MessageFilter</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a>  </div>
  <div class="headertitle">
<div class="title">MessageFilter</div>  </div>
<div class="ingroups"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml">Plugins</a></div></div><!--header-->
<div class="contents">

<p>Remote incoming packets from unauthorized systems.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:d4/d96/class_s_l_net_1_1_message_filter"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#d4/d96/class_s_l_net_1_1_message_filter">SLNet::MessageFilter</a></td></tr>
<tr class="memdesc:d4/d96/class_s_l_net_1_1_message_filter"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns systems to FilterSets. Each <a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> limits what kinds of messages are allowed.  <a href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#d4/d96/class_s_l_net_1_1_message_filter">More...</a><br/></td></tr>
<tr class="separator:d4/d96/class_s_l_net_1_1_message_filter"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Remote incoming packets from unauthorized systems. </p>
<hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d4/d96/class_s_l_net_1_1_message_filter" id="d4/d96/class_s_l_net_1_1_message_filter"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">class SLNet::MessageFilter</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>Assigns systems to FilterSets. Each <a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> limits what kinds of messages are allowed. </p>
<p>The <a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#d4/d96/class_s_l_net_1_1_message_filter" title="Assigns systems to FilterSets. Each FilterSet limits what kinds of messages are allowed.">MessageFilter</a> plugin is used for security where you limit what systems can send what kind of messages.<br/>
 You implicitly define FilterSets, and add allowed message IDs to these FilterSets.<br/>
 You then add systems to these filters, such that those systems are limited to sending what the filters allows.<br/>
 You can automatically assign systems to a filter.<br/>
 You can automatically kick and possibly ban users that stay in a filter too long, or send the wrong message.<br/>
 Each system is a member of either zero or one filters.<br/>
 Add this plugin before any plugin you wish to filter (most likely just add this plugin before any other). </p>

<p>Definition at line <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml#l00085">85</a> of file <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml">MessageFilter.h</a>.</p>
</div><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::MessageFilter:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../df/d64/class_s_l_net_1_1_message_filter__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a53fd8095dfb53af81a93da5f5ecc3fc3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a53fd8095dfb53af81a93da5f5ecc3fc3">MessageFilter</a> ()</td></tr>
<tr class="separator:a53fd8095dfb53af81a93da5f5ecc3fc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93733ea8636af18ca1a46890ca1b2bbf"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a93733ea8636af18ca1a46890ca1b2bbf">~MessageFilter</a> ()</td></tr>
<tr class="separator:a93733ea8636af18ca1a46890ca1b2bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ac293be1138c5a199735470004fa61e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a9ac293be1138c5a199735470004fa61e">SetAutoAddNewConnectionsToFilter</a> (int filterSetID)</td></tr>
<tr class="separator:a9ac293be1138c5a199735470004fa61e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57df7903f2e46eecd56328d912284ff5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a57df7903f2e46eecd56328d912284ff5">SetAllowMessageID</a> (bool allow, int messageIDStart, int messageIDEnd, int filterSetID)</td></tr>
<tr class="separator:a57df7903f2e46eecd56328d912284ff5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab760546073778b7a1f68d245aa9df854"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#ab760546073778b7a1f68d245aa9df854">SetAllowRPC4</a> (bool allow, const char *uniqueID, int filterSetID)</td></tr>
<tr class="separator:ab760546073778b7a1f68d245aa9df854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e37caab84d92c77668fe8ad593f0a90"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a9e37caab84d92c77668fe8ad593f0a90">SetActionOnDisallowedMessage</a> (bool kickOnDisallowed, bool banOnDisallowed, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> banTimeMS, int filterSetID)</td></tr>
<tr class="separator:a9e37caab84d92c77668fe8ad593f0a90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d2aec761d4f3cac6bee825df6e45e4c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a6d2aec761d4f3cac6bee825df6e45e4c">SetDisallowedMessageCallback</a> (int filterSetID, void *userData, void(*invalidMessageCallback)(<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *peer, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> addressOrGUID, int filterSetID, void *userData, unsigned char messageID))</td></tr>
<tr class="separator:a6d2aec761d4f3cac6bee825df6e45e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9546574effb628561c1cc21181858acd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a9546574effb628561c1cc21181858acd">SetTimeoutCallback</a> (int filterSetID, void *userData, void(*invalidMessageCallback)(<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *peer, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> addressOrGUID, int filterSetID, void *userData))</td></tr>
<tr class="separator:a9546574effb628561c1cc21181858acd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af487cd736698189b045694554aec0633"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#af487cd736698189b045694554aec0633">SetFilterMaxTime</a> (int allowedTimeMS, bool banOnExceed, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> banTimeMS, int filterSetID)</td></tr>
<tr class="separator:af487cd736698189b045694554aec0633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a199bd9254b4e97e9bfc0eae3b2105400"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a199bd9254b4e97e9bfc0eae3b2105400">GetSystemFilterSet</a> (<a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> addressOrGUID)</td></tr>
<tr class="separator:a199bd9254b4e97e9bfc0eae3b2105400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e39305b4a26052a1a9c711218855115"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a9e39305b4a26052a1a9c711218855115">SetSystemFilterSet</a> (<a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> addressOrGUID, int filterSetID)</td></tr>
<tr class="separator:a9e39305b4a26052a1a9c711218855115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1dce1d5f6d10db38e6174867c4a5350"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#ae1dce1d5f6d10db38e6174867c4a5350">GetSystemCount</a> (int filterSetID) const </td></tr>
<tr class="separator:ae1dce1d5f6d10db38e6174867c4a5350"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8582c945fd25ad7420ced2c10720aec"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#ab8582c945fd25ad7420ced2c10720aec">GetFilterSetCount</a> (void) const </td></tr>
<tr class="separator:ab8582c945fd25ad7420ced2c10720aec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac301676761d903649683fb10dd758a35"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#ac301676761d903649683fb10dd758a35">GetFilterSetIDByIndex</a> (unsigned index)</td></tr>
<tr class="separator:ac301676761d903649683fb10dd758a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a654c32fee3693ee896152fe9533f5cbb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a654c32fee3693ee896152fe9533f5cbb">DeleteFilterSet</a> (int filterSetID)</td></tr>
<tr class="separator:a654c32fee3693ee896152fe9533f5cbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f09f1258b7eaaca99ea772e4e934668"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a6f09f1258b7eaaca99ea772e4e934668">Update</a> (void)</td></tr>
<tr class="memdesc:a6f09f1258b7eaaca99ea772e4e934668"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#a6f09f1258b7eaaca99ea772e4e934668"></a><br/></td></tr>
<tr class="separator:a6f09f1258b7eaaca99ea772e4e934668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a544b8d1810ddcf852bcab8ee63d114a6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a544b8d1810ddcf852bcab8ee63d114a6">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a544b8d1810ddcf852bcab8ee63d114a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c3cea2733bad044aa261066af0e1283"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a5c3cea2733bad044aa261066af0e1283">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:a5c3cea2733bad044aa261066af0e1283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38a8bbeb34d5ab41a1645cfb4dd430f8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a38a8bbeb34d5ab41a1645cfb4dd430f8">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:a38a8bbeb34d5ab41a1645cfb4dd430f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">OnAttach</a> (void)</td></tr>
<tr class="memdesc:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#afe33b32b1729289a809ada304227cbd8"></a><br/></td></tr>
<tr class="separator:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#aea8a90c4078ecc0db77545e44531b1de"></a><br/></td></tr>
<tr class="separator:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Member Functions</h3></td></tr>
<tr class="memitem:a3bb569f869d265c8d93e28a70619d3c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a3bb569f869d265c8d93e28a70619d3c1">Clear</a> (void)</td></tr>
<tr class="separator:a3bb569f869d265c8d93e28a70619d3c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd244fe6469e2ea82506ff910faf2d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#aebd244fe6469e2ea82506ff910faf2d5">DeallocateFilterSet</a> (<a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> *filterSet)</td></tr>
<tr class="separator:aebd244fe6469e2ea82506ff910faf2d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fdd4a2e3c5c4d86f723694296e33740"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a5fdd4a2e3c5c4d86f723694296e33740">GetFilterSetByID</a> (int filterSetID)</td></tr>
<tr class="separator:a5fdd4a2e3c5c4d86f723694296e33740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20593244e44856f783e72876de45e283"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a20593244e44856f783e72876de45e283">OnInvalidMessage</a> (<a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> *filterSet, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemAddress, unsigned char messageID)</td></tr>
<tr class="separator:a20593244e44856f783e72876de45e283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Attributes</h3></td></tr>
<tr class="memitem:a3b65f3f2faf2f79a73f52fbeeef7171b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a><br class="typebreak"/>
&lt; int, <a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> <br class="typebreak"/>
*, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a494e2ce57113dcaef2f1be93ac280b46">FilterSetComp</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a3b65f3f2faf2f79a73f52fbeeef7171b">filterList</a></td></tr>
<tr class="separator:a3b65f3f2faf2f79a73f52fbeeef7171b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa92fd69f4d6e665eee21aa16a6383bdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a><br class="typebreak"/>
&lt; <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>, <br class="typebreak"/>
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d6/db9/struct_s_l_net_1_1_filtered_system">FilteredSystem</a>, <br class="typebreak"/>
2048, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a93c682de6a3788535c8ae32218c48e0f">AddressOrGUID::ToInteger</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#aa92fd69f4d6e665eee21aa16a6383bdd">systemList</a></td></tr>
<tr class="separator:aa92fd69f4d6e665eee21aa16a6383bdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdad214726dc103ce1ee4303dedcec61"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#abdad214726dc103ce1ee4303dedcec61">autoAddNewConnectionsToFilter</a></td></tr>
<tr class="separator:abdad214726dc103ce1ee4303dedcec61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a2e39a4812a6ce9b7a129ba5d9f8e18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a1a2e39a4812a6ce9b7a129ba5d9f8e18">whenLastTimeoutCheck</a></td></tr>
<tr class="separator:a1a2e39a4812a6ce9b7a129ba5d9f8e18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a53fd8095dfb53af81a93da5f5ecc3fc3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::MessageFilter::MessageFilter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a93733ea8636af18ca1a46890ca1b2bbf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::MessageFilter::~MessageFilter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Function Documentation</h4>
<a class="anchor" id="a3bb569f869d265c8d93e28a70619d3c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aebd244fe6469e2ea82506ff910faf2d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::DeallocateFilterSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> *&#160;</td>
          <td class="paramname"><em>filterSet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a654c32fee3693ee896152fe9533f5cbb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::DeleteFilterSet </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Delete a <a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a>. All systems formerly subscribed to this filter are now unrestricted. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>The ID of the filter set to delete. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5fdd4a2e3c5c4d86f723694296e33740"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a>* SLNet::MessageFilter::GetFilterSetByID </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab8582c945fd25ad7420ced2c10720aec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned SLNet::MessageFilter::GetFilterSetCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the total number of filter sets. </p>
<dl class="section return"><dt>Returns</dt><dd>The total number of filter sets. </dd></dl>

</div>
</div>
<a class="anchor" id="ac301676761d903649683fb10dd758a35"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::MessageFilter::GetFilterSetIDByIndex </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the ID of a filter set, by index </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">An</td><td>index between 0 and <a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#ab8582c945fd25ad7420ced2c10720aec">GetFilterSetCount()</a>-1 inclusive </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae1dce1d5f6d10db38e6174867c4a5350"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned SLNet::MessageFilter::GetSystemCount </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the number of systems subscribed to a particular filter set Using anything other than -1 for <em>filterSetID</em> is slow, so you should store the returned value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>The filter set to limit to. Use -1 for none (just returns the total number of filter systems in that case). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a199bd9254b4e97e9bfc0eae3b2105400"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::MessageFilter::GetSystemFilterSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>addressOrGUID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the filterSetID a system is using. Returns -1 for none. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">addressOrGUID</td><td>The system we are referring to </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a38a8bbeb34d5ab41a1645cfb4dd430f8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::MessageFilter::OnClosedConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a>&#160;</td>
          <td class="paramname"><em>lostConnectionReason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when a connection is dropped because the user called <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408" title="Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).">RakPeer::CloseConnection()</a> for a particular system </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The system whose connection was closed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lostConnectionReason</td><td>How the connection was closed: manually, connection lost, or notification of disconnection </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a20593244e44856f783e72876de45e283"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::OnInvalidMessage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a> *&#160;</td>
          <td class="paramname"><em>filterSet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>messageID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5c3cea2733bad044aa261066af0e1283"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::MessageFilter::OnNewConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isIncoming</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when we got a new connection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>Address of the new connection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isIncoming</td><td>If true, this is ID_NEW_INCOMING_CONNECTION, or the equivalent </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a544b8d1810ddcf852bcab8ee63d114a6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::MessageFilter::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>OnReceive is called for every packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td>the packet that is being returned to the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to allow the game and other plugins to get this message, false to absorb it </dd></dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a9e37caab84d92c77668fe8ad593f0a90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetActionOnDisallowedMessage </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>kickOnDisallowed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>banOnDisallowed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td>
          <td class="paramname"><em>banTimeMS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>What action to take on a disallowed message. You can kick or not. You can add them to the ban list for some time By default no action is taken. The message is simply ignored. param[in] 0 for permanent ban, &gt;0 for ban time in milliseconds. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kickOnDisallowed</td><td>kick the system that sent a disallowed message. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">banOnDisallowed</td><td>ban the system that sent a disallowed message. See <em>banTimeMS</em> for the ban duration </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">banTimeMS</td><td>Passed to the milliseconds parameter of <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0df3df6ab4e04ae2ef0696670d7f776" title="Bans an IP from connecting.">RakPeer::AddToBanList</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a57df7903f2e46eecd56328d912284ff5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetAllowMessageID </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allow</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>messageIDStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>messageIDEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allow a range of message IDs Always allowed by default: ID_CONNECTION_REQUEST_ACCEPTED through ID_DOWNLOAD_PROGRESS Usually you specify a range to make it easier to add new enumerations without having to constantly refer back to this function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">allow</td><td>True to allow this message ID, false to disallow. By default, all messageIDs except the noted types are disallowed. This includes messages from other plugins! </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageIDStart</td><td>The first ID_* message to allow in the range. Inclusive. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageIDEnd</td><td>The last ID_* message to allow in the range. Inclusive. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab760546073778b7a1f68d245aa9df854"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetAllowRPC4 </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allow</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uniqueID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allow a specific <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a> call </p>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#d4/d96/class_s_l_net_1_1_message_filter" title="Assigns systems to FilterSets. Each FilterSet limits what kinds of messages are allowed.">MessageFilter</a> must be attached before <a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uniqueID</td><td>Identifier passed to RegisterFunction() </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9ac293be1138c5a199735470004fa61e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetAutoAddNewConnectionsToFilter </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Automatically add all new systems to a particular filter Defaults to -1 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>Which filter to add new systems to. &lt;0 for do not add. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6d2aec761d4f3cac6bee825df6e45e4c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetDisallowedMessageCallback </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>userData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *peer, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> addressOrGUID, int filterSetID, void *userData, unsigned char messageID)&#160;</td>
          <td class="paramname"><em>invalidMessageCallback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set a user callback to be called on an invalid message for a particular filterSet </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">userData</td><td>A pointer passed with the callback </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">invalidMessageCallback</td><td>A pointer to a C function to be called back with the specified parameters. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af487cd736698189b045694554aec0633"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetFilterMaxTime </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>allowedTimeMS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>banOnExceed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td>
          <td class="paramname"><em>banTimeMS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Limit how long a connection can stay in a particular filterSetID. After this time, the connection is kicked and possibly banned. By default there is no limit to how long a connection can stay in a particular filter set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">allowedTimeMS</td><td>How many milliseconds to allow a connection to stay in this filter set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">banOnExceed</td><td>True or false to ban the system, or not, when <em>allowedTimeMS</em> is exceeded </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">banTimeMS</td><td>Passed to the milliseconds parameter of <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0df3df6ab4e04ae2ef0696670d7f776" title="Bans an IP from connecting.">RakPeer::AddToBanList</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e39305b4a26052a1a9c711218855115"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetSystemFilterSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>addressOrGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assign a system to a filter set. Systems are automatically added to filter sets (or not) based on <a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a9ac293be1138c5a199735470004fa61e">SetAutoAddNewConnectionsToFilter()</a> This function is used to change the filter set a system is using, to add it to a new filter set, or to remove it from all existin filter sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">addressOrGUID</td><td>The system we are referring to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. If -1, the system will be removed from all filter sets. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9546574effb628561c1cc21181858acd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::MessageFilter::SetTimeoutCallback </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filterSetID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>userData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *peer, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> addressOrGUID, int filterSetID, void *userData)&#160;</td>
          <td class="paramname"><em>invalidMessageCallback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set a user callback to be called when a user is disconnected due to SetFilterMaxTime </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filterSetID</td><td>A user defined ID to represent a filter set. If no filter with this ID exists, one will be created with default settings. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">userData</td><td>A pointer passed with the callback </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">invalidMessageCallback</td><td>A pointer to a C function to be called back with the specified parameters. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6f09f1258b7eaaca99ea772e4e934668"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::MessageFilter::Update </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update is called every time a packet is checked for . </p>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="abdad214726dc103ce1ee4303dedcec61"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::MessageFilter::autoAddNewConnectionsToFilter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml#l00195">195</a> of file <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml">MessageFilter.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3b65f3f2faf2f79a73f52fbeeef7171b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt;int, <a class="el" href="../../d3/db6/struct_s_l_net_1_1_filter_set.xhtml">FilterSet</a>*, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a494e2ce57113dcaef2f1be93ac280b46">FilterSetComp</a>&gt; SLNet::MessageFilter::filterList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml#l00191">191</a> of file <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml">MessageFilter.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa92fd69f4d6e665eee21aa16a6383bdd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a>&lt;<a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d6/db9/struct_s_l_net_1_1_filtered_system">FilteredSystem</a>, 2048, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a93c682de6a3788535c8ae32218c48e0f">AddressOrGUID::ToInteger</a>&gt; SLNet::MessageFilter::systemList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml#l00193">193</a> of file <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml">MessageFilter.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1a2e39a4812a6ce9b7a129ba5d9f8e18"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> SLNet::MessageFilter::whenLastTimeoutCheck</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml#l00196">196</a> of file <a class="el" href="../../d8/db9/_message_filter_8h_source.xhtml">MessageFilter.h</a>.</p>

</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:48 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

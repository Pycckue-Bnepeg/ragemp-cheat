<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/include/slikenet/ThreadPool.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dc/d0b/_thread_pool_8h_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ThreadPool.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dc/d0b/_thread_pool_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#ifndef __THREAD_POOL_H</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __THREAD_POOL_H</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/dc5/memoryoverride_8h.xhtml" title="If _USE_RAK_MEMORY_OVERRIDE is defined, memory allocations go through rakMalloc, rakRealloc, and rakFree.">memoryoverride.h</a>&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d8d/_d_s___queue_8h.xhtml">DS_Queue.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/ddd/_simple_mutex_8h.xhtml" title="[Internal] Encapsulates a mutex">SimpleMutex.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/dbd/_export_8h.xhtml">Export.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/dd5/thread_8h.xhtml">thread.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d90/_signaled_event_8h.xhtml">SignaledEvent.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml">   26</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml">ThreadDataInterface</a></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#a8bfd73a3eaecf82d218e9e4f0ea2610f">   29</a></span>&#160;    <a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#a8bfd73a3eaecf82d218e9e4f0ea2610f">ThreadDataInterface</a>() {}</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#adcc3b121298c388428348316cac7463b">   30</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#adcc3b121298c388428348316cac7463b">~ThreadDataInterface</a>() {}</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#a1f11c7255aa2c0989e9a2b37b6c07d02">PerThreadFactory</a>(<span class="keywordtype">void</span> *context)=0;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#ab1c502c59f275eff7f559326ff0faf03">PerThreadDestructor</a>(<span class="keywordtype">void</span>* factoryResult, <span class="keywordtype">void</span> *context)=0;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;};</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml">   40</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml">ThreadPool</a></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml">ThreadPool</a>();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    ~ThreadPool();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">bool</span> StartThreads(<span class="keywordtype">int</span> numThreads, <span class="keywordtype">int</span> stackSize, <span class="keywordtype">void</span>* (*_perThreadInit)()=0, <span class="keywordtype">void</span> (*_perThreadDeinit)(<span class="keywordtype">void</span>*)=0);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// Alternate form of _perThreadDataFactory, _perThreadDataDestructor</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">void</span> SetThreadDataInterface(<a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml">ThreadDataInterface</a> *tdi, <span class="keywordtype">void</span> *context);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">void</span> StopThreads(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">void</span> AddInput(OutputType (*workerThreadCallback)(InputType, <span class="keywordtype">bool</span> *<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1e43a7b7ea9f1fd549450012cd19ea87">returnOutput</a>, <span class="keywordtype">void</span>* <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#adc398480893e637cf795fe46534ce7c4">perThreadData</a>), InputType <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1097e0bdb0a7bbac499269e69f867d16">inputData</a>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">void</span> AddOutput(OutputType outputData);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">bool</span> HasOutput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">bool</span> HasOutputFast(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">bool</span> HasInput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">bool</span> HasInputFast(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    OutputType GetOutput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> LockInput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">void</span> UnlockInput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">unsigned</span> InputSize(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    InputType GetInputAtIndex(<span class="keywordtype">unsigned</span> index);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> RemoveInputAtIndex(<span class="keywordtype">unsigned</span> index);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">void</span> LockOutput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">void</span> UnlockOutput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">unsigned</span> OutputSize(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    OutputType GetOutputAtIndex(<span class="keywordtype">unsigned</span> index);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">void</span> RemoveOutputAtIndex(<span class="keywordtype">unsigned</span> index);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">void</span> ClearInput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> ClearOutput(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">bool</span> IsWorking(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">int</span> NumThreadsWorking(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">bool</span> WasStarted(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// Block until all threads are stopped.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">bool</span> Pause(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">// Continue running</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">void</span> Resume(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// It is valid to cancel input before it is processed.  To do so, lock the inputQueue with inputQueueMutex,</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// Scan the list, and remove the item you don&#39;t want.</span></div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aed1cb4abb580c8688236782c2d6bff49">  154</a></span>&#160;    <a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml" title="An easy to use mutex.">SLNet::SimpleMutex</a> inputQueueMutex, outputQueueMutex, <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aed1cb4abb580c8688236782c2d6bff49">workingThreadCountMutex</a>, runThreadsMutex;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aacf9c53af2e2bae9560f1520ad63a1e9">  156</a></span>&#160;    <span class="keywordtype">void</span>* (*perThreadDataFactory)();</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac2f69d2ba866370e2899980a06d29df4">  157</a></span>&#160;    void (*perThreadDataDestructor)(<span class="keywordtype">void</span>*);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// inputFunctionQueue &amp; inputQueue are paired arrays so if you delete from one at a particular index you must delete from the other</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">// at the same index</span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aba1210d4a8738dbb73fd4aba224a5437">  161</a></span>&#160;    <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue&lt;OutputType (*)(InputType, bool *, void*)&gt;</a> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aba1210d4a8738dbb73fd4aba224a5437">inputFunctionQueue</a>;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac808a3f10661465e2d83a4e7579dc880">  162</a></span>&#160;    <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue&lt;InputType&gt;</a> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac808a3f10661465e2d83a4e7579dc880">inputQueue</a>;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b76ae04819bd8b15bae573217b15735">  163</a></span>&#160;    <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue&lt;OutputType&gt;</a> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b76ae04819bd8b15bae573217b15735">outputQueue</a>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af5e51a5c831a7dc16b0dad34203790b0">  165</a></span>&#160;    <a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml">ThreadDataInterface</a> *<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af5e51a5c831a7dc16b0dad34203790b0">threadDataInterface</a>;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5e346620f540fa4791d9916e51513b1d">  166</a></span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5e346620f540fa4791d9916e51513b1d">tdiContext</a>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> ThreadInputType, <span class="keyword">class</span> ThreadOutputType&gt;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">friend</span> <a class="code" href="../../db/dd5/thread_8h.xhtml#a8d70e8c30e5d6c3c86a3234ff11473d3" title="To define a thread, use RAK_THREAD_DECLARATION(functionName);.">RAK_THREAD_DECLARATION</a>(WorkerThread);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">#ifdef _WIN32</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    friend unsigned __stdcall WorkerThread( LPVOID arguments );</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">#else</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">    friend void* WorkerThread( void* arguments );</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6d53166bc98ac94b11d2f9346f8d61b2">  181</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6d53166bc98ac94b11d2f9346f8d61b2">runThreads</a>;</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#afa44d9d22aaa0b45008a146d3d99dd22">  183</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#afa44d9d22aaa0b45008a146d3d99dd22">numThreadsRunning</a>;</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a31406cbf875ff36d9d0c5ba6207382c3">  185</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a31406cbf875ff36d9d0c5ba6207382c3">numThreadsWorking</a>;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b2a6ffe4c4a62c3da27b6f1c99377e5">  187</a></span>&#160;    <a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml" title="An easy to use mutex.">SLNet::SimpleMutex</a> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b2a6ffe4c4a62c3da27b6f1c99377e5">numThreadsRunningMutex</a>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a04ce603e15a77377eec89c468f35e8a1">  189</a></span>&#160;    <a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml">SLNet::SignaledEvent</a> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a04ce603e15a77377eec89c468f35e8a1">quitAndIncomingDataEvents</a>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">// #if defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">//  SLNet::RakThread::UltUlThreadRuntime *runtime;</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;};</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml">ThreadPool.h</a>&quot;</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d81/sleep_8h.xhtml">sleep.h</a>&quot;</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> ThreadInputType, <span class="keyword">class</span> ThreadOutputType&gt;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<a class="code" href="../../db/dd5/thread_8h.xhtml#a8d70e8c30e5d6c3c86a3234ff11473d3" title="To define a thread, use RAK_THREAD_DECLARATION(functionName);.">RAK_THREAD_DECLARATION</a>(WorkerThread)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">#ifdef _WIN32</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">unsigned __stdcall WorkerThread( LPVOID arguments )</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">#else</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">void* WorkerThread( void* arguments )</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a39790962ac0b3aa15e210cdb1e87b686">  217</a></span>&#160;    <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml">ThreadPool&lt;ThreadInputType, ThreadOutputType&gt;</a> *<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a39790962ac0b3aa15e210cdb1e87b686">threadPool</a> = (<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml">ThreadPool&lt;ThreadInputType, ThreadOutputType&gt;</a>*) arguments;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1e43a7b7ea9f1fd549450012cd19ea87">  220</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1e43a7b7ea9f1fd549450012cd19ea87">returnOutput</a>;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">  221</a></span>&#160;    ThreadOutputType (*<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>)(ThreadInputType, <span class="keywordtype">bool</span> *, <span class="keywordtype">void</span>*);</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1097e0bdb0a7bbac499269e69f867d16">  222</a></span>&#160;    ThreadInputType <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1097e0bdb0a7bbac499269e69f867d16">inputData</a>;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a7f41dbde970db186fa61c616ac88754c">  223</a></span>&#160;    ThreadOutputType <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a7f41dbde970db186fa61c616ac88754c">callbackOutput</a>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>=0;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#adc398480893e637cf795fe46534ce7c4">  227</a></span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#adc398480893e637cf795fe46534ce7c4">perThreadData</a>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">if</span> (threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aacf9c53af2e2bae9560f1520ad63a1e9">perThreadDataFactory</a>)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        perThreadData=threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aacf9c53af2e2bae9560f1520ad63a1e9">perThreadDataFactory</a>();</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af5e51a5c831a7dc16b0dad34203790b0">threadDataInterface</a>)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        perThreadData=threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af5e51a5c831a7dc16b0dad34203790b0">threadDataInterface</a>-&gt;<a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#a1f11c7255aa2c0989e9a2b37b6c07d02">PerThreadFactory</a>(threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5e346620f540fa4791d9916e51513b1d">tdiContext</a>);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        perThreadData=0;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="comment">// Increase numThreadsRunning</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b2a6ffe4c4a62c3da27b6f1c99377e5">numThreadsRunningMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00237"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9281cb5ad003b9e9c8c4a55b08d71236">  237</a></span>&#160;    ++threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#afa44d9d22aaa0b45008a146d3d99dd22">numThreadsRunning</a>;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b2a6ffe4c4a62c3da27b6f1c99377e5">numThreadsRunningMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a8b9eb702eb3f9bcba3923532d1e801db">  240</a></span>&#160;    <span class="keywordflow">for</span>(;;)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">//#ifdef _WIN32</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>==0)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a04ce603e15a77377eec89c468f35e8a1">quitAndIncomingDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a2fd996cd5b65eaac7aec7e57a47a4609">WaitOnEvent</a>(1000);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">// #else</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">//      if (userCallback==0)</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">//          RakSleep(30);</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a4de670b464cb1afd303812571819aa0e">runThreadsMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">if</span> (threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6d53166bc98ac94b11d2f9346f8d61b2">runThreads</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a4de670b464cb1afd303812571819aa0e">runThreadsMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a4de670b464cb1afd303812571819aa0e">runThreadsMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aed1cb4abb580c8688236782c2d6bff49">workingThreadCountMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        ++threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a31406cbf875ff36d9d0c5ba6207382c3">numThreadsWorking</a>;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aed1cb4abb580c8688236782c2d6bff49">workingThreadCountMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="comment">// Read input data</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>=0;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a207a7b9f54818a3168d81b013c765d56">inputQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">if</span> (threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aba1210d4a8738dbb73fd4aba224a5437">inputFunctionQueue</a>.Size())</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>=threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aba1210d4a8738dbb73fd4aba224a5437">inputFunctionQueue</a>.Pop();</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            inputData=threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac808a3f10661465e2d83a4e7579dc880">inputQueue</a>.Pop();</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a207a7b9f54818a3168d81b013c765d56">inputQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            callbackOutput=<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a4b19dd09ca4acd644161cce7843d75a9">userCallback</a>(inputData, &amp;returnOutput,perThreadData);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">if</span> (returnOutput)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a89540985de3cb90dccccbd837ef80385">outputQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b76ae04819bd8b15bae573217b15735">outputQueue</a>.Push(callbackOutput, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a89540985de3cb90dccccbd837ef80385">outputQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            }           </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aed1cb4abb580c8688236782c2d6bff49">workingThreadCountMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        --threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a31406cbf875ff36d9d0c5ba6207382c3">numThreadsWorking</a>;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aed1cb4abb580c8688236782c2d6bff49">workingThreadCountMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// Decrease numThreadsRunning</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b2a6ffe4c4a62c3da27b6f1c99377e5">numThreadsRunningMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    --threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#afa44d9d22aaa0b45008a146d3d99dd22">numThreadsRunning</a>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a6b2a6ffe4c4a62c3da27b6f1c99377e5">numThreadsRunningMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">if</span> (threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac2f69d2ba866370e2899980a06d29df4">perThreadDataDestructor</a>)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac2f69d2ba866370e2899980a06d29df4">perThreadDataDestructor</a>(perThreadData);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af5e51a5c831a7dc16b0dad34203790b0">threadDataInterface</a>)</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af5e51a5c831a7dc16b0dad34203790b0">threadDataInterface</a>-&gt;<a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml#ab1c502c59f275eff7f559326ff0faf03">PerThreadDestructor</a>(perThreadData, threadPool-&gt;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5e346620f540fa4791d9916e51513b1d">tdiContext</a>);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno"><a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9717e7bbecb906637e86cef6da3d83c2">  303</a></span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a785b0bc4ecfd1ad640fb9d5ec5423bc6">  307</a></span>&#160;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a785b0bc4ecfd1ad640fb9d5ec5423bc6">ThreadPool&lt;InputType, OutputType&gt;::ThreadPool</a>()</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    runThreads=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9281cb5ad003b9e9c8c4a55b08d71236">numThreadsRunning</a>=0;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    threadDataInterface=0;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    tdiContext=0;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    numThreadsWorking=0;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;}</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a156388a0aae28b9b9202ad0fd55275c5">  317</a></span>&#160;<a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a156388a0aae28b9b9202ad0fd55275c5">ThreadPool&lt;InputType, OutputType&gt;::~ThreadPool</a>()</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;{</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    StopThreads();</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    Clear();</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a09fde0ca678340723840fae1dcda51a2">  323</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a09fde0ca678340723840fae1dcda51a2">ThreadPool&lt;InputType, OutputType&gt;::StartThreads</a>(<span class="keywordtype">int</span> numThreads, <span class="keywordtype">int</span> stackSize, <span class="keywordtype">void</span>* (*_perThreadDataFactory)(), <span class="keywordtype">void</span> (*_perThreadDataDestructor)(<span class="keywordtype">void</span> *))</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;{</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    (void) stackSize;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">// #if defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">//  runtime = SLNet::RakThread::AllocRuntime(numThreads);</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    runThreadsMutex.Lock();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">if</span> (runThreads==<span class="keyword">true</span>)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="comment">// Already running</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    quitAndIncomingDataEvents.InitEvent();</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    perThreadDataFactory=_perThreadDataFactory;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    perThreadDataDestructor=_perThreadDataDestructor;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    runThreadsMutex.Lock();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    runThreads=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    numThreadsWorking=0;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordtype">unsigned</span> threadId = 0;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    (void) threadId;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; numThreads; i++)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordtype">int</span> errorCode;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        errorCode = <a class="code" href="../../df/db9/class_s_l_net_1_1_rak_thread.xhtml#a370c3ee097f5eeee7ee09dfc14b8db91">SLNet::RakThread::Create</a>(WorkerThread&lt;InputType, OutputType&gt;, <span class="keyword">this</span>);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">if</span> (errorCode!=0)</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        {</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            StopThreads();</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        }</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="comment">// Wait for number of threads running to increase to numThreads</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordtype">bool</span> done=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">while</span> (done==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(50);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        numThreadsRunningMutex.Lock();</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9281cb5ad003b9e9c8c4a55b08d71236">numThreadsRunning</a>==numThreads)</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            done=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        numThreadsRunningMutex.Unlock();</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;}</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ad2bca8ada8b0f6c30ee3c49b90a1d31e">  382</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ad2bca8ada8b0f6c30ee3c49b90a1d31e">ThreadPool&lt;InputType, OutputType&gt;::SetThreadDataInterface</a>(<a class="code" href="../../d3/dfe/class_thread_data_interface.xhtml">ThreadDataInterface</a> *tdi, <span class="keywordtype">void</span> *context)</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;{</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    threadDataInterface=tdi;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    tdiContext=context;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ad93b8ba41d96c5f0f814ae0acabfcdfc">  388</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ad93b8ba41d96c5f0f814ae0acabfcdfc" title="Stops all threads.">ThreadPool&lt;InputType, OutputType&gt;::StopThreads</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    runThreadsMutex.Lock();</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordflow">if</span> (runThreads==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    {</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    }</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    runThreads=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="comment">// Wait for number of threads running to decrease to 0</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordtype">bool</span> done=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">while</span> (done==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        quitAndIncomingDataEvents.SetEvent();</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(50);</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        numThreadsRunningMutex.Lock();</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9281cb5ad003b9e9c8c4a55b08d71236">numThreadsRunning</a>==0)</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            done=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        numThreadsRunningMutex.Unlock();</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    quitAndIncomingDataEvents.CloseEvent();</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">// #if defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">//  SLNet::RakThread::DeallocRuntime(runtime);</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">//  runtime=0;</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;}</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00422"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5f64a8c4a4400106a2d7d03f7f9de132">  422</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5f64a8c4a4400106a2d7d03f7f9de132">ThreadPool&lt;InputType, OutputType&gt;::AddInput</a>(OutputType (*workerThreadCallback)(InputType, <span class="keywordtype">bool</span> *returnOutput, <span class="keywordtype">void</span>* perThreadData), InputType inputData)</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;{</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    inputQueueMutex.Lock();</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    inputQueue.Push(inputData, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    inputFunctionQueue.Push(workerThreadCallback, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    inputQueueMutex.Unlock();</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    quitAndIncomingDataEvents.SetEvent();</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;}</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00432"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a833f8cc619dbf051c525c2ecd7ce78a0">  432</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a833f8cc619dbf051c525c2ecd7ce78a0">ThreadPool&lt;InputType, OutputType&gt;::AddOutput</a>(OutputType outputData)</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;{</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    outputQueueMutex.Lock();</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    outputQueue.Push(outputData, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    outputQueueMutex.Unlock();</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;}</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00439"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5d517170f4b61211325ac5c9717e32e1">  439</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a5d517170f4b61211325ac5c9717e32e1">ThreadPool&lt;InputType, OutputType&gt;::HasOutputFast</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;{</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keywordflow">return</span> outputQueue.IsEmpty()==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;}</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00444"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a925d6c332e4c48bc99dc5750dfd5fcdd">  444</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a925d6c332e4c48bc99dc5750dfd5fcdd">ThreadPool&lt;InputType, OutputType&gt;::HasOutput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;{</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordtype">bool</span> res;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    outputQueueMutex.Lock();</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    res=outputQueue.IsEmpty()==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    outputQueueMutex.Unlock();</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;}</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00453"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#adde82517b452d9a74e91114a3783ce02">  453</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#adde82517b452d9a74e91114a3783ce02">ThreadPool&lt;InputType, OutputType&gt;::HasInputFast</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;{</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keywordflow">return</span> inputQueue.IsEmpty()==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;}</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00458"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aac1ae43b7b3581b5ae9803c7cae7b724">  458</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aac1ae43b7b3581b5ae9803c7cae7b724">ThreadPool&lt;InputType, OutputType&gt;::HasInput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;{</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keywordtype">bool</span> res;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    inputQueueMutex.Lock();</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    res=inputQueue.IsEmpty()==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    inputQueueMutex.Unlock();</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;}</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00467"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a568e3e2035977a38ad35aeee74ed7388">  467</a></span>&#160;OutputType <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a568e3e2035977a38ad35aeee74ed7388">ThreadPool&lt;InputType, OutputType&gt;::GetOutput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;{</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="comment">// Real output check</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    OutputType output;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    outputQueueMutex.Lock();</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    output=outputQueue.Pop();</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    outputQueueMutex.Unlock();</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00477"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af1e0cc5c3c8786fc49f60aef34160cbd">  477</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af1e0cc5c3c8786fc49f60aef34160cbd" title="Clears internal buffers.">ThreadPool&lt;InputType, OutputType&gt;::Clear</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;{</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    runThreadsMutex.Lock();</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">if</span> (runThreads)</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    {</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        inputQueueMutex.Lock();</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        inputFunctionQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        inputQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        inputQueueMutex.Unlock();</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        outputQueueMutex.Lock();</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        outputQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        outputQueueMutex.Unlock();</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    }</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        inputFunctionQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        inputQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        outputQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    }</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;}</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00500"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a024e2da38f846fc76d1fb16cf13c1b90">  500</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a024e2da38f846fc76d1fb16cf13c1b90">ThreadPool&lt;InputType, OutputType&gt;::LockInput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;{</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    inputQueueMutex.Lock();</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;}</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00505"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a710a554919e550501f9f06ab61e1d911">  505</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a710a554919e550501f9f06ab61e1d911" title="Unlock the input buffer after you are done with the functions InputSize, GetInputAtIndex, and RemoveInputAtIndex.">ThreadPool&lt;InputType, OutputType&gt;::UnlockInput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;{</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    inputQueueMutex.Unlock();</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;}</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00510"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a0c7631f35a83c4f992b881174b6c8eff">  510</a></span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a0c7631f35a83c4f992b881174b6c8eff" title="Length of the input queue.">ThreadPool&lt;InputType, OutputType&gt;::InputSize</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;{</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keywordflow">return</span> inputQueue.Size();</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;}</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00515"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a09194411e4f4d87804111459fad24522">  515</a></span>&#160;InputType <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a09194411e4f4d87804111459fad24522" title="Get the input at a specified index.">ThreadPool&lt;InputType, OutputType&gt;::GetInputAtIndex</a>(<span class="keywordtype">unsigned</span> index)</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;{</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">return</span> inputQueue[index];</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;}</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00520"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a7e41bfe6660b1a55cbf14b99b77defac">  520</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a7e41bfe6660b1a55cbf14b99b77defac" title="Remove input from a specific index. This does NOT do memory deallocation - it only removes the item f...">ThreadPool&lt;InputType, OutputType&gt;::RemoveInputAtIndex</a>(<span class="keywordtype">unsigned</span> index)</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;{</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    inputQueue.RemoveAtIndex(index);</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    inputFunctionQueue.RemoveAtIndex(index);</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;}</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00526"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a384ba5c62d60ac2e12e3f8aeea30d8bc">  526</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a384ba5c62d60ac2e12e3f8aeea30d8bc">ThreadPool&lt;InputType, OutputType&gt;::LockOutput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;{</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    outputQueueMutex.Lock();</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;}</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00531"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af6e5208df0686a4a76ecb3bbcc6ffcb2">  531</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#af6e5208df0686a4a76ecb3bbcc6ffcb2" title="Unlock the output buffer after you are done with the functions OutputSize, GetOutputAtIndex, and RemoveOutputAtIndex.">ThreadPool&lt;InputType, OutputType&gt;::UnlockOutput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;{</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    outputQueueMutex.Unlock();</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;}</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00536"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac2ebae170e7dbdbad6034ba69271f86f">  536</a></span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ac2ebae170e7dbdbad6034ba69271f86f" title="Length of the output queue.">ThreadPool&lt;InputType, OutputType&gt;::OutputSize</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;{</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">return</span> outputQueue.Size();</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;}</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00541"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ade45848613e8230e5324edabe40fcde9">  541</a></span>&#160;OutputType <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#ade45848613e8230e5324edabe40fcde9" title="Get the output at a specified index.">ThreadPool&lt;InputType, OutputType&gt;::GetOutputAtIndex</a>(<span class="keywordtype">unsigned</span> index)</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;{</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keywordflow">return</span> outputQueue[index];</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;}</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00546"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#afb4958a8df475d6060bede0fa4af7faa">  546</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#afb4958a8df475d6060bede0fa4af7faa" title="Remove output from a specific index. This does NOT do memory deallocation - it only removes the item ...">ThreadPool&lt;InputType, OutputType&gt;::RemoveOutputAtIndex</a>(<span class="keywordtype">unsigned</span> index)</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;{</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    outputQueue.RemoveAtIndex(index);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00551"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a568d636d8a27645c6641d3b4cc7308f6">  551</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a568d636d8a27645c6641d3b4cc7308f6" title="Removes all items from the input queue.">ThreadPool&lt;InputType, OutputType&gt;::ClearInput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;{</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    inputQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    inputFunctionQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;}</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00558"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a8d8d2d173ca5ddb99614ed5b9df1fb85">  558</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a8d8d2d173ca5ddb99614ed5b9df1fb85" title="Removes all items from the output queue.">ThreadPool&lt;InputType, OutputType&gt;::ClearOutput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;{</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    outputQueue.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;}</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00563"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a90b37c13ba8b9f67db4bd99ee4a5d811">  563</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a90b37c13ba8b9f67db4bd99ee4a5d811" title="Are any of the threads working, or is input or output available?">ThreadPool&lt;InputType, OutputType&gt;::IsWorking</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;{</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordtype">bool</span> isWorking;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">//  workingThreadCountMutex.Lock();</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">//  isWorking=numThreadsWorking!=0;</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">//  workingThreadCountMutex.Unlock();</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">//  if (isWorking)</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">//      return true;</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="comment">// Bug fix: Originally the order of these two was reversed.</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="comment">// It&#39;s possible with the thread timing that working could have been false, then it picks up the data in the other thread, then it checks</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="comment">// here and sees there is no data.  So it thinks the thread is not working when it was.</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="keywordflow">if</span> (HasOutputFast() &amp;&amp; HasOutput())</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">if</span> (HasInputFast() &amp;&amp; HasInput())</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="comment">// Need to check is working again, in case the thread was between the first and second checks</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    workingThreadCountMutex.Lock();</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    isWorking=numThreadsWorking!=0;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    workingThreadCountMutex.Unlock();</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keywordflow">return</span> isWorking;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;}</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00591"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aad431a8d3f28af0ae5249c7e3b819307">  591</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#aad431a8d3f28af0ae5249c7e3b819307" title="The number of currently active threads.">ThreadPool&lt;InputType, OutputType&gt;::NumThreadsWorking</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;{</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="keywordflow">return</span> numThreadsWorking;</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;}</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00597"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a531920221fd17dce38b5da74b56f2eff">  597</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a531920221fd17dce38b5da74b56f2eff" title="Did we call Start?">ThreadPool&lt;InputType, OutputType&gt;::WasStarted</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;{</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="keywordtype">bool</span> b;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    runThreadsMutex.Lock();</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    b = runThreads;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    runThreadsMutex.Unlock();</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="keywordflow">return</span> b;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;}</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00606"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a870e8e68979a7b0f1cc5b0fda7044a49">  606</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a870e8e68979a7b0f1cc5b0fda7044a49">ThreadPool&lt;InputType, OutputType&gt;::Pause</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;{</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">if</span> (WasStarted()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    workingThreadCountMutex.Lock();</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    <span class="keywordflow">while</span> (numThreadsWorking&gt;0)</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    {</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(30);</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    }</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;}</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> InputType, <span class="keyword">class</span> OutputType&gt;</div>
<div class="line"><a name="l00619"></a><span class="lineno"><a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a16261d79beca0692cc4aa97ec204fd6d">  619</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dbc/struct_thread_pool.xhtml#a16261d79beca0692cc4aa97ec204fd6d">ThreadPool&lt;InputType, OutputType&gt;::Resume</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;{</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    workingThreadCountMutex.Unlock();</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;}</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_bbb90e3ef9167a594ae33323139a2595.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_88467e66686deb9d3756fe4fc298e321.xhtml">slikenet</a></li><li class="navelem"><a class="el" href="../../dc/d0b/_thread_pool_8h.xhtml">ThreadPool.h</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

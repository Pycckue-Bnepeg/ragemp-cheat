<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dc/da9/class_data_structures_1_1_map.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d8/de6/class_data_structures_1_1_map-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">slikenet/DS_Map.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d9/dcc/class_data_structures_1_1_map__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a122af88527b9e7ed41d72f86064bcf27"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a122af88527b9e7ed41d72f86064bcf27">Map</a> ()</td></tr>
<tr class="separator:a122af88527b9e7ed41d72f86064bcf27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f77bd0f72b8292b6f0fb134409aa05"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a69f77bd0f72b8292b6f0fb134409aa05">~Map</a> ()</td></tr>
<tr class="separator:a69f77bd0f72b8292b6f0fb134409aa05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e7e6f886dc9dfe2e51f576bc492af9f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5e7e6f886dc9dfe2e51f576bc492af9f">Map</a> (const <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a> &amp;original_copy)</td></tr>
<tr class="separator:a5e7e6f886dc9dfe2e51f576bc492af9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a100e16ebbae848f9ef51892bc41cdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a8a100e16ebbae848f9ef51892bc41cdb">operator=</a> (const <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a> &amp;original_copy)</td></tr>
<tr class="separator:a8a100e16ebbae848f9ef51892bc41cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3514ebacc6a333e824d4fda7382275df"><td class="memItemLeft" align="right" valign="top">data_type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a3514ebacc6a333e824d4fda7382275df">Get</a> (const key_type &amp;key) const </td></tr>
<tr class="separator:a3514ebacc6a333e824d4fda7382275df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59bf633e857535b30db9bc81531bd5c3"><td class="memItemLeft" align="right" valign="top">data_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a59bf633e857535b30db9bc81531bd5c3">Pop</a> (const key_type &amp;key)</td></tr>
<tr class="separator:a59bf633e857535b30db9bc81531bd5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a835a751752d457c333853bfecd30e9b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a835a751752d457c333853bfecd30e9b0">Set</a> (const key_type &amp;key, const data_type &amp;data)</td></tr>
<tr class="separator:a835a751752d457c333853bfecd30e9b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1af66c855c322746bca61e7b9b26e8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac1af66c855c322746bca61e7b9b26e8d">SetExisting</a> (const key_type &amp;key, const data_type &amp;data)</td></tr>
<tr class="separator:ac1af66c855c322746bca61e7b9b26e8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101bf20cd6e9a46ed582618a48a1cfb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a101bf20cd6e9a46ed582618a48a1cfb4">SetNew</a> (const key_type &amp;key, const data_type &amp;data)</td></tr>
<tr class="separator:a101bf20cd6e9a46ed582618a48a1cfb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4620bb554cace55c0f093abafad01d9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac4620bb554cace55c0f093abafad01d9">Has</a> (const key_type &amp;key) const </td></tr>
<tr class="separator:ac4620bb554cace55c0f093abafad01d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7be78b0821c0a775b3f0acfd7560abe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#af7be78b0821c0a775b3f0acfd7560abe">Delete</a> (const key_type &amp;key)</td></tr>
<tr class="separator:af7be78b0821c0a775b3f0acfd7560abe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18776c79d20486b7bd48e2e90b9c8005"><td class="memItemLeft" align="right" valign="top">data_type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a18776c79d20486b7bd48e2e90b9c8005">operator[]</a> (const unsigned int position) const </td></tr>
<tr class="separator:a18776c79d20486b7bd48e2e90b9c8005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9472d4b96dd3a7919819120c6a1c1466"><td class="memItemLeft" align="right" valign="top">key_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a9472d4b96dd3a7919819120c6a1c1466">GetKeyAtIndex</a> (const unsigned int position) const </td></tr>
<tr class="separator:a9472d4b96dd3a7919819120c6a1c1466"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacb6191d7d678267acc8bf6286033b21"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aacb6191d7d678267acc8bf6286033b21">GetIndexAtKey</a> (const key_type &amp;key)</td></tr>
<tr class="separator:aacb6191d7d678267acc8bf6286033b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746756b18b120eed088420d9e289c0e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab746756b18b120eed088420d9e289c0e">RemoveAtIndex</a> (const unsigned index)</td></tr>
<tr class="separator:ab746756b18b120eed088420d9e289c0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d01e7c2be0ebd431ada0da5f3ebe98f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a2d01e7c2be0ebd431ada0da5f3ebe98f">Clear</a> (void)</td></tr>
<tr class="separator:a2d01e7c2be0ebd431ada0da5f3ebe98f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad33475fbf642a7df45a48d9f453c3566"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ad33475fbf642a7df45a48d9f453c3566">Size</a> (void) const </td></tr>
<tr class="separator:ad33475fbf642a7df45a48d9f453c3566"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a5ff3a8c0572c98d5c2efa3e1380c77d5"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5ff3a8c0572c98d5c2efa3e1380c77d5">IMPLEMENT_DEFAULT_COMPARISON</a> (void)</td></tr>
<tr class="separator:a5ff3a8c0572c98d5c2efa3e1380c77d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4737e24f5ae78118399dbeb80d2bd8a7"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a4737e24f5ae78118399dbeb80d2bd8a7">NodeComparisonFunc</a> (const key_type &amp;a, const <a class="el" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a> &amp;b)</td></tr>
<tr class="separator:a4737e24f5ae78118399dbeb80d2bd8a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a5b781a91324274f597aaabde5b3d6c51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a5b781a91324274f597aaabde5b3d6c51">SaveLastSearch</a> (const key_type &amp;key, unsigned index) const </td></tr>
<tr class="separator:a5b781a91324274f597aaabde5b3d6c51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3fd77fe360c86c40332ee05d2dcfeed"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab3fd77fe360c86c40332ee05d2dcfeed">HasSavedSearchResult</a> (const key_type &amp;key) const </td></tr>
<tr class="separator:ab3fd77fe360c86c40332ee05d2dcfeed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a6da1ceaa9a89aacf8469576a09e2bb33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a><br class="typebreak"/>
&lt; key_type, <a class="el" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a>,&amp;<a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a4737e24f5ae78118399dbeb80d2bd8a7">Map::NodeComparisonFunc</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a6da1ceaa9a89aacf8469576a09e2bb33">mapNodeList</a></td></tr>
<tr class="separator:a6da1ceaa9a89aacf8469576a09e2bb33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56fa2a6d431b06152fb0cd9b9f7ae1e5"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a56fa2a6d431b06152fb0cd9b9f7ae1e5">lastSearchIndex</a></td></tr>
<tr class="separator:a56fa2a6d431b06152fb0cd9b9f7ae1e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceac06eff85ef63c2e1e49e65e74f0f3"><td class="memItemLeft" align="right" valign="top">key_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aceac06eff85ef63c2e1e49e65e74f0f3">lastSearchKey</a></td></tr>
<tr class="separator:aceac06eff85ef63c2e1e49e65e74f0f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf98e8afa54e3a773569f719802bb47a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#acf98e8afa54e3a773569f719802bb47a">lastSearchIndexValid</a></td></tr>
<tr class="separator:acf98e8afa54e3a773569f719802bb47a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt;<br/>
class DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;</h3>

<dl class="section note"><dt>Note</dt><dd>IMPORTANT! If you use defaultMapKeyComparison then call IMPLEMENT_DEFAULT_COMPARISON or you will get an unresolved external linker error. </dd></dl>

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00047">47</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a122af88527b9e7ed41d72f86064bcf27"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::<a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00102">102</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a69f77bd0f72b8292b6f0fb134409aa05"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::~<a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00108">108</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5e7e6f886dc9dfe2e51f576bc492af9f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::<a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&lt; key_type, data_type, key_comparison_func &gt; &amp;&#160;</td>
          <td class="paramname"><em>original_copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00114">114</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00096">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::lastSearchIndex</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00098">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::lastSearchIndexValid</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00097">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::lastSearchKey</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00091">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::mapNodeList</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2d01e7c2be0ebd431ada0da5f3ebe98f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00282">282</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>.</p>

</div>
</div>
<a class="anchor" id="af7be78b0821c0a775b3f0acfd7560abe"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Delete </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00259">259</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="a3514ebacc6a333e824d4fda7382275df"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">data_type &amp; <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Get </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00133">133</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

<p>Referenced by <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">SLNet::StringCompressor::DecodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00371">SLNet::StringCompressor::EncodeString()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00337">SLNet::StringCompressor::GenerateTreeFromStrings()</a>, and <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00332">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GetSpanningTree()</a>.</p>

</div>
</div>
<a class="anchor" id="aacb6191d7d678267acc8bf6286033b21"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::GetIndexAtKey </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00147">147</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="a9472d4b96dd3a7919819120c6a1c1466"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">key_type <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::GetKeyAtIndex </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00295">295</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>, and <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00332">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GetSpanningTree()</a>.</p>

</div>
</div>
<a class="anchor" id="ac4620bb554cace55c0f093abafad01d9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Has </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00245">245</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">SLNet::StringCompressor::DecodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00371">SLNet::StringCompressor::EncodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00337">SLNet::StringCompressor::GenerateTreeFromStrings()</a>, and <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00332">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GetSpanningTree()</a>.</p>

</div>
</div>
<a class="anchor" id="ab3fd77fe360c86c40332ee05d2dcfeed"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::HasSavedSearchResult </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00320">320</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5ff3a8c0572c98d5c2efa3e1380c77d5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::IMPLEMENT_DEFAULT_COMPARISON </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00050">50</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00327">SLNet::StringCompressor::StringCompressor()</a>.</p>

</div>
</div>
<a class="anchor" id="a4737e24f5ae78118399dbeb80d2bd8a7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::NodeComparisonFunc </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00063">63</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8a100e16ebbae848f9ef51892bc41cdb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&lt; key_type, data_type, key_comparison_func &gt; &amp; <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a>&lt; key_type, data_type, key_comparison_func &gt; &amp;&#160;</td>
          <td class="paramname"><em>original_copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00123">123</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00096">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::lastSearchIndex</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00098">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::lastSearchIndexValid</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00097">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::lastSearchKey</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00091">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::mapNodeList</a>.</p>

</div>
</div>
<a class="anchor" id="a18776c79d20486b7bd48e2e90b9c8005"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">data_type &amp; <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00289">289</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a59bf633e857535b30db9bc81531bd5c3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">data_type <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Pop </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00171">171</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="ab746756b18b120eed088420d9e289c0e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::RemoveAtIndex </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00164">164</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5b781a91324274f597aaabde5b3d6c51"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::SaveLastSearch </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00307">307</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a835a751752d457c333853bfecd30e9b0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Set </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00189">189</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00337">SLNet::StringCompressor::GenerateTreeFromStrings()</a>, and <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00327">SLNet::StringCompressor::StringCompressor()</a>.</p>

</div>
</div>
<a class="anchor" id="ac1af66c855c322746bca61e7b9b26e8d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::SetExisting </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00214">214</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="a101bf20cd6e9a46ed582618a48a1cfb4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::SetNew </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00234">234</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, and <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="ad33475fbf642a7df45a48d9f453c3566"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::Size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00301">301</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00332">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GetSpanningTree()</a>, and <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00365">SLNet::StringCompressor::~StringCompressor()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a56fa2a6d431b06152fb0cd9b9f7ae1e5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::lastSearchIndex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00096">96</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00114">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Map()</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00123">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="acf98e8afa54e3a773569f719802bb47a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::lastSearchIndexValid</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00098">98</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00114">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Map()</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00123">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="aceac06eff85ef63c2e1e49e65e74f0f3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">key_type <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::lastSearchKey</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00097">97</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00114">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Map()</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00123">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a6da1ceaa9a89aacf8469576a09e2bb33"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const key_type &amp;) key_comparison_func = defaultMapKeyComparison&lt;key_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type,<a class="el" href="../../df/d7b/struct_data_structures_1_1_map_1_1_map_node.xhtml">MapNode</a>,&amp;<a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a4737e24f5ae78118399dbeb80d2bd8a7">Map::NodeComparisonFunc</a> &gt; <a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">DataStructures::Map</a>&lt; key_type, data_type, key_comparison_func &gt;::mapNodeList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00091">91</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

<p>Referenced by <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00114">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Map()</a>, and <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00123">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a></li><li class="navelem"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('df/d75/class_s_l_net_1_1_bit_stream.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SLNet::BitStream Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a823fec57a5ca6638d88aafdc199cb770">AddBitsAndReallocate</a>(const BitSize_t numberOfBitsToWrite)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e">AlignReadToByteBoundary</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1083ab999b52c839709eab5cff65a68d">AlignWriteToByteBoundary</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab1a8071ceb18c40f5cabb71baeb06cab">AssertCopyData</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8356257038e2f62d42c5f8a7a828e423">AssertStreamEmpty</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af1db2867532d571330d4676cf7a34093">BitStream</a>()</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a21b91524d379f7967a9927309a91d1b8">BitStream</a>(const unsigned int initialBytesToAllocate)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad8b1dab63cf5be0d8b0fe7e3785ac5f3">BitStream</a>(unsigned char *_data, const unsigned int lengthInBytes, bool _copyData)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a382ada68f7a9073ea57e4403d478d391">CopyData</a>(unsigned char **_data) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adc5a85144836608947830e902cca005f">DoEndianSwap</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a758cee77f4ab3a281f62ab11d7270788">EndianSwapBytes</a>(int byteOffset, int length)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a757cf284665353e8d3e1bcf5f739f1b2">GetNumberOfBitsAllocated</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8">GetNumberOfBitsUsed</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e">GetNumberOfBytesUsed</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89838c39f170290405c95d78b0553e51">GetNumberOfUnreadBits</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1bbe42adf8f779256b04d5becdafe342">GetReadOffset</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8e2fb36a0d43673e19ea6386e0637f86">GetWriteOffset</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9">IgnoreBits</a>(const BitSize_t numberOfBits)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5">IgnoreBytes</a>(const unsigned int numberOfBytes)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af85ce50757f06bfbd6fc4a88dd24cdae">IsBigEndian</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ae15a547910af2c67bf6398ae1995cfb6">IsNetworkOrder</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac9c35e0d435935618e4297c747b519eb">IsNetworkOrderInternal</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3aefd36be73485fe931841734bc113c4">NumberOfLeadingZeroes</a>(uint8_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2a50366025162d367f6c77a3ee9049f1">NumberOfLeadingZeroes</a>(uint16_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a98e54d7767889411d2a2cd9ac47eb856">NumberOfLeadingZeroes</a>(uint32_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f3c4fef67c6b5c497770ebe06433a1">NumberOfLeadingZeroes</a>(uint64_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8118a578116f83e21003e0eb478ed9a7">NumberOfLeadingZeroes</a>(int8_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af17a8615c1a425a4007218a6a96b5886">NumberOfLeadingZeroes</a>(int16_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad58e8c1b47f406877e83bbc11e7a571b">NumberOfLeadingZeroes</a>(int32_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aaaf7b5288a2ffe1b23ba589cbb776eae">NumberOfLeadingZeroes</a>(int64_t x)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a76ea2ef937a428e9d907a7367fd92b12">PadWithZeroToByteLength</a>(unsigned int bytes)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4d913e3b4b6dbb248232cff5f6c63373">PrintBits</a>(char *out) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4b8e314a2333234cb22f19a7f4f8e396">PrintBits</a>(char *out, size_t outLength) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8b1c9bed1a2422958df70b85cba36e15">PrintBits</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a22c60dd2e995a6aa945bc07c26aab6a4">PrintHex</a>(char *out) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a5a2d5125221a47c202a990c4c0431b24">PrintHex</a>(char *out, size_t outLength) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa8d69ec9099a7c6b764d85c5b9dd0bd5">PrintHex</a>(void) const </td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db">Read</a>(templateType &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#afcb7a9e10cbf1f5066eb3bb06ce73bf1">Read</a>(wchar_t *&amp;varString)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a600ecddd3fd2c59947dbfe015748a37e">Read</a>(wchar_t *&amp;varString, size_t varStringLength)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ae568e33ec319a8289adbdb6a6ebc4252">Read</a>(BitStream *bitStream, BitSize_t numberOfBits)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a043431378c29eb8c0416f09c4a8bd5e0">Read</a>(BitStream *bitStream)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0bc891ac76aa6daf80eeefd19233bb91">Read</a>(BitStream &amp;bitStream, BitSize_t numberOfBits)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2cd5ca3a2fa3184fc4a41628cda502e8">Read</a>(BitStream &amp;bitStream)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac4b75897143fcb32e0c6aa1aede92d75">Read</a>(char *output, const unsigned int numberOfBytes)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7320a2c9aeeb6f24864117d4f2c2fc66">Read</a>(char *varString)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad48af6564699b5cc2716803553734cb6">Read</a>(unsigned char *varString)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3be8fefec92fbe9157069d8be6123a59">Read</a>(bool &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a948cb0ecbfbe927b859fc36b534aa39c">Read</a>(SystemAddress &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#abbedcfef322eae8accfafff707a7395f">Read</a>(uint24_t &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa65e0b4ad1d3f70faa20d22a247c9484">Read</a>(RakNetGUID &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa16880b2d0a00e57f1fb51faef460d6c">Read</a>(RakString &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a73e599a00905d0cf5f7421584fafe1b9">Read</a>(RakWString &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a402aa10d544046397be3912d5c617298">Read</a>(char *&amp;varString)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a562726fbe919605b443ba883ef3cb2d1">Read</a>(unsigned char *&amp;varString)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0">ReadAlignedBytes</a>(unsigned char *inOutByteArray, const unsigned int numberOfBytesToRead)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ace8f019740123ef38d358fc824a7e917">ReadAlignedBytesSafe</a>(char *inOutByteArray, int &amp;inputLength, const int maxBytesToRead)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a199b0f44f84b486989b387cba5de2194">ReadAlignedBytesSafe</a>(char *inOutByteArray, unsigned int &amp;inputLength, const unsigned int maxBytesToRead)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac0de4d120c23b53f15b786d2b86d202d">ReadAlignedBytesSafeAlloc</a>(char **outByteArray, int &amp;inputLength, const unsigned int maxBytesToRead)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a55c128fac4d60aceb187058356869e33">ReadAlignedBytesSafeAlloc</a>(char **outByteArray, unsigned int &amp;inputLength, const unsigned int maxBytesToRead)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7d2337062c1c9bd85b5e0344c6b19893">ReadAlignedVar16</a>(char *inOutByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#abeed6358066f78da4346900c0cea1143">ReadAlignedVar32</a>(char *inOutByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8e9a550e276c5e5c7cdd94c6090f16c8">ReadAlignedVar8</a>(char *inOutByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a713747c97050062797ef5d211f583cea">ReadBit</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8b621ad8c094410bc4cb44b24720320f">ReadBits</a>(unsigned char *inOutByteArray, BitSize_t numberOfBitsToRead, const bool alignBitsToRight=true)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#abad130ab2cb67adadf2001496501a2aa">ReadBitsFromIntegerRange</a>(templateType &amp;value, const templateType minimum, const templateType maximum, bool allowOutsideRange=false)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#acb457a394ffdff34693b8ced1d7367ed">ReadBitsFromIntegerRange</a>(templateType &amp;value, const templateType minimum, const templateType maximum, const int requiredBits, bool allowOutsideRange=false)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a544430a7ba9f9dd8b7f49ece417dbc68">ReadCasted</a>(sourceType &amp;value)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac7fcbda7a05b5c7bd7018205cb1bb7b0">ReadCompressed</a>(templateType &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#affbfe9ef2322a2aef7a8ed0e5e67eecb">ReadCompressed</a>(wchar_t *&amp;varString)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7ca3f5ce31cd6cd573b3ce320e60925c">ReadCompressed</a>(wchar_t *&amp;varString, size_t varStringLength)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a76108518241879abbd1bd80536126644">ReadCompressed</a>(SystemAddress &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8b97142b3f7076cd73a4f3ad5ff1c06b">ReadCompressed</a>(uint24_t &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1c6f9a17d4c6d3c986cdff1ee973338c">ReadCompressed</a>(RakNetGUID &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7bf4fbecb41176a7df50d6598b12e240">ReadCompressed</a>(bool &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad61175b975fe96aeaadf61e374027e40">ReadCompressed</a>(float &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad5aae3bd7fd8d950e9d90a29a690b6ae">ReadCompressed</a>(double &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a113336a763312313a1366dc36a1b8fce">ReadCompressed</a>(RakString &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#acbbc3126508fa871c3a18a3b1cf672cc">ReadCompressed</a>(RakWString &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a27b318b61ec54a3b70904f05e317ae39">ReadCompressed</a>(char *&amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a95118fe34fe80171975dd5948eeae61a">ReadCompressed</a>(unsigned char *&amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a644710042a38cf4ff181a2abd8a05457">ReadCompressedDelta</a>(templateType &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a349befece0da0c0c7e82da687ca643f1">ReadCompressedDelta</a>(bool &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a92289c0daf93d018afcdfd3b3dc6d237">ReadDelta</a>(templateType &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aceff050878ca3f53433cf808cc203e2a">ReadDelta</a>(bool &amp;outTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1843797ddff3ba9805a29c28c0601a6e">ReadFloat16</a>(float &amp;outFloat, float floatMin, float floatMax)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adcdd659cc173627bb2fa9f899b2bfd4f">ReadNormQuat</a>(templateType &amp;w, templateType &amp;x, templateType &amp;y, templateType &amp;z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac88d7df22922c0702bdc5c9e2e5086c5">ReadNormVector</a>(templateType &amp;x, templateType &amp;y, templateType &amp;z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af70e3f0d833380a92cd52b6cb79f7112">ReadOrthMatrix</a>(templateType &amp;m00, templateType &amp;m01, templateType &amp;m02, templateType &amp;m10, templateType &amp;m11, templateType &amp;m12, templateType &amp;m20, templateType &amp;m21, templateType &amp;m22)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#abbca46ec9d00b68915a2828825307dce">ReadVector</a>(templateType &amp;x, templateType &amp;y, templateType &amp;z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aab4381d8b4a48dbc8e2975dba894f350">Reset</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20">ResetReadPointer</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a62b03848992c3afd7131751d8fe62b6c">ResetWritePointer</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#add30bae01b699057803b6d04f4af9a01">ReverseBytes</a>(unsigned char *inByteArray, unsigned char *inOutByteArray, const unsigned int length)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3ba4c1a60776e63dcf17396b536d3fe8">ReverseBytesInPlace</a>(unsigned char *inOutData, const unsigned int length)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa6910541ec501aa4fdc0124448475a54">Serialize</a>(bool writeToBitstream, templateType &amp;inOutTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adb8b59b685fab9d164cf9f79d1926c35">Serialize</a>(bool writeToBitstream, char *inOutByteArray, const unsigned int numberOfBytes)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#afffb2bf1353499090b556cb91cff25f7">SerializeBits</a>(bool writeToBitstream, unsigned char *inOutByteArray, const BitSize_t numberOfBitsToSerialize, const bool rightAlignedBits=true)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a09cbff385577e6e05df5b61d49bad446">SerializeBitsFromIntegerRange</a>(bool writeToBitstream, templateType &amp;value, const templateType minimum, const templateType maximum, bool allowOutsideRange=false)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a409805d8c9cfee90827ef6e2f2aa5322">SerializeBitsFromIntegerRange</a>(bool writeToBitstream, templateType &amp;value, const templateType minimum, const templateType maximum, const int requiredBits, bool allowOutsideRange=false)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a38ca97cb05be40fb1826ad9701e9fdf5">SerializeCasted</a>(bool writeToBitstream, sourceType &amp;value)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8ea9768600e8abaa0722c9d491997bc3">SerializeCompressed</a>(bool writeToBitstream, templateType &amp;inOutTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a600b752633117fbf715bd199d8118942">SerializeCompressedDelta</a>(bool writeToBitstream, templateType &amp;inOutCurrentValue, const templateType &amp;lastValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a00f168a0df019be64315646615059a5a">SerializeCompressedDelta</a>(bool writeToBitstream, templateType &amp;inOutTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a23445a55c57cb0b56c0e5edeaf6bbfb5">SerializeDelta</a>(bool writeToBitstream, templateType &amp;inOutCurrentValue, const templateType &amp;lastValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adc841e477fd8e65f7e84aaf7d6d8bdee">SerializeDelta</a>(bool writeToBitstream, templateType &amp;inOutCurrentValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a32cca7cd3fc08b8ce8fb8c91774674b5">SerializeFloat16</a>(bool writeToBitstream, float &amp;inOutFloat, float floatMin, float floatMax)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3db80f305f1fe2cbe0a16f89541e505b">SerializeNormQuat</a>(bool writeToBitstream, templateType &amp;w, templateType &amp;x, templateType &amp;y, templateType &amp;z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa136a9299131b1eca1945ae3865b280f">SerializeNormVector</a>(bool writeToBitstream, templateType &amp;x, templateType &amp;y, templateType &amp;z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8745666cfade172e8f1f2bec554ba00b">SerializeOrthMatrix</a>(bool writeToBitstream, templateType &amp;m00, templateType &amp;m01, templateType &amp;m02, templateType &amp;m10, templateType &amp;m11, templateType &amp;m12, templateType &amp;m20, templateType &amp;m21, templateType &amp;m22)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a20e66c7208e56a307472ca0b58ded78e">SerializeVector</a>(bool writeToBitstream, templateType &amp;x, templateType &amp;y, templateType &amp;z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a27a6cd95f4e69e30a4404f044359399e">SetData</a>(unsigned char *inByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a980c2ec77c1d6ab7cb34d2a1d0b1d308">SetNumberOfBitsAllocated</a>(const BitSize_t lengthInBits)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8715199c63a057205ef5bd27f6b068d4">SetReadOffset</a>(const BitSize_t newReadOffset)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a751b4600c1e9ea4419a9358a77a6ee50">SetWriteOffset</a>(const BitSize_t offset)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201">Write</a>(const templateType &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8de29ebe8bae61200ecec539738a54ac">Write</a>(const char *inputByteArray, const unsigned int numberOfBytes)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a687a35acdae43f2d289ff299d55cad53">Write</a>(BitStream *bitStream, BitSize_t numberOfBits)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac664d5a8f8f0688dfc10bcef8da02d0e">Write</a>(BitStream *bitStream)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#abc0bfd441ef5edf06cc372fa029863f8">Write</a>(BitStream &amp;bitStream, BitSize_t numberOfBits)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad861d82b80824875b177d2cfdc862db9">Write</a>(BitStream &amp;bitStream)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#afc34a30fbd308effc85c522ba0676315">Write</a>(const char *const inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4e66f045792b0783e5a20aa0ebc4eede">Write</a>(const wchar_t *const inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a5f33cf08fe7aeef45ab26fdd69b2cca5">Write</a>(const unsigned char *const inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a35e3542e5071900e9a9e15566bf103c1">Write</a>(char *const inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa77a60e83d3b6d4d380d0120916ff018">Write</a>(unsigned char *const inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a17db358b09a207c7dd730a2a06fcc6a5">Write</a>(const bool &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab17cf888cee7d6fa1f1df1a6a2adaac1">Write</a>(const SystemAddress &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a04994a895a2554547fa7fa3610184c49">Write</a>(const uint24_t &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a69b6fe2a47eec0552f33e2f2d1a95d39">Write</a>(const RakNetGUID &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a09b3fd092512ac707256316febfe45f1">Write</a>(const RakString &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a38a6b75ab9ddb36aac2624009b80b572">Write</a>(const RakWString &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab77133d4e9996ad6de5d0816c23f6eb2">Write</a>(const char *const &amp;inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab6314bcce863b869438435f1ab0df7b1">Write</a>(const wchar_t *const &amp;inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab844ab07e09670d7e73216770151a2b9">Write</a>(const unsigned char *const &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a144a7fc4013f9e60465e23ca6675c37c">Write</a>(char *const &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ae0dfba5004068ea2d7b6b3c5e4bd5daf">Write</a>(unsigned char *const &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a6ab8d1f78d5d37de6db82f4b8002c218">Write0</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2060f594db2a6182038259c9db7eeb31">Write1</a>(void)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5">WriteAlignedBytes</a>(const unsigned char *inByteArray, const unsigned int numberOfBytesToWrite)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a04d3ec5e1e1cccf01a4b058f80d41c9b">WriteAlignedBytesSafe</a>(const char *inByteArray, const unsigned int inputLength, const unsigned int maxBytesToWrite)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8e5684a529734bdb62349ed60c2bab30">WriteAlignedVar16</a>(const char *inByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a03d2df12a3cc011fe7c3044174d8d05f">WriteAlignedVar32</a>(const char *inByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af094784f8d431c8bfe433a63a6721d3a">WriteAlignedVar8</a>(const char *inByteArray)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8bf3d5d6926d80a9dba19dea5eecb7d2">WriteBits</a>(const unsigned char *inByteArray, BitSize_t numberOfBitsToWrite, const bool rightAlignedBits=true)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a090f1303f8ec22dd12ce75038dc2d81f">WriteBitsFromIntegerRange</a>(const templateType value, const templateType minimum, const templateType maximum, bool allowOutsideRange=false)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a774d6e5f9f9ea8bec1da788b63e61775">WriteBitsFromIntegerRange</a>(const templateType value, const templateType minimum, const templateType maximum, const int requiredBits, bool allowOutsideRange=false)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a389b1cb2d6ab054a9949efe7f1748374">WriteCasted</a>(const sourceType &amp;value)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b">WriteCompressed</a>(const templateType &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aad7b05bdb2fb348e2c3729c2e27765bb">WriteCompressed</a>(const char *const inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3b9087c0bedeb27099c150c7a026207d">WriteCompressed</a>(const wchar_t *const inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3d5efc21092d3b5f6a523585d507e39c">WriteCompressed</a>(const unsigned char *const inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad7383df8e2a706bff7582a344ed80df6">WriteCompressed</a>(char *const inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a6aaa710551c5f1fd34999eacf1d8192d">WriteCompressed</a>(unsigned char *const inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#abc7bf145c6366bef86450bcd25ce027f">WriteCompressed</a>(const SystemAddress &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a9d9077703b30be7dfb0c85ebe707f832">WriteCompressed</a>(const RakNetGUID &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa41d1a795129d02e9e979d16f6c5a18c">WriteCompressed</a>(const uint24_t &amp;var)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad134a12b137d1706a4e135ef422ce97f">WriteCompressed</a>(const bool &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aa2d1009dd9d5d2f8efc2b24f419d3800">WriteCompressed</a>(const float &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a650b913a3491b2035d99474b2ce22ff1">WriteCompressed</a>(const double &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adb431b7a22e43503a7f2392d8ab04c72">WriteCompressed</a>(const RakString &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#afeba3e8d4d6e9fb45a7b6f8e084971a8">WriteCompressed</a>(const RakWString &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3045a2fba93ccbe320ab1c43e2608d24">WriteCompressed</a>(const char *const &amp;inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad7412140debdc31eb02176b7663fa6d3">WriteCompressed</a>(const wchar_t *const &amp;inStringVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3497ff9d098670c507b776016dab18d9">WriteCompressed</a>(const unsigned char *const &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7a2e58e7ab16fbbfc7b24d6bb5a0d803">WriteCompressed</a>(char *const &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af9f2dfd81c1d2a57a2b067d05d5c4bc0">WriteCompressed</a>(unsigned char *const &amp;inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a42a0d2b1bcdb13f19996f73d5aecf73e">WriteCompressedDelta</a>(const templateType &amp;currentValue, const templateType &amp;lastValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a32bb314e085d6793481386cb13bd6976">WriteCompressedDelta</a>(const templateType &amp;currentValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af5b85dddc11e784bccb31a46af2bf948">WriteCompressedDelta</a>(const bool &amp;currentValue, const bool &amp;lastValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4639a7b9b8ff0739963c76fa07154bab">WriteCompressedDelta</a>(const bool &amp;currentValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a11078d27535f5cf4c1822bca0672d2fe">WriteDelta</a>(const templateType &amp;currentValue, const templateType &amp;lastValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ae977f9207c42ce4b10ef8b3d9b0ceba3">WriteDelta</a>(const templateType &amp;currentValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a720b28dc011b7ffd4d15efa4da70afdc">WriteDelta</a>(const bool &amp;currentValue, const bool &amp;lastValue)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#affbc2f1d2416053fe320e834bdecb8a7">WriteFloat16</a>(float x, float floatMin, float floatMax)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad5d87e34c452f1bc1e51ce3fa0ab6ecf">WriteNormQuat</a>(templateType w, templateType x, templateType y, templateType z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a03e238407281a89dc845bcc185f19e34">WriteNormVector</a>(templateType x, templateType y, templateType z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a095eb8e8065bc8f87d2c467eaf648771">WriteOrthMatrix</a>(templateType m00, templateType m01, templateType m02, templateType m10, templateType m11, templateType m12, templateType m20, templateType m21, templateType m22)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a9b31fc2f422dd8fc1b4f6c78dd2a3a0d">WritePtr</a>(templateType *inTemplateVar)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ad1fa20760282a80581e24d039d16ab94">WriteVector</a>(templateType x, templateType y, templateType z)</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a63cf0f27c7519417a7984c476a32c9c9">~BitStream</a>()</td><td class="entry"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Plugins</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a>  </div>
  <div class="headertitle">
<div class="title">Plugins</div>  </div>
<div class="ingroups"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml">PluginInterface2</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:d8/df5/group___c_l_o_u_d___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/df5/group___c_l_o_u_d___g_r_o_u_p.xhtml">CloudComputing</a></td></tr>
<tr class="memdesc:d8/df5/group___c_l_o_u_d___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains the <a class="el" href="../../d8/df5/group___c_l_o_u_d___g_r_o_u_p.xhtml#dc/d7d/class_s_l_net_1_1_cloud_client" title="Performs Post() and Get() operations on CloudMemoryServer.">CloudClient</a> and <a class="el" href="../../d8/df5/group___c_l_o_u_d___g_r_o_u_p.xhtml#db/d6e/class_s_l_net_1_1_cloud_server" title="Stores client data, and allows cross-server communication to retrieve this data.">CloudServer</a> plugins. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:dd/d9f/group___d_i_r_e_c_t_o_r_y___d_e_l_t_a___t_r_a_n_s_f_e_r___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d9f/group___d_i_r_e_c_t_o_r_y___d_e_l_t_a___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml">DirectoryDeltaTransfer</a></td></tr>
<tr class="memdesc:dd/d9f/group___d_i_r_e_c_t_o_r_y___d_e_l_t_a___t_r_a_n_s_f_e_r___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple class to send changes between directories. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml">FileListTransfer</a></td></tr>
<tr class="memdesc:d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">A plugin to provide a simple way to compress and incrementally send the files in the <a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> structure. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml">MessageFilter</a></td></tr>
<tr class="memdesc:dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remote incoming packets from unauthorized systems. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:db/d81/group___n_a_t___p_u_n_c_h_t_h_r_o_u_g_h___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d81/group___n_a_t___p_u_n_c_h_t_h_r_o_u_g_h___g_r_o_u_p.xhtml">NatPunchthrough</a></td></tr>
<tr class="memdesc:db/d81/group___n_a_t___p_u_n_c_h_t_h_r_o_u_g_h___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect systems despite both systems being behind a router. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d4/de2/group___n_a_t___t_y_p_e___d_e_t_e_c_t_i_o_n___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de2/group___n_a_t___t_y_p_e___d_e_t_e_c_t_i_o_n___g_r_o_u_p.xhtml">NatTypeDetection</a></td></tr>
<tr class="memdesc:d4/de2/group___n_a_t___t_y_p_e___d_e_t_e_c_t_i_o_n___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use a remote server with multiple IP addresses to determine what type of NAT your router is using. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:dc/d7d/group___p_a_c_k_e_t_l_o_g_g_e_r___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d7d/group___p_a_c_k_e_t_l_o_g_g_e_r___g_r_o_u_p.xhtml">PacketLogger</a></td></tr>
<tr class="memdesc:dc/d7d/group___p_a_c_k_e_t_l_o_g_g_e_r___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print out incoming messages to a target destination. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d7/dda/group___r_e_a_d_y___e_v_e_n_t___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dda/group___r_e_a_d_y___e_v_e_n_t___g_r_o_u_p.xhtml">ReadyEvent</a></td></tr>
<tr class="memdesc:d7/dda/group___r_e_a_d_y___e_v_e_n_t___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Peer to peer synchronized ready and unready events. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:df/d66/group___r_e_l_a_y___p_l_u_g_i_n___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d66/group___r_e_l_a_y___p_l_u_g_i_n___g_r_o_u_p.xhtml">RelayPlugin</a></td></tr>
<tr class="memdesc:df/d66/group___r_e_l_a_y___p_l_u_g_i_n___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">A simple class to relay messages from one system to another through an intermediary. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3.xhtml">ReplicaManager3</a></td></tr>
<tr class="memdesc:d0/d63/group___r_e_p_l_i_c_a___m_a_n_a_g_e_r___g_r_o_u_p3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Third implementation of object replication. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:db/d4d/group___r_o_u_t_e_r__2___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/group___r_o_u_t_e_r__2___g_r_o_u_p.xhtml">Router2</a></td></tr>
<tr class="memdesc:db/d4d/group___r_o_u_t_e_r__2___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Part of the NAT punchthrough solution, allowing you to connect to systems by routing through a shared connection. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml">RPC</a></td></tr>
<tr class="memdesc:d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remote procedure calls, without external dependencies. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d7/dfc/group___t_e_a_m___b_a_l_a_n_c_e_r___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dfc/group___t_e_a_m___b_a_l_a_n_c_e_r___g_r_o_u_p.xhtml">TeamBalancer</a></td></tr>
<tr class="memdesc:d7/dfc/group___t_e_a_m___b_a_l_a_n_c_e_r___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set and network team selection (supports peer to peer or client/server) <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d1/dc9/group___t_e_a_m___m_a_n_a_g_e_r___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/dc9/group___t_e_a_m___m_a_n_a_g_e_r___g_r_o_u_p.xhtml">TeamManager</a></td></tr>
<tr class="memdesc:d1/dc9/group___t_e_a_m___m_a_n_a_g_e_r___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Automates networking and list management for teams. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml">RakNetTransport</a></td></tr>
<tr class="memdesc:df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">UDP based transport implementation for the <a class="el" href="../../dc/dbe/class_s_l_net_1_1_console_server.xhtml" title="The main entry point for the server portion of your remote console application support.">ConsoleServer</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d1/d95/group___u_d_p___p_r_o_x_y___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d95/group___u_d_p___p_r_o_x_y___g_r_o_u_p.xhtml">UDPProxy</a></td></tr>
<tr class="memdesc:d1/d95/group___u_d_p___p_r_o_x_y___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forwards UDP datagrams from one system to another. Protocol independent. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:dd/d3f/class_s_l_net_1_1_statistics_history_plugin"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#dd/d3f/class_s_l_net_1_1_statistics_history_plugin">SLNet::StatisticsHistoryPlugin</a></td></tr>
<tr class="memdesc:dd/d3f/class_s_l_net_1_1_statistics_history_plugin"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input numerical values over time. Get sum, average, highest, lowest, standard deviation on recent or all-time values.  <a href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#dd/d3f/class_s_l_net_1_1_statistics_history_plugin">More...</a><br/></td></tr>
<tr class="separator:dd/d3f/class_s_l_net_1_1_statistics_history_plugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d7/d56/class_s_l_net_1_1_two_way_authentication"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d7/d56/class_s_l_net_1_1_two_way_authentication">SLNet::TwoWayAuthentication</a></td></tr>
<tr class="memdesc:d7/d56/class_s_l_net_1_1_two_way_authentication"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements two way authentication.  <a href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d7/d56/class_s_l_net_1_1_two_way_authentication">More...</a><br/></td></tr>
<tr class="separator:d7/d56/class_s_l_net_1_1_two_way_authentication"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request">SLNet::TwoWayAuthentication::NonceAndRemoteSystemRequest</a></td></tr>
<tr class="separator:d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator">SLNet::TwoWayAuthentication::NonceGenerator</a></td></tr>
<tr class="separator:d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge">SLNet::TwoWayAuthentication::PendingChallenge</a></td></tr>
<tr class="separator:d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<hr/><h2 class="groupheader">Class Documentation</h2>
<a name="dd/d3f/class_s_l_net_1_1_statistics_history_plugin" id="dd/d3f/class_s_l_net_1_1_statistics_history_plugin"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">class SLNet::StatisticsHistoryPlugin</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>Input numerical values over time. Get sum, average, highest, lowest, standard deviation on recent or all-time values. </p>

<p>Definition at line <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml#l00208">208</a> of file <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml">StatisticsHistory.h</a>.</p>
</div><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::StatisticsHistoryPlugin:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d9/d0c/class_s_l_net_1_1_statistics_history_plugin__inherit__graph.svg" width="206" height="595"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a94f1fdc87508f2d30ccda43e5668dbf0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a94f1fdc87508f2d30ccda43e5668dbf0">StatisticsHistoryPlugin</a> ()</td></tr>
<tr class="separator:a94f1fdc87508f2d30ccda43e5668dbf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a827569d76844b2d89508776426d27faa"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a827569d76844b2d89508776426d27faa">~StatisticsHistoryPlugin</a> ()</td></tr>
<tr class="separator:a827569d76844b2d89508776426d27faa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35489f1f197eeb6acb625ebe62cec4ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a35489f1f197eeb6acb625ebe62cec4ac">SetTrackConnections</a> (bool _addNewConnections, int <a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#aca3dd46c7d7d0d776742ba7842c7714b">newConnectionsObjectType</a>, bool _removeLostConnections)</td></tr>
<tr class="separator:a35489f1f197eeb6acb625ebe62cec4ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">OnAttach</a> (void)</td></tr>
<tr class="memdesc:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#afe33b32b1729289a809ada304227cbd8"></a><br/></td></tr>
<tr class="separator:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a401ad0acd5d326d7307e2f4fce20ea inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a3a401ad0acd5d326d7307e2f4fce20ea inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#aea8a90c4078ecc0db77545e44531b1de"></a><br/></td></tr>
<tr class="separator:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Public Attributes</h3></td></tr>
<tr class="memitem:a48d60d13d6b3d98f9a858745a2e0f9fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d5b/class_s_l_net_1_1_statistics_history.xhtml">StatisticsHistory</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a48d60d13d6b3d98f9a858745a2e0f9fa">statistics</a></td></tr>
<tr class="separator:a48d60d13d6b3d98f9a858745a2e0f9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Member Functions</h3></td></tr>
<tr class="memitem:a0851a28b2628da19da644a0603e87565"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a0851a28b2628da19da644a0603e87565">Update</a> (void)</td></tr>
<tr class="memdesc:a0851a28b2628da19da644a0603e87565"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#a0851a28b2628da19da644a0603e87565"></a><br/></td></tr>
<tr class="separator:a0851a28b2628da19da644a0603e87565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa837c3d5c5e20003c5837a422e44056d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#aa837c3d5c5e20003c5837a422e44056d">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:aa837c3d5c5e20003c5837a422e44056d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae85b0d06b0b745f3dbd392bbdf0b8a25"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ae85b0d06b0b745f3dbd392bbdf0b8a25">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:ae85b0d06b0b745f3dbd392bbdf0b8a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Attributes</h3></td></tr>
<tr class="memitem:a4940877d58c34e13a4f520206d9b9d6d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a4940877d58c34e13a4f520206d9b9d6d">addNewConnections</a></td></tr>
<tr class="separator:a4940877d58c34e13a4f520206d9b9d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94bcd01315a888d5a072f876d740fd33"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a94bcd01315a888d5a072f876d740fd33">removeLostConnections</a></td></tr>
<tr class="separator:a94bcd01315a888d5a072f876d740fd33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca3dd46c7d7d0d776742ba7842c7714b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#aca3dd46c7d7d0d776742ba7842c7714b">newConnectionsObjectType</a></td></tr>
<tr class="separator:aca3dd46c7d7d0d776742ba7842c7714b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a94f1fdc87508f2d30ccda43e5668dbf0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::StatisticsHistoryPlugin::StatisticsHistoryPlugin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a827569d76844b2d89508776426d27faa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::StatisticsHistoryPlugin::~StatisticsHistoryPlugin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Function Documentation</h4>
<a class="anchor" id="aa837c3d5c5e20003c5837a422e44056d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::StatisticsHistoryPlugin::OnClosedConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a>&#160;</td>
          <td class="paramname"><em>lostConnectionReason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when a connection is dropped because the user called <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408" title="Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).">RakPeer::CloseConnection()</a> for a particular system </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The system whose connection was closed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lostConnectionReason</td><td>How the connection was closed: manually, connection lost, or notification of disconnection </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="ae85b0d06b0b745f3dbd392bbdf0b8a25"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::StatisticsHistoryPlugin::OnNewConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isIncoming</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when we got a new connection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>Address of the new connection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isIncoming</td><td>If true, this is ID_NEW_INCOMING_CONNECTION, or the equivalent </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a35489f1f197eeb6acb625ebe62cec4ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::StatisticsHistoryPlugin::SetTrackConnections </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>_addNewConnections</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>newConnectionsObjectType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>_removeLostConnections</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0851a28b2628da19da644a0603e87565"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::StatisticsHistoryPlugin::Update </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update is called every time a packet is checked for . </p>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="a4940877d58c34e13a4f520206d9b9d6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::StatisticsHistoryPlugin::addNewConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml#l00231">231</a> of file <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml">StatisticsHistory.h</a>.</p>

</div>
</div>
<a class="anchor" id="aca3dd46c7d7d0d776742ba7842c7714b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::StatisticsHistoryPlugin::newConnectionsObjectType</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml#l00233">233</a> of file <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml">StatisticsHistory.h</a>.</p>

</div>
</div>
<a class="anchor" id="a94bcd01315a888d5a072f876d740fd33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::StatisticsHistoryPlugin::removeLostConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml#l00232">232</a> of file <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml">StatisticsHistory.h</a>.</p>

</div>
</div>
<a class="anchor" id="a48d60d13d6b3d98f9a858745a2e0f9fa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d5b/class_s_l_net_1_1_statistics_history.xhtml">StatisticsHistory</a> SLNet::StatisticsHistoryPlugin::statistics</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml#l00214">214</a> of file <a class="el" href="../../d3/dbf/_statistics_history_8h_source.xhtml">StatisticsHistory.h</a>.</p>

</div>
</div>

</div>
</div>
<a name="d7/d56/class_s_l_net_1_1_two_way_authentication" id="d7/d56/class_s_l_net_1_1_two_way_authentication"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">class SLNet::TwoWayAuthentication</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>Implements two way authentication. </p>
<p>Given two systems, each of whom known a common password / identifier pair, verify the password without transmitting it This can be used to determine what permissions are should be allowed to the other system If the other system should not send any data until authentication passes, you can use the <a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#d4/d96/class_s_l_net_1_1_message_filter" title="Assigns systems to FilterSets. Each FilterSet limits what kinds of messages are allowed.">MessageFilter</a> plugin for this. Call <a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#a57df7903f2e46eecd56328d912284ff5">MessageFilter::SetAllowMessageID()</a> including ID_TWO_WAY_AUTHENTICATION_NEGOTIATION when doing so. Also attach <a class="el" href="../../dc/dba/group___m_e_s_s_a_g_e_f_i_l_t_e_r___g_r_o_u_p.xhtml#d4/d96/class_s_l_net_1_1_message_filter" title="Assigns systems to FilterSets. Each FilterSet limits what kinds of messages are allowed.">MessageFilter</a> first in the list of plugins </p>
<dl class="section note"><dt>Note</dt><dd>If other systems challenges us, and fails, you will get ID_TWO_WAY_AUTHENTICATION_INCOMING_CHALLENGE_FAILED. </dd></dl>

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00067">67</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>
</div><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::TwoWayAuthentication:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/dce/class_s_l_net_1_1_two_way_authentication__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a1bbca4ee3edb909fde81741f7cdc763d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a1bbca4ee3edb909fde81741f7cdc763d">TwoWayAuthentication</a> ()</td></tr>
<tr class="separator:a1bbca4ee3edb909fde81741f7cdc763d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe3e541120aea472dfff72d096a25ab4"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#afe3e541120aea472dfff72d096a25ab4">~TwoWayAuthentication</a> ()</td></tr>
<tr class="separator:afe3e541120aea472dfff72d096a25ab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0916b11ff6b6a4049340167b293f736"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ab0916b11ff6b6a4049340167b293f736">AddPassword</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> identifier, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> password)</td></tr>
<tr class="memdesc:ab0916b11ff6b6a4049340167b293f736"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a password to the list of passwords the system will accept.  <a href="#ab0916b11ff6b6a4049340167b293f736"></a><br/></td></tr>
<tr class="separator:ab0916b11ff6b6a4049340167b293f736"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24cac4a408b23ee80c8a284b6242806f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a24cac4a408b23ee80c8a284b6242806f">Challenge</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> identifier, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> remoteSystem)</td></tr>
<tr class="memdesc:a24cac4a408b23ee80c8a284b6242806f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Challenge another system for the specified identifier.  <a href="#a24cac4a408b23ee80c8a284b6242806f"></a><br/></td></tr>
<tr class="separator:a24cac4a408b23ee80c8a284b6242806f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ed9bcd3686373d418d71ce91c04d9b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a0ed9bcd3686373d418d71ce91c04d9b0">Clear</a> (void)</td></tr>
<tr class="memdesc:a0ed9bcd3686373d418d71ce91c04d9b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free all memory.  <a href="#a0ed9bcd3686373d418d71ce91c04d9b0"></a><br/></td></tr>
<tr class="separator:a0ed9bcd3686373d418d71ce91c04d9b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c6a65a3f68732e89304be63d7f554f3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a1c6a65a3f68732e89304be63d7f554f3">Update</a> (void)</td></tr>
<tr class="memdesc:a1c6a65a3f68732e89304be63d7f554f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#a1c6a65a3f68732e89304be63d7f554f3"></a><br/></td></tr>
<tr class="separator:a1c6a65a3f68732e89304be63d7f554f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30510f6274eb21d4081d0935d5e09b0f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a30510f6274eb21d4081d0935d5e09b0f">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a30510f6274eb21d4081d0935d5e09b0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63b9ab36e576ffbf94973a395a130936"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a63b9ab36e576ffbf94973a395a130936">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:a63b9ab36e576ffbf94973a395a130936"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#a63b9ab36e576ffbf94973a395a130936"></a><br/></td></tr>
<tr class="separator:a63b9ab36e576ffbf94973a395a130936"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eeb43d6ddab0645187d77c0ba151d33"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a1eeb43d6ddab0645187d77c0ba151d33">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:a1eeb43d6ddab0645187d77c0ba151d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">OnAttach</a> (void)</td></tr>
<tr class="memdesc:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#afe33b32b1729289a809ada304227cbd8"></a><br/></td></tr>
<tr class="separator:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225b5a285e1cf2b0f9b03f6133c409e8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:a225b5a285e1cf2b0f9b03f6133c409e8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Public Attributes</h3></td></tr>
<tr class="memitem:abd69e57bd42a42527a45da884a5318d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a><br class="typebreak"/>
&lt; <a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge">PendingChallenge</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#abd69e57bd42a42527a45da884a5318d3">outgoingChallenges</a></td></tr>
<tr class="separator:abd69e57bd42a42527a45da884a5318d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Member Functions</h3></td></tr>
<tr class="memitem:a9bf3b18bd759234c97faf220aa47c6a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a9bf3b18bd759234c97faf220aa47c6a5">PushToUser</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a> messageId, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> password, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a> remoteSystem)</td></tr>
<tr class="separator:a9bf3b18bd759234c97faf220aa47c6a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d60c2c3f15c2e198e9162dfe615a430"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a8d60c2c3f15c2e198e9162dfe615a430">OnNonceRequest</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a8d60c2c3f15c2e198e9162dfe615a430"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab809626888e294ced64b04a826c2145e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ab809626888e294ced64b04a826c2145e">OnNonceReply</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:ab809626888e294ced64b04a826c2145e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49704c0e457bd706a975bb750f158364"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a49704c0e457bd706a975bb750f158364">OnHashedNonceAndPassword</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a49704c0e457bd706a975bb750f158364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac749a802cdc9829e011b756d527c0683"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ac749a802cdc9829e011b756d527c0683">OnPasswordResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:ac749a802cdc9829e011b756d527c0683"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b28e2a151770a5447d9dfb73250f42a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a6b28e2a151770a5447d9dfb73250f42a">Hash</a> (char thierNonce[<a class="el" href="../../df/df8/_two_way_authentication_8h.xhtml#aaa86357a26d52aae1bbb4337f804ff62">TWO_WAY_AUTHENTICATION_NONCE_LENGTH</a>], <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> password, char out[<a class="el" href="../../df/df8/_two_way_authentication_8h.xhtml#a6c49937ccc748d8e7482399a8c6d5536">HASHED_NONCE_AND_PW_LENGTH</a>])</td></tr>
<tr class="separator:a6b28e2a151770a5447d9dfb73250f42a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Attributes</h3></td></tr>
<tr class="memitem:a4f5950a9585950680938fcf9934a4381"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a><br class="typebreak"/>
&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, <br class="typebreak"/>
<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, <br class="typebreak"/>
16, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a4f5950a9585950680938fcf9934a4381">passwords</a></td></tr>
<tr class="separator:a4f5950a9585950680938fcf9934a4381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a766fc0e8387692ea9677f5058c1f3d64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a766fc0e8387692ea9677f5058c1f3d64">whenLastTimeoutCheck</a></td></tr>
<tr class="separator:a766fc0e8387692ea9677f5058c1f3d64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36e61759a6d97672877709774c4a710c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator">NonceGenerator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a36e61759a6d97672877709774c4a710c">nonceGenerator</a></td></tr>
<tr class="separator:a36e61759a6d97672877709774c4a710c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a1bbca4ee3edb909fde81741f7cdc763d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TwoWayAuthentication::TwoWayAuthentication </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afe3e541120aea472dfff72d096a25ab4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::TwoWayAuthentication::~TwoWayAuthentication </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Function Documentation</h4>
<a class="anchor" id="ab0916b11ff6b6a4049340167b293f736"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::TwoWayAuthentication::AddPassword </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>password</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a password to the list of passwords the system will accept. </p>
<p>Each password, which is secret and not transmitted, is identified by <em>identifier</em>. <em>identifier</em> is transmitted in plaintext with the request. It is only needed because the system supports multiple password. It is used to only hash against once password on the remote system, rather than having to hash against every known password. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">identifier</td><td>A unique identifier representing this password. This is transmitted in plaintext and should be considered insecure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">password</td><td>The password to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True on success, false on identifier==password, either identifier or password is blank, or identifier is already in use </dd></dl>

</div>
</div>
<a class="anchor" id="a24cac4a408b23ee80c8a284b6242806f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::TwoWayAuthentication::Challenge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>remoteSystem</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Challenge another system for the specified identifier. </p>
<p>After calling Challenge, you will get back ID_TWO_WAY_AUTHENTICATION_SUCCESS, ID_TWO_WAY_AUTHENTICATION_OUTGOING_CHALLENGE_TIMEOUT, or ID_TWO_WAY_AUTHENTICATION_OUTGOING_CHALLENGE_FAILED ID_TWO_WAY_AUTHENTICATION_SUCCESS will be returned if and only if the other system has called <a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ab0916b11ff6b6a4049340167b293f736" title="Adds a password to the list of passwords the system will accept.">AddPassword()</a> with the same identifier pair as this system. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">identifier</td><td>A unique identifier representing this password. This is transmitted in plaintext and should be considered insecure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True on success, false on remote system not connected, or identifier not previously added with <a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ab0916b11ff6b6a4049340167b293f736" title="Adds a password to the list of passwords the system will accept.">AddPassword()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a0ed9bcd3686373d418d71ce91c04d9b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free all memory. </p>

</div>
</div>
<a class="anchor" id="a6b28e2a151770a5447d9dfb73250f42a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::Hash </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>thierNonce</em>[TWO_WAY_AUTHENTICATION_NONCE_LENGTH], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>password</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>out</em>[HASHED_NONCE_AND_PW_LENGTH]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1eeb43d6ddab0645187d77c0ba151d33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TwoWayAuthentication::OnClosedConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a>&#160;</td>
          <td class="paramname"><em>lostConnectionReason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when a connection is dropped because the user called <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408" title="Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).">RakPeer::CloseConnection()</a> for a particular system </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The system whose connection was closed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lostConnectionReason</td><td>How the connection was closed: manually, connection lost, or notification of disconnection </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a49704c0e457bd706a975bb750f158364"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::TwoWayAuthentication::OnHashedNonceAndPassword </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab809626888e294ced64b04a826c2145e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::OnNonceReply </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8d60c2c3f15c2e198e9162dfe615a430"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::OnNonceRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac749a802cdc9829e011b756d527c0683"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::OnPasswordResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a63b9ab36e576ffbf94973a395a130936"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TwoWayAuthentication::OnRakPeerShutdown </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown. </p>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a30510f6274eb21d4081d0935d5e09b0f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::TwoWayAuthentication::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>OnReceive is called for every packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td>the packet that is being returned to the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to allow the game and other plugins to get this message, false to absorb it </dd></dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a9bf3b18bd759234c97faf220aa47c6a5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::PushToUser </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">MessageID</a>&#160;</td>
          <td class="paramname"><em>messageId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>password</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>remoteSystem</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1c6a65a3f68732e89304be63d7f554f3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TwoWayAuthentication::Update </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update is called every time a packet is checked for . </p>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="a36e61759a6d97672877709774c4a710c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator">NonceGenerator</a> SLNet::TwoWayAuthentication::nonceGenerator</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00146">146</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>

</div>
</div>
<a class="anchor" id="abd69e57bd42a42527a45da884a5318d3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge">PendingChallenge</a>&gt; SLNet::TwoWayAuthentication::outgoingChallenges</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00113">113</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4f5950a9585950680938fcf9934a4381"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">DataStructures::Hash</a>&lt;<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>, 16, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">SLNet::RakString::ToInteger</a> &gt; SLNet::TwoWayAuthentication::passwords</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00142">142</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>

</div>
</div>
<a class="anchor" id="a766fc0e8387692ea9677f5058c1f3d64"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> SLNet::TwoWayAuthentication::whenLastTimeoutCheck</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00144">144</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>

</div>
</div>

</div>
</div>
<a name="d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request" id="d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::TwoWayAuthentication::NonceAndRemoteSystemRequest</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00116">116</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a461de4e62ef3008ac0420af1de70dc9e"></a>char</td>
<td class="fieldname">
nonce</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aa93ad0f94635f877fe5b426639f88dd5"></a><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a></td>
<td class="fieldname">
remoteSystem</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a168de9a145b811e62a81e54c645ccd46"></a>unsigned short</td>
<td class="fieldname">
requestId</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a48ca19e6389a22a4549bf63d0935838d"></a><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">Time</a></td>
<td class="fieldname">
whenGenerated</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<a name="d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator" id="d0/da5/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_generator"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::TwoWayAuthentication::NonceGenerator</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00124">124</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>
</div><table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a9d69f4b7e6f2167fda3732b70ebbb6ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a9d69f4b7e6f2167fda3732b70ebbb6ff">NonceGenerator</a> ()</td></tr>
<tr class="separator:a9d69f4b7e6f2167fda3732b70ebbb6ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c7cb0a60a136c7badd20976719b883a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a2c7cb0a60a136c7badd20976719b883a">~NonceGenerator</a> ()</td></tr>
<tr class="separator:a2c7cb0a60a136c7badd20976719b883a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03d185542785ad825da632c8e460f215"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a03d185542785ad825da632c8e460f215">GetNonce</a> (char nonce[<a class="el" href="../../df/df8/_two_way_authentication_8h.xhtml#aaa86357a26d52aae1bbb4337f804ff62">TWO_WAY_AUTHENTICATION_NONCE_LENGTH</a>], unsigned short *requestId, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a> remoteSystem)</td></tr>
<tr class="separator:a03d185542785ad825da632c8e460f215"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023d0ac76909034c9ec9fca36c7a4dfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a023d0ac76909034c9ec9fca36c7a4dfc">GenerateNonce</a> (char nonce[<a class="el" href="../../df/df8/_two_way_authentication_8h.xhtml#aaa86357a26d52aae1bbb4337f804ff62">TWO_WAY_AUTHENTICATION_NONCE_LENGTH</a>])</td></tr>
<tr class="separator:a023d0ac76909034c9ec9fca36c7a4dfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0004c74c2fd750ec0e09886697b7f37f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a0004c74c2fd750ec0e09886697b7f37f">GetNonceById</a> (char nonce[<a class="el" href="../../df/df8/_two_way_authentication_8h.xhtml#aaa86357a26d52aae1bbb4337f804ff62">TWO_WAY_AUTHENTICATION_NONCE_LENGTH</a>], unsigned short requestId, <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a> remoteSystem, bool popIfFound)</td></tr>
<tr class="separator:a0004c74c2fd750ec0e09886697b7f37f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa737dd83942e38fe9ba0dee12d077f7d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#aa737dd83942e38fe9ba0dee12d077f7d">Clear</a> (void)</td></tr>
<tr class="separator:aa737dd83942e38fe9ba0dee12d077f7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af066ffb6fb4b0e8ea7081aa6ec6a9ebf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#af066ffb6fb4b0e8ea7081aa6ec6a9ebf">ClearByAddress</a> (<a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a> remoteSystem)</td></tr>
<tr class="separator:af066ffb6fb4b0e8ea7081aa6ec6a9ebf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01a95b20e19a2da0713c08741d1cc5ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#a01a95b20e19a2da0713c08741d1cc5ea">Update</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> curTime)</td></tr>
<tr class="separator:a01a95b20e19a2da0713c08741d1cc5ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Public Attributes</h3></td></tr>
<tr class="memitem:af3e4c4ee6d0eec2d00d9e88c62f3f53d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request">TwoWayAuthentication::NonceAndRemoteSystemRequest</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#af3e4c4ee6d0eec2d00d9e88c62f3f53d">generatedNonces</a></td></tr>
<tr class="separator:af3e4c4ee6d0eec2d00d9e88c62f3f53d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9915da4f02b9b0e936106883622b461"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#ac9915da4f02b9b0e936106883622b461">nextRequestId</a></td></tr>
<tr class="separator:ac9915da4f02b9b0e936106883622b461"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a9d69f4b7e6f2167fda3732b70ebbb6ff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TwoWayAuthentication::NonceGenerator::NonceGenerator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2c7cb0a60a136c7badd20976719b883a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TwoWayAuthentication::NonceGenerator::~NonceGenerator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Function Documentation</h4>
<a class="anchor" id="aa737dd83942e38fe9ba0dee12d077f7d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::NonceGenerator::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af066ffb6fb4b0e8ea7081aa6ec6a9ebf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::NonceGenerator::ClearByAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>remoteSystem</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a023d0ac76909034c9ec9fca36c7a4dfc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::NonceGenerator::GenerateNonce </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>nonce</em>[TWO_WAY_AUTHENTICATION_NONCE_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a03d185542785ad825da632c8e460f215"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::NonceGenerator::GetNonce </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>nonce</em>[TWO_WAY_AUTHENTICATION_NONCE_LENGTH], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short *&#160;</td>
          <td class="paramname"><em>requestId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>remoteSystem</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0004c74c2fd750ec0e09886697b7f37f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::TwoWayAuthentication::NonceGenerator::GetNonceById </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>nonce</em>[TWO_WAY_AUTHENTICATION_NONCE_LENGTH], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>requestId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a>&#160;</td>
          <td class="paramname"><em>remoteSystem</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>popIfFound</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a01a95b20e19a2da0713c08741d1cc5ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TwoWayAuthentication::NonceGenerator::Update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>&#160;</td>
          <td class="paramname"><em>curTime</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="af3e4c4ee6d0eec2d00d9e88c62f3f53d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml#d8/dc2/struct_s_l_net_1_1_two_way_authentication_1_1_nonce_and_remote_system_request">TwoWayAuthentication::NonceAndRemoteSystemRequest</a>*&gt; SLNet::TwoWayAuthentication::NonceGenerator::generatedNonces</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00135">135</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac9915da4f02b9b0e936106883622b461"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short SLNet::TwoWayAuthentication::NonceGenerator::nextRequestId</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00136">136</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>

</div>
</div>

</div>
</div>
<a name="d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge" id="d7/dd6/struct_s_l_net_1_1_two_way_authentication_1_1_pending_challenge"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::TwoWayAuthentication::PendingChallenge</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml#l00105">105</a> of file <a class="el" href="../../df/df8/_two_way_authentication_8h_source.xhtml">TwoWayAuthentication.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a8e7331fe27b3489b4eb709f6a0c5047b"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
identifier</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ae895f561d00cc698544bb2caa91f8531"></a><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a></td>
<td class="fieldname">
remoteSystem</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="afb799617234e35dfcea120c29ed0c846"></a>bool</td>
<td class="fieldname">
sentHash</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="acb6dd0eea6e100b38eadc7f47ae0c0a0"></a><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">Time</a></td>
<td class="fieldname">
time</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:48 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

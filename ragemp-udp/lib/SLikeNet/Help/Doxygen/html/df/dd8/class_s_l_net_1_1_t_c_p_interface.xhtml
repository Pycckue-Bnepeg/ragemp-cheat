<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::TCPInterface Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dd/dc3/class_s_l_net_1_1_t_c_p_interface-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::TCPInterface Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">slikenet/TCPInterface.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::TCPInterface:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d7/ddb/class_s_l_net_1_1_t_c_p_interface__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:da/d1c/struct_s_l_net_1_1_t_c_p_interface_1_1_this_ptr_plus_sys_addr"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#da/d1c/struct_s_l_net_1_1_t_c_p_interface_1_1_this_ptr_plus_sys_addr">ThisPtrPlusSysAddr</a></td></tr>
<tr class="separator:da/d1c/struct_s_l_net_1_1_t_c_p_interface_1_1_this_ptr_plus_sys_addr"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3dca35917603c4961029b1cdefec0c88"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a3dca35917603c4961029b1cdefec0c88">TCPInterface</a> ()</td></tr>
<tr class="separator:a3dca35917603c4961029b1cdefec0c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d320d7f8b25a9106c1723e41705badc"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6d320d7f8b25a9106c1723e41705badc">~TCPInterface</a> ()</td></tr>
<tr class="separator:a6d320d7f8b25a9106c1723e41705badc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacace1fc8ab33669952e9dc97596c8a3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aacace1fc8ab33669952e9dc97596c8a3">Start</a> (unsigned short port, unsigned short maxIncomingConnections, unsigned short maxConnections=0, int _threadPriority=-99999, unsigned short socketFamily=AF_INET, const char *bindAddress=0)</td></tr>
<tr class="separator:aacace1fc8ab33669952e9dc97596c8a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8e38a1a18cac128a2bb22ed5374cb04"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab8e38a1a18cac128a2bb22ed5374cb04">Stop</a> (void)</td></tr>
<tr class="memdesc:ab8e38a1a18cac128a2bb22ed5374cb04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops the TCP server.  <a href="#ab8e38a1a18cac128a2bb22ed5374cb04"></a><br/></td></tr>
<tr class="separator:ab8e38a1a18cac128a2bb22ed5374cb04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef31dfbd383b7864e0e9deb074291cb7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aef31dfbd383b7864e0e9deb074291cb7">Connect</a> (const char *host, unsigned short remotePort, bool block=true, unsigned short socketFamily=AF_INET, const char *bindAddress=0)</td></tr>
<tr class="memdesc:aef31dfbd383b7864e0e9deb074291cb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to the specified host on the specified port.  <a href="#aef31dfbd383b7864e0e9deb074291cb7"></a><br/></td></tr>
<tr class="separator:aef31dfbd383b7864e0e9deb074291cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a2bf12f77233eec447a6496730286e7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7">Send</a> (const char *data, unsigned int length, const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, bool broadcast)</td></tr>
<tr class="memdesc:a6a2bf12f77233eec447a6496730286e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a byte stream.  <a href="#a6a2bf12f77233eec447a6496730286e7"></a><br/></td></tr>
<tr class="separator:a6a2bf12f77233eec447a6496730286e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9a18b30172fe1723a2ecaf91025642e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab9a18b30172fe1723a2ecaf91025642e">SendList</a> (const char **data, const unsigned int *lengths, const int numParameters, const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, bool broadcast)</td></tr>
<tr class="separator:ab9a18b30172fe1723a2ecaf91025642e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a962cf7dae3f47c5b61e8e49a621d55eb"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a962cf7dae3f47c5b61e8e49a621d55eb">GetOutgoingDataBufferSize</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress) const </td></tr>
<tr class="separator:a962cf7dae3f47c5b61e8e49a621d55eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa106ad458b729b163b77291583c738"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4aa106ad458b729b163b77291583c738">ReceiveHasPackets</a> (void)</td></tr>
<tr class="separator:a4aa106ad458b729b163b77291583c738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71c601f7df74b40aae954757c7724ca9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9">Receive</a> (void)</td></tr>
<tr class="memdesc:a71c601f7df74b40aae954757c7724ca9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns data received.  <a href="#a71c601f7df74b40aae954757c7724ca9"></a><br/></td></tr>
<tr class="separator:a71c601f7df74b40aae954757c7724ca9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51fa9556886efb6772ecb0c3bd4857b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a51fa9556886efb6772ecb0c3bd4857b4">CloseConnection</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress)</td></tr>
<tr class="memdesc:a51fa9556886efb6772ecb0c3bd4857b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disconnects a player/address.  <a href="#a51fa9556886efb6772ecb0c3bd4857b4"></a><br/></td></tr>
<tr class="separator:a51fa9556886efb6772ecb0c3bd4857b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7800dc1ce89b0127884503b6168ceb27"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27">DeallocatePacket</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="memdesc:a7800dc1ce89b0127884503b6168ceb27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deallocates a packet returned by Receive.  <a href="#a7800dc1ce89b0127884503b6168ceb27"></a><br/></td></tr>
<tr class="separator:a7800dc1ce89b0127884503b6168ceb27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a58f4f3f1ef2d67bb34ee5e5d94e28c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a5a58f4f3f1ef2d67bb34ee5e5d94e28c">GetConnectionList</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> *remoteSystems, unsigned short *numberOfSystems) const </td></tr>
<tr class="separator:a5a58f4f3f1ef2d67bb34ee5e5d94e28c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56b0b5df8bcb2d052e351694b3944309"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a56b0b5df8bcb2d052e351694b3944309">GetConnectionCount</a> (void) const </td></tr>
<tr class="memdesc:a56b0b5df8bcb2d052e351694b3944309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns just the number of connections we have.  <a href="#a56b0b5df8bcb2d052e351694b3944309"></a><br/></td></tr>
<tr class="separator:a56b0b5df8bcb2d052e351694b3944309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebac46cfccd64e29214d3410722df872"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aebac46cfccd64e29214d3410722df872">HasCompletedConnectionAttempt</a> (void)</td></tr>
<tr class="separator:aebac46cfccd64e29214d3410722df872"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58fe702e887f58dbe6ea6e12210e55d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a58fe702e887f58dbe6ea6e12210e55d2">HasFailedConnectionAttempt</a> (void)</td></tr>
<tr class="separator:a58fe702e887f58dbe6ea6e12210e55d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad45c6e1c80948f916bf946896c3ba84f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ad45c6e1c80948f916bf946896c3ba84f">HasNewIncomingConnection</a> (void)</td></tr>
<tr class="memdesc:ad45c6e1c80948f916bf946896c3ba84f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queued events of new incoming connections.  <a href="#ad45c6e1c80948f916bf946896c3ba84f"></a><br/></td></tr>
<tr class="separator:ad45c6e1c80948f916bf946896c3ba84f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eb90925c3a0ae42d00019214446fb97"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0eb90925c3a0ae42d00019214446fb97">HasLostConnection</a> (void)</td></tr>
<tr class="memdesc:a0eb90925c3a0ae42d00019214446fb97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queued events of lost connections.  <a href="#a0eb90925c3a0ae42d00019214446fb97"></a><br/></td></tr>
<tr class="separator:a0eb90925c3a0ae42d00019214446fb97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84ab36f6d36c31690c80bb5e51f2d016"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a84ab36f6d36c31690c80bb5e51f2d016">AllocatePacket</a> (unsigned dataSize)</td></tr>
<tr class="memdesc:a84ab36f6d36c31690c80bb5e51f2d016"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return an allocated but empty packet, for custom use.  <a href="#a84ab36f6d36c31690c80bb5e51f2d016"></a><br/></td></tr>
<tr class="separator:a84ab36f6d36c31690c80bb5e51f2d016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade3faa8d7328f22b493d94b54678d9ef"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ade3faa8d7328f22b493d94b54678d9ef">PushBackPacket</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:ade3faa8d7328f22b493d94b54678d9ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec2d879bb47462699456ebb9749aad5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a9ec2d879bb47462699456ebb9749aad5">WasStarted</a> (void) const </td></tr>
<tr class="memdesc:a9ec2d879bb47462699456ebb9749aad5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aacace1fc8ab33669952e9dc97596c8a3">Start()</a> was called successfully.  <a href="#a9ec2d879bb47462699456ebb9749aad5"></a><br/></td></tr>
<tr class="separator:a9ec2d879bb47462699456ebb9749aad5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad96d1589ffa7c60837c8928479e7f76a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ad96d1589ffa7c60837c8928479e7f76a">AttachPlugin</a> (<a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> *plugin)</td></tr>
<tr class="separator:ad96d1589ffa7c60837c8928479e7f76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28bdf3a84139b63a3e17c9c655fff8d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a28bdf3a84139b63a3e17c9c655fff8d1">DetachPlugin</a> (<a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> *plugin)</td></tr>
<tr class="separator:a28bdf3a84139b63a3e17c9c655fff8d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4a5a3d26cc99076cc90503926f7d1109"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4a5a3d26cc99076cc90503926f7d1109">ReceiveInt</a> (void)</td></tr>
<tr class="separator:a4a5a3d26cc99076cc90503926f7d1109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db6ce7942a3fe51c1500233e6d7c0c6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7db6ce7942a3fe51c1500233e6d7c0c6">CreateListenSocket</a> (unsigned short port, unsigned short maxIncomingConnections, unsigned short socketFamily, const char *hostAddress)</td></tr>
<tr class="separator:a7db6ce7942a3fe51c1500233e6d7c0c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73b1b282e78fa708acdbe1835470180e"><td class="memItemLeft" align="right" valign="top">friend&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a73b1b282e78fa708acdbe1835470180e">RAK_THREAD_DECLARATION</a> (UpdateTCPInterfaceLoop)</td></tr>
<tr class="separator:a73b1b282e78fa708acdbe1835470180e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae28f53d633d734ad112621e53f458cb9"><td class="memItemLeft" align="right" valign="top">friend&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ae28f53d633d734ad112621e53f458cb9">RAK_THREAD_DECLARATION</a> (ConnectionAttemptLoop)</td></tr>
<tr class="separator:ae28f53d633d734ad112621e53f458cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af086f0bd1c32fd60d3bcb05a5e8ebdc7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/dc5/_socket_includes_8h.xhtml#a5aa1a1bddd045228f3a4935849eeb8a2">__TCPSOCKET__</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#af086f0bd1c32fd60d3bcb05a5e8ebdc7">SocketConnect</a> (const char *host, unsigned short remotePort, unsigned short socketFamily, const char *bindAddress)</td></tr>
<tr class="separator:af086f0bd1c32fd60d3bcb05a5e8ebdc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a22c75a502613e56f09bfa234e91b78e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a22c75a502613e56f09bfa234e91b78e5">messageHandlerList</a></td></tr>
<tr class="separator:a22c75a502613e56f09bfa234e91b78e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61577774b1da1580e0682483b1137325"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d84/class_s_l_net_1_1_lockless_uint32__t.xhtml">SLNet::LocklessUint32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a61577774b1da1580e0682483b1137325">isStarted</a></td></tr>
<tr class="separator:a61577774b1da1580e0682483b1137325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabb95043e7f8e83a2215a22209f1af18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d84/class_s_l_net_1_1_lockless_uint32__t.xhtml">SLNet::LocklessUint32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aabb95043e7f8e83a2215a22209f1af18">threadRunning</a></td></tr>
<tr class="separator:aabb95043e7f8e83a2215a22209f1af18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2a1f100c5a75f7ab72dfa5419b6798"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/dc5/_socket_includes_8h.xhtml#a5aa1a1bddd045228f3a4935849eeb8a2">__TCPSOCKET__</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0f2a1f100c5a75f7ab72dfa5419b6798">listenSocket</a></td></tr>
<tr class="separator:a0f2a1f100c5a75f7ab72dfa5419b6798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0ae4d715023680163494d240df06cdf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt; <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ad0ae4d715023680163494d240df06cdf">headPush</a></td></tr>
<tr class="separator:ad0ae4d715023680163494d240df06cdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac81dcb8c8588310ea3d3be716c3e193d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt; <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ac81dcb8c8588310ea3d3be716c3e193d">tailPush</a></td></tr>
<tr class="separator:ac81dcb8c8588310ea3d3be716c3e193d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74654381a25971e8b927509c6a6aea3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/d15/struct_s_l_net_1_1_remote_client.xhtml">RemoteClient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a74654381a25971e8b927509c6a6aea3e">remoteClients</a></td></tr>
<tr class="separator:a74654381a25971e8b927509c6a6aea3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6879cc20c4eb191b3a67ea6ccab92ae3"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6879cc20c4eb191b3a67ea6ccab92ae3">remoteClientsLength</a></td></tr>
<tr class="separator:a6879cc20c4eb191b3a67ea6ccab92ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7da4384d5f38a5094cbcf094b6cdd04c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a><br class="typebreak"/>
&lt; <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7da4384d5f38a5094cbcf094b6cdd04c">incomingMessages</a></td></tr>
<tr class="separator:a7da4384d5f38a5094cbcf094b6cdd04c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4980f4880bfa383c972d8577bdca365b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4980f4880bfa383c972d8577bdca365b">newIncomingConnections</a></td></tr>
<tr class="separator:a4980f4880bfa383c972d8577bdca365b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ef9bd2ee156ee38ab58e3813323dee6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a8ef9bd2ee156ee38ab58e3813323dee6">lostConnections</a></td></tr>
<tr class="separator:a8ef9bd2ee156ee38ab58e3813323dee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c0331ed4bff87b28af932d203bf54e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7c0331ed4bff87b28af932d203bf54e5">requestedCloseConnections</a></td></tr>
<tr class="separator:a7c0331ed4bff87b28af932d203bf54e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee892f798c20da8efc6c8f2355297004"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a><br class="typebreak"/>
&lt; <a class="el" href="../../dc/d15/struct_s_l_net_1_1_remote_client.xhtml">RemoteClient</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aee892f798c20da8efc6c8f2355297004">newRemoteClients</a></td></tr>
<tr class="separator:aee892f798c20da8efc6c8f2355297004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9e3b277e57a536050cab4b10cba56f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab9e3b277e57a536050cab4b10cba56f9">completedConnectionAttemptMutex</a></td></tr>
<tr class="separator:ab9e3b277e57a536050cab4b10cba56f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dcbdc9e795fd65cd853a3a3ab834f37"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6dcbdc9e795fd65cd853a3a3ab834f37">failedConnectionAttemptMutex</a></td></tr>
<tr class="separator:a6dcbdc9e795fd65cd853a3a3ab834f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b9d2c1ddc5061ddb889bd6f9913882"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a14b9d2c1ddc5061ddb889bd6f9913882">completedConnectionAttempts</a></td></tr>
<tr class="separator:a14b9d2c1ddc5061ddb889bd6f9913882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a210c68082c85abc011bc2e36e9b8612f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a210c68082c85abc011bc2e36e9b8612f">failedConnectionAttempts</a></td></tr>
<tr class="separator:a210c68082c85abc011bc2e36e9b8612f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9463b38b9361e80f39f565191d44901"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#af9463b38b9361e80f39f565191d44901">threadPriority</a></td></tr>
<tr class="separator:af9463b38b9361e80f39f565191d44901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc946d279a85bbbc5758ab1dab032fff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../d4/dc5/_socket_includes_8h.xhtml#a5aa1a1bddd045228f3a4935849eeb8a2">__TCPSOCKET__</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#acc946d279a85bbbc5758ab1dab032fff">blockingSocketList</a></td></tr>
<tr class="separator:acc946d279a85bbbc5758ab1dab032fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a414fd63eec213a7d002e4db20dee4040"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a414fd63eec213a7d002e4db20dee4040">blockingSocketListMutex</a></td></tr>
<tr class="separator:a414fd63eec213a7d002e4db20dee4040"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00056">56</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="da/d1c/struct_s_l_net_1_1_t_c_p_interface_1_1_this_ptr_plus_sys_addr" id="da/d1c/struct_s_l_net_1_1_t_c_p_interface_1_1_this_ptr_plus_sys_addr"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::TCPInterface::ThisPtrPlusSysAddr</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00205">205</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a0b9ec10ec642141c8882f3223376232a"></a>char</td>
<td class="fieldname">
bindAddress</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ab46b89bfdb2fd69db43c5b1e4768e5f5"></a>unsigned short</td>
<td class="fieldname">
socketFamily</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a6c1d23754362cff733cc829dd5dca9e7"></a><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a></td>
<td class="fieldname">
systemAddress</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a6c6922ada2e4a29541392de9ecf70d59"></a><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *</td>
<td class="fieldname">
tcpInterface</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="af8678806745d00037d7911171041f410"></a>bool</td>
<td class="fieldname">
useSSL</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a3dca35917603c4961029b1cdefec0c88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TCPInterface::TCPInterface </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6d320d7f8b25a9106c1723e41705badc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::TCPInterface::~TCPInterface </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a84ab36f6d36c31690c80bb5e51f2d016"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>* SLNet::TCPInterface::AllocatePacket </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>dataSize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return an allocated but empty packet, for custom use. </p>

<p>Referenced by <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00103">SLNet::PluginInterface2::AllocatePacketUnified()</a>.</p>

</div>
</div>
<a class="anchor" id="ad96d1589ffa7c60837c8928479e7f76a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TCPInterface::AttachPlugin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> *&#160;</td>
          <td class="paramname"><em>plugin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a51fa9556886efb6772ecb0c3bd4857b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TCPInterface::CloseConnection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disconnects a player/address. </p>

</div>
</div>
<a class="anchor" id="aef31dfbd383b7864e0e9deb074291cb7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TCPInterface::Connect </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>remotePort</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>block</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>socketFamily</em> = <code>AF_INET</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>bindAddress</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Connect to the specified host on the specified port. </p>

</div>
</div>
<a class="anchor" id="a7db6ce7942a3fe51c1500233e6d7c0c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::TCPInterface::CreateListenSocket </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>maxIncomingConnections</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>socketFamily</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>hostAddress</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7800dc1ce89b0127884503b6168ceb27"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TCPInterface::DeallocatePacket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deallocates a packet returned by Receive. </p>

<p>Referenced by <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00143">SLNet::PluginInterface2::DeallocPacketUnified()</a>.</p>

</div>
</div>
<a class="anchor" id="a28bdf3a84139b63a3e17c9c655fff8d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TCPInterface::DetachPlugin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> *&#160;</td>
          <td class="paramname"><em>plugin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a56b0b5df8bcb2d052e351694b3944309"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short SLNet::TCPInterface::GetConnectionCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns just the number of connections we have. </p>

</div>
</div>
<a class="anchor" id="a5a58f4f3f1ef2d67bb34ee5e5d94e28c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TCPInterface::GetConnectionList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> *&#160;</td>
          <td class="paramname"><em>remoteSystems</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short *&#160;</td>
          <td class="paramname"><em>numberOfSystems</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Fills the array remoteSystems with the <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> of all the systems we are connected to </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">remoteSystems</td><td>An array of <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> structures to be filled with the SystemAddresss of the systems we are connected to. Pass 0 to remoteSystems to only get the number of systems we are connected to </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">numberOfSystems</td><td>As input, the size of remoteSystems array. As output, the number of elements put into the array </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a962cf7dae3f47c5b61e8e49a621d55eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int SLNet::TCPInterface::GetOutgoingDataBufferSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aebac46cfccd64e29214d3410722df872"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TCPInterface::HasCompletedConnectionAttempt </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Has a previous call to connect succeeded? </p>
<dl class="section return"><dt>Returns</dt><dd>UNASSIGNED_SYSTEM_ADDRESS = no. Anything else means yes. </dd></dl>

</div>
</div>
<a class="anchor" id="a58fe702e887f58dbe6ea6e12210e55d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TCPInterface::HasFailedConnectionAttempt </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Has a previous call to connect failed? </p>
<dl class="section return"><dt>Returns</dt><dd>UNASSIGNED_SYSTEM_ADDRESS = no. Anything else means yes. </dd></dl>

</div>
</div>
<a class="anchor" id="a0eb90925c3a0ae42d00019214446fb97"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TCPInterface::HasLostConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queued events of lost connections. </p>

</div>
</div>
<a class="anchor" id="ad45c6e1c80948f916bf946896c3ba84f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TCPInterface::HasNewIncomingConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queued events of new incoming connections. </p>

</div>
</div>
<a class="anchor" id="ade3faa8d7328f22b493d94b54678d9ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TCPInterface::PushBackPacket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pushAtHead</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00125">SLNet::PluginInterface2::PushBackPacketUnified()</a>.</p>

</div>
</div>
<a class="anchor" id="a73b1b282e78fa708acdbe1835470180e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TCPInterface::RAK_THREAD_DECLARATION </td>
          <td>(</td>
          <td class="paramtype">UpdateTCPInterfaceLoop&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae28f53d633d734ad112621e53f458cb9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TCPInterface::RAK_THREAD_DECLARATION </td>
          <td>(</td>
          <td class="paramtype">ConnectionAttemptLoop&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a71c601f7df74b40aae954757c7724ca9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>* SLNet::TCPInterface::Receive </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns data received. </p>

<p>Reimplemented in <a class="el" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#afa93398c49e197bfd5ff28da5f01255f">SLNet::PacketizedTCP</a>.</p>

</div>
</div>
<a class="anchor" id="a4aa106ad458b729b163b77291583c738"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool SLNet::TCPInterface::ReceiveHasPackets </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns if <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">Receive()</a> will return data Do not use on <a class="el" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml">PacketizedTCP</a> </p>

</div>
</div>
<a class="anchor" id="a4a5a3d26cc99076cc90503926f7d1109"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>* SLNet::TCPInterface::ReceiveInt </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6a2bf12f77233eec447a6496730286e7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TCPInterface::Send </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>broadcast</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends a byte stream. </p>

<p>Referenced by <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00035">SLNet::PluginInterface2::SendUnified()</a>.</p>

</div>
</div>
<a class="anchor" id="ab9a18b30172fe1723a2ecaf91025642e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool SLNet::TCPInterface::SendList </td>
          <td>(</td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>lengths</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>numParameters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>broadcast</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a845cf1394e5f38b6ca122c5c53b413b9">SLNet::PacketizedTCP</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00161">SLNet::PluginInterface2::SendListUnified()</a>.</p>

</div>
</div>
<a class="anchor" id="af086f0bd1c32fd60d3bcb05a5e8ebdc7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/dc5/_socket_includes_8h.xhtml#a5aa1a1bddd045228f3a4935849eeb8a2">__TCPSOCKET__</a> SLNet::TCPInterface::SocketConnect </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>remotePort</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>socketFamily</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>bindAddress</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aacace1fc8ab33669952e9dc97596c8a3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::TCPInterface::Start </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>maxIncomingConnections</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>maxConnections</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>_threadPriority</em> = <code>-99999</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>socketFamily</em> = <code>AF_INET</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>bindAddress</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Starts the TCP server on the indicated port </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">port</td><td>Which port to listen on. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxIncomingConnections</td><td>Max incoming connections we will accept </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxConnections</td><td>Max total connections, which should be &gt;= maxIncomingConnections </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">threadPriority</td><td>Passed to the thread creation routine. Use THREAD_PRIORITY_NORMAL for Windows. For Linux based systems, you MUST pass something reasonable based on the thread priorities for your application. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">socketFamily</td><td>IP version: For IPV4, use AF_INET (default). For IPV6, use AF_INET6. To autoselect, use AF_UNSPEC. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab8e38a1a18cac128a2bb22ed5374cb04"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::TCPInterface::Stop </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stops the TCP server. </p>

</div>
</div>
<a class="anchor" id="a9ec2d879bb47462699456ebb9749aad5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::TCPInterface::WasStarted </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns if <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aacace1fc8ab33669952e9dc97596c8a3">Start()</a> was called successfully. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="acc946d279a85bbbc5758ab1dab032fff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../d4/dc5/_socket_includes_8h.xhtml#a5aa1a1bddd045228f3a4935849eeb8a2">__TCPSOCKET__</a>&gt; SLNet::TCPInterface::blockingSocketList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00191">191</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a414fd63eec213a7d002e4db20dee4040"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> SLNet::TCPInterface::blockingSocketListMutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00192">192</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab9e3b277e57a536050cab4b10cba56f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> SLNet::TCPInterface::completedConnectionAttemptMutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00186">186</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a14b9d2c1ddc5061ddb889bd6f9913882"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::TCPInterface::completedConnectionAttempts</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00187">187</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6dcbdc9e795fd65cd853a3a3ab834f37"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> SLNet::TCPInterface::failedConnectionAttemptMutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00186">186</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a210c68082c85abc011bc2e36e9b8612f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::TCPInterface::failedConnectionAttempts</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00187">187</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad0ae4d715023680163494d240df06cdf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>*&gt; SLNet::TCPInterface::headPush</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00159">159</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7da4384d5f38a5094cbcf094b6cdd04c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a>&lt;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>&gt; SLNet::TCPInterface::incomingMessages</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00183">183</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a61577774b1da1580e0682483b1137325"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d84/class_s_l_net_1_1_lockless_uint32__t.xhtml">SLNet::LocklessUint32_t</a> SLNet::TCPInterface::isStarted</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00156">156</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0f2a1f100c5a75f7ab72dfa5419b6798"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/dc5/_socket_includes_8h.xhtml#a5aa1a1bddd045228f3a4935849eeb8a2">__TCPSOCKET__</a> SLNet::TCPInterface::listenSocket</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00157">157</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8ef9bd2ee156ee38ab58e3813323dee6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::TCPInterface::lostConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00184">184</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a22c75a502613e56f09bfa234e91b78e5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a>*&gt; SLNet::TCPInterface::messageHandlerList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00154">154</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4980f4880bfa383c972d8577bdca365b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::TCPInterface::newIncomingConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00184">184</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aee892f798c20da8efc6c8f2355297004"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a>&lt;<a class="el" href="../../dc/d15/struct_s_l_net_1_1_remote_client.xhtml">RemoteClient</a>*&gt; SLNet::TCPInterface::newRemoteClients</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00185">185</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a74654381a25971e8b927509c6a6aea3e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/d15/struct_s_l_net_1_1_remote_client.xhtml">RemoteClient</a>* SLNet::TCPInterface::remoteClients</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00160">160</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6879cc20c4eb191b3a67ea6ccab92ae3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short SLNet::TCPInterface::remoteClientsLength</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00161">161</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7c0331ed4bff87b28af932d203bf54e5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">DataStructures::ThreadsafeAllocatingQueue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::TCPInterface::requestedCloseConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00184">184</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac81dcb8c8588310ea3d3be716c3e193d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>*&gt; SLNet::TCPInterface::tailPush</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00159">159</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="af9463b38b9361e80f39f565191d44901"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::TCPInterface::threadPriority</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00189">189</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aabb95043e7f8e83a2215a22209f1af18"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d84/class_s_l_net_1_1_lockless_uint32__t.xhtml">SLNet::LocklessUint32_t</a> SLNet::TCPInterface::threadRunning</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00156">156</a> of file <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml">TCPInterface.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: RakNetTransport</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a>  </div>
  <div class="headertitle">
<div class="title">RakNetTransport</div>  </div>
<div class="ingroups"><a class="el" href="../../df/db6/group___p_l_u_g_i_n_s___g_r_o_u_p.xhtml">Plugins</a></div></div><!--header-->
<div class="contents">

<p>UDP based transport implementation for the <a class="el" href="../../dc/dbe/class_s_l_net_1_1_console_server.xhtml" title="The main entry point for the server portion of your remote console application support.">ConsoleServer</a>.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:d4/dab/class_s_l_net_1_1_rak_net_transport2"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#d4/dab/class_s_l_net_1_1_rak_net_transport2">SLNet::RakNetTransport2</a></td></tr>
<tr class="memdesc:d4/dab/class_s_l_net_1_1_rak_net_transport2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use RakNetTransport if you need a secure connection between the client and the console server.  <a href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#d4/dab/class_s_l_net_1_1_rak_net_transport2">More...</a><br/></td></tr>
<tr class="separator:d4/dab/class_s_l_net_1_1_rak_net_transport2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>UDP based transport implementation for the <a class="el" href="../../dc/dbe/class_s_l_net_1_1_console_server.xhtml" title="The main entry point for the server portion of your remote console application support.">ConsoleServer</a>. </p>
<hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d4/dab/class_s_l_net_1_1_rak_net_transport2" id="d4/dab/class_s_l_net_1_1_rak_net_transport2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">class SLNet::RakNetTransport2</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>Use RakNetTransport if you need a secure connection between the client and the console server. </p>
<p>RakNetTransport automatically initializes security for the system. Use the project CommandConsoleClient to connect To the <a class="el" href="../../dc/dbe/class_s_l_net_1_1_console_server.xhtml" title="The main entry point for the server portion of your remote console application support.">ConsoleServer</a> if you use RakNetTransport </p>

<p>Definition at line <a class="el" href="../../d9/d59/transport2_8h_source.xhtml#l00049">49</a> of file <a class="el" href="../../d9/d59/transport2_8h_source.xhtml">transport2.h</a>.</p>
</div><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::RakNetTransport2:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/db7/class_s_l_net_1_1_rak_net_transport2__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr><td colspan="2"><h3>Public Member Functions</h3></td></tr>
<tr class="memitem:a63f4c3f660c0eef3c8389dc77a788d43"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a63f4c3f660c0eef3c8389dc77a788d43">RakNetTransport2</a> ()</td></tr>
<tr class="separator:a63f4c3f660c0eef3c8389dc77a788d43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899afd543a5149a188181002c7b19f7d"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a899afd543a5149a188181002c7b19f7d">~RakNetTransport2</a> ()</td></tr>
<tr class="separator:a899afd543a5149a188181002c7b19f7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0824fb85a07d2e0145fcce50f30d1864"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a0824fb85a07d2e0145fcce50f30d1864">Start</a> (unsigned short port, bool serverMode)</td></tr>
<tr class="separator:a0824fb85a07d2e0145fcce50f30d1864"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c121e9bbb3499f549629f25e742f76b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a1c121e9bbb3499f549629f25e742f76b">Stop</a> (void)</td></tr>
<tr class="memdesc:a1c121e9bbb3499f549629f25e742f76b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the transport provider. You can clear memory and shutdown threads here.  <a href="#a1c121e9bbb3499f549629f25e742f76b"></a><br/></td></tr>
<tr class="separator:a1c121e9bbb3499f549629f25e742f76b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f9481c1e9a92936b040c773ae06b409"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a2f9481c1e9a92936b040c773ae06b409">Send</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress, const char *data,...)</td></tr>
<tr class="separator:a2f9481c1e9a92936b040c773ae06b409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3535bc6ab2ddedc5522b58730da09a1b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a3535bc6ab2ddedc5522b58730da09a1b">CloseConnection</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress)</td></tr>
<tr class="separator:a3535bc6ab2ddedc5522b58730da09a1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3516e3ef5018f49501d7d821a90d89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a7d3516e3ef5018f49501d7d821a90d89">Receive</a> (void)</td></tr>
<tr class="separator:a7d3516e3ef5018f49501d7d821a90d89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ceef61250766571ff659f30dd86d58b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a2ceef61250766571ff659f30dd86d58b">DeallocatePacket</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a2ceef61250766571ff659f30dd86d58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a299dd196b30788d8dd8d2c841bf380c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a299dd196b30788d8dd8d2c841bf380c7">HasNewIncomingConnection</a> (void)</td></tr>
<tr class="separator:a299dd196b30788d8dd8d2c841bf380c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f4114722d81b1162a3fc2d08a1ccbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a39f4114722d81b1162a3fc2d08a1ccbf">HasLostConnection</a> (void)</td></tr>
<tr class="separator:a39f4114722d81b1162a3fc2d08a1ccbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bb289238f3e3e4566da7f3de8226fb0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml">CommandParserInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a5bb289238f3e3e4566da7f3de8226fb0">GetCommandParser</a> (void)</td></tr>
<tr class="separator:a5bb289238f3e3e4566da7f3de8226fb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeba21a196188d9b7dc41083f3702857f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#aeba21a196188d9b7dc41083f3702857f">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:aeba21a196188d9b7dc41083f3702857f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28acced79c67578113243a0aa925f877"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a28acced79c67578113243a0aa925f877">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:a28acced79c67578113243a0aa925f877"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab538c46c545010059b8a0b357c2c8bb0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#ab538c46c545010059b8a0b357c2c8bb0">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:ab538c46c545010059b8a0b357c2c8bb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_s_l_net_1_1_transport_interface"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_s_l_net_1_1_transport_interface')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml">SLNet::TransportInterface</a></td></tr>
<tr class="memitem:aa302a36aa88964dcac5c97f764266111 inherit pub_methods_class_s_l_net_1_1_transport_interface"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#aa302a36aa88964dcac5c97f764266111">TransportInterface</a> ()</td></tr>
<tr class="separator:aa302a36aa88964dcac5c97f764266111 inherit pub_methods_class_s_l_net_1_1_transport_interface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27900663b1a6669a598455cd55f791a inherit pub_methods_class_s_l_net_1_1_transport_interface"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ac27900663b1a6669a598455cd55f791a">~TransportInterface</a> ()</td></tr>
<tr class="separator:ac27900663b1a6669a598455cd55f791a inherit pub_methods_class_s_l_net_1_1_transport_interface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">OnAttach</a> (void)</td></tr>
<tr class="memdesc:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#afe33b32b1729289a809ada304227cbd8"></a><br/></td></tr>
<tr class="separator:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">Update</a> (void)</td></tr>
<tr class="memdesc:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#aa181a0ff58765c3d7878ac6dfd5e5a10"></a><br/></td></tr>
<tr class="separator:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#aea8a90c4078ecc0db77545e44531b1de"></a><br/></td></tr>
<tr class="separator:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><h3>Protected Attributes</h3></td></tr>
<tr class="memitem:a1639d3f318554236a660720a3e9ec4b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a1639d3f318554236a660720a3e9ec4b0">newConnections</a></td></tr>
<tr class="separator:a1639d3f318554236a660720a3e9ec4b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ec48df0f7cf8c5f3ca4b79a45568161"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a><br class="typebreak"/>
&lt; <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a7ec48df0f7cf8c5f3ca4b79a45568161">lostConnections</a></td></tr>
<tr class="separator:a7ec48df0f7cf8c5f3ca4b79a45568161"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61fdb83f41553fe2dcf2954ced557d0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt; <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a61fdb83f41553fe2dcf2954ced557d0b">packetQueue</a></td></tr>
<tr class="separator:a61fdb83f41553fe2dcf2954ced557d0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h4 class="groupheader">Constructor &amp; Destructor Documentation</h4>
<a class="anchor" id="a63f4c3f660c0eef3c8389dc77a788d43"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::RakNetTransport2::RakNetTransport2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a899afd543a5149a188181002c7b19f7d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::RakNetTransport2::~RakNetTransport2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h4 class="groupheader">Member Function Documentation</h4>
<a class="anchor" id="a3535bc6ab2ddedc5522b58730da09a1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RakNetTransport2::CloseConnection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Disconnect <em>systemAddress</em> . The binary address and port defines the <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> structure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The player/address to disconnect </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a24b59b7cc57b2c48ab48129183f52b16">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a2ceef61250766571ff659f30dd86d58b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RakNetTransport2::DeallocatePacket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Deallocate the <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> structure returned by Receive </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">The</td><td>packet to deallocate </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ac524b4621730e0e4a6240c5e2f956f7b">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a5bb289238f3e3e4566da7f3de8226fb0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml">CommandParserInterface</a>* SLNet::RakNetTransport2::GetCommandParser </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Your transport provider can itself have command parsers if the transport layer has user-modifiable features For example, your transport layer may have a password which you want remote users to be able to set or you may want to allow remote users to turn on or off command echo </p>
<dl class="section return"><dt>Returns</dt><dd>0 if you do not need a command parser - otherwise the desired derivation of <a class="el" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml" title="The interface used by command parsers.">CommandParserInterface</a> </dd></dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a3c695705c824192b6a536b0afcbe4443">SLNet::TransportInterface</a>.</p>

<p>Definition at line <a class="el" href="../../d9/d59/transport2_8h_source.xhtml#l00098">98</a> of file <a class="el" href="../../d9/d59/transport2_8h_source.xhtml">transport2.h</a>.</p>

</div>
</div>
<a class="anchor" id="a39f4114722d81b1162a3fc2d08a1ccbf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::RakNetTransport2::HasLostConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If a system loses the connection, you should queue that event and return the systemAddress/address of that player in this function. </p>
<dl class="section return"><dt>Returns</dt><dd>The SystemAddress/address of the system </dd></dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a3412b037133e175a066c217df3306230">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a299dd196b30788d8dd8d2c841bf380c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::RakNetTransport2::HasNewIncomingConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If a new system connects to you, you should queue that event and return the systemAddress/address of that player in this function. </p>
<dl class="section return"><dt>Returns</dt><dd>The SystemAddress/address of the system </dd></dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#aff45e15ac6c7127a6ca5bf5a39f0dfff">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a28acced79c67578113243a0aa925f877"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::RakNetTransport2::OnClosedConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a>&#160;</td>
          <td class="paramname"><em>lostConnectionReason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when a connection is dropped because the user called <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408" title="Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).">RakPeer::CloseConnection()</a> for a particular system </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The system whose connection was closed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lostConnectionReason</td><td>How the connection was closed: manually, connection lost, or notification of disconnection </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="ab538c46c545010059b8a0b357c2c8bb0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::RakNetTransport2::OnNewConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isIncoming</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when we got a new connection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>Address of the new connection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isIncoming</td><td>If true, this is ID_NEW_INCOMING_CONNECTION, or the equivalent </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="aeba21a196188d9b7dc41083f3702857f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::RakNetTransport2::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>OnReceive is called for every packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td>the packet that is being returned to the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to allow the game and other plugins to get this message, false to absorb it </dd></dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a7d3516e3ef5018f49501d7d821a90d89"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>* SLNet::RakNetTransport2::Receive </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Return a string. The string should be allocated and written to <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">Packet::data</a> . The byte length should be written to <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">Packet::length</a> . The player/address should be written to <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">Packet::systemAddress</a> If your transport protocol adds special formatting to the data stream you should parse it out before returning it in the packet and thus only return a string in <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">Packet::data</a> </p>
<dl class="section return"><dt>Returns</dt><dd>The packet structure containing the result of Receive, or 0 if no data is available </dd></dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a0b64c016a27989829eff553a90388847">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a2f9481c1e9a92936b040c773ae06b409"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RakNetTransport2::Send </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Send a null-terminated string to <em>systemAddress</em> If your transport method requires particular formatting of the outgoing data (e.g. you don't just send strings) you can do it here and parse it out in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a7d3516e3ef5018f49501d7d821a90d89">Receive()</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The player to send the string to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>format specifier - same as RAKNET_DEBUG_PRINTF </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>format specification arguments - same as RAKNET_DEBUG_PRINTF </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a0824fb85a07d2e0145fcce50f30d1864"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::RakNetTransport2::Start </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>serverMode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Start the transport provider on the indicated port. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">port</td><td>The port to start the transport provider on </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">serverMode</td><td>If true, you should allow incoming connections (I don't actually use this anywhere) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Return true on success, false on failure. </dd></dl>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a72d2bf6c9022750469a81ecca2c3ac0f">SLNet::TransportInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a1c121e9bbb3499f549629f25e742f76b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::RakNetTransport2::Stop </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop the transport provider. You can clear memory and shutdown threads here. </p>

<p>Implements <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a0a01052fbdf7b72289ef15650e7a99ae">SLNet::TransportInterface</a>.</p>

</div>
</div>
<h4 class="groupheader">Member Data Documentation</h4>
<a class="anchor" id="a7ec48df0f7cf8c5f3ca4b79a45568161"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::RakNetTransport2::lostConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d59/transport2_8h_source.xhtml#l00107">107</a> of file <a class="el" href="../../d9/d59/transport2_8h_source.xhtml">transport2.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1639d3f318554236a660720a3e9ec4b0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&gt; SLNet::RakNetTransport2::newConnections</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d59/transport2_8h_source.xhtml#l00107">107</a> of file <a class="el" href="../../d9/d59/transport2_8h_source.xhtml">transport2.h</a>.</p>

</div>
</div>
<a class="anchor" id="a61fdb83f41553fe2dcf2954ced557d0b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>*&gt; SLNet::RakNetTransport2::packetQueue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d59/transport2_8h_source.xhtml#l00108">108</a> of file <a class="el" href="../../d9/d59/transport2_8h_source.xhtml">transport2.h</a>.</p>

</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

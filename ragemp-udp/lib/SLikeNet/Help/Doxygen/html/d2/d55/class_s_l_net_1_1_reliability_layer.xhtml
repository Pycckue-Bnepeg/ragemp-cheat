<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::ReliabilityLayer Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d2/d55/class_s_l_net_1_1_reliability_layer.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../db/d25/class_s_l_net_1_1_reliability_layer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::ReliabilityLayer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Datagram reliable, ordered, unordered and sequenced sends. Flow control. Message splitting, reassembly, and coalescence.  
 <a href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml">slikenet/ReliabilityLayer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a89390d5e9ab186666fa10858cef08dda"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a89390d5e9ab186666fa10858cef08dda">ReliabilityLayer</a> ()</td></tr>
<tr class="separator:a89390d5e9ab186666fa10858cef08dda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1678708f263777fd34b4e86d40f75a32"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a1678708f263777fd34b4e86d40f75a32">~ReliabilityLayer</a> ()</td></tr>
<tr class="separator:a1678708f263777fd34b4e86d40f75a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82a18156ee862239ce046aa4fb5acc79"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a82a18156ee862239ce046aa4fb5acc79">Reset</a> (bool resetVariables, int MTUSize, bool _useSecurity)</td></tr>
<tr class="memdesc:a82a18156ee862239ce046aa4fb5acc79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the layer for reuse.  <a href="#a82a18156ee862239ce046aa4fb5acc79"></a><br/></td></tr>
<tr class="separator:a82a18156ee862239ce046aa4fb5acc79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48ebdf0f6521fca292535480c2f54906"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a48ebdf0f6521fca292535480c2f54906">SetTimeoutTime</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:a48ebdf0f6521fca292535480c2f54906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7ae8c962a75dee167d2ba844bf571e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ad7ae8c962a75dee167d2ba844bf571e1">GetTimeoutTime</a> (void)</td></tr>
<tr class="separator:ad7ae8c962a75dee167d2ba844bf571e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eae2ad1b87cabfb7e7367f0e40f1a30"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a1eae2ad1b87cabfb7e7367f0e40f1a30">HandleSocketReceiveFromConnectedPlayer</a> (const char *buffer, unsigned int length, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> * &gt; &amp;messageHandlerList, int MTUSize, <a class="el" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a> *s, <a class="el" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml">RakNetRandom</a> *<a class="el" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">rnr</a>, <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a> timeRead, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;updateBitStream)</td></tr>
<tr class="separator:a1eae2ad1b87cabfb7e7367f0e40f1a30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcc7d50f16310d422dcdb3eaee55c7db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#abcc7d50f16310d422dcdb3eaee55c7db">Receive</a> (unsigned char **data)</td></tr>
<tr class="separator:abcc7d50f16310d422dcdb3eaee55c7db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a443507154f9a5f99353a32a45ccc9e9d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a443507154f9a5f99353a32a45ccc9e9d">Send</a> (char *data, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> numberOfBitsToSend, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, unsigned char orderingChannel, bool makeDataCopy, int MTUSize, <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a> currentTime, <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receipt)</td></tr>
<tr class="separator:a443507154f9a5f99353a32a45ccc9e9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a787ea286c82a0855ce28f82e7a8a904e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a787ea286c82a0855ce28f82e7a8a904e">Update</a> (<a class="el" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a> *s, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, int MTUSize, <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a> time, unsigned bitsPerSecondLimit, <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> * &gt; &amp;messageHandlerList, <a class="el" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml">RakNetRandom</a> *<a class="el" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">rnr</a>, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;updateBitStream)</td></tr>
<tr class="separator:a787ea286c82a0855ce28f82e7a8a904e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fea229521eaf34263e99efcad9fcb33"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3fea229521eaf34263e99efcad9fcb33">IsDeadConnection</a> (void) const </td></tr>
<tr class="separator:a3fea229521eaf34263e99efcad9fcb33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add31029f764d997d13bb87314a9eaced"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#add31029f764d997d13bb87314a9eaced">KillConnection</a> (void)</td></tr>
<tr class="memdesc:add31029f764d997d13bb87314a9eaced"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes IsDeadConnection to return true.  <a href="#add31029f764d997d13bb87314a9eaced"></a><br/></td></tr>
<tr class="separator:add31029f764d997d13bb87314a9eaced"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c332dc52b07cebd36c18788634e2132"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml">RakNetStatistics</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3c332dc52b07cebd36c18788634e2132">GetStatistics</a> (<a class="el" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml">RakNetStatistics</a> *rns)</td></tr>
<tr class="separator:a3c332dc52b07cebd36c18788634e2132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a365a2fdfb29b707746a826dfe1224615"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a365a2fdfb29b707746a826dfe1224615">IsOutgoingDataWaiting</a> (void)</td></tr>
<tr class="memdesc:a365a2fdfb29b707746a826dfe1224615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Are we waiting for any data to be sent out or be processed by the player?  <a href="#a365a2fdfb29b707746a826dfe1224615"></a><br/></td></tr>
<tr class="separator:a365a2fdfb29b707746a826dfe1224615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0042a197372fb3bdd26a9514855dc2e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#af0042a197372fb3bdd26a9514855dc2e">AreAcksWaiting</a> (void)</td></tr>
<tr class="separator:af0042a197372fb3bdd26a9514855dc2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab354b17db4ee0bb894edb49ebc2349a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ab354b17db4ee0bb894edb49ebc2349a1">ApplyNetworkSimulator</a> (double _maxSendBPS, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> _minExtraPing, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> _extraPingVariance)</td></tr>
<tr class="separator:ab354b17db4ee0bb894edb49ebc2349a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b1071ebfa18a2adf12bcfb0d7f9e628"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a6b1071ebfa18a2adf12bcfb0d7f9e628">IsNetworkSimulatorActive</a> (void)</td></tr>
<tr class="separator:a6b1071ebfa18a2adf12bcfb0d7f9e628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bb5b8fba7d1c3397594a62e6ffd7c97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a4bb5b8fba7d1c3397594a62e6ffd7c97">SetSplitMessageProgressInterval</a> (int interval)</td></tr>
<tr class="separator:a4bb5b8fba7d1c3397594a62e6ffd7c97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add22038276a9b7732ff95378be35c679"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#add22038276a9b7732ff95378be35c679">SetUnreliableTimeout</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutMS)</td></tr>
<tr class="separator:add22038276a9b7732ff95378be35c679"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae840a6ab13db97e28e07f498f12c5d89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ae840a6ab13db97e28e07f498f12c5d89">AckTimeout</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> curTime)</td></tr>
<tr class="memdesc:ae840a6ab13db97e28e07f498f12c5d89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has a lot of time passed since the last ack.  <a href="#ae840a6ab13db97e28e07f498f12c5d89"></a><br/></td></tr>
<tr class="separator:ae840a6ab13db97e28e07f498f12c5d89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547e6abbaeff06959b5732debffcd853"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a547e6abbaeff06959b5732debffcd853">GetNextSendTime</a> (void) const </td></tr>
<tr class="separator:a547e6abbaeff06959b5732debffcd853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5057b29131a1d56e5064e8a60f0efe79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a5057b29131a1d56e5064e8a60f0efe79">GetTimeBetweenPackets</a> (void) const </td></tr>
<tr class="separator:a5057b29131a1d56e5064e8a60f0efe79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f31261dc8e89fc2e3aff775fb5b14a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a8f31261dc8e89fc2e3aff775fb5b14a4">GetTimeLastDatagramArrived</a> (void) const </td></tr>
<tr class="separator:a8f31261dc8e89fc2e3aff775fb5b14a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Datagram reliable, ordered, unordered and sequenced sends. Flow control. Message splitting, reassembly, and coalescence. </p>

<p>Definition at line <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml#l00122">122</a> of file <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml">ReliabilityLayer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a89390d5e9ab186666fa10858cef08dda"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ReliabilityLayer::ReliabilityLayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00304">304</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00207">INTERNAL_PACKET_PAGE_SIZE</a>.</p>

</div>
</div>
<a class="anchor" id="a1678708f263777fd34b4e86d40f75a32"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ReliabilityLayer::~ReliabilityLayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ae840a6ab13db97e28e07f498f12c5d89"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReliabilityLayer::AckTimeout </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>&#160;</td>
          <td class="paramname"><em>curTime</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Has a lot of time passed since the last ack. </p>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l03441">3441</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="ab354b17db4ee0bb894edb49ebc2349a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::ApplyNetworkSimulator </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>_maxSendBPS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td>
          <td class="paramname"><em>_minExtraPing</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td>
          <td class="paramname"><em>_extraPingVariance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l02380">2380</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00372">SLNet::RakPeer::Startup()</a>.</p>

</div>
</div>
<a class="anchor" id="af0042a197372fb3bdd26a9514855dc2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReliabilityLayer::AreAcksWaiting </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l02375">2375</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a547e6abbaeff06959b5732debffcd853"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a> ReliabilityLayer::GetNextSendTime </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l03448">3448</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3c332dc52b07cebd36c18788634e2132"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml">RakNetStatistics</a> * ReliabilityLayer::GetStatistics </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml">RakNetStatistics</a> *&#160;</td>
          <td class="paramname"><em>rns</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get Statistics </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to a static struct, filled out with current statistical information. </dd></dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l03391">3391</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00080">SLNet::RakNetStatistics::BPSLimitByCongestionControl</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00086">SLNet::RakNetStatistics::BPSLimitByOutgoingBandwidthLimit</a>, <a class="el" href="../../df/dc4/_get_time_8cpp_source.xhtml#l00211">SLNet::GetTimeUS()</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00077">SLNet::RakNetStatistics::isLimitedByCongestionControl</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00083">SLNet::RakNetStatistics::isLimitedByOutgoingBandwidthLimit</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00102">SLNet::RakNetStatistics::packetlossLastSecond</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00105">SLNet::RakNetStatistics::packetlossTotal</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00057">SLNet::RNS_PER_SECOND_METRICS_COUNT</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00069">SLNet::RakNetStatistics::runningTotal</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00042">SLNet::USER_MESSAGE_BYTES_RESENT</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00039">SLNet::USER_MESSAGE_BYTES_SENT</a>, and <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00066">SLNet::RakNetStatistics::valueOverLastSecond</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03035">SLNet::RakPeer::GetStatistics()</a>, and <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a5057b29131a1d56e5064e8a60f0efe79"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a> ReliabilityLayer::GetTimeBetweenPackets </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l03453">3453</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8f31261dc8e89fc2e3aff775fb5b14a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> SLNet::ReliabilityLayer::GetTimeLastDatagramArrived </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml#l00218">218</a> of file <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml">ReliabilityLayer.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad7ae8c962a75dee167d2ba844bf571e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> ReliabilityLayer::GetTimeoutTime </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the value passed to SetTimeoutTime. or the default if it was never called </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">the</td><td>value passed to SetTimeoutTime </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00375">375</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02540">SLNet::RakPeer::GetTimeoutTime()</a>, and <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a1eae2ad1b87cabfb7e7367f0e40f1a30"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>messageHandlerList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>MTUSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a> *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml">RakNetRandom</a> *&#160;</td>
          <td class="paramname"><em>rnr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a>&#160;</td>
          <td class="paramname"><em>timeRead</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;&#160;</td>
          <td class="paramname"><em>updateBitStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Packets are read directly from the socket layer and skip the reliability layer because unconnected players do not use the reliability layer This function takes packet data after a player has been confirmed as connected. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">buffer</td><td>The socket data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>The length of the socket data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The player that this data is from </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageHandlerList</td><td>A list of registered plugins </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">MTUSize</td><td>maximum datagram size </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Success </td></tr>
    <tr><td class="paramname">false</td><td>Modified packet </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">631</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00054">SLNet::ACTUAL_BYTES_RECEIVED</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00093">BITS_TO_BYTES</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00094">BYTES_TO_BITS</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00103">SLNet::InternalPacket::data</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00065">SLNet::InternalPacketFixedSizeTransmissionHeader::dataBitLength</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00056">DEFAULT_HAS_RECEIVED_PACKET_QUEUE_SIZE</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00127">DataStructures::RangeList&lt; range_type &gt;::Deserialize()</a>, <a class="el" href="../../df/dc4/_get_time_8cpp_source.xhtml#l00092">SLNet::GetTimeMS()</a>, <a class="el" href="../../d6/d83/_message_identifiers_8h_source.xhtml#l00101">ID_SND_RECEIPT_ACKED</a>, <a class="el" href="../../d6/d83/_message_identifiers_8h_source.xhtml#l00435">ID_USER_PACKET_ENUM</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h.xhtml#a35e6652907f33d8d77bdbdfbbddac127">if()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00971">SLNet::BitStream::IgnoreBits()</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00097">SLNet::InternalPacket::nextActionTime</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00059">SLNet::InternalPacketFixedSizeTransmissionHeader::orderingChannel</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00055">SLNet::InternalPacketFixedSizeTransmissionHeader::orderingIndex</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00108">PRINTF_64_BIT_MODIFIER</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00232">DataStructures::List&lt; list_type &gt;::Push()</a>, <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml#l00094">SLNet::BPSTracker::Push1()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00069">DataStructures::RangeList&lt; range_type &gt;::ranges</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01279">SLNet::BitStream::Read()</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00069">SLNet::InternalPacketFixedSizeTransmissionHeader::reliability</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00056">RELIABLE</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00060">RELIABLE_ORDERED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00064">RELIABLE_SEQUENCED</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00053">SLNet::InternalPacketFixedSizeTransmissionHeader::reliableMessageNumber</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00137">RESEND_BUFFER_ARRAY_MASK</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00057">SLNet::InternalPacketFixedSizeTransmissionHeader::sequencingIndex</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00274">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::Size()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00065">SLNet::InternalPacketFixedSizeTransmissionHeader::splitPacketCount</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00061">SLNet::InternalPacketFixedSizeTransmissionHeader::splitPacketId</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00053">UNRELIABLE_SEQUENCED</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00048">SLNet::USER_MESSAGE_BYTES_RECEIVED_IGNORED</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00045">SLNet::USER_MESSAGE_BYTES_RECEIVED_PROCESSED</a>, and <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00472">SLNet::uint24_t::val</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05402">SLNet::ProcessNetworkPacket()</a>.</p>

</div>
</div>
<a class="anchor" id="a3fea229521eaf34263e99efcad9fcb33"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReliabilityLayer::IsDeadConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Were you ever unable to deliver a packet despite retries? </p>
<dl class="section return"><dt>Returns</dt><dd>true means the connection has been lost. Otherwise not. </dd></dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l03374">3374</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a6b1071ebfa18a2adf12bcfb0d7f9e628"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::ReliabilityLayer::IsNetworkSimulatorActive </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns if you previously called ApplyNetworkSimulator </p>
<dl class="section return"><dt>Returns</dt><dd>If you previously called ApplyNetworkSimulator </dd></dl>

</div>
</div>
<a class="anchor" id="a365a2fdfb29b707746a826dfe1224615"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReliabilityLayer::IsOutgoingDataWaiting </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Are we waiting for any data to be sent out or be processed by the player? </p>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l02358">2358</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="add31029f764d997d13bb87314a9eaced"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::KillConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Causes IsDeadConnection to return true. </p>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l03382">3382</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abcc7d50f16310d422dcdb3eaee55c7db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> ReliabilityLayer::Receive </td>
          <td>(</td>
          <td class="paramtype">unsigned char **&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This allocates bytes and writes a user-level message to those bytes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td>The message </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns number of BITS put into the buffer </dd></dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01523">1523</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00103">SLNet::InternalPacket::data</a>, and <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00065">SLNet::InternalPacketFixedSizeTransmissionHeader::dataBitLength</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a82a18156ee862239ce046aa4fb5acc79"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::Reset </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>resetVariables</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>MTUSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>_useSecurity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets the layer for reuse. </p>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00344">344</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../df/dc4/_get_time_8cpp_source.xhtml#l00211">SLNet::GetTimeUS()</a>, and <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h_source.xhtml#l00056">UDP_HEADER_SIZE</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03579">SLNet::RakPeer::AssignSystemAddressToRemoteSystemList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04101">SLNet::RakPeer::CloseConnectionInternal()</a>, and <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01041">SLNet::RakPeer::Shutdown()</a>.</p>

</div>
</div>
<a class="anchor" id="a443507154f9a5f99353a32a45ccc9e9d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReliabilityLayer::Send </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a>&#160;</td>
          <td class="paramname"><em>numberOfBitsToSend</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a>&#160;</td>
          <td class="paramname"><em>reliability</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>orderingChannel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>makeDataCopy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>MTUSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a>&#160;</td>
          <td class="paramname"><em>currentTime</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td>
          <td class="paramname"><em>receipt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Puts data on the send queue </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>The data to send </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numberOfBitsToSend</td><td>The length of <em>data</em> in bits </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">priority</td><td>The priority level for the send </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reliability</td><td>The reliability type for the send </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderingChannel</td><td>0 to 31. Specifies what channel to use, for relational ordering and sequencing of packets. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">makeDataCopy</td><td>If true <em>data</em> will be copied. Otherwise, only a pointer will be stored. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">MTUSize</td><td>maximum datagram size </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">currentTime</td><td>Current time, as per <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">receipt</td><td>This number will be returned back with ID_SND_RECEIPT_ACKED or ID_SND_RECEIPT_LOSS and is only returned with the reliability types that contain RECEIPT in the name </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True or false for success or failure. </dd></dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01555">1555</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00093">BITS_TO_BYTES</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00094">BYTES_TO_BITS</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00095">SLNet::InternalPacket::creationTime</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00103">SLNet::InternalPacket::data</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00065">SLNet::InternalPacketFixedSizeTransmissionHeader::dataBitLength</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00028">HIGH_PRIORITY</a>, <a class="el" href="../../d2/d24/_m_t_u_size_8h_source.xhtml#l00033">MAXIMUM_MTU_SIZE</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00087">SLNet::InternalPacket::messageInternalOrder</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00091">SLNet::InternalPacket::messageNumberAssigned</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00065">notifyOutOfMemory</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00084">NUMBER_OF_RELIABILITIES</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00059">SLNet::InternalPacketFixedSizeTransmissionHeader::orderingChannel</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00055">SLNet::InternalPacketFixedSizeTransmissionHeader::orderingIndex</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00121">SLNet::InternalPacket::priority</a>, <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml#l00094">SLNet::BPSTracker::Push1()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00069">SLNet::InternalPacketFixedSizeTransmissionHeader::reliability</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00056">RELIABLE</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00060">RELIABLE_ORDERED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00077">RELIABLE_ORDERED_WITH_ACK_RECEIPT</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00064">RELIABLE_SEQUENCED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00074">RELIABLE_WITH_ACK_RECEIPT</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00123">SLNet::InternalPacket::sendReceiptSerial</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00057">SLNet::InternalPacketFixedSizeTransmissionHeader::sequencingIndex</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00049">UNRELIABLE</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00053">UNRELIABLE_SEQUENCED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00067">UNRELIABLE_WITH_ACK_RECEIPT</a>, and <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00035">SLNet::USER_MESSAGE_BYTES_PUSHED</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04270">SLNet::RakPeer::SendImmediate()</a>.</p>

</div>
</div>
<a class="anchor" id="a4bb5b8fba7d1c3397594a62e6ffd7c97"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::SetSplitMessageProgressInterval </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>interval</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l02391">2391</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03579">SLNet::RakPeer::AssignSystemAddressToRemoteSystemList()</a>.</p>

</div>
</div>
<a class="anchor" id="a48ebdf0f6521fca292535480c2f54906"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::SetTimeoutTime </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td>
          <td class="paramname"><em>time</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the time, in MS, to use before considering ourselves disconnected after not being able to deliver a reliable packet Default time is 10,000 or 10 seconds in release and 30,000 or 30 seconds in debug. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>Time, in MS </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00367">367</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03579">SLNet::RakPeer::AssignSystemAddressToRemoteSystemList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04524">SLNet::ProcessOfflineNetworkPacket()</a>, and <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02513">SLNet::RakPeer::SetTimeoutTime()</a>.</p>

</div>
</div>
<a class="anchor" id="add22038276a9b7732ff95378be35c679"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::SetUnreliableTimeout </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>&#160;</td>
          <td class="paramname"><em>timeoutMS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l02396">2396</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03579">SLNet::RakPeer::AssignSystemAddressToRemoteSystemList()</a>.</p>

</div>
</div>
<a class="anchor" id="a787ea286c82a0855ce28f82e7a8a904e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReliabilityLayer::Update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a> *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>MTUSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#af68854e24d09ea8058bf8b27ce0f24e6">CCTimeType</a>&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bitsPerSecondLimit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>messageHandlerList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml">RakNetRandom</a> *&#160;</td>
          <td class="paramname"><em>rnr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;&#160;</td>
          <td class="paramname"><em>updateBitStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Call once per game cycle. Handles internal lists and actually does the send. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>the communication end point </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The Unique Player Identifier who shouldhave sent some packets </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">MTUSize</td><td>maximum datagram size </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>current system time </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxBitsPerSecond</td><td>if non-zero, enforces that outgoing bandwidth does not exceed this amount </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">messageHandlerList</td><td>A list of registered plugins </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01703">1703</a> of file <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00093">BITS_TO_BYTES</a>, <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00094">BYTES_TO_BITS</a>, <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h_source.xhtml#l00059">CC_DEBUG_PRINTF_2</a>, <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h_source.xhtml#l00070">CC_TIME_TYPE_BYTES</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00095">SLNet::InternalPacket::creationTime</a>, <a class="el" href="../../df/ded/socket2_8h_source.xhtml#l00081">SLNet::RNS2_SendParameters::data</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00103">SLNet::InternalPacket::data</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00065">SLNet::InternalPacketFixedSizeTransmissionHeader::dataBitLength</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00525">SLNet::BitStream::GetNumberOfBytesUsed()</a>, <a class="el" href="../../df/dc4/_get_time_8cpp_source.xhtml#l00211">SLNet::GetTimeUS()</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00101">SLNet::InternalPacket::headerLength</a>, <a class="el" href="../../d6/d83/_message_identifiers_8h_source.xhtml#l00108">ID_SND_RECEIPT_LOSS</a>, <a class="el" href="../../df/ded/socket2_8h_source.xhtml#l00082">SLNet::RNS2_SendParameters::length</a>, <a class="el" href="../../d2/d24/_m_t_u_size_8h_source.xhtml#l00033">MAXIMUM_MTU_SIZE</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00091">SLNet::InternalPacket::messageNumberAssigned</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00097">SLNet::InternalPacket::nextActionTime</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00748">SLNet::BitStream::PadWithZeroToByteLength()</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00121">SLNet::InternalPacket::priority</a>, <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml#l00094">SLNet::BPSTracker::Push1()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00069">SLNet::InternalPacketFixedSizeTransmissionHeader::reliability</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00056">RELIABLE</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00060">RELIABLE_ORDERED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00077">RELIABLE_ORDERED_WITH_ACK_RECEIPT</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00064">RELIABLE_SEQUENCED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00074">RELIABLE_WITH_ACK_RECEIPT</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00053">SLNet::InternalPacketFixedSizeTransmissionHeader::reliableMessageNumber</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00137">RESEND_BUFFER_ARRAY_MASK</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00144">SLNet::BitStream::Reset()</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00099">SLNet::InternalPacket::retransmissionTime</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00057">SLNet::RNS_PER_SECOND_METRICS_COUNT</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00123">SLNet::InternalPacket::sendReceiptSerial</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>, <a class="el" href="../../df/ded/socket2_8h_source.xhtml#l00083">SLNet::RNS2_SendParameters::systemAddress</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00119">SLNet::InternalPacket::timesSent</a>, <a class="el" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h_source.xhtml#l00056">UDP_HEADER_SIZE</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00049">UNRELIABLE</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00053">UNRELIABLE_SEQUENCED</a>, <a class="el" href="../../d7/d03/_packet_priority_8h_source.xhtml#l00067">UNRELIABLE_WITH_ACK_RECEIPT</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00127">SLNet::InternalPacket::unreliableNext</a>, <a class="el" href="../../d5/dc3/_internal_packet_8h_source.xhtml#l00127">SLNet::InternalPacket::unreliablePrev</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00042">SLNet::USER_MESSAGE_BYTES_RESENT</a>, <a class="el" href="../../d7/dc5/statistics_8h_source.xhtml#l00039">SLNet::USER_MESSAGE_BYTES_SENT</a>, and <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00472">SLNet::uint24_t::val</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Source/include/slikenet/<a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml">ReliabilityLayer.h</a></li>
<li>Source/src/<a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml">ReliabilityLayer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml">ReliabilityLayer</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::RakString Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d2/d66/class_s_l_net_1_1_rak_string.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="../../d1/dfd/class_s_l_net_1_1_rak_string-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::RakString Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>String class.  
 <a href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/d66/string_8h_source.xhtml">slikenet/string.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a></td></tr>
<tr class="separator:dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ace80ef2f43abcc47ebbe5c2005c66161"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ace80ef2f43abcc47ebbe5c2005c66161">RakString</a> ()</td></tr>
<tr class="separator:ace80ef2f43abcc47ebbe5c2005c66161"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3de5216b4e7a47a3f05e59160b3d93a1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a3de5216b4e7a47a3f05e59160b3d93a1">RakString</a> (char input)</td></tr>
<tr class="separator:a3de5216b4e7a47a3f05e59160b3d93a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99cf6d4a4f291d5a22858275ec8ab5c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a99cf6d4a4f291d5a22858275ec8ab5c5">RakString</a> (unsigned char input)</td></tr>
<tr class="separator:a99cf6d4a4f291d5a22858275ec8ab5c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa2a6d8bf419b8b87f6165dc7b29f0ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aaa2a6d8bf419b8b87f6165dc7b29f0ef">RakString</a> (const unsigned char *format,...)</td></tr>
<tr class="separator:aaa2a6d8bf419b8b87f6165dc7b29f0ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85a41aa56baad1c5a078989ea30bf16b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a85a41aa56baad1c5a078989ea30bf16b">RakString</a> (const char *format,...)</td></tr>
<tr class="separator:a85a41aa56baad1c5a078989ea30bf16b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae45062721fc4583dc58f9b211089498e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ae45062721fc4583dc58f9b211089498e">~RakString</a> ()</td></tr>
<tr class="separator:ae45062721fc4583dc58f9b211089498e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a8891a6648fe169e65812d221bdcdc0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1a8891a6648fe169e65812d221bdcdc0">RakString</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs)</td></tr>
<tr class="separator:a1a8891a6648fe169e65812d221bdcdc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6b527ffdba61d0d63bddac0feacfea2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad6b527ffdba61d0d63bddac0feacfea2">operator const char *</a> () const </td></tr>
<tr class="memdesc:ad6b527ffdba61d0d63bddac0feacfea2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit return of const char*.  <a href="#ad6b527ffdba61d0d63bddac0feacfea2"></a><br/></td></tr>
<tr class="separator:ad6b527ffdba61d0d63bddac0feacfea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac661bded7f8850f8cf7bbcad8406d3e4"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4">C_String</a> (void) const </td></tr>
<tr class="memdesc:ac661bded7f8850f8cf7bbcad8406d3e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as std::string::c_str.  <a href="#ac661bded7f8850f8cf7bbcad8406d3e4"></a><br/></td></tr>
<tr class="separator:ac661bded7f8850f8cf7bbcad8406d3e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbcab9f51298b604a69eb1461fa07220"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#acbcab9f51298b604a69eb1461fa07220">C_StringUnsafe</a> (void)</td></tr>
<tr class="separator:acbcab9f51298b604a69eb1461fa07220"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7606e9fef8b639c981b97b469944cf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa7606e9fef8b639c981b97b469944cf4">operator=</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs)</td></tr>
<tr class="memdesc:aa7606e9fef8b639c981b97b469944cf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigment operators.  <a href="#aa7606e9fef8b639c981b97b469944cf4"></a><br/></td></tr>
<tr class="separator:aa7606e9fef8b639c981b97b469944cf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd67c1216b529a9b755d36b5ca3fb08b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#acd67c1216b529a9b755d36b5ca3fb08b">operator=</a> (const char *str)</td></tr>
<tr class="separator:acd67c1216b529a9b755d36b5ca3fb08b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eed8a829571c3caf9347a9fee2b2a68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a2eed8a829571c3caf9347a9fee2b2a68">operator=</a> (char *str)</td></tr>
<tr class="separator:a2eed8a829571c3caf9347a9fee2b2a68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84115735fd39a580c71b6411978f27db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a84115735fd39a580c71b6411978f27db">operator=</a> (const unsigned char *str)</td></tr>
<tr class="separator:a84115735fd39a580c71b6411978f27db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab456fd37c4e5fa68b257386f120e4988"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab456fd37c4e5fa68b257386f120e4988">operator=</a> (char unsigned *str)</td></tr>
<tr class="separator:ab456fd37c4e5fa68b257386f120e4988"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f470f534241e021916a675fadeeeea5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a5f470f534241e021916a675fadeeeea5">operator=</a> (const char c)</td></tr>
<tr class="separator:a5f470f534241e021916a675fadeeeea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeae5e80dcb205440b77569ca886e2cbb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aeae5e80dcb205440b77569ca886e2cbb">operator+=</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs)</td></tr>
<tr class="memdesc:aeae5e80dcb205440b77569ca886e2cbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Concatenation.  <a href="#aeae5e80dcb205440b77569ca886e2cbb"></a><br/></td></tr>
<tr class="separator:aeae5e80dcb205440b77569ca886e2cbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9684b5cc425ee2b667a165389fd5f858"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a9684b5cc425ee2b667a165389fd5f858">operator+=</a> (const char *str)</td></tr>
<tr class="separator:a9684b5cc425ee2b667a165389fd5f858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a058c7f39d625443fe2e164f6f2b9a30c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a058c7f39d625443fe2e164f6f2b9a30c">operator+=</a> (char *str)</td></tr>
<tr class="separator:a058c7f39d625443fe2e164f6f2b9a30c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a301f43d99101c9ce8da549418e028cff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a301f43d99101c9ce8da549418e028cff">operator+=</a> (const unsigned char *str)</td></tr>
<tr class="separator:a301f43d99101c9ce8da549418e028cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab35c258b08105472a8976ba9ba7c9ce7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab35c258b08105472a8976ba9ba7c9ce7">operator+=</a> (char unsigned *str)</td></tr>
<tr class="separator:ab35c258b08105472a8976ba9ba7c9ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa061f9f2b8a42b6915ce1e8117c71fe7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa061f9f2b8a42b6915ce1e8117c71fe7">operator+=</a> (const char c)</td></tr>
<tr class="separator:aa061f9f2b8a42b6915ce1e8117c71fe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e4e0669d3502a5c8c00b43367683ba5"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a4e4e0669d3502a5c8c00b43367683ba5">operator[]</a> (const unsigned int position) const </td></tr>
<tr class="memdesc:a4e4e0669d3502a5c8c00b43367683ba5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Character index. Do not use to change the string however.  <a href="#a4e4e0669d3502a5c8c00b43367683ba5"></a><br/></td></tr>
<tr class="separator:a4e4e0669d3502a5c8c00b43367683ba5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1490c721c85f3d38a473e60f0ce190c0"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1490c721c85f3d38a473e60f0ce190c0">Find</a> (const char *stringToFind, size_t pos=0)</td></tr>
<tr class="separator:a1490c721c85f3d38a473e60f0ce190c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab376dc4c6120b03fb19bb4f278217dae"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab376dc4c6120b03fb19bb4f278217dae">operator==</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs) const </td></tr>
<tr class="memdesc:ab376dc4c6120b03fb19bb4f278217dae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality.  <a href="#ab376dc4c6120b03fb19bb4f278217dae"></a><br/></td></tr>
<tr class="separator:ab376dc4c6120b03fb19bb4f278217dae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab6a0eef7f239f4bb7887c54fee8c7a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aab6a0eef7f239f4bb7887c54fee8c7a4">operator==</a> (const char *str) const </td></tr>
<tr class="separator:aab6a0eef7f239f4bb7887c54fee8c7a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b08f114d5ea19f37025b90ea86c5ef2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1b08f114d5ea19f37025b90ea86c5ef2">operator==</a> (char *str) const </td></tr>
<tr class="separator:a1b08f114d5ea19f37025b90ea86c5ef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d4b6e1425abff1441f503654b9e096c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1d4b6e1425abff1441f503654b9e096c">operator&lt;</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;right) const </td></tr>
<tr class="separator:a1d4b6e1425abff1441f503654b9e096c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b847e1d1170e005c8985f5485d8d905"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1b847e1d1170e005c8985f5485d8d905">operator&lt;=</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;right) const </td></tr>
<tr class="separator:a1b847e1d1170e005c8985f5485d8d905"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaba4c897ff668c92ee279bdef30ef3d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#acaba4c897ff668c92ee279bdef30ef3d">operator&gt;</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;right) const </td></tr>
<tr class="separator:acaba4c897ff668c92ee279bdef30ef3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97754b168e86cddec6530e2c3af5bedc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a97754b168e86cddec6530e2c3af5bedc">operator&gt;=</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;right) const </td></tr>
<tr class="separator:a97754b168e86cddec6530e2c3af5bedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbd5f85f3df3db44366535c826df14f7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#afbd5f85f3df3db44366535c826df14f7">operator!=</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs) const </td></tr>
<tr class="memdesc:afbd5f85f3df3db44366535c826df14f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inequality.  <a href="#afbd5f85f3df3db44366535c826df14f7"></a><br/></td></tr>
<tr class="separator:afbd5f85f3df3db44366535c826df14f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3675ba4d9a12543b8f817a66d72e76c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab3675ba4d9a12543b8f817a66d72e76c">operator!=</a> (const char *str) const </td></tr>
<tr class="separator:ab3675ba4d9a12543b8f817a66d72e76c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c1eea351c124ef03204d670fca81f9b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a7c1eea351c124ef03204d670fca81f9b">operator!=</a> (char *str) const </td></tr>
<tr class="separator:a7c1eea351c124ef03204d670fca81f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a332ba01133e40fed275bd0e0895eda3f"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a332ba01133e40fed275bd0e0895eda3f">ToLower</a> (void)</td></tr>
<tr class="memdesc:a332ba01133e40fed275bd0e0895eda3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change all characters to lowercase.  <a href="#a332ba01133e40fed275bd0e0895eda3f"></a><br/></td></tr>
<tr class="separator:a332ba01133e40fed275bd0e0895eda3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7965f53c87a1afe2afeb39217dd093c8"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a7965f53c87a1afe2afeb39217dd093c8">ToUpper</a> (void)</td></tr>
<tr class="memdesc:a7965f53c87a1afe2afeb39217dd093c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change all characters to uppercase.  <a href="#a7965f53c87a1afe2afeb39217dd093c8"></a><br/></td></tr>
<tr class="separator:a7965f53c87a1afe2afeb39217dd093c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8a4fe36cf8ac975adafcee96074cf9b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab8a4fe36cf8ac975adafcee96074cf9b">Set</a> (const char *format,...)</td></tr>
<tr class="memdesc:ab8a4fe36cf8ac975adafcee96074cf9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the value of the string.  <a href="#ab8a4fe36cf8ac975adafcee96074cf9b"></a><br/></td></tr>
<tr class="separator:ab8a4fe36cf8ac975adafcee96074cf9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45c9a3cce60bdedf09a3783c49e832c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a45c9a3cce60bdedf09a3783c49e832c3">Assign</a> (const char *str, size_t pos, size_t n)</td></tr>
<tr class="separator:a45c9a3cce60bdedf09a3783c49e832c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a4f2762a85a1e4704db0f7ac2c0abe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a83a4f2762a85a1e4704db0f7ac2c0abe">IsEmpty</a> (void) const </td></tr>
<tr class="memdesc:a83a4f2762a85a1e4704db0f7ac2c0abe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if the string is empty. Also, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String()</a> would return "".  <a href="#a83a4f2762a85a1e4704db0f7ac2c0abe"></a><br/></td></tr>
<tr class="separator:a83a4f2762a85a1e4704db0f7ac2c0abe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe4d216101d087910af4d93b594847b5"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5">GetLength</a> (void) const </td></tr>
<tr class="memdesc:abe4d216101d087910af4d93b594847b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the length of the string.  <a href="#abe4d216101d087910af4d93b594847b5"></a><br/></td></tr>
<tr class="separator:abe4d216101d087910af4d93b594847b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0a5948b0fb56b7c9cee0bdc9dcfa4e9"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad0a5948b0fb56b7c9cee0bdc9dcfa4e9">GetLengthUTF8</a> (void) const </td></tr>
<tr class="separator:ad0a5948b0fb56b7c9cee0bdc9dcfa4e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbee52087e98b1cf4b25158d9fe943db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#afbee52087e98b1cf4b25158d9fe943db">Replace</a> (unsigned index, unsigned count, unsigned char c)</td></tr>
<tr class="memdesc:afbee52087e98b1cf4b25158d9fe943db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace character(s) in starting at index, for count, with c.  <a href="#afbee52087e98b1cf4b25158d9fe943db"></a><br/></td></tr>
<tr class="separator:afbee52087e98b1cf4b25158d9fe943db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d5f91dc90df8e1a60c74e5d81ab557b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1d5f91dc90df8e1a60c74e5d81ab557b">SetChar</a> (unsigned index, unsigned char c)</td></tr>
<tr class="memdesc:a1d5f91dc90df8e1a60c74e5d81ab557b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace character at index with c.  <a href="#a1d5f91dc90df8e1a60c74e5d81ab557b"></a><br/></td></tr>
<tr class="separator:a1d5f91dc90df8e1a60c74e5d81ab557b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada622d900bc8876bed168967359f1f3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ada622d900bc8876bed168967359f1f3d">SetChar</a> (unsigned index, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> s)</td></tr>
<tr class="memdesc:ada622d900bc8876bed168967359f1f3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace character at index with string s.  <a href="#ada622d900bc8876bed168967359f1f3d"></a><br/></td></tr>
<tr class="separator:ada622d900bc8876bed168967359f1f3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a171b99a82ad46872f26b04a76fd81529"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a171b99a82ad46872f26b04a76fd81529">Truncate</a> (unsigned int length)</td></tr>
<tr class="memdesc:a171b99a82ad46872f26b04a76fd81529"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make sure string is no longer than <em>length</em>.  <a href="#a171b99a82ad46872f26b04a76fd81529"></a><br/></td></tr>
<tr class="separator:a171b99a82ad46872f26b04a76fd81529"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef78390c7c3f97ac7a622f05b8004482"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aef78390c7c3f97ac7a622f05b8004482">TruncateUTF8</a> (unsigned int length)</td></tr>
<tr class="separator:aef78390c7c3f97ac7a622f05b8004482"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b2fbfd6eb8aeb3ff2141ad81fea621"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a90b2fbfd6eb8aeb3ff2141ad81fea621">SubStr</a> (unsigned int index, size_t count) const </td></tr>
<tr class="separator:a90b2fbfd6eb8aeb3ff2141ad81fea621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e133fa2bb1b724b7b94923ddcca4a08"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a2e133fa2bb1b724b7b94923ddcca4a08">Erase</a> (unsigned int index, unsigned int count)</td></tr>
<tr class="memdesc:a2e133fa2bb1b724b7b94923ddcca4a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erase characters out of the string at index for count.  <a href="#a2e133fa2bb1b724b7b94923ddcca4a08"></a><br/></td></tr>
<tr class="separator:a2e133fa2bb1b724b7b94923ddcca4a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5647e1f88cd3689df68958bbfe22642e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a5647e1f88cd3689df68958bbfe22642e">TerminateAtFirstCharacter</a> (char c)</td></tr>
<tr class="memdesc:a5647e1f88cd3689df68958bbfe22642e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the first instance of c with a NULL terminator.  <a href="#a5647e1f88cd3689df68958bbfe22642e"></a><br/></td></tr>
<tr class="separator:a5647e1f88cd3689df68958bbfe22642e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab669d310f7c9444ef202047b78c7afd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab669d310f7c9444ef202047b78c7afd3">TerminateAtLastCharacter</a> (char c)</td></tr>
<tr class="memdesc:ab669d310f7c9444ef202047b78c7afd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the last instance of c with a NULL terminator.  <a href="#ab669d310f7c9444ef202047b78c7afd3"></a><br/></td></tr>
<tr class="separator:ab669d310f7c9444ef202047b78c7afd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca06540a69b93d259883844ab2e6158"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aeca06540a69b93d259883844ab2e6158">StartAfterFirstCharacter</a> (char c)</td></tr>
<tr class="separator:aeca06540a69b93d259883844ab2e6158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0ef1d97c008cf649fc8c968cd9f02b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad0ef1d97c008cf649fc8c968cd9f02b6">StartAfterLastCharacter</a> (char c)</td></tr>
<tr class="separator:ad0ef1d97c008cf649fc8c968cd9f02b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09977ed89e222b3b5f77b43aeb399b9d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a09977ed89e222b3b5f77b43aeb399b9d">GetCharacterCount</a> (char c)</td></tr>
<tr class="memdesc:a09977ed89e222b3b5f77b43aeb399b9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how many occurances there are of <em>c</em> in the string.  <a href="#a09977ed89e222b3b5f77b43aeb399b9d"></a><br/></td></tr>
<tr class="separator:a09977ed89e222b3b5f77b43aeb399b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7f77e87e3cbe02d1e5da1362a99dc26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ae7f77e87e3cbe02d1e5da1362a99dc26">RemoveCharacter</a> (char c)</td></tr>
<tr class="memdesc:ae7f77e87e3cbe02d1e5da1362a99dc26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove all instances of c.  <a href="#ae7f77e87e3cbe02d1e5da1362a99dc26"></a><br/></td></tr>
<tr class="separator:ae7f77e87e3cbe02d1e5da1362a99dc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1c33f3003f74b03de8cbd6de4a33f50"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ae1c33f3003f74b03de8cbd6de4a33f50">AppendBytes</a> (const char *bytes, size_t count)</td></tr>
<tr class="separator:ae1c33f3003f74b03de8cbd6de4a33f50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafb9fd8cb69e7a1cb108adb5c85850b3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aafb9fd8cb69e7a1cb108adb5c85850b3">StrCmp</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs) const </td></tr>
<tr class="memdesc:aafb9fd8cb69e7a1cb108adb5c85850b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare strings (case sensitive)  <a href="#aafb9fd8cb69e7a1cb108adb5c85850b3"></a><br/></td></tr>
<tr class="separator:aafb9fd8cb69e7a1cb108adb5c85850b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd5d63d24048cd8e3659baf334b0a9d0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#afd5d63d24048cd8e3659baf334b0a9d0">StrNCmp</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs, size_t num) const </td></tr>
<tr class="memdesc:afd5d63d24048cd8e3659baf334b0a9d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare strings (case sensitive), up to num characters.  <a href="#afd5d63d24048cd8e3659baf334b0a9d0"></a><br/></td></tr>
<tr class="separator:afd5d63d24048cd8e3659baf334b0a9d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e648e80d0e834b566d078858ee03a4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ae2e648e80d0e834b566d078858ee03a4">StrICmp</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rhs) const </td></tr>
<tr class="memdesc:ae2e648e80d0e834b566d078858ee03a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare strings (not case sensitive)  <a href="#ae2e648e80d0e834b566d078858ee03a4"></a><br/></td></tr>
<tr class="separator:ae2e648e80d0e834b566d078858ee03a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a458ce4aa51b672f501f51d5941e5ac6e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a458ce4aa51b672f501f51d5941e5ac6e">Clear</a> (void)</td></tr>
<tr class="memdesc:a458ce4aa51b672f501f51d5941e5ac6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the string.  <a href="#a458ce4aa51b672f501f51d5941e5ac6e"></a><br/></td></tr>
<tr class="separator:a458ce4aa51b672f501f51d5941e5ac6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97f3215bc90e31be0efddabfafd2a42d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a97f3215bc90e31be0efddabfafd2a42d">Printf</a> (void)</td></tr>
<tr class="memdesc:a97f3215bc90e31be0efddabfafd2a42d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the string to the screen.  <a href="#a97f3215bc90e31be0efddabfafd2a42d"></a><br/></td></tr>
<tr class="separator:a97f3215bc90e31be0efddabfafd2a42d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a318878a1865cce6819edccaf98888fcf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a318878a1865cce6819edccaf98888fcf">FPrintf</a> (FILE *fp)</td></tr>
<tr class="memdesc:a318878a1865cce6819edccaf98888fcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the string to a file.  <a href="#a318878a1865cce6819edccaf98888fcf"></a><br/></td></tr>
<tr class="separator:a318878a1865cce6819edccaf98888fcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d72ee1386c8727ddd5dce900175499f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a7d72ee1386c8727ddd5dce900175499f">IPAddressMatch</a> (const char *IP)</td></tr>
<tr class="memdesc:a7d72ee1386c8727ddd5dce900175499f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Does the given IP address match the IP address encoded into this string, accounting for wildcards?  <a href="#a7d72ee1386c8727ddd5dce900175499f"></a><br/></td></tr>
<tr class="separator:a7d72ee1386c8727ddd5dce900175499f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fb24f28bbfb63787748d02febf471a7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a7fb24f28bbfb63787748d02febf471a7">ContainsNonprintableExceptSpaces</a> (void) const </td></tr>
<tr class="memdesc:a7fb24f28bbfb63787748d02febf471a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Does the string contain non-printable characters other than spaces?  <a href="#a7fb24f28bbfb63787748d02febf471a7"></a><br/></td></tr>
<tr class="separator:a7fb24f28bbfb63787748d02febf471a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a8b4a4bfcc8cf93c5e376cf917dffc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a58a8b4a4bfcc8cf93c5e376cf917dffc">IsEmailAddress</a> (void) const </td></tr>
<tr class="memdesc:a58a8b4a4bfcc8cf93c5e376cf917dffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is this a valid email address?  <a href="#a58a8b4a4bfcc8cf93c5e376cf917dffc"></a><br/></td></tr>
<tr class="separator:a58a8b4a4bfcc8cf93c5e376cf917dffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adadd4972aaa328dcecc6460c8fbd2dd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#adadd4972aaa328dcecc6460c8fbd2dd5">URLEncode</a> (void)</td></tr>
<tr class="memdesc:adadd4972aaa328dcecc6460c8fbd2dd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">URL Encode the string. See <a href="http://www.codeguru.com/cpp/cpp/cpp_mfc/article.php/c4029/">http://www.codeguru.com/cpp/cpp/cpp_mfc/article.php/c4029/</a>.  <a href="#adadd4972aaa328dcecc6460c8fbd2dd5"></a><br/></td></tr>
<tr class="separator:adadd4972aaa328dcecc6460c8fbd2dd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a581f9133ed4ee1d4f68eec3084de7450"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a581f9133ed4ee1d4f68eec3084de7450">URLDecode</a> (void)</td></tr>
<tr class="memdesc:a581f9133ed4ee1d4f68eec3084de7450"><td class="mdescLeft">&#160;</td><td class="mdescRight">URL decode the string.  <a href="#a581f9133ed4ee1d4f68eec3084de7450"></a><br/></td></tr>
<tr class="separator:a581f9133ed4ee1d4f68eec3084de7450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afac27c28f17d505c7966751bb76f55f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#afac27c28f17d505c7966751bb76f55f1">SplitURI</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;header, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;domain, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;path)</td></tr>
<tr class="memdesc:afac27c28f17d505c7966751bb76f55f1"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a href="https://servers.api.rackspacecloud.com/v1.0">https://servers.api.rackspacecloud.com/v1.0</a> to <a href="https://,">https://,</a> servers.api.rackspacecloud.com, /v1.0  <a href="#afac27c28f17d505c7966751bb76f55f1"></a><br/></td></tr>
<tr class="separator:afac27c28f17d505c7966751bb76f55f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d23e9761d1bcb2dcc8a1ecd8f12c7be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a8d23e9761d1bcb2dcc8a1ecd8f12c7be">SQLEscape</a> (void)</td></tr>
<tr class="memdesc:a8d23e9761d1bcb2dcc8a1ecd8f12c7be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scan for quote, double quote, and backslash and prepend with backslash.  <a href="#a8d23e9761d1bcb2dcc8a1ecd8f12c7be"></a><br/></td></tr>
<tr class="separator:a8d23e9761d1bcb2dcc8a1ecd8f12c7be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af000b48e2d2cd2490408141eebdf2b30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#af000b48e2d2cd2490408141eebdf2b30">MakeFilePath</a> (void)</td></tr>
<tr class="memdesc:af000b48e2d2cd2490408141eebdf2b30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fix to be a file path, ending with /.  <a href="#af000b48e2d2cd2490408141eebdf2b30"></a><br/></td></tr>
<tr class="separator:af000b48e2d2cd2490408141eebdf2b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2226e6d66ad858f63e44e628575a8eaa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a2226e6d66ad858f63e44e628575a8eaa">Serialize</a> (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs) const </td></tr>
<tr class="separator:a2226e6d66ad858f63e44e628575a8eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c0cb659b6a3671aa8938833160464b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a5c0cb659b6a3671aa8938833160464b9">SerializeCompressed</a> (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId=0, bool writeLanguageId=false) const </td></tr>
<tr class="separator:a5c0cb659b6a3671aa8938833160464b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1174919912f9c05b89907c1ddf95037"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad1174919912f9c05b89907c1ddf95037">Deserialize</a> (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</td></tr>
<tr class="separator:ad1174919912f9c05b89907c1ddf95037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae39f63bde1d71a7bb2ae61883064c4e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aae39f63bde1d71a7bb2ae61883064c4e">DeserializeCompressed</a> (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs, bool readLanguageId=false)</td></tr>
<tr class="separator:aae39f63bde1d71a7bb2ae61883064c4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ef366f662ab77817e1666568fe72c4d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a7ef366f662ab77817e1666568fe72c4d">RakString</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a> *_sharedString)</td></tr>
<tr class="separator:a7ef366f662ab77817e1666568fe72c4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a24a196a615ce307db4678187c08adb65"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a24a196a615ce307db4678187c08adb65">NonVariadic</a> (const char *str)</td></tr>
<tr class="separator:a24a196a615ce307db4678187c08adb65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa26dcde5943165fa81bda8c2c8d13150"><td class="memItemLeft" align="right" valign="top">static unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa26dcde5943165fa81bda8c2c8d13150">ToInteger</a> (const char *str)</td></tr>
<tr class="memdesc:aa26dcde5943165fa81bda8c2c8d13150"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hash the string into an unsigned int.  <a href="#aa26dcde5943165fa81bda8c2c8d13150"></a><br/></td></tr>
<tr class="separator:aa26dcde5943165fa81bda8c2c8d13150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7bf5aa7fc14de560429ac0994256569"><td class="memItemLeft" align="right" valign="top">static unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad7bf5aa7fc14de560429ac0994256569">ToInteger</a> (const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;rs)</td></tr>
<tr class="separator:ad7bf5aa7fc14de560429ac0994256569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a622d0edef84f53ce5009ec6fcc02cdfb"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a622d0edef84f53ce5009ec6fcc02cdfb">ReadIntFromSubstring</a> (const char *str, size_t pos, size_t n)</td></tr>
<tr class="memdesc:a622d0edef84f53ce5009ec6fcc02cdfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read an integer out of a substring.  <a href="#a622d0edef84f53ce5009ec6fcc02cdfb"></a><br/></td></tr>
<tr class="separator:a622d0edef84f53ce5009ec6fcc02cdfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb53629069703bdf7f333a028314f133"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abb53629069703bdf7f333a028314f133">FormatForPOST</a> (const char *uri, const char *contentType, const char *body, const char *extraHeaders=&quot;&quot;)</td></tr>
<tr class="separator:abb53629069703bdf7f333a028314f133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c008c960edd940d8715f806ee0dfcdc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a1c008c960edd940d8715f806ee0dfcdc">FormatForPUT</a> (const char *uri, const char *contentType, const char *body, const char *extraHeaders=&quot;&quot;)</td></tr>
<tr class="separator:a1c008c960edd940d8715f806ee0dfcdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a381b39fbbbb6d9d25ac00cb4cce00946"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a381b39fbbbb6d9d25ac00cb4cce00946">FormatForGET</a> (const char *uri, const char *extraHeaders=&quot;&quot;)</td></tr>
<tr class="separator:a381b39fbbbb6d9d25ac00cb4cce00946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37e0c1e5761c295e568f72ed24c25808"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a37e0c1e5761c295e568f72ed24c25808">FormatForDELETE</a> (const char *uri, const char *extraHeaders=&quot;&quot;)</td></tr>
<tr class="separator:a37e0c1e5761c295e568f72ed24c25808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65b4503d26e919e49fcb14a009fd95d2"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a65b4503d26e919e49fcb14a009fd95d2">FreeMemory</a> (void)</td></tr>
<tr class="separator:a65b4503d26e919e49fcb14a009fd95d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a8595b93e189e10ccbb6b04aa77a302"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a7a8595b93e189e10ccbb6b04aa77a302">FreeMemoryNoMutex</a> (void)</td></tr>
<tr class="separator:a7a8595b93e189e10ccbb6b04aa77a302"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf1c1c3250d61302b93023bb54c466fe"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#adf1c1c3250d61302b93023bb54c466fe">Serialize</a> (const char *str, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</td></tr>
<tr class="memdesc:adf1c1c3250d61302b93023bb54c466fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static version of the Serialize function.  <a href="#adf1c1c3250d61302b93023bb54c466fe"></a><br/></td></tr>
<tr class="separator:adf1c1c3250d61302b93023bb54c466fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab134380ecc7db6049bb3b432fb799d6a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab134380ecc7db6049bb3b432fb799d6a">SerializeCompressed</a> (const char *str, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs, <a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a> languageId=0, bool writeLanguageId=false)</td></tr>
<tr class="memdesc:ab134380ecc7db6049bb3b432fb799d6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static version of the SerializeCompressed function.  <a href="#ab134380ecc7db6049bb3b432fb799d6a"></a><br/></td></tr>
<tr class="separator:ab134380ecc7db6049bb3b432fb799d6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2be7eb0e7235d78441f3f5bfe90b142c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a2be7eb0e7235d78441f3f5bfe90b142c">Deserialize</a> (char *str, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</td></tr>
<tr class="memdesc:a2be7eb0e7235d78441f3f5bfe90b142c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static version of the <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad1174919912f9c05b89907c1ddf95037">Deserialize()</a> function.  <a href="#a2be7eb0e7235d78441f3f5bfe90b142c"></a><br/></td></tr>
<tr class="separator:a2be7eb0e7235d78441f3f5bfe90b142c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef99545d4d1180314772f41a277de446"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aef99545d4d1180314772f41a277de446">DeserializeCompressed</a> (char *str, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs, bool readLanguageId=false)</td></tr>
<tr class="memdesc:aef99545d4d1180314772f41a277de446"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static version of the <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aae39f63bde1d71a7bb2ae61883064c4e">DeserializeCompressed()</a> function.  <a href="#aef99545d4d1180314772f41a277de446"></a><br/></td></tr>
<tr class="separator:aef99545d4d1180314772f41a277de446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a524083fd24bb6b0369e89c6fd181afef"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a524083fd24bb6b0369e89c6fd181afef">ToString</a> (<a class="el" href="../../df/df2/_native_types_8h.xhtml#adec1df1b8b51cb32b77e5b86fff46471">int64_t</a> i)</td></tr>
<tr class="separator:a524083fd24bb6b0369e89c6fd181afef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6560d146cd2505ee1848c11a19f90e84"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a6560d146cd2505ee1848c11a19f90e84">ToString</a> (<a class="el" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a> i)</td></tr>
<tr class="separator:a6560d146cd2505ee1848c11a19f90e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa811491b5f17066bad1b84ccc41e84e3"><td class="memItemLeft" align="right" valign="top">static size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aa811491b5f17066bad1b84ccc41e84e3">GetSizeToAllocate</a> (size_t bytes)</td></tr>
<tr class="separator:aa811491b5f17066bad1b84ccc41e84e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bfc5922a12590fccfdca65cdc246dad"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a0bfc5922a12590fccfdca65cdc246dad">RakStringComp</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> const &amp;key, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> const &amp;data)</td></tr>
<tr class="separator:a0bfc5922a12590fccfdca65cdc246dad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a841f41ec7fe57a37544895e2169426d3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a841f41ec7fe57a37544895e2169426d3">LockMutex</a> (void)</td></tr>
<tr class="separator:a841f41ec7fe57a37544895e2169426d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e1bf8ce0d0395c11380729d3793b315"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a8e1bf8ce0d0395c11380729d3793b315">UnlockMutex</a> (void)</td></tr>
<tr class="separator:a8e1bf8ce0d0395c11380729d3793b315"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a9d33f9ca1a434684c2409b19f555839c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a9d33f9ca1a434684c2409b19f555839c">sharedString</a></td></tr>
<tr class="separator:a9d33f9ca1a434684c2409b19f555839c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:ac8e5167f67053aceec5bcdd4a138e0cd"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac8e5167f67053aceec5bcdd4a138e0cd">emptyString</a> ={0,0,0,(char*) &quot;&quot;,(char*) &quot;&quot;}</td></tr>
<tr class="separator:ac8e5167f67053aceec5bcdd4a138e0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bbbe8ec13ad356c94d17943165b0abe"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a><br class="typebreak"/>
&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a6bbbe8ec13ad356c94d17943165b0abe">freeList</a></td></tr>
<tr class="separator:a6bbbe8ec13ad356c94d17943165b0abe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a5a9efb37d8fd7a862219fa8d7665c205"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a5a9efb37d8fd7a862219fa8d7665c205">Allocate</a> (size_t len)</td></tr>
<tr class="separator:a5a9efb37d8fd7a862219fa8d7665c205"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af08993ad855f4eed515218625f03c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a8af08993ad855f4eed515218625f03c9">Assign</a> (const char *str)</td></tr>
<tr class="separator:a8af08993ad855f4eed515218625f03c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6213b399b3cb25a6ee35e34f15ecd198"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a6213b399b3cb25a6ee35e34f15ecd198">Assign</a> (const char *str, va_list ap)</td></tr>
<tr class="separator:a6213b399b3cb25a6ee35e34f15ecd198"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95abaf6ced7cabd78316bc51dfa34d66"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a95abaf6ced7cabd78316bc51dfa34d66">Clone</a> (void)</td></tr>
<tr class="separator:a95abaf6ced7cabd78316bc51dfa34d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e894ca5a600c92e2f7ccbd26d24260"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ae1e894ca5a600c92e2f7ccbd26d24260">Free</a> (void)</td></tr>
<tr class="separator:ae1e894ca5a600c92e2f7ccbd26d24260"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb47a04ccaab9f0e0360d765d712ea2b"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#adb47a04ccaab9f0e0360d765d712ea2b">ToLower</a> (unsigned char c)</td></tr>
<tr class="separator:adb47a04ccaab9f0e0360d765d712ea2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69fd5a2cef9ec9902c6bb90a282bf556"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a69fd5a2cef9ec9902c6bb90a282bf556">ToUpper</a> (unsigned char c)</td></tr>
<tr class="separator:a69fd5a2cef9ec9902c6bb90a282bf556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb20b0990c705c07db13ade66b48c0f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#acb20b0990c705c07db13ade66b48c0f0">Realloc</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a> *inSharedString, size_t bytes)</td></tr>
<tr class="separator:acb20b0990c705c07db13ade66b48c0f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:af9c9a8bd8df1bd4969ffcdd01384a1ac"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#af9c9a8bd8df1bd4969ffcdd01384a1ac">FormatForPUTOrPost</a> (const char *type, const char *uri, const char *contentType, const char *body, const char *extraHeaders)</td></tr>
<tr class="separator:af9c9a8bd8df1bd4969ffcdd01384a1ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>String class. </p>
<p>Has the following improvements over std::string -Reference counting: Suitable to store in lists -Variadic assignment operator -Doesn't cause linker errors </p>

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00044">44</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string" id="dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::RakString::SharedString</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00309">309</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a9473d2f04971f9c0dc735a51af685cbf"></a>char *</td>
<td class="fieldname">
bigString</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a7f4f73fb1ddc295b24f5560b756a5aed"></a>size_t</td>
<td class="fieldname">
bytesUsed</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a068968532049b8a2a18e151f545927eb"></a>char *</td>
<td class="fieldname">
c_str</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a7750a11995b4f731c8d285e324c9690b"></a>unsigned int</td>
<td class="fieldname">
refCount</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a380165bb0ba489103a96786b4674c29a"></a><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> *</td>
<td class="fieldname">
refCountMutex</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="acaf45b7945ba9ff4bba2b6fb99ff940e"></a>char</td>
<td class="fieldname">
smallString</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ace80ef2f43abcc47ebbe5c2005c66161"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>.</p>

</div>
</div>
<a class="anchor" id="a3de5216b4e7a47a3f05e59160b3d93a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>.</p>

</div>
</div>
<a class="anchor" id="a99cf6d4a4f291d5a22858275ec8ab5c5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>.</p>

</div>
</div>
<a class="anchor" id="aaa2a6d8bf419b8b87f6165dc7b29f0ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>.</p>

</div>
</div>
<a class="anchor" id="a85a41aa56baad1c5a078989ea30bf16b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>.</p>

</div>
</div>
<a class="anchor" id="ae45062721fc4583dc58f9b211089498e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::~RakString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00115">115</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>.</p>

</div>
</div>
<a class="anchor" id="a1a8891a6648fe169e65812d221bdcdc0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00095">95</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00105">SLNet::SimpleMutex::Lock()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00312">SLNet::RakString::SharedString::refCount</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00311">SLNet::RakString::SharedString::refCountMutex</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, and <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00154">SLNet::SimpleMutex::Unlock()</a>.</p>

</div>
</div>
<a class="anchor" id="a7ef366f662ab77817e1666568fe72c4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RakString::RakString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">RakString::SharedString</a> *&#160;</td>
          <td class="paramname"><em>_sharedString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5a9efb37d8fd7a862219fa8d7665c205"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Allocate </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">1333</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00314">SLNet::RakString::SharedString::bigString</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00313">SLNet::RakString::SharedString::bytesUsed</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00334">freeList</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01564">LockMutex()</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00062">rakMalloc_Ex</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00312">SLNet::RakString::SharedString::refCount</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00311">SLNet::RakString::SharedString::refCountMutex</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00393">DataStructures::List&lt; list_type &gt;::RemoveAtIndex()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00316">SLNet::RakString::SharedString::smallString</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01568">UnlockMutex()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">AppendBytes()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01371">Assign()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01249">Deserialize()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00905">URLDecode()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00869">URLEncode()</a>.</p>

</div>
</div>
<a class="anchor" id="ae1c33f3003f74b03de8cbd6de4a33f50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::AppendBytes </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">1483</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">Realloc()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a45c9a3cce60bdedf09a3783c49e832c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> RakString::Assign </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets a copy of a substring of str as the new content. The substring is the portion of str that begins at the character position pos and takes up to n characters (it takes less than n if the end of str is reached before). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>The string to copy in </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>The position on str to start the copy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>How many chars to copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the string, note that the current string is set to that value as well </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">1427</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01383">Assign()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00204">operator+=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00138">operator=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00069">RakString()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00384">Set()</a>.</p>

</div>
</div>
<a class="anchor" id="a8af08993ad855f4eed515218625f03c9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Assign </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01371">1371</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a6213b399b3cb25a6ee35e34f15ecd198"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Assign </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&#160;</td>
          <td class="paramname"><em>ap</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01383">1383</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00065">notifyOutOfMemory</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00064">rakFree_Ex</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00063">rakRealloc_Ex</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="ac661bded7f8850f8cf7bbcad8406d3e4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* SLNet::RakString::C_String </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as std::string::c_str. </p>

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">60</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

<p>Referenced by <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00482">SLNet::StringCompressor::EncodeString()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01142">FormatForDELETE()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01106">FormatForGET()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">FormatForPUTOrPost()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00258">operator&lt;()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00262">operator&lt;=()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00080">SLNet::RakWString::operator=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00266">operator&gt;()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00270">operator&gt;=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01239">SerializeCompressed()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00750">StrCmp()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00758">StrICmp()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00754">StrNCmp()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01470">ToInteger()</a>.</p>

</div>
</div>
<a class="anchor" id="acbcab9f51298b604a69eb1461fa07220"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char* SLNet::RakString::C_StringUnsafe </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00064">64</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

</div>
</div>
<a class="anchor" id="a458ce4aa51b672f501f51d5941e5ac6e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear the string. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">1329</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>.</p>

<p>Referenced by <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00486">SLNet::StringCompressor::DecodeString()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01249">Deserialize()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00733">RemoveCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00384">Set()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>.</p>

</div>
</div>
<a class="anchor" id="a95abaf6ced7cabd78316bc51dfa34d66"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Clone </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">1502</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00105">SLNet::SimpleMutex::Lock()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00312">SLNet::RakString::SharedString::refCount</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00311">SLNet::RakString::SharedString::refCountMutex</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, and <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00154">SLNet::SimpleMutex::Unlock()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">AppendBytes()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00647">Erase()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01180">MakeFilePath()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00733">RemoveCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00433">Replace()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00446">SetChar()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01007">SQLEscape()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00689">TerminateAtFirstCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00660">TerminateAtLastCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00364">ToLower()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00374">ToUpper()</a>.</p>

</div>
</div>
<a class="anchor" id="a7fb24f28bbfb63787748d02febf471a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::ContainsNonprintableExceptSpaces </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Does the string contain non-printable characters other than spaces? </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00818">818</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="ad1174919912f9c05b89907c1ddf95037"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::Deserialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Deserialize what was written by Serialize </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bs</td><td>Bitstream to serialize from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the deserialization was successful </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01249">1249</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00614">SLNet::BitStream::AlignReadToByteBoundary()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">Clear()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01279">SLNet::BitStream::Read()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00373">SLNet::BitStream::ReadAlignedBytes()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01391">SLNet::BitStream::Read()</a>.</p>

</div>
</div>
<a class="anchor" id="a2be7eb0e7235d78441f3f5bfe90b142c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::Deserialize </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static version of the <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ad1174919912f9c05b89907c1ddf95037">Deserialize()</a> function. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01269">1269</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01279">SLNet::BitStream::Read()</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00373">SLNet::BitStream::ReadAlignedBytes()</a>.</p>

</div>
</div>
<a class="anchor" id="aae39f63bde1d71a7bb2ae61883064c4e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::DeserializeCompressed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>readLanguageId</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Deserialize compressed string, written by SerializeCompressed </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bs</td><td>Bitstream to serialize from </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">readLanguageId</td><td>If true, looks for the variable langaugeId in the data stream. Must match what was passed to SerializeCompressed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the deserialization was successful </dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#aa237e63b4793abc8e6bb0e6f1b744f50" title="Used so I can allocate and deallocate this singleton at runtime.">StringCompressor::AddReference</a> must have been called to instantiate the class (Happens automatically from <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a14b965efa7972eade5cf3ddf9cd743b2" title="Starts the network threads and opens the listen port.">RakPeer::Startup()</a>) </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01283">1283</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">SLNet::StringCompressor::DecodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00062">SLNet::StringCompressor::Instance()</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01450">SLNet::BitStream::ReadCompressed()</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01528">SLNet::BitStream::ReadCompressed()</a>.</p>

</div>
</div>
<a class="anchor" id="aef99545d4d1180314772f41a277de446"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::DeserializeCompressed </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>readLanguageId</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static version of the <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#aae39f63bde1d71a7bb2ae61883064c4e">DeserializeCompressed()</a> function. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01292">1292</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">SLNet::StringCompressor::DecodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00062">SLNet::StringCompressor::Instance()</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01450">SLNet::BitStream::ReadCompressed()</a>.</p>

</div>
</div>
<a class="anchor" id="a2e133fa2bb1b724b7b94923ddcca4a08"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Erase </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Erase characters out of the string at index for count. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00647">647</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a1490c721c85f3d38a473e60f0ce190c0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t RakString::Find </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>stringToFind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>String class find replacement Searches the string for the content specified in stringToFind and returns the position of the first occurrence in the string. Search only includes characters on or after position pos, ignoring any possible occurrences in previous locations. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stringToFind</td><td>The string to find inside of this object's string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>The position in the string to start the search </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the position of the first occurrence in the string. </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00558">558</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a37e0c1e5761c295e568f72ed24c25808"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> RakString::FormatForDELETE </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extraHeaders</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Format as a DELETE command that can be sent to a webserver </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uri</td><td>For example, masterserver2.raknet.com/testServer?__gameId=comprehensivePCGame&amp;__rowId=1 </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Formatted string </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01142">1142</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00384">Set()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>.</p>

</div>
</div>
<a class="anchor" id="a381b39fbbbb6d9d25ac00cb4cce00946"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> RakString::FormatForGET </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extraHeaders</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Format as a GET command that can be sent to a webserver </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uri</td><td>For example, masterserver2.raknet.com/testServer?__gameId=comprehensivePCGame </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Formatted string </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01106">1106</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00384">Set()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>.</p>

</div>
</div>
<a class="anchor" id="abb53629069703bdf7f333a028314f133"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> RakString::FormatForPOST </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>contentType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>body</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extraHeaders</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Format as a POST command that can be sent to a webserver </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">uri</td><td>For example, masterserver2.raknet.com/testServer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">contentType</td><td>For example, text/plain; charset=UTF-8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">body</td><td>Body of the post </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Formatted string </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01098">1098</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">FormatForPUTOrPost()</a>.</p>

</div>
</div>
<a class="anchor" id="a1c008c960edd940d8715f806ee0dfcdc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> RakString::FormatForPUT </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>contentType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>body</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extraHeaders</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01102">1102</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">FormatForPUTOrPost()</a>.</p>

</div>
</div>
<a class="anchor" id="af9c9a8bd8df1bd4969ffcdd01384a1ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> RakString::FormatForPUTOrPost </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>contentType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>body</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extraHeaders</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">1043</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00384">Set()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01098">FormatForPOST()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01102">FormatForPUT()</a>.</p>

</div>
</div>
<a class="anchor" id="a318878a1865cce6819edccaf98888fcf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::FPrintf </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the string to a file. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00766">766</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="ae1e894ca5a600c92e2f7ccbd26d24260"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Free </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">1522</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00314">SLNet::RakString::SharedString::bigString</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00313">SLNet::RakString::SharedString::bytesUsed</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00334">freeList</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00105">SLNet::SimpleMutex::Lock()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01564">LockMutex()</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00064">rakFree_Ex</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00312">SLNet::RakString::SharedString::refCount</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00311">SLNet::RakString::SharedString::refCountMutex</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00154">SLNet::SimpleMutex::Unlock()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01568">UnlockMutex()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">Clear()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00115">~RakString()</a>.</p>

</div>
</div>
<a class="anchor" id="a65b4503d26e919e49fcb14a009fd95d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::FreeMemory </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a> uses a freeList of old no-longer used strings Call this function to clear this memory on shutdown </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01214">1214</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01220">FreeMemoryNoMutex()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01564">LockMutex()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01568">UnlockMutex()</a>.</p>

</div>
</div>
<a class="anchor" id="a7a8595b93e189e10ccbb6b04aa77a302"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::FreeMemoryNoMutex </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01220">1220</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00456">DataStructures::List&lt; list_type &gt;::Clear()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00334">freeList</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00064">rakFree_Ex</a>, and <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00450">DataStructures::List&lt; list_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01214">FreeMemory()</a>.</p>

</div>
</div>
<a class="anchor" id="a09977ed89e222b3b5f77b43aeb399b9d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RakString::GetCharacterCount </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns how many occurances there are of <em>c</em> in the string. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00720">720</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="abe4d216101d087910af4d93b594847b5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t RakString::GetLength </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the length of the string. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">396</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">AppendBytes()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00647">Erase()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00558">Find()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00720">GetCharacterCount()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00241">operator[]()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00433">Replace()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00446">SetChar()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01007">SQLEscape()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00704">StartAfterFirstCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00673">StartAfterLastCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00689">TerminateAtFirstCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00660">TerminateAtLastCharacter()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00623">Truncate()</a>.</p>

</div>
</div>
<a class="anchor" id="ad0a5948b0fb56b7c9cee0bdc9dcfa4e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t RakString::GetLengthUTF8 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00429">429</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00401">porges_strlen2()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="aa811491b5f17066bad1b84ccc41e84e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static size_t SLNet::RakString::GetSizeToAllocate </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>bytes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00299">299</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">Realloc()</a>.</p>

</div>
</div>
<a class="anchor" id="a7d72ee1386c8727ddd5dce900175499f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::IPAddressMatch </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>IP</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Does the given IP address match the IP address encoded into this string, accounting for wildcards? </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00770">770</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a58a8b4a4bfcc8cf93c5e376cf917dffc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::IsEmailAddress </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is this a valid email address? </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00829">829</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a83a4f2762a85a1e4704db0f7ac2c0abe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::IsEmpty </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns if the string is empty. Also, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String()</a> would return "". </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">392</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">AppendBytes()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01142">FormatForDELETE()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01106">FormatForGET()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">FormatForPUTOrPost()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00829">IsEmailAddress()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01180">MakeFilePath()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>.</p>

</div>
</div>
<a class="anchor" id="a841f41ec7fe57a37544895e2169426d3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::LockMutex </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01564">1564</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00050">GetPoolMutex()</a>, and <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00105">SLNet::SimpleMutex::Lock()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01214">FreeMemory()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>.</p>

</div>
</div>
<a class="anchor" id="af000b48e2d2cd2490408141eebdf2b30"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp; RakString::MakeFilePath </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fix to be a file path, ending with /. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01180">1180</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a24a196a615ce307db4678187c08adb65"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> RakString::NonVariadic </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create a <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a> with a value, without doing printf style parsing Equivalent to assignment operator </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01454">1454</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad6b527ffdba61d0d63bddac0feacfea2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::RakString::operator const char * </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implicit return of const char*. </p>

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00057">57</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

</div>
</div>
<a class="anchor" id="afbd5f85f3df3db44366535c826df14f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Inequality. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00274">274</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="ab3675ba4d9a12543b8f817a66d72e76c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator!= </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a7c1eea351c124ef03204d670fca81f9b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator!= </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="aeae5e80dcb205440b77569ca886e2cbb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Concatenation. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">186</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00313">SLNet::RakString::SharedString::bytesUsed</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">Realloc()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00222">operator+=()</a>.</p>

</div>
</div>
<a class="anchor" id="a9684b5cc425ee2b667a165389fd5f858"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator+= </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00204">204</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00313">SLNet::RakString::SharedString::bytesUsed</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">Realloc()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a058c7f39d625443fe2e164f6f2b9a30c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator+= </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00222">222</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>.</p>

</div>
</div>
<a class="anchor" id="a301f43d99101c9ce8da549418e028cff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator+= </td>
          <td>(</td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>.</p>

</div>
</div>
<a class="anchor" id="ab35c258b08105472a8976ba9ba7c9ce7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a>&amp; SLNet::RakString::operator+= </td>
          <td>(</td>
          <td class="paramtype">char unsigned *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa061f9f2b8a42b6915ce1e8117c71fe7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator+= </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00234">234</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>.</p>

</div>
</div>
<a class="anchor" id="a1d4b6e1425abff1441f503654b9e096c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a1b847e1d1170e005c8985f5485d8d905"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00262">262</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="aa7606e9fef8b639c981b97b469944cf4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assigment operators. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">emptyString</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00105">SLNet::SimpleMutex::Lock()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00312">SLNet::RakString::SharedString::refCount</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00311">SLNet::RakString::SharedString::refCountMutex</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, and <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00154">SLNet::SimpleMutex::Unlock()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00144">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="acd67c1216b529a9b755d36b5ca3fb08b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator= </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>.</p>

</div>
</div>
<a class="anchor" id="a2eed8a829571c3caf9347a9fee2b2a68"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator= </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a84115735fd39a580c71b6411978f27db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator= </td>
          <td>(</td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00148">148</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="ab456fd37c4e5fa68b257386f120e4988"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator= </td>
          <td>(</td>
          <td class="paramtype">char unsigned *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a5f470f534241e021916a675fadeeeea5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp; RakString::operator= </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="ab376dc4c6120b03fb19bb4f278217dae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Equality. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="aab6a0eef7f239f4bb7887c54fee8c7a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator== </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a1b08f114d5ea19f37025b90ea86c5ef2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator== </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="acaba4c897ff668c92ee279bdef30ef3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00266">266</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a97754b168e86cddec6530e2c3af5bedc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool RakString::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00270">270</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a4e4e0669d3502a5c8c00b43367683ba5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char RakString::operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Character index. Do not use to change the string however. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00241">241</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a97f3215bc90e31be0efddabfafd2a42d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Printf </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print the string to the screen. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00762">762</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00098">RAKNET_DEBUG_PRINTF</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a0bfc5922a12590fccfdca65cdc246dad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int SLNet::RakString::RakStringComp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> const &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> const &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00750">StrCmp()</a>.</p>

</div>
</div>
<a class="anchor" id="a622d0edef84f53ce5009ec6fcc02cdfb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int RakString::ReadIntFromSubstring </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read an integer out of a substring. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>The string </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>The position on str where the integer starts </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>How many chars to copy </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01474">1474</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acb20b0990c705c07db13ade66b48c0f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Realloc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a> *&#160;</td>
          <td class="paramname"><em>inSharedString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00314">SLNet::RakString::SharedString::bigString</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00313">SLNet::RakString::SharedString::bytesUsed</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00299">GetSizeToAllocate()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00062">rakMalloc_Ex</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00063">rakRealloc_Ex</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00316">SLNet::RakString::SharedString::smallString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">AppendBytes()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01007">SQLEscape()</a>.</p>

</div>
</div>
<a class="anchor" id="ae7f77e87e3cbe02d1e5da1362a99dc26"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::RemoveCharacter </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove all instances of c. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00733">733</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">Clear()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="afbee52087e98b1cf4b25158d9fe943db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Replace </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Replace character(s) in starting at index, for count, with c. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00433">433</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a2226e6d66ad858f63e44e628575a8eaa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Serialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Serialize to a bitstream, uncompressed (slightly faster) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">bs</td><td>Bitstream to serialize to </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01229">1229</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00682">SLNet::BitStream::Write()</a>.</p>

</div>
</div>
<a class="anchor" id="adf1c1c3250d61302b93023bb54c466fe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Serialize </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static version of the Serialize function. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01233">1233</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00922">SLNet::BitStream::Write()</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00346">SLNet::BitStream::WriteAlignedBytes()</a>.</p>

</div>
</div>
<a class="anchor" id="a5c0cb659b6a3671aa8938833160464b9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::SerializeCompressed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>writeLanguageId</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Serialize to a bitstream, compressed (better bandwidth usage) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">bs</td><td>Bitstream to serialize to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">languageId</td><td>languageId to pass to the <a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml" title="Writes and reads strings to and from bitstreams.">StringCompressor</a> class </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">writeLanguageId</td><td>encode the languageId variable in the stream. If false, 0 is assumed, and DeserializeCompressed will not look for this variable in the stream (saves bandwidth) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd><a class="el" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#aa237e63b4793abc8e6bb0e6f1b744f50" title="Used so I can allocate and deallocate this singleton at runtime.">StringCompressor::AddReference</a> must have been called to instantiate the class (Happens automatically from <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a14b965efa7972eade5cf3ddf9cd743b2" title="Starts the network threads and opens the listen port.">RakPeer::Startup()</a>) </dd></dl>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01239">1239</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00702">SLNet::BitStream::WriteCompressed()</a>.</p>

</div>
</div>
<a class="anchor" id="ab134380ecc7db6049bb3b432fb799d6a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::SerializeCompressed </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *&#160;</td>
          <td class="paramname"><em>bs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#aba7bc1797add20fe3efdf37ced1182c5">uint8_t</a>&#160;</td>
          <td class="paramname"><em>languageId</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>writeLanguageId</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static version of the SerializeCompressed function. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01243">1243</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00371">SLNet::StringCompressor::EncodeString()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00062">SLNet::StringCompressor::Instance()</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01116">SLNet::BitStream::WriteCompressed()</a>.</p>

</div>
</div>
<a class="anchor" id="ab8a4fe36cf8ac975adafcee96074cf9b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Set </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the value of the string. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00384">384</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01427">Assign()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">Clear()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01142">FormatForDELETE()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01106">FormatForGET()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">FormatForPUTOrPost()</a>.</p>

</div>
</div>
<a class="anchor" id="a1d5f91dc90df8e1a60c74e5d81ab557b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::SetChar </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Replace character at index with c. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00446">446</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00623">Truncate()</a>.</p>

</div>
</div>
<a class="anchor" id="ada622d900bc8876bed168967359f1f3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::SetChar </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a>&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Replace character at index with string s. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00452">452</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>.</p>

</div>
</div>
<a class="anchor" id="afac27c28f17d505c7966751bb76f55f1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::SplitURI </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>header</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>path</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a href="https://servers.api.rackspacecloud.com/v1.0">https://servers.api.rackspacecloud.com/v1.0</a> to <a href="https://,">https://,</a> servers.api.rackspacecloud.com, /v1.0 </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">954</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00313">SLNet::RakString::SharedString::bytesUsed</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01329">Clear()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01142">FormatForDELETE()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01106">FormatForGET()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01043">FormatForPUTOrPost()</a>.</p>

</div>
</div>
<a class="anchor" id="a8d23e9761d1bcb2dcc8a1ecd8f12c7be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp; RakString::SQLEscape </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scan for quote, double quote, and backslash and prepend with backslash. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01007">1007</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">Realloc()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="aeca06540a69b93d259883844ab2e6158"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::StartAfterFirstCharacter </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00704">704</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>.</p>

</div>
</div>
<a class="anchor" id="ad0ef1d97c008cf649fc8c968cd9f02b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::StartAfterLastCharacter </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00673">673</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>.</p>

</div>
</div>
<a class="anchor" id="aafb9fd8cb69e7a1cb108adb5c85850b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RakString::StrCmp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compare strings (case sensitive) </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00750">750</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00056">RakStringComp()</a>.</p>

</div>
</div>
<a class="anchor" id="ae2e648e80d0e834b566d078858ee03a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RakString::StrICmp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compare strings (not case sensitive) </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00758">758</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="afd5d63d24048cd8e3659baf334b0a9d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RakString::StrNCmp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compare strings (case sensitive), up to num characters. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00754">754</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a90b2fbfd6eb8aeb3ff2141ad81fea621"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> RakString::SubStr </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">631</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00061">RakString()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00452">SetChar()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00704">StartAfterFirstCharacter()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00673">StartAfterLastCharacter()</a>.</p>

</div>
</div>
<a class="anchor" id="a5647e1f88cd3689df68958bbfe22642e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::TerminateAtFirstCharacter </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the first instance of c with a NULL terminator. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00689">689</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="ab669d310f7c9444ef202047b78c7afd3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::TerminateAtLastCharacter </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the last instance of c with a NULL terminator. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00660">660</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="aa26dcde5943165fa81bda8c2c8d13150"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long RakString::ToInteger </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Hash the string into an unsigned int. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01460">1460</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01470">ToInteger()</a>.</p>

</div>
</div>
<a class="anchor" id="ad7bf5aa7fc14de560429ac0994256569"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long RakString::ToInteger </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>rs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01470">1470</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00060">C_String()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01460">ToInteger()</a>.</p>

</div>
</div>
<a class="anchor" id="a332ba01133e40fed275bd0e0895eda3f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * RakString::ToLower </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change all characters to lowercase. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00364">364</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="adb47a04ccaab9f0e0360d765d712ea2b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char RakString::ToLower </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01552">1552</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a524083fd24bb6b0369e89c6fd181afef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * RakString::ToString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#adec1df1b8b51cb32b77e5b86fff46471">int64_t</a>&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01301">1301</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6560d146cd2505ee1848c11a19f90e84"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * RakString::ToString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a>&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01315">1315</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7965f53c87a1afe2afeb39217dd093c8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * RakString::ToUpper </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change all characters to uppercase. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a69fd5a2cef9ec9902c6bb90a282bf556"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char RakString::ToUpper </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01558">1558</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a171b99a82ad46872f26b04a76fd81529"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::Truncate </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Make sure string is no longer than <em>length</em>. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00623">623</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00446">SetChar()</a>.</p>

</div>
</div>
<a class="anchor" id="aef78390c7c3f97ac7a622f05b8004482"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::TruncateUTF8 </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00593">593</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="a8e1bf8ce0d0395c11380729d3793b315"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RakString::UnlockMutex </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01568">1568</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00050">GetPoolMutex()</a>, and <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00154">SLNet::SimpleMutex::Unlock()</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01214">FreeMemory()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>.</p>

</div>
</div>
<a class="anchor" id="a581f9133ed4ee1d4f68eec3084de7450"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp; RakString::URLDecode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>URL decode the string. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00905">905</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<a class="anchor" id="adadd4972aaa328dcecc6460c8fbd2dd5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">SLNet::RakString</a> &amp; RakString::URLEncode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>URL Encode the string. See <a href="http://www.codeguru.com/cpp/cpp/cpp_mfc/article.php/c4029/">http://www.codeguru.com/cpp/cpp/cpp_mfc/article.php/c4029/</a>. </p>

<p>Definition at line <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00869">869</a> of file <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a>.</p>

<p>References <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../da/d66/string_8h_source.xhtml#l00315">SLNet::RakString::SharedString::c_str</a>, <a class="el" href="../../db/dad/_itoa_8cpp_source.xhtml#l00024">Itoa()</a>, and <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">sharedString</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ac8e5167f67053aceec5bcdd4a138e0cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">RakString::SharedString</a> RakString::emptyString ={0,0,0,(char*) &quot;&quot;,(char*) &quot;&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00328">328</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01371">Assign()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00061">RakString()</a>.</p>

</div>
</div>
<a class="anchor" id="a6bbbe8ec13ad356c94d17943165b0abe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">RakString::SharedString</a> * &gt; RakString::freeList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00334">334</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01220">FreeMemoryNoMutex()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>.</p>

</div>
</div>
<a class="anchor" id="a9d33f9ca1a434684c2409b19f555839c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#dc/d52/struct_s_l_net_1_1_rak_string_1_1_shared_string">SharedString</a>* SLNet::RakString::sharedString</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d66/string_8h_source.xhtml#l00323">323</a> of file <a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a>.</p>

<p>Referenced by <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">Allocate()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01483">AppendBytes()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01371">Assign()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">Clone()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00818">ContainsNonprintableExceptSpaces()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01249">Deserialize()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00647">Erase()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00558">Find()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00766">FPrintf()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">Free()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00720">GetCharacterCount()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00396">GetLength()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00429">GetLengthUTF8()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00770">IPAddressMatch()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00829">IsEmailAddress()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00392">IsEmpty()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01180">MakeFilePath()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00274">operator!=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00186">operator+=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00258">operator&lt;()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00262">operator&lt;=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00119">operator=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00246">operator==()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00266">operator&gt;()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00270">operator&gt;=()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00241">operator[]()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00762">Printf()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00061">RakString()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00733">RemoveCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00433">Replace()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01229">Serialize()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00446">SetChar()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00954">SplitURI()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01007">SQLEscape()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00704">StartAfterFirstCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00673">StartAfterLastCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00750">StrCmp()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00758">StrICmp()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00754">StrNCmp()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00631">SubStr()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00689">TerminateAtFirstCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00660">TerminateAtLastCharacter()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00364">ToLower()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00374">ToUpper()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00593">TruncateUTF8()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00905">URLDecode()</a>, and <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00869">URLEncode()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Source/include/slikenet/<a class="el" href="../../da/d66/string_8h_source.xhtml">string.h</a></li>
<li>Source/src/<a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml">RakString.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/RakPeer.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d5/d55/_rak_peer_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">RakPeer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d5/d55/_rak_peer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2019, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">// \file</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4d280bbdadb0eb27262b65e63ac9ee0e">   21</a></span>&#160;<span class="preprocessor">#define CAT_NEUTER_EXPORT </span><span class="comment">/* Neuter dllimport for libcat */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d8/db0/defines_8h.xhtml">slikenet/defines.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d12/peer_8h.xhtml" title="Declares RakPeer class.">slikenet/peer.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d49/types_8h.xhtml" title="Types used by RakNet, most of which involve user code.">slikenet/types.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">// #if defined(new)</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">// #pragma push_macro(&quot;new&quot;)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// #undef new</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">// #define RMO_NEW_UNDEF_ALLOCATING_QUEUE</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../de/df7/time_8h.xhtml">time.h</a>&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;ctype.h&gt;</span> <span class="comment">// toupper</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d76/_get_time_8h.xhtml" title="Returns the value from QueryPerformanceCounter. This is the function RakNet uses to represent time...">slikenet/GetTime.h</a>&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml" title="All the message identifiers used by RakNet. Message identifiers comprise the first byte of any messag...">slikenet/MessageIdentifiers.h</a>&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d78/_d_s___huffman_encoding_tree_8h.xhtml" title="[Internal] Generates a huffman encoding tree, used for string and global compression.">slikenet/DS_HuffmanEncodingTree.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/d10/_rand_8h.xhtml" title="[Internal] Random number generator">slikenet/Rand.h</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/ddd/_plugin_interface2_8h.xhtml" title="RakNet&#39;s plugin functionality system, version 2. You can derive from this to create your own plugins...">slikenet/PluginInterface2.h</a>&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/d78/_string_compressor_8h.xhtml" title="Compresses/Decompresses ASCII strings and writes/reads them to BitStream class instances. You can use this to easily serialize and deserialize your own strings.">slikenet/StringCompressor.h</a>&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d0e/_string_table_8h.xhtml" title="A simple class to encode and decode known strings based on a lookup table. Similar to the StringCompr...">slikenet/StringTable.h</a>&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/db7/_network_i_d_object_8h.xhtml" title="A class you can derive from to make it easier to represent every networked object with an integer...">slikenet/NetworkIDObject.h</a>&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d49/types_8h.xhtml" title="Types used by RakNet, most of which involve user code.">slikenet/types.h</a>&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d31/_d_r___s_h_a1_8h.xhtml">slikenet/DR_SHA1.h</a>&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d81/sleep_8h.xhtml">slikenet/sleep.h</a>&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/dfc/version_8h.xhtml">slikenet/version.h</a>&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d6d/_network_i_d_manager_8h.xhtml">slikenet/NetworkIDManager.h</a>&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/da7/gettimeofday_8h.xhtml">slikenet/gettimeofday.h</a>&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d90/_signaled_event_8h.xhtml">slikenet/SignaledEvent.h</a>&quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/d8e/_super_fast_hash_8h.xhtml">slikenet/SuperFastHash.h</a>&quot;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d42/alloca_8h.xhtml">slikenet/alloca.h</a>&quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d7e/_w_s_a_startup_singleton_8h.xhtml">slikenet/WSAStartupSingleton.h</a>&quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/db2/linux__adapter_8h.xhtml">slikenet/linux_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/dff/osx__adapter_8h.xhtml">slikenet/osx_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#ifdef USE_THREADED_SEND</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="../../d9/dbf/_send_to_thread_8h.xhtml">slikenet/SendToThread.h</a>&quot;</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#ifdef CAT_AUDIT</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CAT_AUDIT_PRINTF(...) printf(__VA_ARGS__)</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">   71</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CAT_AUDIT_PRINTF(...)</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="code" href="../../dd/d30/namespace_s_l_net.xhtml">   74</a></span>&#160;<span class="keyword">namespace </span>SLNet</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aec04e53f7181b168399706743cbf7e7a">RAK_THREAD_DECLARATION</a>(UpdateNetworkLoop);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aec04e53f7181b168399706743cbf7e7a">RAK_THREAD_DECLARATION</a>(RecvFromLoop);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aec04e53f7181b168399706743cbf7e7a">RAK_THREAD_DECLARATION</a>(UDTConnect);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aacb22d714d93c291fd62b221aa5b453f">   80</a></span>&#160;<span class="preprocessor">#define REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE 8</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#if !defined ( __APPLE__ ) &amp;&amp; !defined ( __APPLE_CC__ )</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;stdlib.h&gt;</span> <span class="comment">// malloc</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#if   defined(_WIN32)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span><span class="comment">//</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor"></span><span class="comment">/*</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">#include &lt;alloca.h&gt; // Console 2</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">extern bool _extern_Console2LoadModules(void);</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">extern int _extern_Console2GetConnectionStatus(void);</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">extern int _extern_Console2GetLobbyStatus(void);</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">//extern bool Console2StartupFluff(unsigned int *);</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">extern void Console2ShutdownFluff(void);</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">//extern unsigned int Console2ActivateConnection(unsigned int, void *);</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">//extern bool Console2BlockOnEstablished(void);</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">extern void Console2GetIPAndPort(unsigned int, char *, unsigned short *, unsigned int );</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">//extern void Console2DeactivateConnection(unsigned int, unsigned int);</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">  107</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>=3;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a015aab2264db77f793cc6ef1b81da9bb">  111</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a015aab2264db77f793cc6ef1b81da9bb">mtuSizes</a>[<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>]={<a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a>, 1200, 576};</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">// Note to self - if I change this it might affect RECIPIENT_OFFLINE_MESSAGE_INTERVAL in Natpunchthrough.cpp</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">//static const int MAX_OPEN_CONNECTION_REQUESTS=8;</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">//static const int TIME_BETWEEN_OPEN_CONNECTION_REQUESTS=500;</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">  120</a></span>&#160;<span class="keyword">static</span> <a class="code" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml">RakNetRandom</a> <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">rnr</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">struct RakPeerAndIndex</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    RakNetSocket2 *s;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">    RakPeer *rakPeer;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">};</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4cf9211b95bb905832531f048bb273c1">  130</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4cf9211b95bb905832531f048bb273c1">MAX_OFFLINE_DATA_LENGTH</a>=400; <span class="comment">// I set this because I limit ID_CONNECTION_REQUEST to 512 bytes, and the password is appended to that packet.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">// Used to distinguish between offline messages with data, and messages from the reliability layer</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">// Should be different than any message that could result from messages from the reliability layer</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">// Make sure highest bit is 0, so isValid in DatagramHeaderFormat is false</span></div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">  135</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>[16]={0x00,0xFF,0xFF,0x00,0xFE,0xFE,0xFE,0xFE,0xFD,0xFD,0xFD,0xFD,0x12,0x34,0x56,0x78};</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">struct </span>PacketFollowedByData</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> p;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> data[1];</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;};</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">  143</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">RakPeer::AllocPacket</a>(<span class="keywordtype">unsigned</span> dataSize, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// Crashes when dataSize is 4 bytes - not sure why</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">//  unsigned char *data = (unsigned char *) rakMalloc_Ex(sizeof(PacketFollowedByData)+dataSize, file, line);</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">//  Packet *p = &amp;((PacketFollowedByData *)data)-&gt;p;</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">//  p-&gt;data=((PacketFollowedByData *)data)-&gt;data;</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">//  p-&gt;length=dataSize;</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">//  p-&gt;bitSize=BYTES_TO_BITS(dataSize);</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">//  p-&gt;deleteData=false;</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">//  p-&gt;guid=UNASSIGNED_RAKNET_GUID;</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">//  return p;</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *p;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    p = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae00518a3ba71591be2f83391b75bbcf3">packetAllocationPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#af59cca601f390601953e37c46deca03a">Allocate</a>(file,line);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    p = <span class="keyword">new</span> ((<span class="keywordtype">void</span>*)p) <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>=(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(dataSize,file,line);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>=dataSize;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(dataSize);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af25d74f363b4fead30fbafc9ca21354a">deleteData</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4a736945115119681c77e168346988c4">wasGeneratedLocally</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1e69a1de7b17ff1f9a9aa4bee0e36287">  169</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">RakPeer::AllocPacket</a>(<span class="keywordtype">unsigned</span> dataSize, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Packet *p = (Packet *)rakMalloc_Ex(sizeof(Packet), file, line);</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *p;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    p = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae00518a3ba71591be2f83391b75bbcf3">packetAllocationPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#af59cca601f390601953e37c46deca03a">Allocate</a>(file,line);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    p = <span class="keyword">new</span> ((<span class="keywordtype">void</span>*)p) <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(p);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>=data;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>=dataSize;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(dataSize);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af25d74f363b4fead30fbafc9ca21354a">deleteData</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4a736945115119681c77e168346988c4">wasGeneratedLocally</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<a class="code" href="../../db/dbd/_export_8h.xhtml#aa00165c970bdb25e1c757b432509533b">STATIC_FACTORY_DEFINITIONS</a>(<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml" title="The main interface for network communications.">RakPeerInterface</a>,<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a>) </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">// Constructor</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff7ebc01fb71df027b1a065ff63ca8b4">  192</a></span>&#160;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a>::<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a>()</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor"></span>    <span class="comment">// Encryption and security</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Initializing RakPeer security flags: using_security = false, server_handshake = null, cookie_jar = null\n&quot;</span>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    _using_security = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    _server_handshake = 0;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    _cookie_jar = 0;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#aa237e63b4793abc8e6bb0e6f1b744f50" title="Used so I can allocate and deallocate this singleton at runtime.">StringCompressor::AddReference</a>();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="../../d9/d49/class_s_l_net_1_1_string_table.xhtml#a419a84cb6af498ea958ed7996b7a67be" title="Used so I can allocate and deallocate this singleton at runtime.">SLNet::StringTable::AddReference</a>();</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="../../d4/dcb/class_w_s_a_startup_singleton.xhtml#aec8c21ef29199bcf9be7f3568c8afadf">WSAStartupSingleton::AddRef</a>();</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    defaultMTUSize = <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a015aab2264db77f793cc6ef1b81da9bb">mtuSizes</a>[<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>-1];</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    trackFrequencyTable = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    maximumIncomingConnections = 0;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    maximumNumberOfPeers = 0;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">//remoteSystemListSize=0;</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    remoteSystemList = 0;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    activeSystemList = 0;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    activeSystemListSize=0;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    remoteSystemLookup=0;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    bytesSentPerSecond = bytesReceivedPerSecond = 0;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    endThreads = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    isMainLoopThreadActive = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    incomingDatagramEventHandler=0;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="comment">// isRecvfromThreadActive=false;</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#if defined(GET_TIME_SPIKE_LIMIT) &amp;&amp; GET_TIME_SPIKE_LIMIT&gt;0</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor"></span>    occasionalPing = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor"></span>    occasionalPing = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor"></span>    allowInternalRouting=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; i++)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        ipList[i]=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    allowConnectionResponseIPMigration = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="comment">//incomingPasswordLength=outgoingPasswordLength=0;</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    incomingPasswordLength=0;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    splitMessageProgressInterval=0;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="comment">//unreliableTimeout=0;</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    unreliableTimeout=1000;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    maxOutgoingBPS=0;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    firstExternalID=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    myGuid=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    userUpdateThreadPtr=0;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    userUpdateThreadData=0;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor"></span>    <span class="comment">// Wait longer to disconnect in debug so I don&#39;t get disconnected while tracing</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    defaultTimeoutTime=30000;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor"></span>    defaultTimeoutTime=10000;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor"></span>    _packetloss=0.0;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    _minExtraPing=0;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    _extraPingVariance=0;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    bufferedCommands.SetPageSize(<span class="keyword">sizeof</span>(<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a>)*16);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    socketQueryOutput.SetPageSize(<span class="keyword">sizeof</span>(<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml">SocketQueryOutput</a>)*8);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    packetAllocationPoolMutex.Lock();</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    packetAllocationPool.SetPageSize(<span class="keyword">sizeof</span>(<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#d4/d3e/struct_data_structures_1_1_memory_pool_1_1_memory_with_page">DataStructures::MemoryPool&lt;Packet&gt;::MemoryWithPage</a>)*32);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    packetAllocationPoolMutex.Unlock();</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    remoteSystemIndexPool.SetPageSize(<span class="keyword">sizeof</span>(<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#d4/d3e/struct_data_structures_1_1_memory_pool_1_1_memory_with_page">DataStructures::MemoryPool&lt;RemoteSystemIndex&gt;::MemoryWithPage</a>)*32);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    GenerateGUID();</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    quitAndDataEvents.InitEvent();</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    limitConnectionFrequencyFromTheSameIP=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    ResetSendReceipt();</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">// Destructor</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a107b5d6bae255046e88fc5c96e991719">  319</a></span>&#160;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a107b5d6bae255046e88fc5c96e991719" title="Destructor.">RakPeer::~RakPeer</a>()</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;{</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab69808cd87c19f1800ac36d8c8e584c" title="Stops the network threads and closes all connections.">Shutdown</a>( 0, 0 );</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// Free the ban list.</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d0f94bb0bf24d4bbe1df80b1f3bce9d" title="Allows all previously banned IPs to connect.">ClearBanList</a>();</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a20c521f3b23b8fdc4b8a62e3b1d3f505" title="Used so I can allocate and deallocate this singleton at runtime.">StringCompressor::RemoveReference</a>();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="../../d9/d49/class_s_l_net_1_1_string_table.xhtml#abf88fc8afa1e79e105110cebd2c81b72" title="Used so I can allocate and deallocate this singleton at runtime.">SLNet::StringTable::RemoveReference</a>();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="../../d4/dcb/class_w_s_a_startup_singleton.xhtml#ad33efe86b5377555e3062058b5a4be01">WSAStartupSingleton::Deref</a>();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a0e87a18ff548a9bb4d6468243e97f703">CloseEvent</a>();</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor"></span>    <span class="comment">// Encryption and security</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Deleting RakPeer security objects, handshake = %x, cookie jar = %x\n&quot;</span>, _server_handshake, _cookie_jar);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordflow">if</span> (_server_handshake) <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_server_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordflow">if</span> (_cookie_jar) <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_cookie_jar,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">//  for (unsigned int i=0; i &lt; pluginListTS.Size(); i++)</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">//      pluginListTS[i]-&gt;SetRakPeerInterface(0);</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">//  for (unsigned int i=0; i &lt; pluginListNTS.Size(); i++)</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">//      pluginListNTS[i]-&gt;SetRakPeerInterface(0);</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">// \brief Starts the network threads, opens the listen port.</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">// You must call this before calling Connect().</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">// Multiple calls while already active are ignored.  To call this function again with different settings, you must first call Shutdown().</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">// \note Call SetMaximumIncomingConnections if you want to accept incoming connections</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">// \param[in] maxConnections The maximum number of connections between this instance of RakPeer and another instance of RakPeer. Required so the network can preallocate and for thread safety. A pure client would set this to 1.  A pure server would set it to the number of allowed clients.- A hybrid would set it to the sum of both types of connections</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">// \param[in] localPort The port to listen for connections on.</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">// \param[in] _threadSleepTimer How many ms to Sleep each internal update cycle. With new congestion control, the best results will be obtained by passing 10.</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">// \param[in] socketDescriptors An array of SocketDescriptor structures to force RakNet to listen on a particular IP address or port (or both).  Each SocketDescriptor will represent one unique socket.  Do not pass redundant structures.  To listen on a specific port, you can pass &amp;socketDescriptor, 1SocketDescriptor(myPort,0); such as for a server.  For a client, it is usually OK to just pass SocketDescriptor();</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">// \param[in] socketDescriptorCount The size of the \a socketDescriptors array.  Pass 1 if you are not sure what to pass.</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">// \return False on failure (can&#39;t create socket or thread), true on success.</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00372"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a14b965efa7972eade5cf3ddf9cd743b2">  372</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9">StartupResult</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a14b965efa7972eade5cf3ddf9cd743b2" title="Starts the network threads and opens the listen port.">RakPeer::Startup</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> maxConnections, <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml" title="Describes the local socket to use for RakPeer::Startup.">SocketDescriptor</a> *socketDescriptors, <span class="keywordtype">unsigned</span> socketDescriptorCount, <span class="keywordtype">int</span> threadPriority )</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>())</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9ae31d6e77c65c7342dcc9ecef7127b50d">RAKNET_ALREADY_STARTED</a>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">// If getting the guid failed in the constructor, try again</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>==0)</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    {</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acc6f6a26de4ae525b04ffe22c48cc6ee">GenerateGUID</a>();</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>==0)</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9ae733e0bd48f4a2dfa47539342672c0a7">COULD_NOT_GENERATE_GUID</a>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordflow">if</span> (threadPriority==-99999)</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">#if   defined(_WIN32)</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="preprocessor"></span>        threadPriority=0;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="preprocessor"></span>        threadPriority=1000;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8285f205b3b5df5dd74ca7676710376c">FillIPList</a>();</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">rnr</a>.<a class="code" href="../../df/dd4/class_s_l_net_1_1_rak_net_random.xhtml#a2d1a9a274688d7fd1554607d46cc5296">SeedMT</a>( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac13b866867f00a6f680568e27d1b53a3">GenerateSeedFromGuid</a>() );</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="comment">//RakPeerAndIndex rpai[32];</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="comment">//RakAssert(socketDescriptorCount&lt;32);</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(socketDescriptors &amp;&amp; socketDescriptorCount&gt;=1);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">if</span> (socketDescriptors==0 || socketDescriptorCount&lt;1)</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a924cb860def47afef13688ce677545c0">INVALID_SOCKET_DESCRIPTORS</a>;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">//unsigned short localPort;</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="comment">//localPort=socketDescriptors[0].port;</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( maxConnections &gt; 0 );</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">if</span> ( maxConnections &lt;= 0 )</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a1aa8582b37b10bce60d4142d9c730e52">INVALID_MAX_CONNECTIONS</a>;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">DerefAllSockets</a>();</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="comment">// Go through all socket descriptors and precreate sockets on the specified addresses</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordflow">for</span> (i=0; i&lt;socketDescriptorCount; i++)</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    {</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">        const char *addrToBind;</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">        if (socketDescriptors[i].hostAddress[0]==0)</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">            addrToBind=0;</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">        else</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">            addrToBind=socketDescriptors[i].hostAddress;</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">            */</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">        if (SocketLayer::IsSocketFamilySupported(addrToBind, socketDescriptors[i].socketFamily)==false)</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">            return SOCKET_FAMILY_NOT_SUPPORTED;</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">        if (socketDescriptors[i].port!=0 &amp;&amp; SocketLayer::IsPortInUse(socketDescriptors[i].port, addrToBind, socketDescriptors[i].socketFamily)==true)</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">            DerefAllSockets();</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">            return SOCKET_PORT_ALREADY_IN_USE;</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">        RakNetSocket* rns = 0;</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">        if (socketDescriptors[i].remotePortRakNetWasStartedOn_PS3_PSP2==0)</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">            rns = SocketLayer::CreateBoundSocket( this, socketDescriptors[i].port, socketDescriptors[i].blockingSocket, addrToBind, 100, socketDescriptors[i].extraSocketOptions, socketDescriptors[i].socketFamily, socketDescriptors[i].chromeInstance );</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">        else</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">#if defined(_PS3) || defined(__PS3__) || defined(SN_TARGET_PS3) || defined(_PS4)</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">            rns = SocketLayer::CreateBoundSocket_PS3Lobby( socketDescriptors[i].port, socketDescriptors[i].blockingSocket, addrToBind, socketDescriptors[i].socketFamily );</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">#elif  defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">            rns = SocketLayer::CreateBoundSocket_PSP2( socketDescriptors[i].port, socketDescriptors[i].blockingSocket, addrToBind, socketDescriptors[i].socketFamily );</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a> *r2 = <a class="code" href="../../dc/d18/class_s_l_net_1_1_rak_net_socket2_allocator.xhtml#a32fc5bf6ae447099ba908f1712af9748">RakNetSocket2Allocator::AllocRNS2</a>();</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        r2-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a0f34964b054a505ddad17e803e377b95">SetUserConnectionSocketIndex</a>(i);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="preprocessor">        #if defined(__native_client__)</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="preprocessor"></span>        NativeClientBindParameters ncbp;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        RNS2_NativeClient * nativeClientSocket = (RNS2_NativeClient*) r2;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        ncbp.<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a02144fab64b6ad521fa0dbf112d3e352">eventHandler</a>=<span class="keyword">this</span>;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        ncbp.forceHostAddress=(<span class="keywordtype">char</span>*) socketDescriptors[i].hostAddress;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        ncbp.is_ipv6=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#afbadb84c0b1b00add0083248370d0068">socketFamily</a>==AF_INET6;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        ncbp.nativeClientInstance=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#ab4342c3c99b62f032fb076ab1ca95626">chromeInstance</a>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        ncbp.port=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03ca93a6aa55f7448575c95fcaa86ec9" title="The local port to bind to. Pass 0 to have the OS autoassign a port.">port</a>;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        nativeClientSocket-&gt;Bind(&amp;ncbp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="preprocessor">        #elif defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1">RNS2BindResult</a> br;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        ((RNS2_WindowsStore8*) r2)-&gt;SetRecvEventHandler(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        br = ((RNS2_WindowsStore8*) r2)-&gt;Bind(ref <span class="keyword">new</span> Platform::String());</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordflow">if</span> (br!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1ab1271f816dda76b8f2bc7da6542a1fcf">BR_SUCCESS</a>)</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <a class="code" href="../../dc/d18/class_s_l_net_1_1_rak_net_socket2_allocator.xhtml#a495efecfedd981aa87dbd5e81f01bd67">RakNetSocket2Allocator::DeallocRNS2</a>(r2);</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">DerefAllSockets</a>();</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9aa2fb93f14a75c99a052479828875bc2f">SOCKET_FAILED_TO_BIND</a>;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="preprocessor">        #else</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (r2-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#af605c577c5300b0599fcd6396203d685">IsBerkleySocket</a>())</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        {</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/ddf/struct_s_l_net_1_1_r_n_s2___berkley_bind_parameters">RNS2_BerkleyBindParameters</a> bbp;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a00736e9e1ee7a12526a6108f6725f7e3">port</a>=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03ca93a6aa55f7448575c95fcaa86ec9" title="The local port to bind to. Pass 0 to have the OS autoassign a port.">port</a>;</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#afabf0dd346922689c950a3f962c2f993">hostAddress</a>=(<span class="keywordtype">char</span>*) socketDescriptors[i].hostAddress;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a03fe8f8cdfc98d4340786588a3ea8117">addressFamily</a>=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#afbadb84c0b1b00add0083248370d0068">socketFamily</a>;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af5f8ebdf3ff9ac6535c5bd740f837331">type</a>=SOCK_DGRAM;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a1b981211abeeb4faa0e183b46ceb2e08">protocol</a>=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03f4424b2b7052e1979127e5e7f00dc2" title="XBOX only: set IPPROTO_VDP if you want to use VDP. If enabled, this socket does not support broadcast...">extraSocketOptions</a>;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ab5ebadf2095e4740467fcbc1a960f848">nonBlockingSocket</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ab055c0fffb62c78c2df4b1c0fb75e094">setBroadcast</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff400179c127b1666bc66250d3012b5e">setIPHdrIncl</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a0878dc49c936ade20a5957a258a1cf55">doNotFragment</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ac88dab075e6d06079168707f19ad661d">pollingThreadPriority</a>=threadPriority;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a04fbc344c0163f04f49a64efeabad1d9">eventHandler</a>=<span class="keyword">this</span>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            bbp.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2e06b921a43966f322d48b1b952c3b69">remotePortRakNetWasStartedOn_PS3_PS4_PSP2</a>=socketDescriptors[i].<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a9d6130cd4d3053f0e294bd913296f54f">remotePortRakNetWasStartedOn_PS3_PSP2</a>;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1">RNS2BindResult</a> br = ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a>*) r2)-&gt;Bind(&amp;bbp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">if</span> (</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            #<span class="keywordflow">if</span> <a class="code" href="../../d8/db0/defines_8h.xhtml#a48a3e5cd2e22f7d71c1373656e80d2ef">RAKNET_SUPPORT_IPV6</a>==0</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                socketDescriptors[i].socketFamily!=AF_INET ||</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            #endif</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                br==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1ad1ba67a11996afa213fa53bbd7ea945b">BR_REQUIRES_RAKNET_SUPPORT_IPV6_DEFINE</a>)</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            {</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                <a class="code" href="../../dc/d18/class_s_l_net_1_1_rak_net_socket2_allocator.xhtml#a495efecfedd981aa87dbd5e81f01bd67">RakNetSocket2Allocator::DeallocRNS2</a>(r2);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">DerefAllSockets</a>();</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a3b1cb5fef92a0ed529ece10fd7e1eb0a">SOCKET_FAMILY_NOT_SUPPORTED</a>;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            }</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (br==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1add38db328a70f3a3470819f91a8b02e4">BR_FAILED_TO_BIND_SOCKET</a>)</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            {</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                <a class="code" href="../../dc/d18/class_s_l_net_1_1_rak_net_socket2_allocator.xhtml#a495efecfedd981aa87dbd5e81f01bd67">RakNetSocket2Allocator::DeallocRNS2</a>(r2);</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">DerefAllSockets</a>();</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a7940d7782daf9f7868256646679c4938">SOCKET_PORT_ALREADY_IN_USE</a>;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            }</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (br==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1ad09d9fb69908fef440b0fbb21c0cf299">BR_FAILED_SEND_TEST</a>)</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            {</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                <a class="code" href="../../dc/d18/class_s_l_net_1_1_rak_net_socket2_allocator.xhtml#a495efecfedd981aa87dbd5e81f01bd67">RakNetSocket2Allocator::DeallocRNS2</a>(r2);</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">DerefAllSockets</a>();</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a5ca4a2c3d90a2cffdea1b6791fb54242">SOCKET_FAILED_TEST_SEND</a>;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            {</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(br==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4404d95ca631c4047d0d6d10323db7c1ab1271f816dda76b8f2bc7da6542a1fcf">BR_SUCCESS</a>);</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            }</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        }</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        {</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<span class="stringliteral">&quot;TODO&quot;</span> &amp;&amp; 0);</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="preprocessor">        #endif</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="preprocessor"></span><span class="comment">/*</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">        SystemAddress saOut;</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">        SocketLayer::GetSystemAddress( rns, &amp;saOut );</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">        rns-&gt;SetBoundAddress(saOut);</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">        rns-&gt;SetRemotePortRakNetWasStartedOn(socketDescriptors[i].remotePortRakNetWasStartedOn_PS3_PSP2);</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">        rns-&gt;SetChromeInstance(socketDescriptors[i].chromeInstance);</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment">        rns-&gt;SetExtraSocketOptions(socketDescriptors[i].extraSocketOptions);</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">        rns-&gt;SetUserConnectionSocketIndex(i);</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">        rns-&gt;SetBlockingSocket(socketDescriptors[i].blockingSocket);</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">#if RAKNET_SUPPORT_IPV6==0</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">        if (addrToBind==0)</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">            rns-&gt;SetBoundAddressToLoopback(4);</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">        // GetBoundAddress is asynch, which isn&#39;t supported by this architecture</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">#if !defined(__native_client__)</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">        int zero=0;</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment">        if (SocketLayer::SendTo(rns, (const char*) &amp;zero,4, rns-&gt;GetBoundAddress(), _FILE_AND_LINE_)!=0)</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">            DerefAllSockets();</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">            return SOCKET_FAILED_TEST_SEND;</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>(r2, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    }</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">for</span> (i=0; i&lt;socketDescriptorCount; i++)</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    {</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i]-&gt;IsBerkleySocket())</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a>*) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i])-&gt;CreateRecvPollingThread(threadPriority);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    }</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">// #if !defined(_XBOX) &amp;&amp; !defined(_XBOX_720_COMPILE_AS_WINDOWS) &amp;&amp; !defined(X360)</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; i++)</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i]==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0]-&gt;IsBerkleySocket())</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        {</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> port = ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a>*)<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0])-&gt;GetBoundAddress().GetPort();</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i].<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5f42b847875bcf297eda4ebadeda7abe">SetPortHostOrder</a>(port);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        }</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="preprocessor"></span><span class="comment">//      ipList[i].SetPort(((RNS2_360_720*)socketList[0])-&gt;GetBoundAddress().GetPort());</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    }</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> == 0 )</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    {</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <span class="comment">// Don&#39;t allow more incoming connections than we have peers.</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b8ce46d6d74af289070955a380be59c" title="Store the maximum number of peers able to connect, including reserved connection slots for pings...">maximumIncomingConnections</a> &gt; maxConnections )</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b8ce46d6d74af289070955a380be59c" title="Store the maximum number of peers able to connect, including reserved connection slots for pings...">maximumIncomingConnections</a> = maxConnections;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> = maxConnections;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="comment">// 04/19/2006 - Don&#39;t overallocate because I&#39;m no longer allowing connected pings.</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="comment">// The disconnects are not consistently processed and the process was sloppy and complicated.</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="comment">// Allocate 10% extra to handle new connections from players trying to connect when the server is full</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="comment">//remoteSystemListSize = maxConnections;// * 11 / 10 + 1;</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="comment">// remoteSystemList in Single thread</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="comment">//remoteSystemList = SLNet::OP_NEW&lt;RemoteSystemStruct[ remoteSystemListSize ]&gt;( _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> = SLNet::OP_NEW_ARRAY&lt;RemoteSystemStruct&gt;(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a> = SLNet::OP_NEW_ARRAY&lt;RemoteSystemIndex*&gt;((<span class="keywordtype">unsigned</span> int) maximumNumberOfPeers * <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aacb22d714d93c291fd62b221aa5b453f">REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a> = SLNet::OP_NEW_ARRAY&lt;RemoteSystemStruct*&gt;(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <span class="comment">//for ( i = 0; i &lt; remoteSystemListSize; i++ )</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            <span class="comment">// remoteSystemList in Single thread</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a> = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a> = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a8907915e3ad157baf1609efc43801ba7" title="Their external IP on the internet.">myExternalSystemAddress</a> = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04add7d915412fa7735321ece871eb30380">RemoteSystemStruct::NO_ACTION</a>;</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a> = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af96dd55e6d29b96d62af7f3ac5d2332b">defaultMTUSize</a>;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a397b41f1f82b716399a756b1e881c5f0">remoteSystemIndex</a> = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>) i;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="preprocessor"></span>            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ab354b17db4ee0bb894edb49ebc2349a1">ApplyNetworkSimulator</a>(_packetloss, _minExtraPing, _extraPingVariance);</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            <span class="comment">// All entries in activeSystemList have valid pointers all the time.</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[ i ] = &amp;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ];</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        }</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; (<span class="keywordtype">unsigned</span> int) maximumNumberOfPeers*REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE; i++)</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        {</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            remoteSystemLookup[i]=0;</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        }</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    }</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="comment">// For histogram statistics</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="comment">// nextReadBytesTime=0;</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="comment">// lastSentBytes=lastReceivedBytes=0;</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> )</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    {</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ab52a1730cc72f9294855b6660fb2fa06" title="RunUpdateCycle is not thread safe but we don&#39;t need to mutex calls. Just skip calls if it is running ...">updateCycleIsRunning</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aed8c82143ba074c034ebf6f7ada9e06f">ClearBufferedCommands</a>();</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281f387ca70c252bc753815e3763a36b">ClearBufferedPackets</a>();</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a819793a837a9c7a224529fcb9261c8bf">ClearSocketQueryOutput</a>();</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a> == <span class="keyword">false</span> )</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        {</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="preprocessor">#if RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            <span class="keywordtype">int</span> errorCode;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                    errorCode = <a class="code" href="../../df/db9/class_s_l_net_1_1_rak_thread.xhtml#a370c3ee097f5eeee7ee09dfc14b8db91">SLNet::RakThread::Create</a>(UpdateNetworkLoop, <span class="keyword">this</span>, threadPriority);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                    <span class="keywordflow">if</span> ( errorCode != 0 )</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                    {</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab69808cd87c19f1800ac36d8c8e584c" title="Stops the network threads and closes all connections.">Shutdown</a>( 0, 0 );</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a683cf64d9c1ecea8ad13363e8f350dcd">FAILED_TO_CREATE_NETWORK_THREAD</a>;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                    }</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="comment">//                  RakAssert(isRecvFromLoopThreadActive.GetValue()==0);</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="preprocessor">#endif // RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                    <span class="comment">/*</span></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment">            for (i=0; i&lt;socketDescriptorCount; i++)</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment">                RakPeerAndIndex *rpai = SLNet::OP_NEW&lt;RakPeerAndIndex&gt;(_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment">                rpai-&gt;s=socketList[i];</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">                rpai-&gt;rakPeer=this;</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment">#if RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment">    #if defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="comment">                sprintf_s(threadName, &quot;RecvFromLoop_%p&quot;, this);</span></div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="comment">                //errorCode = SLNet::RakThread::Create(RecvFromLoop, rpai, threadPriority, threadName, 1+i, runtime);</span></div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment">                errorCode = SLNet::RakThread::Create(RecvFromLoop, rpai, threadPriority, threadName, 1024*1);</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment">    #else</span></div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="comment">                errorCode = SLNet::RakThread::Create(RecvFromLoop, rpai, threadPriority);</span></div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">    #endif</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">                if ( errorCode != 0 )</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="comment">                {</span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="comment">                    Shutdown( 0, 0 );</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">                    return FAILED_TO_CREATE_NETWORK_THREAD;</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment">                }</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment">#endif // RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment">                }</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment">                */</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment">#if RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="comment">            while (  isRecvFromLoopThreadActive.GetValue() &lt; (uint32_t) socketDescriptorCount )</span></div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="comment">                RakSleep(10);</span></div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="comment">                #endif // RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="comment">                */</span></div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                }</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="preprocessor">#if RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="preprocessor"></span>        <span class="comment">// Wait for the threads to activate.  When they are active they will set these variables to true</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keywordflow">while</span> (  <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a> == <span class="keyword">false</span> )</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;            <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(10);</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="preprocessor">#endif // RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    {</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[i]-&gt;OnRakPeerStartup();</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    }</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    {</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnRakPeerStartup();</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    }</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="preprocessor">#ifdef USE_THREADED_SEND</span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="preprocessor"></span>    SLNet::SendToThread::AddRef();</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a348d24f0661e4499defbdb591b68a659">RAKNET_STARTED</a>;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;}</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="comment">// Must be called while offline</span></div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="comment">// If you accept connections, you must call this or else security will not be enabled for incoming connections.</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment">// This feature requires more round trips, bandwidth, and CPU time for the connection handshake</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment">// x64 builds require under 25% of the CPU time of other builds</span></div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment">// See the Encryption sample for example usage</span></div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="comment">// publicKey = A pointer to the public key for accepting new connections</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="comment">// privateKey = A pointer to the private key for accepting new connections</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="comment">// If the private keys are 0, then a new key will be generated when this function is called</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="comment">// bRequireClientKey: Should be set to false for most servers.  Allows the server to accept a public key from connecting clients as a proof of identity but eats twice as much CPU time as a normal connection</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00762"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a74710b1c2966a88a8e5efc86376a4d06">  762</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a74710b1c2966a88a8e5efc86376a4d06">RakPeer::InitializeSecurity</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *public_key, <span class="keyword">const</span> <span class="keywordtype">char</span> *private_key, <span class="keywordtype">bool</span> bRequireClientKey)</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;{</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">false</span> )</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="comment">// Copy client public key requirement flag</span></div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    _require_client_public_key = bRequireClientKey;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="keywordflow">if</span> (_server_handshake)</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    {</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Deleting old server_handshake %x\n&quot;</span>, _server_handshake);</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_server_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    }</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keywordflow">if</span> (_cookie_jar)</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    {</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Deleting old cookie jar %x\n&quot;</span>, _cookie_jar);</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_cookie_jar,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    }</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    _server_handshake = SLNet::OP_NEW&lt;cat::ServerEasyHandshake&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    _cookie_jar = SLNet::OP_NEW&lt;cat::CookieJar&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Created new server_handshake %x\n&quot;</span>, _server_handshake);</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Created new cookie jar %x\n&quot;</span>, _cookie_jar);</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Running _server_handshake-&gt;Initialize()\n&quot;</span>);</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    <span class="keywordflow">if</span> (_server_handshake-&gt;Initialize(public_key, private_key))</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    {</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Successfully initialized, filling cookie jar with goodies, storing public key and setting using security flag to true\n&quot;</span>);</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        _server_handshake-&gt;FillCookieJar(_cookie_jar);</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        memcpy(my_public_key, public_key, <span class="keyword">sizeof</span>(my_public_key));</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        _using_security = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    }</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Failure to initialize so deleting server handshake and cookie jar; also setting using_security flag = false\n&quot;</span>);</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_server_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    _server_handshake=0;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_cookie_jar,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    _cookie_jar=0;</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    _using_security = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="preprocessor"></span>    (void) public_key;</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    (void) private_key;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    (void) bRequireClientKey;</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="comment">// Description</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment">// Must be called while offline</span></div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment">// Disables security for incoming connections.</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00823"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#abc9e3cd4ac407f23ce1ee99c94cabd88">  823</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#abc9e3cd4ac407f23ce1ee99c94cabd88">RakPeer::DisableSecurity</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;{</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: DisableSecurity() called, so deleting _server_handshake %x and cookie_jar %x\n&quot;</span>, _server_handshake, _cookie_jar);</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_server_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    _server_handshake=0;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(_cookie_jar,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    _cookie_jar=0;</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    _using_security = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00837"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af8d5bea4ceaa700d451196b9b0b0ed25">  837</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af8d5bea4ceaa700d451196b9b0b0ed25" title="This is useful if you have a fixed-address internal server behind a LAN.">RakPeer::AddToSecurityExceptionList</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *ip)</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;{</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a5cb7d8b68d8d020a34f2186ea8d5b1c6" title="Insert an element at position position in the list.">Insert</a>(<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a>(ip), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;}</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00845"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a24be36bb9b57fd85627d89b66b149c50">  845</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a24be36bb9b57fd85627d89b66b149c50" title="Remove a specific connection previously added via AddToSecurityExceptionList.">RakPeer::RemoveFromSecurityExceptionList</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *ip)</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;{</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()==0)</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    <span class="keywordflow">if</span> (ip==0)</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    {</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    }</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    {</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        <span class="keywordtype">unsigned</span> i=0;</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        <span class="keywordflow">while</span> (i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>())</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;        {</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>[i].IPAddressMatch(ip))</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;            {</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>[i]=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>[<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()-1];</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a79621376e92b605c4dbdb77aafbb6b60" title="Delete the element at position position.">RemoveAtIndex</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()-1);</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;            }</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                i++;</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;        }</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    }</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;}</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00874"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4541da876eef1161bd7460f2cbfcc3bd">  874</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4541da876eef1161bd7460f2cbfcc3bd" title="Checks to see if a given IP is in the security exception list.">RakPeer::IsInSecurityExceptionList</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *ip)</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;{</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()==0)</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    <span class="keywordtype">unsigned</span> i=0;</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <span class="keywordflow">for</span> (; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    {</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af7b884543a2ebdd0ee8ba9c5ee223266">securityExceptionList</a>[i].IPAddressMatch(ip))</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        {</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;        }</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    }</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9cfe9a00a5d314bc170285bc611e40e3">securityExceptionMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;}</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="comment">// Sets how many incoming connections are allowed.  If this is less than the number of players currently connected, no</span></div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="comment">// more players will be allowed to connect.  If this is greater than the maximum number of peers allowed, it will be reduced</span></div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment">// to the maximum number of peers allowed.  Defaults to 0.</span></div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="comment">// numberAllowed - Maximum number of incoming connections allowed.</span></div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00902"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad2004ca40f0a88ca24f70196321d48c8">  902</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad2004ca40f0a88ca24f70196321d48c8" title="Sets the maximum number of incoming connections allowed.">RakPeer::SetMaximumIncomingConnections</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> numberAllowed )</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;{</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b8ce46d6d74af289070955a380be59c" title="Store the maximum number of peers able to connect, including reserved connection slots for pings...">maximumIncomingConnections</a> = numberAllowed;</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;}</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment">// Returns the maximum number of incoming connections, which is always &lt;= maxConnections</span></div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00911"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4de15c29e41694e8981ab8d4cb90baf4">  911</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4de15c29e41694e8981ab8d4cb90baf4" title="Returns the value passed to SetMaximumIncomingConnections().">RakPeer::GetMaximumIncomingConnections</a>( <span class="keywordtype">void</span> )<span class="keyword"> const</span></div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b8ce46d6d74af289070955a380be59c" title="Store the maximum number of peers able to connect, including reserved connection slots for pings...">maximumIncomingConnections</a>;</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;}</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="comment">// Returns how many open connections there are at this time</span></div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="comment">// \return the number of open connections</span></div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00920"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0155271445e2fe26b382080f228df46d">  920</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0155271445e2fe26b382080f228df46d" title="Returns how many open connections exist at this time.">RakPeer::NumberOfConnections</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;SystemAddress&gt;</a> addresses;</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetGUID&gt;</a> guids;</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af98b973b0e2c2f2a2342f7c76bca5bd4" title="Same as calling GetSystemAddressFromIndex and GetGUIDFromIndex for all systems, but more efficient In...">GetSystemList</a>(addresses, guids);</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>) addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>();</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;}</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment">// Sets the password incoming connections must match in the call to Connect (defaults to none)</span></div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="comment">// Pass 0 to passwordData to specify no password</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="comment">// passwordData: A data block that incoming connections must match.  This can be just a password, or can be a stream of data.</span></div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="comment">// - Specify 0 for no password data</span></div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="comment">// passwordDataLength: The length in bytes of passwordData</span></div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00938"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6daafe75bfe4882aa46f32cb753378c">  938</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6daafe75bfe4882aa46f32cb753378c" title="Sets the password for the incoming connections.">RakPeer::SetIncomingPassword</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* passwordData, <span class="keywordtype">int</span> passwordDataLength )</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;{</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    <span class="comment">//if (passwordDataLength &gt; MAX_OFFLINE_DATA_LENGTH)</span></div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    <span class="comment">//  passwordDataLength=MAX_OFFLINE_DATA_LENGTH;</span></div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    <span class="keywordflow">if</span> (passwordDataLength &gt; 255)</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;        passwordDataLength=255;</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    <span class="keywordflow">if</span> (passwordData==0)</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        passwordDataLength=0;</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    <span class="comment">// Not threadsafe but it&#39;s not important enough to lock.  Who is going to change the password a lot during runtime?</span></div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <span class="comment">// It won&#39;t overflow at least because incomingPasswordLength is an unsigned char</span></div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    <span class="keywordflow">if</span> (passwordDataLength&gt;0)</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        memcpy(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af247fd618c728c9fb340c181f2949b56" title="Local Player ID.">incomingPassword</a>, passwordData, passwordDataLength);</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36a0b0cd5c5f3c0b0cd07a59178a37a4">incomingPasswordLength</a>=(<span class="keywordtype">unsigned</span> char)passwordDataLength;</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;}</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00957"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d16efedd2007d917e613a78f816baba">  957</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d16efedd2007d917e613a78f816baba" title="Gets the password passed to SetIncomingPassword.">RakPeer::GetIncomingPassword</a>( <span class="keywordtype">char</span>* passwordData, <span class="keywordtype">int</span> *passwordDataLength  )</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;{</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    <span class="keywordflow">if</span> (passwordData==0)</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    {</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;        *passwordDataLength=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36a0b0cd5c5f3c0b0cd07a59178a37a4">incomingPasswordLength</a>;</div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    }</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    <span class="keywordflow">if</span> (*passwordDataLength &gt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36a0b0cd5c5f3c0b0cd07a59178a37a4">incomingPasswordLength</a>)</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;        *passwordDataLength=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36a0b0cd5c5f3c0b0cd07a59178a37a4">incomingPasswordLength</a>;</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    <span class="keywordflow">if</span> (*passwordDataLength&gt;0)</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        memcpy(passwordData, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af247fd618c728c9fb340c181f2949b56" title="Local Player ID.">incomingPassword</a>, *passwordDataLength);</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;}</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="comment">// Call this to connect to the specified host (ip or domain name) and server port.</span></div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="comment">// Calling Connect and not calling SetMaximumIncomingConnections acts as a dedicated client.  Calling both acts as a true peer.</span></div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;<span class="comment">// This is a non-blocking connection.  You know the connection is successful when IsConnected() returns true</span></div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="comment">// or receive gets a packet with the type identifier ID_CONNECTION_REQUEST_ACCEPTED.  If the connection is not</span></div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;<span class="comment">// successful, such as rejected connection or no response then neither of these things will happen.</span></div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="comment">// Requires that you first call Initialize</span></div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="comment">// host: Either a dotted IP address or a domain name</span></div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="comment">// remotePort: Which port to connect to on the remote machine.</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">// passwordData: A data block that must match the data block on the server.  This can be just a password, or can be a stream of data</span></div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="comment">// passwordDataLength: The length in bytes of passwordData</span></div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="comment">// Returns:</span></div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="comment">// True on successful initiation. False on incorrect parameters, internal error, or too many existing peers</span></div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00990"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0365c57451fb71d2e17af378912e7c7">  990</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3a">ConnectionAttemptResult</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0365c57451fb71d2e17af378912e7c7" title="Connect to the specified host (ip or domain name) and server port.">RakPeer::Connect</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keyword">const</span> <span class="keywordtype">char</span> *passwordData, <span class="keywordtype">int</span> passwordDataLength, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key" title="Passed to RakPeerInterface::Connect()">PublicKey</a> *publicKey, <span class="keywordtype">unsigned</span> connectionSocketIndex, <span class="keywordtype">unsigned</span> sendConnectionAttemptCount, <span class="keywordtype">unsigned</span> timeBetweenSendConnectionAttemptsMS, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutTime )</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;{</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    <span class="comment">// If endThreads is true here you didn&#39;t call Startup() first.</span></div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <span class="keywordflow">if</span> ( host == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> || connectionSocketIndex&gt;=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() )</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa0f512c9019e7fb6d665a4f5dd332d436">INVALID_PARAMETER</a>;</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(remotePort!=0);</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    connectionSocketIndex=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae666a545bcac66fc454c2368b7696b64">GetRakNetSocketFromUserConnectionSocketIndex</a>(connectionSocketIndex);</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    <span class="keywordflow">if</span> (passwordDataLength&gt;255)</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;        passwordDataLength=255;</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordflow">if</span> (passwordData==0)</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        passwordDataLength=0;</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    <span class="comment">// Not threadsafe but it&#39;s not important enough to lock.  Who is going to change the password a lot during runtime?</span></div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    <span class="comment">// It won&#39;t overflow at least because outgoingPasswordLength is an unsigned char</span></div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;<span class="comment">//  if (passwordDataLength&gt;0)</span></div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="comment">//      memcpy(outgoingPassword, passwordData, passwordDataLength);</span></div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="comment">//  outgoingPasswordLength=(unsigned char) passwordDataLength;</span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    <span class="comment">// 04/02/09 - Can&#39;t remember why I disabled connecting to self, but it seems to work</span></div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="comment">// Connecting to ourselves in the same instance of the program?</span></div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="comment">//  if ( ( strcmp( host, &quot;127.0.0.1&quot; ) == 0 || strcmp( host, &quot;0.0.0.0&quot; ) == 0 ) &amp;&amp; remotePort == mySystemAddress[0].port )</span></div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;<span class="comment">//      return false;</span></div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a556ea6d3911c9e251fc5ffb2c07edee1">SendConnectionRequest</a>( host, remotePort, passwordData, passwordDataLength, publicKey, connectionSocketIndex, 0, sendConnectionAttemptCount, timeBetweenSendConnectionAttemptsMS, timeoutTime);</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;}</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;</div>
<div class="line"><a name="l01022"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a54277ba808fe9fba11ec036e596de159"> 1022</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3a">ConnectionAttemptResult</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a54277ba808fe9fba11ec036e596de159" title="Connect to the specified host (ip or domain name) and server port.">RakPeer::ConnectWithSocket</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keyword">const</span> <span class="keywordtype">char</span> *passwordData, <span class="keywordtype">int</span> passwordDataLength, <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a>* socket, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key" title="Passed to RakPeerInterface::Connect()">PublicKey</a> *publicKey, <span class="keywordtype">unsigned</span> sendConnectionAttemptCount, <span class="keywordtype">unsigned</span> timeBetweenSendConnectionAttemptsMS, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutTime)</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;{</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;    <span class="keywordflow">if</span> ( host == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> || socket == 0 )</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa0f512c9019e7fb6d665a4f5dd332d436">INVALID_PARAMETER</a>;</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <span class="keywordflow">if</span> (passwordDataLength&gt;255)</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        passwordDataLength=255;</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;    <span class="keywordflow">if</span> (passwordData==0)</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;        passwordDataLength=0;</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a556ea6d3911c9e251fc5ffb2c07edee1">SendConnectionRequest</a>( host, remotePort, passwordData, passwordDataLength, publicKey, 0, 0, sendConnectionAttemptCount, timeBetweenSendConnectionAttemptsMS, timeoutTime, socket );</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;}</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="comment">// Stops the network threads and close all connections.  Multiple calls are ok.</span></div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01041"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab69808cd87c19f1800ac36d8c8e584c"> 1041</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab69808cd87c19f1800ac36d8c8e584c" title="Stops the network threads and closes all connections.">RakPeer::Shutdown</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> blockDuration, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> orderingChannel, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> disconnectionNotificationPriority )</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;{</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    <span class="keywordtype">unsigned</span> i,j;</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <span class="keywordtype">bool</span> anyActive;</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> startWaitingTime;</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="comment">//  SystemAddress systemAddress;</span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time;</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    <span class="comment">//unsigned short systemListSize = remoteSystemListSize; // This is done for threading reasons</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> systemListSize = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>;</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;    <span class="keywordflow">if</span> ( blockDuration &gt; 0 )</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;    {</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; systemListSize; i++ )</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        {</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;            <span class="comment">// remoteSystemList in user thread</span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[i].isActive)</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a34ef012d4c7fdae387cff33ef3f8a82c" title="Send a reliable disconnect packet to this player and disconnect them when it is delivered.">NotifyAndFlagForShutdown</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[i].systemAddress, <span class="keyword">false</span>, orderingChannel, disconnectionNotificationPriority);</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;        }</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;        time = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;        startWaitingTime = time;</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        <span class="keywordflow">while</span> ( time - startWaitingTime &lt; blockDuration )</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;        {</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;            anyActive=<span class="keyword">false</span>;</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;            <span class="keywordflow">for</span> (j=0; j &lt; systemListSize; j++)</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;            {</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                <span class="comment">// remoteSystemList in user thread</span></div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[j].isActive)</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                {</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                    anyActive=<span class="keyword">true</span>;</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                }</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;            }</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;            <span class="comment">// If this system is out of packets to send, then stop waiting</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;            <span class="keywordflow">if</span> ( anyActive==<span class="keyword">false</span> )</div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;            <span class="comment">// This will probably cause the update thread to run which will probably</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;            <span class="comment">// send the disconnection notification</span></div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;            <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(15);</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;            time = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;        }</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    }</div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;    {</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[i]-&gt;OnRakPeerShutdown();</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;    }</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;    {</div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnRakPeerShutdown();</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;    }</div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;<span class="comment">//  SLNet::TimeMS timeout;</span></div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;<span class="preprocessor">#if RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    {</div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i]-&gt;IsBerkleySocket())</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;        {</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;            ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a> *)<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i])-&gt;SignalStopRecvPollingThread();</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;        }</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    }</div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="comment">    // Get recvfrom to unblock</span></div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="comment">    for (i=0; i &lt; socketList.Size(); i++)</span></div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="comment">        if (SocketLayer::SendTo(socketList[i], (const char*) &amp;i,1,socketList[i]-&gt;GetBoundAddress(), _FILE_AND_LINE_)!=0)</span></div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;<span class="comment">            break;</span></div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    <span class="keywordflow">while</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a> )</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    {</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(15);</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    }</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a> = 0;</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;<span class="comment">    timeout = SLNet::GetTimeMS()+1000;</span></div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;<span class="comment">    while ( isRecvFromLoopThreadActive.GetValue()&gt;0 &amp;&amp; SLNet::GetTimeMS()&lt;timeout )</span></div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="comment">        // Get recvfrom to unblock</span></div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;<span class="comment">        for (i=0; i &lt; socketList.Size(); i++)</span></div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;<span class="comment">            SocketLayer::SendTo(socketList[i], (const char*) &amp;i,1,socketList[i]-&gt;GetBoundAddress(), _FILE_AND_LINE_);</span></div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;<span class="comment">        RakSleep(30);</span></div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    {</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i]-&gt;IsBerkleySocket())</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        {</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;            ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a> *)<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i])-&gt;BlockOnStopRecvPollingThread();</div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;        }</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;    }</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="preprocessor">#endif // RAKPEER_USER_THREADED!=1</span></div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;<span class="comment">//  char c=0;</span></div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;<span class="comment">//  unsigned int socketIndex;</span></div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <span class="comment">// remoteSystemList in Single thread</span></div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; systemListSize; i++ )</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    {</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;        <span class="comment">// Reserve this reliability layer for ourselves</span></div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;        <span class="comment">// Remove any remaining packets</span></div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].MTUSize &lt;= <a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a>);</div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a82a18156ee862239ce046aa4fb5acc79" title="Resets the layer for reuse.">Reset</a>(<span class="keyword">false</span>, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].MTUSize, <span class="keyword">false</span>);</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5a5790ea4c270243539880c1f3bfe683">rakNetSocket</a> = 0;</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    }</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;</div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;</div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;    <span class="comment">// Setting maximumNumberOfPeers to 0 allows remoteSystemList to be reallocated in Initialize.</span></div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    <span class="comment">// Setting remoteSystemListSize prevents threads from accessing the reliability layer</span></div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> = 0;</div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;    <span class="comment">//remoteSystemListSize = 0;</span></div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;</div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    <span class="comment">// Free any packets the user didn&#39;t deallocate</span></div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af68f8d2766b45b6d951dfd62cf349a71" title="Call this to deallocate a message returned by Receive() when you are done handling it...">DeallocatePacket</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>[i]);</div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a481276f70b05ecba8138cd67e51509ec">Clear</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae00518a3ba71591be2f83391b75bbcf3">packetAllocationPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#a2e91807b7e7fe95ee3c3d503fb8e6207">Clear</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;</div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;<span class="comment">    if (isRecvFromLoopThreadActive.GetValue()&gt;0)</span></div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="comment">        timeout = SLNet::GetTimeMS()+1000;</span></div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;<span class="comment">        while ( isRecvFromLoopThreadActive.GetValue()&gt;0 &amp;&amp; SLNet::GetTimeMS()&lt;timeout )</span></div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="comment">            RakSleep(30);</span></div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;</div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">DerefAllSockets</a>();</div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aed8c82143ba074c034ebf6f7ada9e06f">ClearBufferedCommands</a>();</div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281f387ca70c252bc753815e3763a36b">ClearBufferedPackets</a>();</div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a819793a837a9c7a224529fcb9261c8bf">ClearSocketQueryOutput</a>();</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aef0980318e6fcdd9fd45b44ac80f223a" title="The list of people we have tried to connect to recently.">bytesSentPerSecond</a> = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a856b013c8af750637a711d0aee46d0de">bytesReceivedPerSecond</a> = 0;</div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae3a210565120570bcdab5332ab16e336">ClearRequestedConnectionList</a>();</div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;</div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;</div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    <span class="comment">// Clear out the reliability layer list in case we want to reallocate it in a successive call to Init.</span></div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * temp = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>;</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> = 0;</div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acd53258ab2c0b731df325c91b2e85c9b">SLNet::OP_DELETE_ARRAY</a>(temp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acd53258ab2c0b731df325c91b2e85c9b">SLNet::OP_DELETE_ARRAY</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>=0;</div>
<div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;</div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1d720ae46165554561ab4119e3c0ab91">ClearRemoteSystemLookup</a>();</div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;<span class="preprocessor">#ifdef USE_THREADED_SEND</span></div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;<span class="preprocessor"></span>    SLNet::SendToThread::Deref();</div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2f6e2dae8f4d9c07d9bae3b9b7218eca">ResetSendReceipt</a>();</div>
<div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;}</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;<span class="comment">// Returns true if the network threads are running</span></div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01227"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5"> 1227</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">RakPeer::IsActive</a>( <span class="keywordtype">void</span> )<span class="keyword"> const</span></div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">false</span>;</div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;}</div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;</div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;<span class="comment">// Fills the array remoteSystems with the systemAddress of all the systems we are connected to</span></div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;<span class="comment">// remoteSystems (out): An array of SystemAddress structures to be filled with the SystemAddresss of the systems we are connected to</span></div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="comment">// - pass 0 to remoteSystems to only get the number of systems we are connected to</span></div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;<span class="comment">// numberOfSystems (int, out): As input, the size of remoteSystems array.  As output, the number of elements put into the array</span></div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01241"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2f3e89dc1baf72e449911b7c674403fc"> 1241</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2f3e89dc1baf72e449911b7c674403fc" title="Fills the array remoteSystems with the SystemAddress of all the systems we are connected to...">RakPeer::GetConnectionList</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> *remoteSystems, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> *numberOfSystems )<span class="keyword"> const</span></div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    <span class="keywordflow">if</span> (numberOfSystems==0)</div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;</div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    {</div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;        <span class="keywordflow">if</span> (numberOfSystems)</div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;            *numberOfSystems=0;</div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    }</div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;</div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;SystemAddress&gt;</a> addresses;</div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetGUID&gt;</a> guids;</div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af98b973b0e2c2f2a2342f7c76bca5bd4" title="Same as calling GetSystemAddressFromIndex and GetGUIDFromIndex for all systems, but more efficient In...">GetSystemList</a>(addresses, guids);</div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;    <span class="keywordflow">if</span> (remoteSystems)</div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    {</div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> i;</div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; *numberOfSystems &amp;&amp; i &lt; addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;            remoteSystems[i]=addresses[i];</div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;        *numberOfSystems=i;</div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    }</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    {</div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;        *numberOfSystems=(<span class="keywordtype">unsigned</span> short) addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>();</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    }</div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;}</div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;</div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01271"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7c3653ef0cef17d136b34b8a60213173"> 1271</a></span>&#160;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7c3653ef0cef17d136b34b8a60213173">RakPeer::GetNextSendReceipt</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;{</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> retVal = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>;</div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    <span class="keywordflow">return</span> retVal;</div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;}</div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01279"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4780cb8a45fbbac8cb9c02bc72d20f33"> 1279</a></span>&#160;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4780cb8a45fbbac8cb9c02bc72d20f33">RakPeer::IncrementNextSendReceipt</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;{</div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> returned = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>;</div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    <span class="keywordflow">if</span> (++<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>==0)</div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>=1;</div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    <span class="keywordflow">return</span> returned;</div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;}</div>
<div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;</div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;<span class="comment">// Sends a block of data to the specified system that you are connected to.</span></div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;<span class="comment">// This function only works while the client is connected (Use the Connect function).</span></div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;<span class="comment">// The first byte should be a message identifier starting at ID_USER_PACKET_ENUM</span></div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;<span class="comment">// data: The block of data to send</span></div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;<span class="comment">// length: The size in bytes of the data to send</span></div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;<span class="comment">// bitStream: The bitstream to send</span></div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;<span class="comment">// priority: What priority level to send on.</span></div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;<span class="comment">// reliability: How reliability to send this data</span></div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;<span class="comment">// orderingChannel: When using ordered or sequenced packets, what channel to order these on.</span></div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;<span class="comment">// - Packets are only ordered relative to other packets on the same stream</span></div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;<span class="comment">// systemAddress: Who to send this packet to, or in the case of broadcasting who not to send it to. Use UNASSIGNED_SYSTEM_ADDRESS to specify none</span></div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;<span class="comment">// broadcast: True to send this packet to all connected systems.  If true, then systemAddress specifies who not to send the packet to.</span></div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;<span class="comment">// Returns:</span></div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;<span class="comment">// \return 0 on bad input. Otherwise a number that identifies this message. If \a reliability is a type that returns a receipt, on a later call to Receive() you will get ID_SND_RECEIPT_ACKED or ID_SND_RECEIPT_LOSS with bytes 1-4 inclusive containing this number</span></div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01308"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4e1766fd244af7941b327e8751a4e9ee"> 1308</a></span>&#160;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4e1766fd244af7941b327e8751a4e9ee" title="Sends a block of data to the specified system that you are connected to.">RakPeer::Send</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">int</span> length, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> forceReceiptNumber )</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;{</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( data &amp;&amp; length &gt; 0 );</div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( reliability &gt;= <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaf49e4584ca35290efd854922f4cad6be">NUMBER_OF_RELIABILITIES</a> || reliability &lt; 0 ) );</div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( priority &gt; <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca619c0d06913ad9d663b086aca30f7cdc">NUMBER_OF_PRIORITIES</a> || priority &lt; 0 ) );</div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( orderingChannel &gt;= <a class="code" href="../../dd/dba/_reliability_layer_8h.xhtml#aaabd5ed6e95299bf0ae89b0a972f5071" title="Number of ordered streams available. You can use up to 32 ordered streams.">NUMBER_OF_ORDERED_STREAMS</a> ) );</div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;</div>
<div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    <span class="keywordflow">if</span> ( data == 0 || length &lt; 0 )</div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;</div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;</div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    <span class="keywordflow">if</span> ( broadcast == <span class="keyword">false</span> &amp;&amp; systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a61d231c237e3eaea84445c47b4003ddc">IsUndefined</a>())</div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;</div>
<div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;    <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> usedSendReceipt;</div>
<div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    <span class="keywordflow">if</span> (forceReceiptNumber!=0)</div>
<div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;        usedSendReceipt=forceReceiptNumber;</div>
<div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;        usedSendReceipt=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4780cb8a45fbbac8cb9c02bc72d20f33">IncrementNextSendReceipt</a>();</div>
<div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;</div>
<div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;    <span class="keywordflow">if</span> (broadcast==<span class="keyword">false</span> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff2110cddbbcea96b4ecf6acb310ec48">IsLoopbackAddress</a>(systemIdentifier,<span class="keyword">true</span>))</div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    {</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e" title="&quot;Send&quot; to yourself rather than a remote system.">SendLoopback</a>(data,length);</div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;        <span class="keywordflow">if</span> (reliability&gt;=<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7ea4a623962051043733acde3e595e1cce0" title="Same as UNRELIABLE, however the user will get either ID_SND_RECEIPT_ACKED or ID_SND_RECEIPT_LOSS base...">UNRELIABLE_WITH_ACK_RECEIPT</a>)</div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;        {</div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;            <span class="keywordtype">char</span> buff[5];</div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;            buff[0]=<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aea254aecc756b8f68b9b0b75ebefa246">ID_SND_RECEIPT_ACKED</a>;</div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;            memcpy(buff+1, &amp;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>, 4);</div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e" title="&quot;Send&quot; to yourself rather than a remote system.">SendLoopback</a>( buff, 5 );</div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;        }</div>
<div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;</div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;        <span class="keywordflow">return</span> usedSendReceipt;</div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    }</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;</div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a705e3d72e100fc87f2a1878b0882dc38">SendBuffered</a>(data, length*8, priority, reliability, orderingChannel, systemIdentifier, broadcast, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04add7d915412fa7735321ece871eb30380">RemoteSystemStruct::NO_ACTION</a>, usedSendReceipt);</div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    <span class="keywordflow">return</span> usedSendReceipt;</div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;}</div>
<div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;</div>
<div class="line"><a name="l01354"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e"> 1354</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e" title="&quot;Send&quot; to yourself rather than a remote system.">RakPeer::SendLoopback</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">int</span> length )</div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;{</div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;    <span class="keywordflow">if</span> ( data == 0 || length &lt; 0 )</div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;</div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(length, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    memcpy(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, data, length);</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;    packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adbedc1bd441fe62b405bf27c5ffe5389">GetLoopbackAddress</a>();</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;    packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>;</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9968ebdb31bcc7563b035a567046169b" title="Puts a message back in the receive queue in case you don&#39;t want to deal with it immediately.">PushBackPacket</a>(packet, <span class="keyword">false</span>);</div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;}</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;</div>
<div class="line"><a name="l01366"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a546ef32b4d19d0514e1806932bddff6c"> 1366</a></span>&#160;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4e1766fd244af7941b327e8751a4e9ee" title="Sends a block of data to the specified system that you are connected to.">RakPeer::Send</a>( <span class="keyword">const</span> <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> * bitStream, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> forceReceiptNumber )</div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;{</div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>() &gt; 0 );</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( reliability &gt;= <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaf49e4584ca35290efd854922f4cad6be">NUMBER_OF_RELIABILITIES</a> || reliability &lt; 0 ) );</div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( priority &gt; <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca619c0d06913ad9d663b086aca30f7cdc">NUMBER_OF_PRIORITIES</a> || priority &lt; 0 ) );</div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( orderingChannel &gt;= <a class="code" href="../../dd/dba/_reliability_layer_8h.xhtml#aaabd5ed6e95299bf0ae89b0a972f5071" title="Number of ordered streams available. You can use up to 32 ordered streams.">NUMBER_OF_ORDERED_STREAMS</a> ) );</div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;</div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    <span class="keywordflow">if</span> ( bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>() == 0 )</div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;</div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;    <span class="keywordflow">if</span> ( broadcast == <span class="keyword">false</span> &amp;&amp; systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a61d231c237e3eaea84445c47b4003ddc">IsUndefined</a>() )</div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;</div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;    <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> usedSendReceipt;</div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;    <span class="keywordflow">if</span> (forceReceiptNumber!=0)</div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;        usedSendReceipt=forceReceiptNumber;</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;        usedSendReceipt=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4780cb8a45fbbac8cb9c02bc72d20f33">IncrementNextSendReceipt</a>();</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;    <span class="keywordflow">if</span> (broadcast==<span class="keyword">false</span> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff2110cddbbcea96b4ecf6acb310ec48">IsLoopbackAddress</a>(systemIdentifier,<span class="keyword">true</span>))</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;    {</div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e" title="&quot;Send&quot; to yourself rather than a remote system.">SendLoopback</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(),bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>());</div>
<div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;        <span class="keywordflow">if</span> (reliability&gt;=<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7ea4a623962051043733acde3e595e1cce0" title="Same as UNRELIABLE, however the user will get either ID_SND_RECEIPT_ACKED or ID_SND_RECEIPT_LOSS base...">UNRELIABLE_WITH_ACK_RECEIPT</a>)</div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;        {</div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;            <span class="keywordtype">char</span> buff[5];</div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;            buff[0]=<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aea254aecc756b8f68b9b0b75ebefa246">ID_SND_RECEIPT_ACKED</a>;</div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;            memcpy(buff+1, &amp;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>,4);</div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e" title="&quot;Send&quot; to yourself rather than a remote system.">SendLoopback</a>( buff, 5 );</div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;        }</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;        <span class="keywordflow">return</span> usedSendReceipt;</div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;    }</div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;    <span class="comment">// Sends need to be buffered and processed in the update thread because the systemAddress associated with the reliability layer can change,</span></div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;    <span class="comment">// from that thread, resulting in a send to the wrong player!  While I could mutex the systemAddress, that is much slower than doing this</span></div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a705e3d72e100fc87f2a1878b0882dc38">SendBuffered</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), priority, reliability, orderingChannel, systemIdentifier, broadcast, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04add7d915412fa7735321ece871eb30380">RemoteSystemStruct::NO_ACTION</a>, usedSendReceipt);</div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;</div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;</div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;    <span class="keywordflow">return</span> usedSendReceipt;</div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;}</div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;<span class="comment">// Sends multiple blocks of data, concatenating them automatically.</span></div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;<span class="comment">// This is equivalent to:</span></div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;<span class="comment">// SLNet::BitStream bs;</span></div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;<span class="comment">// bs.WriteAlignedBytes(block1, blockLength1);</span></div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;<span class="comment">// bs.WriteAlignedBytes(block2, blockLength2);</span></div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;<span class="comment">// bs.WriteAlignedBytes(block3, blockLength3);</span></div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;<span class="comment">// Send(&amp;bs, ...)</span></div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;<span class="comment">// This function only works while connected</span></div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;<span class="comment">// \param[in] data An array of pointers to blocks of data</span></div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;<span class="comment">// \param[in] lengths An array of integers indicating the length of each block of data</span></div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;<span class="comment">// \param[in] numParameters Length of the arrays data and lengths</span></div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;<span class="comment">// \param[in] priority What priority level to send on.  See PacketPriority.h</span></div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;<span class="comment">// \param[in] reliability How reliability to send this data.  See PacketPriority.h</span></div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;<span class="comment">// \param[in] orderingChannel When using ordered or sequenced messages, what channel to order these on. Messages are only ordered relative to other messages on the same stream</span></div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;<span class="comment">// \param[in] systemIdentifier Who to send this packet to, or in the case of broadcasting who not to send it to. Pass either a SystemAddress structure or a RakNetGUID structure. Use UNASSIGNED_SYSTEM_ADDRESS or to specify none</span></div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;<span class="comment">// \param[in] broadcast True to send this packet to all connected systems. If true, then systemAddress specifies who not to send the packet to.</span></div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;<span class="comment">// \return False if we are not connected to the specified recipient.  True otherwise</span></div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01434"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#abaeaf1511ffafcd3e506bb051438ccef"> 1434</a></span>&#160;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#abaeaf1511ffafcd3e506bb051438ccef" title="Sends multiple blocks of data, concatenating them automatically.">RakPeer::SendList</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> **data, <span class="keyword">const</span> <span class="keywordtype">int</span> *lengths, <span class="keyword">const</span> <span class="keywordtype">int</span> numParameters, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> forceReceiptNumber )</div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;{</div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( data );</div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;    <span class="keywordflow">if</span> ( data == 0 || lengths == 0 )</div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;</div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;    <span class="keywordflow">if</span> (numParameters==0)</div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    <span class="keywordflow">if</span> (lengths==0)</div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;</div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;    <span class="keywordflow">if</span> ( broadcast == <span class="keyword">false</span> &amp;&amp; systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a61d231c237e3eaea84445c47b4003ddc">IsUndefined</a>() )</div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;</div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;    <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> usedSendReceipt;</div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;    <span class="keywordflow">if</span> (forceReceiptNumber!=0)</div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;        usedSendReceipt=forceReceiptNumber;</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;        usedSendReceipt=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4780cb8a45fbbac8cb9c02bc72d20f33">IncrementNextSendReceipt</a>();</div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7bcc8f1dc3c6735b73a1f9f57b446eb2">SendBufferedList</a>(data, lengths, numParameters, priority, reliability, orderingChannel, systemIdentifier, broadcast, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04add7d915412fa7735321ece871eb30380">RemoteSystemStruct::NO_ACTION</a>, usedSendReceipt);</div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;</div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;    <span class="keywordflow">return</span> usedSendReceipt;</div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;}</div>
<div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;</div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;<span class="comment">// Gets a packet from the incoming packet queue. Use DeallocatePacket to deallocate the packet after you are done with it.</span></div>
<div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;<span class="comment">// Check the Packet struct at the top of CoreNetworkStructures.h for the format of the struct</span></div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;<span class="comment">// Returns:</span></div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;<span class="comment">// 0 if no packets are waiting to be handled, otherwise an allocated packet</span></div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;<span class="comment">// If the client is not active this will also return 0, as all waiting packets are flushed when the client is Disconnected</span></div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;<span class="comment">// This also updates all memory blocks associated with synchronized memory and distributed objects</span></div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01476"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a30f9b6c0108bae2b860776136f6aece7"> 1476</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a>* <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a30f9b6c0108bae2b860776136f6aece7" title="Gets a message from the incoming message queue.">RakPeer::Receive</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;{</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;    <span class="keywordflow">if</span> ( !( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>() ) )</div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;</div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *packet;</div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;<span class="comment">//  Packet **threadPacket;</span></div>
<div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> pluginResult;</div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;</div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;    <span class="keywordtype">int</span> offset;</div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;</div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;    <span class="comment">// User should call RunUpdateCycle and RunRecvFromOnce to do this commented code</span></div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;<span class="comment">#if RAKPEER_SINGLE_THREADED==1</span></div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;<span class="comment">    RakPeer::RecvFromStruct *recvFromStruct;</span></div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;<span class="comment">    for (i=0; i &lt; socketList.Size(); i++)</span></div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;<span class="comment">        for(;;)</span></div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;<span class="comment">            recvFromStruct=bufferedPackets.Allocate( _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;<span class="comment">            recvFromStruct-&gt;s=socketList[i]-&gt;s;</span></div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;<span class="comment">            recvFromStruct-&gt;remotePortRakNetWasStartedOn_PS3=socketList[i]-&gt;remotePortRakNetWasStartedOn_PS3_PSP2;</span></div>
<div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;<span class="comment">            recvFromStruct-&gt;extraSocketOptions=socketList[i]-&gt;extraSocketOptions;</span></div>
<div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;<span class="comment">            SocketLayer::RecvFromBlocking(</span></div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;<span class="comment">                recvFromStruct-&gt;s, this, recvFromStruct-&gt;remotePortRakNetWasStartedOn_PS3,</span></div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;<span class="comment">                recvFromStruct-&gt;extraSocketOptions, recvFromStruct-&gt;data, &amp;recvFromStruct-&gt;bytesRead, &amp;recvFromStruct-&gt;systemAddress, &amp;recvFromStruct-&gt;timeRead);</span></div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;<span class="comment">            if (recvFromStruct-&gt;bytesRead&lt;=0)</span></div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;<span class="comment">                bufferedPackets.Deallocate(recvFromStruct, _FILE_AND_LINE_);</span></div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;<span class="comment">                break;</span></div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;<span class="comment">            }</span></div>
<div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;<span class="comment">            else</span></div>
<div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;<span class="comment">                RakAssert(recvFromStruct-&gt;systemAddress.GetPort());</span></div>
<div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;<span class="comment">                bufferedPackets.Push(recvFromStruct);</span></div>
<div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;<span class="comment">            }</span></div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;<span class="comment">    BitStream updateBitStream( MAXIMUM_MTU_SIZE</span></div>
<div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;<span class="comment">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;<span class="comment">        + cat::AuthenticatedEncryption::OVERHEAD_BYTES</span></div>
<div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;<span class="comment">        );</span></div>
<div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;<span class="comment">    RunUpdateCycle(0, 0, updateBitStream);</span></div>
<div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;</div>
<div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;    {</div>
<div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[i]-&gt;Update();</div>
<div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;    }</div>
<div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;    {</div>
<div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;Update();</div>
<div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;    }</div>
<div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;</div>
<div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;    {</div>
<div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>())</div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;            packet=0;</div>
<div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;            packet = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;        <span class="keywordflow">if</span> (packet==0)</div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;</div>
<div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;<span class="comment">//      unsigned char msgId;</span></div>
<div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;        <span class="keywordflow">if</span> ( ( packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a> &gt;= <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) + <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> ) ) &amp;&amp;</div>
<div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;            ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a23b9fbbce91cff0da25035ed8fc0c0de">ID_TIMESTAMP</a> ) )</div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;        {</div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;            offset = <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> char);</div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac1dc88400a0218fd22ed94c0db10b06f" title="Adjust the timestamp of the incoming packet to be relative to this system.">ShiftIncomingTimestamp</a>( packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a> + offset, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> );</div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;<span class="comment">//          msgId=packet-&gt;data[sizeof(unsigned char) + sizeof( SLNet::Time )];</span></div>
<div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;        }</div>
<div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;<span class="comment">//      else</span></div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;    <span class="comment">//      msgId=packet-&gt;data[0];</span></div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;</div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;        <span class="comment">// Some locally generated packets need to be processed by plugins, for example ID_FCM2_NEW_HOST</span></div>
<div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;        <span class="comment">// The plugin itself should intercept these messages generated remotely</span></div>
<div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;<span class="comment">//      if (packet-&gt;wasGeneratedLocally)</span></div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;<span class="comment">//          return packet;</span></div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;</div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;</div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78343590e47d7f2ffddcd81cb72dcf0a">CallPluginCallbacks</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>, packet);</div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78343590e47d7f2ffddcd81cb72dcf0a">CallPluginCallbacks</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>, packet);</div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;</div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;        {</div>
<div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;            pluginResult=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[i]-&gt;OnReceive(packet);</div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;            <span class="keywordflow">if</span> (pluginResult==<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a9f27ed7ccb7513dceb7ed4da3d99a1bf" title="The plugin used this message and it shouldn&#39;t be given to the user.">RR_STOP_PROCESSING_AND_DEALLOCATE</a>)</div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;            {</div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af68f8d2766b45b6d951dfd62cf349a71" title="Call this to deallocate a message returned by Receive() when you are done handling it...">DeallocatePacket</a>( packet );</div>
<div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;                packet=0; <span class="comment">// Will do the loop again and get another packet</span></div>
<div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;                <span class="keywordflow">break</span>; <span class="comment">// break out of the enclosing for</span></div>
<div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;            }</div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pluginResult==<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a5d14ff7b19cc1a48c87f0d91ef3c8a56" title="The plugin is going to hold on to this message. Do not deallocate it but do not pass it to other plug...">RR_STOP_PROCESSING</a>)</div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;            {</div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;                packet=0;</div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;            }</div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;        }</div>
<div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;</div>
<div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;        {</div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;            pluginResult=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnReceive(packet);</div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;            <span class="keywordflow">if</span> (pluginResult==<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a9f27ed7ccb7513dceb7ed4da3d99a1bf" title="The plugin used this message and it shouldn&#39;t be given to the user.">RR_STOP_PROCESSING_AND_DEALLOCATE</a>)</div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;            {</div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af68f8d2766b45b6d951dfd62cf349a71" title="Call this to deallocate a message returned by Receive() when you are done handling it...">DeallocatePacket</a>( packet );</div>
<div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;                packet=0; <span class="comment">// Will do the loop again and get another packet</span></div>
<div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;                <span class="keywordflow">break</span>; <span class="comment">// break out of the enclosing for</span></div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;            }</div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pluginResult==<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a5d14ff7b19cc1a48c87f0d91ef3c8a56" title="The plugin is going to hold on to this message. Do not deallocate it but do not pass it to other plug...">RR_STOP_PROCESSING</a>)</div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;            {</div>
<div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;                packet=0;</div>
<div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;            }</div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;        }</div>
<div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;    </div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;    } <span class="keywordflow">while</span>(packet==0);</div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;</div>
<div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a> );</div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;    <span class="keywordflow">return</span> packet;</div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;}</div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;</div>
<div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;<span class="comment">// Call this to deallocate a packet returned by Receive</span></div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01610"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af68f8d2766b45b6d951dfd62cf349a71"> 1610</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af68f8d2766b45b6d951dfd62cf349a71" title="Call this to deallocate a message returned by Receive() when you are done handling it...">RakPeer::DeallocatePacket</a>( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet )</div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;{</div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;    <span class="keywordflow">if</span> ( packet == 0 )</div>
<div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;</div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;    <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af25d74f363b4fead30fbafc9ca21354a">deleteData</a>)</div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;    {</div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;        packet-&gt;~Packet();</div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae00518a3ba71591be2f83391b75bbcf3">packetAllocationPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#abd282ac19fb6b29ee31c7e11d3b6131d">Release</a>(packet,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a16b605c152761d7995fcc9585e2811ba">packetAllocationPoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;    }</div>
<div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;    {</div>
<div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(packet, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;    }</div>
<div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;}</div>
<div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;</div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;<span class="comment">// Return the total number of connections we are allowed</span></div>
<div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01633"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac61e5c0d7ffa3435dedb0b3ac1c2dc03"> 1633</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac61e5c0d7ffa3435dedb0b3ac1c2dc03" title="Return the total number of connections we are allowed.">RakPeer::GetMaximumNumberOfPeers</a>( <span class="keywordtype">void</span> )<span class="keyword"> const</span></div>
<div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>;</div>
<div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;}</div>
<div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;</div>
<div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;<span class="comment">// Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).</span></div>
<div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;<span class="comment">// target: Which connection to close</span></div>
<div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;<span class="comment">// sendDisconnectionNotification: True to send ID_DISCONNECTION_NOTIFICATION to the recipient. False to close it silently.</span></div>
<div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;<span class="comment">// channel: If blockDuration &gt; 0, the disconnect packet will be sent on this channel</span></div>
<div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01647"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408"> 1647</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408" title="Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).">RakPeer::CloseConnection</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> target, <span class="keywordtype">bool</span> sendDisconnectionNotification, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> orderingChannel, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> disconnectionNotificationPriority )</div>
<div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;{</div>
<div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;<span class="comment">    // This only be called from the user thread, for the user shutting down.</span></div>
<div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;<span class="comment">    // From the network thread, this should occur because of ID_DISCONNECTION_NOTIFICATION and ID_CONNECTION_LOST</span></div>
<div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;<span class="comment">    unsigned j;</span></div>
<div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;<span class="comment">    for (j=0; j &lt; messageHandlerList.Size(); j++)</span></div>
<div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;<span class="comment">        messageHandlerList[j]-&gt;OnClosedConnection(</span></div>
<div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;<span class="comment">            target.systemAddress==UNASSIGNED_SYSTEM_ADDRESS ? GetSystemAddressFromGuid(target.rakNetGuid) : target.systemAddress,</span></div>
<div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;<span class="comment">            target.rakNetGuid==UNASSIGNED_RAKNET_GUID ? GetGuidFromSystemAddress(target.systemAddress) : target.rakNetGuid,</span></div>
<div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;<span class="comment">            LCR_CLOSED_BY_USER);</span></div>
<div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;</div>
<div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac2555dbfa33331201626527858f7a8f9">CloseConnectionInternal</a>(target, sendDisconnectionNotification, <span class="keyword">false</span>, orderingChannel, disconnectionNotificationPriority);</div>
<div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;</div>
<div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;    <span class="comment">// 12/14/09 Return ID_CONNECTION_LOST when calling CloseConnection with sendDisconnectionNotification==false, elsewise it is never returned</span></div>
<div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;    <span class="keywordflow">if</span> (sendDisconnectionNotification==<span class="keyword">false</span> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8821f6606241767d716eda179402e8a6">GetConnectionState</a>(target)==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a042290df226826435b62d02f647281ff" title="Is connected and able to communicate.">IS_CONNECTED</a>)</div>
<div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;    {</div>
<div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a28dffd6d158f4003cb58fbe9b483a9a9">ID_CONNECTION_LOST</a>; <span class="comment">// DeadConnection</span></div>
<div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a> = target.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a> ? <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(target.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>) : target.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>;</div>
<div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = target.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> ? <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7b99f10bb48b76fcef310226c277870a" title="Gives the system address of a connected system, given its GUID. The GUID will be the same on all syst...">GetSystemAddressFromGuid</a>(target.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>) : target.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>;</div>
<div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>);</div>
<div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4a736945115119681c77e168346988c4">wasGeneratedLocally</a>=<span class="keyword">true</span>; <span class="comment">// else processed twice</span></div>
<div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;    }</div>
<div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;}</div>
<div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;</div>
<div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;<span class="comment">// Cancel a pending connection attempt</span></div>
<div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;<span class="comment">// If we are already connected, the connection stays open</span></div>
<div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;<span class="comment">// \param[in] target Which system to cancel</span></div>
<div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01683"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a01b140bb9e6a90a0c1867a5101131fd1"> 1683</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a01b140bb9e6a90a0c1867a5101131fd1" title="Cancel a pending connection attempt.">RakPeer::CancelConnectionAttempt</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )</div>
<div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;{</div>
<div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;</div>
<div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;    <span class="comment">// Cancel pending connection attempt, if there is one</span></div>
<div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;    i=0;</div>
<div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;    <span class="keywordflow">while</span> (i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;    {</div>
<div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i]-&gt;systemAddress==target)</div>
<div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;        {</div>
<div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;<span class="preprocessor"></span>            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Deleting requestedConnectionQueue %i client_handshake %x\n&quot;</span>, i, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[ i ]-&gt;client_handshake);</div>
<div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i]-&gt;client_handshake, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;<span class="preprocessor"></span>            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i], <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8be7c3107161bb2ad869a9a6bb60605a">RemoveAtIndex</a>(i);</div>
<div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;        }</div>
<div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;            i++;</div>
<div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;    }</div>
<div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;</div>
<div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;}</div>
<div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;</div>
<div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;</div>
<div class="line"><a name="l01711"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8821f6606241767d716eda179402e8a6"> 1711</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3" title="Returned from RakPeerInterface::GetConnectionState()">ConnectionState</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8821f6606241767d716eda179402e8a6">RakPeer::GetConnectionState</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier)</div>
<div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;{</div>
<div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;    {</div>
<div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;</div>
<div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;        <span class="keywordflow">for</span> (; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;        {</div>
<div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i]-&gt;systemAddress==systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>)</div>
<div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;            {</div>
<div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3ade1ebe4c73ad9f6fc83600fe0770f631" title="Connect() was called, but the process hasn&#39;t started yet.">IS_PENDING</a>;</div>
<div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;            }</div>
<div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;        }</div>
<div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;    }</div>
<div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;</div>
<div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;    <span class="keywordtype">int</span> index;</div>
<div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;    {</div>
<div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;        index = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;    }</div>
<div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;    {</div>
<div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;        index = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15ebde783ee7c1bf0cef25c3a1162ff6">GetIndexFromGuid</a>(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>);</div>
<div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;    }</div>
<div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;</div>
<div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;    <span class="keywordflow">if</span> (index==-1)</div>
<div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a859a36a07d28a19da799faf5a9fc9009" title="Was never connected, or else was disconnected long enough ago that the entry has been discarded...">IS_NOT_CONNECTED</a>;</div>
<div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;</div>
<div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].isActive==<span class="keyword">false</span>)</div>
<div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3ac574671c0e5fdb7722616611bcfa818d" title="No longer connected.">IS_DISCONNECTED</a>;</div>
<div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;</div>
<div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;    <span class="keywordflow">switch</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].connectMode)</div>
<div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;    {</div>
<div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04aea755206e361e47b9640808a977dc0d6">RemoteSystemStruct::DISCONNECT_ASAP</a>:</div>
<div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3af725910bbaabc055cdd1e80eedaa083b" title="Was connected, but will disconnect as soon as the remaining messages are delivered.">IS_DISCONNECTING</a>;</div>
<div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>:</div>
<div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3ab6bf0613f2209d5458122392d75475e2" title="A connection attempt failed and will be aborted.">IS_SILENTLY_DISCONNECTING</a>;</div>
<div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a84516385fdb35a2d6cb7602af2d6ccf4">RemoteSystemStruct::DISCONNECT_ON_NO_ACK</a>:</div>
<div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3af725910bbaabc055cdd1e80eedaa083b" title="Was connected, but will disconnect as soon as the remaining messages are delivered.">IS_DISCONNECTING</a>;</div>
<div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a>:</div>
<div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a0c73f37cdda88582ce33e77cffe05cfe" title="Processing the connection attempt.">IS_CONNECTING</a>;</div>
<div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a3655df1b4cee55eb3556bce5bc170584">RemoteSystemStruct::HANDLING_CONNECTION_REQUEST</a>:</div>
<div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a0c73f37cdda88582ce33e77cffe05cfe" title="Processing the connection attempt.">IS_CONNECTING</a>;</div>
<div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RemoteSystemStruct::UNVERIFIED_SENDER</a>:</div>
<div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a0c73f37cdda88582ce33e77cffe05cfe" title="Processing the connection attempt.">IS_CONNECTING</a>;</div>
<div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a>:</div>
<div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a042290df226826435b62d02f647281ff" title="Is connected and able to communicate.">IS_CONNECTED</a>;</div>
<div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a859a36a07d28a19da799faf5a9fc9009" title="Was never connected, or else was disconnected long enough ago that the entry has been discarded...">IS_NOT_CONNECTED</a>;</div>
<div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;    }</div>
<div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;}</div>
<div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;</div>
<div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;</div>
<div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;<span class="comment">// Given a systemAddress, returns an index from 0 to the maximum number of players allowed - 1.</span></div>
<div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;<span class="comment">// Parameters</span></div>
<div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;<span class="comment">// systemAddress - The systemAddress to search for</span></div>
<div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;<span class="comment">// Returns</span></div>
<div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;<span class="comment">// An integer from 0 to the maximum number of peers -1, or -1 if that player is not found</span></div>
<div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01776"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06"> 1776</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">RakPeer::GetIndexFromSystemAddress</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress )<span class="keyword"> const</span></div>
<div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>(systemAddress, <span class="keyword">false</span>);</div>
<div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;}</div>
<div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;</div>
<div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;<span class="comment">// This function is only useful for looping through all players.</span></div>
<div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;<span class="comment">// Parameters</span></div>
<div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;<span class="comment">// index - an integer between 0 and the maximum number of players allowed - 1.</span></div>
<div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;<span class="comment">// Returns</span></div>
<div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;<span class="comment">// A valid systemAddress or UNASSIGNED_SYSTEM_ADDRESS if no such player at that index</span></div>
<div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01791"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a726b3b4b3c09d900fbffd1167d7a8b8f"> 1791</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a726b3b4b3c09d900fbffd1167d7a8b8f" title="Given index into remoteSystemList, will return a SystemAddress. This function is only useful for loop...">RakPeer::GetSystemAddressFromIndex</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index )</div>
<div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;{</div>
<div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;    <span class="comment">// remoteSystemList in user thread</span></div>
<div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;    <span class="comment">//if ( index &gt;= 0 &amp;&amp; index &lt; remoteSystemListSize )</span></div>
<div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;    <span class="keywordflow">if</span> ( index &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> )</div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].isActive &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].connectMode==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RakPeer::RemoteSystemStruct::CONNECTED</a>) <span class="comment">// Don&#39;t give the user players that aren&#39;t fully connected, since sends will fail</span></div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>;</div>
<div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;</div>
<div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;}</div>
<div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;</div>
<div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;<span class="comment">// Same as GetSystemAddressFromIndex but returns RakNetGUID</span></div>
<div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;<span class="comment">// \param[in] index Index should range between 0 and the maximum number of players allowed - 1.</span></div>
<div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;<span class="comment">// \return The RakNetGUID</span></div>
<div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01807"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af1d76768ee4dbd4dbb310871293e7386"> 1807</a></span>&#160;<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af1d76768ee4dbd4dbb310871293e7386" title="Same as GetSystemAddressFromIndex but returns RakNetGUID.">RakPeer::GetGUIDFromIndex</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index )</div>
<div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;{</div>
<div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;    <span class="comment">// remoteSystemList in user thread</span></div>
<div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;    <span class="comment">//if ( index &gt;= 0 &amp;&amp; index &lt; remoteSystemListSize )</span></div>
<div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;    <span class="keywordflow">if</span> ( index &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> )</div>
<div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].isActive &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].connectMode==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RakPeer::RemoteSystemStruct::CONNECTED</a>) <span class="comment">// Don&#39;t give the user players that aren&#39;t fully connected, since sends will fail</span></div>
<div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;</div>
<div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;}</div>
<div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;</div>
<div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;<span class="comment">// Same as calling GetSystemAddressFromIndex and GetGUIDFromIndex for all systems, but more efficient</span></div>
<div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;<span class="comment">// Indices match each other, so \a addresses[0] and \a guids[0] refer to the same system</span></div>
<div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;<span class="comment">// \param[out] addresses All system addresses. Size of the list is the number of connections. Size of the list will match the size of the \a guids list.</span></div>
<div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;<span class="comment">// \param[out] guids All guids. Size of the list is the number of connections. Size of the list will match the size of the \a addresses list.</span></div>
<div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01824"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af98b973b0e2c2f2a2342f7c76bca5bd4"> 1824</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af98b973b0e2c2f2a2342f7c76bca5bd4" title="Same as calling GetSystemAddressFromIndex and GetGUIDFromIndex for all systems, but more efficient In...">RakPeer::GetSystemList</a>(<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;SystemAddress&gt;</a> &amp;addresses, <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetGUID&gt;</a> &amp;guids)<span class="keyword"> const</span></div>
<div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;    addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;    guids.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;</div>
<div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;</div>
<div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a>; i++)</div>
<div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;    {</div>
<div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;        <span class="keywordflow">if</span> ((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;isActive &amp;&amp;</div>
<div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;            (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;connectMode==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RakPeer::RemoteSystemStruct::CONNECTED</a>)</div>
<div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;        {</div>
<div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;            addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;systemAddress, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;            guids.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;guid, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;        }</div>
<div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;    }</div>
<div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;}</div>
<div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;</div>
<div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;<span class="comment">// Bans an IP from connecting. Banned IPs persist between connections.</span></div>
<div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;<span class="comment">// Parameters</span></div>
<div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;<span class="comment">// IP - Dotted IP address.  Can use * as a wildcard, such as 128.0.0.* will ban</span></div>
<div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;<span class="comment">// All IP addresses starting with 128.0.0</span></div>
<div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;<span class="comment">// milliseconds - how many ms for a temporary ban.  Use 0 for a permanent ban</span></div>
<div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01853"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0df3df6ab4e04ae2ef0696670d7f776"> 1853</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0df3df6ab4e04ae2ef0696670d7f776" title="Bans an IP from connecting.">RakPeer::AddToBanList</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *IP, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> milliseconds )</div>
<div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;{</div>
<div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;    <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;</div>
<div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;    <span class="keywordflow">if</span> ( IP == 0 || IP[ 0 ] == 0 || strlen( IP ) &gt; 15 )</div>
<div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9717e7bbecb906637e86cef6da3d83c2">return</a> ;</div>
<div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;</div>
<div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;    <span class="comment">// If this guy is already in the ban list, do nothing</span></div>
<div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;    index = 0;</div>
<div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;</div>
<div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;</div>
<div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;    <span class="keywordflow">for</span> ( ; index &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); index++ )</div>
<div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;    {</div>
<div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;        <span class="keywordflow">if</span> ( strcmp( IP, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ]-&gt;IP ) == 0 )</div>
<div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;        {</div>
<div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;            <span class="comment">// Already in the ban list.  Just update the time</span></div>
<div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;            <span class="keywordflow">if</span> (milliseconds==0)</div>
<div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ]-&gt;timeout=0; <span class="comment">// Infinite</span></div>
<div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ]-&gt;timeout=time+milliseconds;</div>
<div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;        }</div>
<div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;    }</div>
<div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;</div>
<div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;</div>
<div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#d1/dba/struct_s_l_net_1_1_rak_peer_1_1_ban_struct">BanStruct</a> *banStruct = SLNet::OP_NEW&lt;BanStruct&gt;( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;    banStruct-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a457bbddaa4e1242a971e9c27ee1ec5bd">IP</a> = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( 16, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;    <span class="keywordflow">if</span> (milliseconds==0)</div>
<div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;        banStruct-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac73afa44fac45c765f462c3e38dd3f7e">timeout</a>=0; <span class="comment">// Infinite</span></div>
<div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;        banStruct-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac73afa44fac45c765f462c3e38dd3f7e">timeout</a>=time+milliseconds;</div>
<div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;    strcpy_s( banStruct-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a457bbddaa4e1242a971e9c27ee1ec5bd">IP</a>, 16, IP );</div>
<div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a5cb7d8b68d8d020a34f2186ea8d5b1c6" title="Insert an element at position position in the list.">Insert</a>( banStruct, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;}</div>
<div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;</div>
<div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;<span class="comment">// Allows a previously banned IP to connect.</span></div>
<div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;<span class="comment">// Parameters</span></div>
<div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;<span class="comment">// IP - Dotted IP address.  Can use * as a wildcard, such as 128.0.0.* will ban</span></div>
<div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;<span class="comment">// All IP addresses starting with 128.0.0</span></div>
<div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01902"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad046c7809b8889ba708bc20881845e4d"> 1902</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad046c7809b8889ba708bc20881845e4d" title="Allows a previously banned IP to connect. param[in] Dotted IP address. You can use * as a wildcard...">RakPeer::RemoveFromBanList</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *IP )</div>
<div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;{</div>
<div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;    <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#d1/dba/struct_s_l_net_1_1_rak_peer_1_1_ban_struct">BanStruct</a> *temp;</div>
<div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;</div>
<div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;    <span class="keywordflow">if</span> ( IP == 0 || IP[ 0 ] == 0 || strlen( IP ) &gt; 15 )</div>
<div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9717e7bbecb906637e86cef6da3d83c2">return</a> ;</div>
<div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;</div>
<div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;    index = 0;</div>
<div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;    temp=0;</div>
<div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;</div>
<div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;</div>
<div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;    <span class="keywordflow">for</span> ( ; index &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); index++ )</div>
<div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;    {</div>
<div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;        <span class="keywordflow">if</span> ( strcmp( IP, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ]-&gt;IP ) == 0 )</div>
<div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;        {</div>
<div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;            temp = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ];</div>
<div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ] = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() - 1 ];</div>
<div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a79621376e92b605c4dbdb77aafbb6b60" title="Delete the element at position position.">RemoveAtIndex</a>( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() - 1 );</div>
<div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;        }</div>
<div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;    }</div>
<div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;</div>
<div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;</div>
<div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    <span class="keywordflow">if</span> (temp)</div>
<div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;    {</div>
<div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(temp-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a457bbddaa4e1242a971e9c27ee1ec5bd">IP</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(temp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;    }</div>
<div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;</div>
<div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;}</div>
<div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;</div>
<div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;<span class="comment">// Allows all previously banned IPs to connect.</span></div>
<div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01940"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d0f94bb0bf24d4bbe1df80b1f3bce9d"> 1940</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d0f94bb0bf24d4bbe1df80b1f3bce9d" title="Allows all previously banned IPs to connect.">RakPeer::ClearBanList</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;{</div>
<div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;    <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;    index = 0;</div>
<div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;</div>
<div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;    <span class="keywordflow">for</span> ( ; index &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); index++ )</div>
<div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;    {</div>
<div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ]-&gt;IP, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ index ], <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;    }</div>
<div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;</div>
<div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;</div>
<div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;}</div>
<div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01957"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7aa96b5a724a9cfb9b4c53e84ccdce04"> 1957</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7aa96b5a724a9cfb9b4c53e84ccdce04" title="Enable or disable allowing frequent connections from the same IP adderss.">RakPeer::SetLimitIPConnectionFrequency</a>(<span class="keywordtype">bool</span> b)</div>
<div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;{</div>
<div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2b117b10a74d64638237f30028f5636b">limitConnectionFrequencyFromTheSameIP</a>=b;</div>
<div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;}</div>
<div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;</div>
<div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;<span class="comment">// Determines if a particular IP is banned.</span></div>
<div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;<span class="comment">// Parameters</span></div>
<div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;<span class="comment">// IP - Complete dotted IP address</span></div>
<div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;<span class="comment">// Returns</span></div>
<div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;<span class="comment">// True if IP matches any IPs in the ban list, accounting for any wildcards.</span></div>
<div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;<span class="comment">// False otherwise.</span></div>
<div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l01973"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae1ad09ea9ca5ea8bd4a00f78e22a5abc"> 1973</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae1ad09ea9ca5ea8bd4a00f78e22a5abc" title="Returns true or false indicating if a particular IP is banned.">RakPeer::IsBanned</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *IP )</div>
<div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;{</div>
<div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;    <span class="keywordtype">unsigned</span> banListIndex, characterIndex;</div>
<div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time;</div>
<div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#d1/dba/struct_s_l_net_1_1_rak_peer_1_1_ban_struct">BanStruct</a> *temp;</div>
<div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;</div>
<div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;    <span class="keywordflow">if</span> ( IP == 0 || IP[ 0 ] == 0 || strlen( IP ) &gt; 15 )</div>
<div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;</div>
<div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;    banListIndex = 0;</div>
<div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;</div>
<div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() == 0 )</div>
<div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// Skip the mutex if possible</span></div>
<div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;</div>
<div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;    time = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;</div>
<div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;</div>
<div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;    <span class="keywordflow">while</span> ( banListIndex &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() )</div>
<div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;    {</div>
<div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ]-&gt;timeout&gt;0 &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ]-&gt;timeout&lt;time)</div>
<div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;        {</div>
<div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;            <span class="comment">// Delete expired ban</span></div>
<div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;            temp = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ];</div>
<div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ] = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() - 1 ];</div>
<div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a79621376e92b605c4dbdb77aafbb6b60" title="Delete the element at position position.">RemoveAtIndex</a>( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>() - 1 );</div>
<div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(temp-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a457bbddaa4e1242a971e9c27ee1ec5bd">IP</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(temp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;        }</div>
<div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;        {</div>
<div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;            characterIndex = 0;</div>
<div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;</div>
<div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;            <span class="keywordflow">for</span>(;;)</div>
<div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;            {</div>
<div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ]-&gt;IP[ characterIndex ] == IP[ characterIndex ] )</div>
<div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;                {</div>
<div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;                    <span class="comment">// Equal characters</span></div>
<div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;</div>
<div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;                    <span class="keywordflow">if</span> ( IP[ characterIndex ] == 0 )</div>
<div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;                    {</div>
<div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;                        <span class="comment">// End of the string and the strings match</span></div>
<div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;</div>
<div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;                    }</div>
<div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;</div>
<div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;                    characterIndex++;</div>
<div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;                }</div>
<div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;</div>
<div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;                {</div>
<div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;                    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ]-&gt;IP[ characterIndex ] == 0 || IP[ characterIndex ] == 0 )</div>
<div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;                    {</div>
<div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;                        <span class="comment">// End of one of the strings</span></div>
<div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;                    }</div>
<div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;</div>
<div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;                    <span class="comment">// Characters do not match</span></div>
<div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;                    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6f0a5511a4c012eab279add04cbed905">banList</a>[ banListIndex ]-&gt;IP[ characterIndex ] == <span class="charliteral">&#39;*&#39;</span> )</div>
<div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;                    {</div>
<div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;</div>
<div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;                        <span class="comment">// Domain is banned.</span></div>
<div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;                    }</div>
<div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;</div>
<div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;                    <span class="comment">// Characters do not match and it is not a *</span></div>
<div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;                }</div>
<div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;            }</div>
<div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;</div>
<div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;            banListIndex++;</div>
<div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;        }</div>
<div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;    }</div>
<div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;</div>
<div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a49f202f77b2cac1000dd9172f2489b9d">banListMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;</div>
<div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;    <span class="comment">// No match found.</span></div>
<div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;}</div>
<div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;</div>
<div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;<span class="comment">// Send a ping to the specified connected system.</span></div>
<div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;<span class="comment">// target - who to ping</span></div>
<div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02062"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a171a26ffc686c3666b169e8972d8e282"> 2062</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a171a26ffc686c3666b169e8972d8e282">RakPeer::Ping</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )</div>
<div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;{</div>
<div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4">PingInternal</a>(target, <span class="keyword">false</span>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaeb409c363ddaeb3201fd95e9bee56696" title="Same as regular UDP, except that it will also discard duplicate datagrams. RakNet adds (6 to 17) + 21...">UNRELIABLE</a>);</div>
<div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;}</div>
<div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;</div>
<div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;<span class="comment">// Send a ping to the specified unconnected system.</span></div>
<div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;<span class="comment">// The remote system, if it is Initialized, will respond with ID_UNCONNECTED_PONG.</span></div>
<div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;<span class="comment">// The final ping time will be encoded in the following sizeof(SLNet::TimeMS) bytes.  (Default is 4 bytes - See __GET_TIME_64BIT in types.h</span></div>
<div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;<span class="comment">// host: Either a dotted IP address or a domain name.  Can be 255.255.255.255 for LAN broadcast.</span></div>
<div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;<span class="comment">// remotePort: Which port to connect to on the remote machine.</span></div>
<div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;<span class="comment">// onlyReplyOnAcceptingConnections: Only request a reply if the remote system has open connections</span></div>
<div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;<span class="comment">// connectionSocketIndex Index into the array of socket descriptors passed to socketDescriptors in RakPeer::Startup() to send on.</span></div>
<div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02079"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3e1cda7f2e6b523902b6db6c88ca4e38"> 2079</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a171a26ffc686c3666b169e8972d8e282">RakPeer::Ping</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keywordtype">bool</span> onlyReplyOnAcceptingConnections, <span class="keywordtype">unsigned</span> connectionSocketIndex )</div>
<div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;{</div>
<div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;    <span class="keywordflow">if</span> ( host == 0 )</div>
<div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;</div>
<div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;    <span class="comment">// If this assert hits then Startup wasn&#39;t called or the call failed.</span></div>
<div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(connectionSocketIndex &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>());</div>
<div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;</div>
<div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;<span class="comment">//  if ( IsActive() == false )</span></div>
<div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;<span class="comment">//      return;</span></div>
<div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;</div>
<div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream( <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) + <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>) );</div>
<div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;    <span class="keywordflow">if</span> ( onlyReplyOnAcceptingConnections )</div>
<div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;        bitStream.Write((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ab23ee9b2a028105bfc3a04eace1489e5" title="Ping from an unconnected system. Only reply if we have open connections. Do not update timestamps...">ID_UNCONNECTED_PING_OPEN_CONNECTIONS</a>);</div>
<div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;        bitStream.Write((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3af8d9c3e67846d45db51a9968f478eb7b" title="Ping from an unconnected system. Reply but do not update timestamps. (internal use only)...">ID_UNCONNECTED_PING</a>);</div>
<div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;</div>
<div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;    bitStream.Write(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>());</div>
<div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;</div>
<div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;    bitStream.WriteAlignedBytes((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;</div>
<div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;    bitStream.Write(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281770049b45767b4c6172a9b1d8a23a" title="Return my own GUID.">GetMyGUID</a>());</div>
<div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;</div>
<div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;    <span class="comment">// No timestamp for 255.255.255.255</span></div>
<div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> realIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae666a545bcac66fc454c2368b7696b64">GetRakNetSocketFromUserConnectionSocketIndex</a>(connectionSocketIndex);</div>
<div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l02105"></a><span class="lineno"> 2105</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02106"></a><span class="lineno"> 2106</span>&#160;<span class="comment">    SystemAddress systemAddress;</span></div>
<div class="line"><a name="l02107"></a><span class="lineno"> 2107</span>&#160;<span class="comment">    systemAddress.FromStringExplicitPort(host,remotePort, socketList[realIndex]-&gt;GetBoundAddress().GetIPVersion());</span></div>
<div class="line"><a name="l02108"></a><span class="lineno"> 2108</span>&#160;<span class="comment">    systemAddress.FixForIPVersion(socketList[realIndex]-&gt;GetBoundAddress());</span></div>
<div class="line"><a name="l02109"></a><span class="lineno"> 2109</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02110"></a><span class="lineno"> 2110</span>&#160;<span class="comment">    unsigned i;</span></div>
<div class="line"><a name="l02111"></a><span class="lineno"> 2111</span>&#160;<span class="comment">    for (i=0; i &lt; pluginListNTS.Size(); i++)</span></div>
<div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;<span class="comment">        pluginListNTS[i]-&gt;OnDirectSocketSend((const char*)bitStream.GetData(), bitStream.GetNumberOfBitsUsed(), systemAddress);</span></div>
<div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;<span class="comment">    SocketLayer::SendTo( socketList[realIndex], (const char*)bitStream.GetData(), (int) bitStream.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;</div>
<div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;    <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bitStream.GetData() ;</div>
<div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bitStream.GetNumberOfBytesUsed();</div>
<div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">FromStringExplicitPort</a>(host,remotePort, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;GetBoundAddress().GetIPVersion());</div>
<div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;    <span class="keywordflow">if</span> (bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">FixForIPVersion</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;GetBoundAddress());</div>
<div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*)bitStream.GetData(), bitStream.GetNumberOfBitsUsed(), bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>);</div>
<div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;Send(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;</div>
<div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;}</div>
<div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;</div>
<div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;<span class="comment">// Returns the average of all ping times read for a specified target</span></div>
<div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;<span class="comment">// target - whose time to read</span></div>
<div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02138"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad49c1931b10fdc0ba3ae73305b9fd5c4"> 2138</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad49c1931b10fdc0ba3ae73305b9fd5c4" title="Returns the average of all ping times read for the specific system or -1 if none read yet...">RakPeer::GetAveragePing</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier )</div>
<div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;{</div>
<div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;    <span class="keywordtype">int</span> sum, quantity;</div>
<div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>( systemIdentifier, <span class="keyword">false</span>, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;</div>
<div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem == 0 )</div>
<div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;</div>
<div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;    <span class="keywordflow">for</span> ( sum = 0, quantity = 0; quantity &lt; <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7f327e4ef01ce07159269c3bb6bd98f9">PING_TIMES_ARRAY_SIZE</a>; quantity++ )</div>
<div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;    {</div>
<div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;        <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ quantity ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a> == 65535 )</div>
<div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;            sum += remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ quantity ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a>;</div>
<div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;    }</div>
<div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;</div>
<div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;    <span class="keywordflow">if</span> ( quantity &gt; 0 )</div>
<div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;        <span class="keywordflow">return</span> sum / quantity;</div>
<div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l02158"></a><span class="lineno"> 2158</span>&#160;}</div>
<div class="line"><a name="l02159"></a><span class="lineno"> 2159</span>&#160;</div>
<div class="line"><a name="l02160"></a><span class="lineno"> 2160</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02161"></a><span class="lineno"> 2161</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02162"></a><span class="lineno"> 2162</span>&#160;<span class="comment">// Returns the last ping time read for the specific player or -1 if none read yet</span></div>
<div class="line"><a name="l02163"></a><span class="lineno"> 2163</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02164"></a><span class="lineno"> 2164</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;<span class="comment">// target - whose time to read</span></div>
<div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02167"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#accd128e02e2b699f286d23ec3c7b0d67"> 2167</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#accd128e02e2b699f286d23ec3c7b0d67" title="Returns the last ping time read for the specific system or -1 if none read yet.">RakPeer::GetLastPing</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier )<span class="keyword"> const</span></div>
<div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>( systemIdentifier, <span class="keyword">false</span>, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;</div>
<div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem == 0 )</div>
<div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;</div>
<div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;<span class="comment">//  return (int)(remoteSystem-&gt;reliabilityLayer.GetAckPing()/(SLNet::TimeUS)1000);</span></div>
<div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;</div>
<div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> == 0 )</div>
<div class="line"><a name="l02177"></a><span class="lineno"> 2177</span>&#160;        <span class="keywordflow">return</span> remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7f327e4ef01ce07159269c3bb6bd98f9">PING_TIMES_ARRAY_SIZE</a> - 1 ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a>;</div>
<div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;        <span class="keywordflow">return</span> remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> - 1 ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a>;</div>
<div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;}</div>
<div class="line"><a name="l02181"></a><span class="lineno"> 2181</span>&#160;</div>
<div class="line"><a name="l02182"></a><span class="lineno"> 2182</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02183"></a><span class="lineno"> 2183</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;<span class="comment">// Returns the lowest ping time read or -1 if none read yet</span></div>
<div class="line"><a name="l02185"></a><span class="lineno"> 2185</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;<span class="comment">// target - whose time to read</span></div>
<div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02189"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acd7b8388fccf81c93fa96a48aac9283a"> 2189</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acd7b8388fccf81c93fa96a48aac9283a" title="Returns the lowest ping time read or -1 if none read yet.">RakPeer::GetLowestPing</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier )<span class="keyword"> const</span></div>
<div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>( systemIdentifier, <span class="keyword">false</span>, <span class="keyword">false</span> );</div>
<div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;</div>
<div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem == 0 )</div>
<div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;</div>
<div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;    <span class="keywordflow">return</span> remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a05de1f27b328bbedba18cfb7047a3e85" title="The index we are writing into the pingAndClockDifferential circular buffer.">lowestPing</a>;</div>
<div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;}</div>
<div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;</div>
<div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;<span class="comment">// Ping the remote systems every so often.  This is off by default</span></div>
<div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;<span class="comment">// This will work anytime</span></div>
<div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;<span class="comment">// doPing - True to start occasional pings.  False to stop them.</span></div>
<div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02207"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8324e15260b26b92abb204ed9f04ff57"> 2207</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8324e15260b26b92abb204ed9f04ff57">RakPeer::SetOccasionalPing</a>( <span class="keywordtype">bool</span> doPing )</div>
<div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;{</div>
<div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9227638ba973ad04c4ca82db116f245e">occasionalPing</a> = doPing;</div>
<div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;}</div>
<div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;</div>
<div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;<span class="comment"></span><span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02217"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225049eccf0747f78fa0544977e18045"> 2217</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225049eccf0747f78fa0544977e18045">RakPeer::GetClockDifferential</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier )</div>
<div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;{</div>
<div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>(systemIdentifier, <span class="keyword">false</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;    <span class="keywordflow">if</span> (remoteSystem == 0)</div>
<div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeabaee7ed9e1ab93188ebd2e2eecd9b2">GetClockDifferentialInt</a>(remoteSystem);</div>
<div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;}</div>
<div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;</div>
<div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;</div>
<div class="line"><a name="l02227"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeabaee7ed9e1ab93188ebd2e2eecd9b2"> 2227</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeabaee7ed9e1ab93188ebd2e2eecd9b2">RakPeer::GetClockDifferentialInt</a>(<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *remoteSystem)<span class="keyword"> const</span></div>
<div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160;    <span class="keywordtype">int</span> counter, lowestPingSoFar;</div>
<div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> clockDifferential;</div>
<div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;</div>
<div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;    lowestPingSoFar = 65535;</div>
<div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;</div>
<div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;    clockDifferential = 0;</div>
<div class="line"><a name="l02235"></a><span class="lineno"> 2235</span>&#160;</div>
<div class="line"><a name="l02236"></a><span class="lineno"> 2236</span>&#160;    <span class="keywordflow">for</span> ( counter = 0; counter &lt; <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7f327e4ef01ce07159269c3bb6bd98f9">PING_TIMES_ARRAY_SIZE</a>; counter++ )</div>
<div class="line"><a name="l02237"></a><span class="lineno"> 2237</span>&#160;    {</div>
<div class="line"><a name="l02238"></a><span class="lineno"> 2238</span>&#160;        <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ counter ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a> == 65535 )</div>
<div class="line"><a name="l02239"></a><span class="lineno"> 2239</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;</div>
<div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;        <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ counter ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a> &lt; lowestPingSoFar )</div>
<div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160;        {</div>
<div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;            clockDifferential = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ counter ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a859a7b3b3d523f63f0d6e22a90d7689c">clockDifferential</a>;</div>
<div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;            lowestPingSoFar = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ counter ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a>;</div>
<div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;        }</div>
<div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;    }</div>
<div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;</div>
<div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;    <span class="keywordflow">return</span> clockDifferential;</div>
<div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;}</div>
<div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;<span class="comment">// Length should be under 400 bytes, as a security measure against flood attacks</span></div>
<div class="line"><a name="l02253"></a><span class="lineno"> 2253</span>&#160;<span class="comment">// Sets the data to send with an  (LAN server discovery) /(offline ping) response</span></div>
<div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;<span class="comment">// See the Ping sample project for how this is used.</span></div>
<div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;<span class="comment">// data: a block of data to store, or 0 for none</span></div>
<div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;<span class="comment">// length: The length of data in bytes, or 0 for none</span></div>
<div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02258"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7d7601d2d7114c454829c655dc9e79c7"> 2258</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7d7601d2d7114c454829c655dc9e79c7" title="Sets the data to send along with a LAN server discovery or offline ping reply.">RakPeer::SetOfflinePingResponse</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length )</div>
<div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;{</div>
<div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(length &lt; 400);</div>
<div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160;</div>
<div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5a66379254e38be2e78e0f91c21b2fd3">rakPeerMutexes</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adc1e5ededdda725b7576fe10877a71d1a2e5687c22683dedb14e873cc208a1146">offlinePingResponse_Mutex</a> ].<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4ab41936219c8afc364f77533fccc4bb">offlinePingResponse</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aab4381d8b4a48dbc8e2975dba894f350" title="Resets the bitstream for reuse.">Reset</a>();</div>
<div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;</div>
<div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;    <span class="keywordflow">if</span> ( data &amp;&amp; length &gt; 0 )</div>
<div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4ab41936219c8afc364f77533fccc4bb">offlinePingResponse</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>( data, length );</div>
<div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;</div>
<div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5a66379254e38be2e78e0f91c21b2fd3">rakPeerMutexes</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adc1e5ededdda725b7576fe10877a71d1a2e5687c22683dedb14e873cc208a1146">offlinePingResponse_Mutex</a> ].<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;}</div>
<div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;</div>
<div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;<span class="comment">// Returns pointers to a copy of the data passed to SetOfflinePingResponse</span></div>
<div class="line"><a name="l02273"></a><span class="lineno"> 2273</span>&#160;<span class="comment">// \param[out] data A pointer to a copy of the data passed to \a SetOfflinePingResponse()</span></div>
<div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;<span class="comment">// \param[out] length A pointer filled in with the length parameter passed to SetOfflinePingResponse()</span></div>
<div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;<span class="comment">// \sa SetOfflinePingResponse</span></div>
<div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02277"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a185506c10394d76dfe9bbc8b7dfd7613"> 2277</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a185506c10394d76dfe9bbc8b7dfd7613" title="Returns pointers to a copy of the data passed to SetOfflinePingResponse.">RakPeer::GetOfflinePingResponse</a>( <span class="keywordtype">char</span> **data, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *length )</div>
<div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;{</div>
<div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5a66379254e38be2e78e0f91c21b2fd3">rakPeerMutexes</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adc1e5ededdda725b7576fe10877a71d1a2e5687c22683dedb14e873cc208a1146">offlinePingResponse_Mutex</a> ].<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l02280"></a><span class="lineno"> 2280</span>&#160;    *data = (<span class="keywordtype">char</span>*) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4ab41936219c8afc364f77533fccc4bb">offlinePingResponse</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;    *length = (int) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4ab41936219c8afc364f77533fccc4bb">offlinePingResponse</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5a66379254e38be2e78e0f91c21b2fd3">rakPeerMutexes</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adc1e5ededdda725b7576fe10877a71d1a2e5687c22683dedb14e873cc208a1146">offlinePingResponse_Mutex</a> ].<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;}</div>
<div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;</div>
<div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02286"></a><span class="lineno"> 2286</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;<span class="comment">// Return the unique SystemAddress that represents you on the the network</span></div>
<div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160;<span class="comment">// Note that unlike in previous versions, this is a struct and is not sequential</span></div>
<div class="line"><a name="l02289"></a><span class="lineno"> 2289</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02290"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3bd1460173bdc15fcca80d75ba2e9305"> 2290</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3bd1460173bdc15fcca80d75ba2e9305" title="Returns the unique address identifier that represents you or another system on the the network...">RakPeer::GetInternalID</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keyword">const</span> <span class="keywordtype">int</span> index )<span class="keyword"> const</span></div>
<div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;    <span class="keywordflow">if</span> (systemAddress==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02293"></a><span class="lineno"> 2293</span>&#160;    {</div>
<div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[index];</div>
<div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;    }</div>
<div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;    {</div>
<div class="line"><a name="l02298"></a><span class="lineno"> 2298</span>&#160;</div>
<div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;<span class="comment">//      SystemAddress returnValue;</span></div>
<div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( systemAddress, <span class="keyword">false</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l02301"></a><span class="lineno"> 2301</span>&#160;        <span class="keywordflow">if</span> (remoteSystem==0)</div>
<div class="line"><a name="l02302"></a><span class="lineno"> 2302</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;</div>
<div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;        <span class="keywordflow">return</span> remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#af3530552a11b91df0229023fe7f28974" title="Your external IP on the internet, from their perspective.">theirInternalSystemAddress</a>[index];</div>
<div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;<span class="comment">        sockaddr_in sa;</span></div>
<div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160;<span class="comment">        socklen_t len = sizeof(sa);</span></div>
<div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;<span class="comment">        if (getsockname__(connectionSockets[remoteSystem-&gt;connectionSocketIndex], (sockaddr*)&amp;sa, &amp;len)!=0)</span></div>
<div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;<span class="comment">            return UNASSIGNED_SYSTEM_ADDRESS;</span></div>
<div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;<span class="comment">        returnValue.port=ntohs(sa.sin_port);</span></div>
<div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;<span class="comment">        returnValue.binaryAddress=sa.sin_addr.s_addr;</span></div>
<div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;<span class="comment">        return returnValue;</span></div>
<div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;</div>
<div class="line"><a name="l02315"></a><span class="lineno"> 2315</span>&#160;</div>
<div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160;</div>
<div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;    }</div>
<div class="line"><a name="l02318"></a><span class="lineno"> 2318</span>&#160;}</div>
<div class="line"><a name="l02319"></a><span class="lineno"> 2319</span>&#160;</div>
<div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;<span class="comment"></span><span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02325"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0286c12b2815b3f5a2bb1255cc5880df"> 2325</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0286c12b2815b3f5a2bb1255cc5880df" title="Sets your internal IP address, for platforms that do not support reading it, or to override a value...">RakPeer::SetInternalID</a>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keywordtype">int</span> index)</div>
<div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;{</div>
<div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(index &gt;=0 &amp;&amp; index &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>);</div>
<div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[index]=systemAddress;</div>
<div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;}</div>
<div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160;</div>
<div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160;<span class="comment">// Return the unique address identifier that represents you on the the network and is based on your external</span></div>
<div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;<span class="comment">// IP / port (the IP / port the specified player uses to communicate with you)</span></div>
<div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;<span class="comment">// Note that unlike in previous versions, this is a struct and is not sequential</span></div>
<div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;<span class="comment">// target: Which remote system you are referring to for your external ID</span></div>
<div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02340"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5379dcb1bad21a633b9c52b165a1ef59"> 2340</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5379dcb1bad21a633b9c52b165a1ef59" title="Returns the unique address identifier that represents the target on the the network and is based on t...">RakPeer::GetExternalID</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )<span class="keyword"> const</span></div>
<div class="line"><a name="l02341"></a><span class="lineno"> 2341</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02342"></a><span class="lineno"> 2342</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l02343"></a><span class="lineno"> 2343</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> inactiveExternalId;</div>
<div class="line"><a name="l02344"></a><span class="lineno"> 2344</span>&#160;</div>
<div class="line"><a name="l02345"></a><span class="lineno"> 2345</span>&#160;    inactiveExternalId=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160;</div>
<div class="line"><a name="l02347"></a><span class="lineno"> 2347</span>&#160;    <span class="keywordflow">if</span> (target==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02348"></a><span class="lineno"> 2348</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>;</div>
<div class="line"><a name="l02349"></a><span class="lineno"> 2349</span>&#160;</div>
<div class="line"><a name="l02350"></a><span class="lineno"> 2350</span>&#160;    <span class="comment">// First check for active connection with this systemAddress</span></div>
<div class="line"><a name="l02351"></a><span class="lineno"> 2351</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;    {</div>
<div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress == target )</div>
<div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;        {</div>
<div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive )</div>
<div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a8907915e3ad157baf1609efc43801ba7" title="Their external IP on the internet.">myExternalSystemAddress</a>;</div>
<div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].myExternalSystemAddress!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;                inactiveExternalId=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a8907915e3ad157baf1609efc43801ba7" title="Their external IP on the internet.">myExternalSystemAddress</a>;</div>
<div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;        }</div>
<div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;    }</div>
<div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;</div>
<div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;    <span class="keywordflow">return</span> inactiveExternalId;</div>
<div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;}</div>
<div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;</div>
<div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;</div>
<div class="line"><a name="l02367"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281770049b45767b4c6172a9b1d8a23a"> 2367</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281770049b45767b4c6172a9b1d8a23a" title="Return my own GUID.">RakPeer::GetMyGUID</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l02368"></a><span class="lineno"> 2368</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02369"></a><span class="lineno"> 2369</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>;</div>
<div class="line"><a name="l02370"></a><span class="lineno"> 2370</span>&#160;}</div>
<div class="line"><a name="l02371"></a><span class="lineno"> 2371</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02372"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7c253eb56fb637ad25bb09fb65fc66f"> 2372</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7c253eb56fb637ad25bb09fb65fc66f" title="Return the address bound to a socket at the specified index.">RakPeer::GetMyBoundAddress</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> socketIndex)</div>
<div class="line"><a name="l02373"></a><span class="lineno"> 2373</span>&#160;{</div>
<div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetSocket2* &gt;</a> sockets;</div>
<div class="line"><a name="l02375"></a><span class="lineno"> 2375</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8b456c00664ff71b0e8620376462c004" title="Gets all sockets in use.">GetSockets</a>( sockets );</div>
<div class="line"><a name="l02376"></a><span class="lineno"> 2376</span>&#160;    <span class="keywordflow">if</span> (sockets.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()&gt;0)</div>
<div class="line"><a name="l02377"></a><span class="lineno"> 2377</span>&#160;        <span class="keywordflow">return</span> sockets[socketIndex]-&gt;GetBoundAddress();</div>
<div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;}</div>
<div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;</div>
<div class="line"><a name="l02383"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d"> 2383</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">RakPeer::GetGuidFromSystemAddress</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> input )<span class="keyword"> const</span></div>
<div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;    <span class="keywordflow">if</span> (input==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>;</div>
<div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;</div>
<div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;    <span class="keywordflow">if</span> (input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>!=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1 &amp;&amp; input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>&lt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a> == input)</div>
<div class="line"><a name="l02389"></a><span class="lineno"> 2389</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;</div>
<div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l02392"></a><span class="lineno"> 2392</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;    {</div>
<div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress == input )</div>
<div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;        {</div>
<div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;            <span class="comment">// Set the systemIndex so future lookups will be fast</span></div>
<div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[i].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>) i;</div>
<div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;</div>
<div class="line"><a name="l02399"></a><span class="lineno"> 2399</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l02400"></a><span class="lineno"> 2400</span>&#160;        }</div>
<div class="line"><a name="l02401"></a><span class="lineno"> 2401</span>&#160;    }</div>
<div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;</div>
<div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l02404"></a><span class="lineno"> 2404</span>&#160;}</div>
<div class="line"><a name="l02405"></a><span class="lineno"> 2405</span>&#160;</div>
<div class="line"><a name="l02406"></a><span class="lineno"> 2406</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02407"></a><span class="lineno"> 2407</span>&#160;</div>
<div class="line"><a name="l02408"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8650db1b4cbcedf91564235c538f358b"> 2408</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8650db1b4cbcedf91564235c538f358b">RakPeer::GetSystemIndexFromGuid</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> input )<span class="keyword"> const</span></div>
<div class="line"><a name="l02409"></a><span class="lineno"> 2409</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;    <span class="keywordflow">if</span> (input==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160;        <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1;</div>
<div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;</div>
<div class="line"><a name="l02413"></a><span class="lineno"> 2413</span>&#160;    <span class="keywordflow">if</span> (input==<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>)</div>
<div class="line"><a name="l02414"></a><span class="lineno"> 2414</span>&#160;        <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1;</div>
<div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;</div>
<div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;    <span class="keywordflow">if</span> (input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>!=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1 &amp;&amp; input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>&lt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a> == input)</div>
<div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;        <span class="keywordflow">return</span> input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>;</div>
<div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;</div>
<div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;    {</div>
<div class="line"><a name="l02422"></a><span class="lineno"> 2422</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].guid == input )</div>
<div class="line"><a name="l02423"></a><span class="lineno"> 2423</span>&#160;        {</div>
<div class="line"><a name="l02424"></a><span class="lineno"> 2424</span>&#160;            <span class="comment">// Set the systemIndex so future lookups will be fast</span></div>
<div class="line"><a name="l02425"></a><span class="lineno"> 2425</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[i].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>) i;</div>
<div class="line"><a name="l02426"></a><span class="lineno"> 2426</span>&#160;</div>
<div class="line"><a name="l02427"></a><span class="lineno"> 2427</span>&#160;            <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l02428"></a><span class="lineno"> 2428</span>&#160;        }</div>
<div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;    }</div>
<div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;</div>
<div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1;</div>
<div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160;}</div>
<div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160;</div>
<div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160;</div>
<div class="line"><a name="l02436"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7b99f10bb48b76fcef310226c277870a"> 2436</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7b99f10bb48b76fcef310226c277870a" title="Gives the system address of a connected system, given its GUID. The GUID will be the same on all syst...">RakPeer::GetSystemAddressFromGuid</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> input )<span class="keyword"> const</span></div>
<div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02438"></a><span class="lineno"> 2438</span>&#160;    <span class="keywordflow">if</span> (input==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l02439"></a><span class="lineno"> 2439</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02440"></a><span class="lineno"> 2440</span>&#160;</div>
<div class="line"><a name="l02441"></a><span class="lineno"> 2441</span>&#160;    <span class="keywordflow">if</span> (input==<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>)</div>
<div class="line"><a name="l02442"></a><span class="lineno"> 2442</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3bd1460173bdc15fcca80d75ba2e9305" title="Returns the unique address identifier that represents you or another system on the the network...">GetInternalID</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>);</div>
<div class="line"><a name="l02443"></a><span class="lineno"> 2443</span>&#160;</div>
<div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;    <span class="keywordflow">if</span> (input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>!=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1 &amp;&amp; input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>&lt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a> == input)</div>
<div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>;</div>
<div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;</div>
<div class="line"><a name="l02447"></a><span class="lineno"> 2447</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l02448"></a><span class="lineno"> 2448</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02449"></a><span class="lineno"> 2449</span>&#160;    {</div>
<div class="line"><a name="l02450"></a><span class="lineno"> 2450</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].guid == input )</div>
<div class="line"><a name="l02451"></a><span class="lineno"> 2451</span>&#160;        {</div>
<div class="line"><a name="l02452"></a><span class="lineno"> 2452</span>&#160;            <span class="comment">// Set the systemIndex so future lookups will be fast</span></div>
<div class="line"><a name="l02453"></a><span class="lineno"> 2453</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[i].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>) i;</div>
<div class="line"><a name="l02454"></a><span class="lineno"> 2454</span>&#160;</div>
<div class="line"><a name="l02455"></a><span class="lineno"> 2455</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>;</div>
<div class="line"><a name="l02456"></a><span class="lineno"> 2456</span>&#160;        }</div>
<div class="line"><a name="l02457"></a><span class="lineno"> 2457</span>&#160;    }</div>
<div class="line"><a name="l02458"></a><span class="lineno"> 2458</span>&#160;</div>
<div class="line"><a name="l02459"></a><span class="lineno"> 2459</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;}</div>
<div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;</div>
<div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;</div>
<div class="line"><a name="l02464"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acfd91e89678d280504742f7f3e780e76"> 2464</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acfd91e89678d280504742f7f3e780e76">RakPeer::GetClientPublicKeyFromSystemAddress</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> input, <span class="keywordtype">char</span> *client_public_key )<span class="keyword"> const</span></div>
<div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02466"></a><span class="lineno"> 2466</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY == 1</span></div>
<div class="line"><a name="l02467"></a><span class="lineno"> 2467</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (input == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;</div>
<div class="line"><a name="l02470"></a><span class="lineno"> 2470</span>&#160;    <span class="keywordtype">char</span> *copy_source = 0;</div>
<div class="line"><a name="l02471"></a><span class="lineno"> 2471</span>&#160;</div>
<div class="line"><a name="l02472"></a><span class="lineno"> 2472</span>&#160;    <span class="keywordflow">if</span> (input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>!=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1 &amp;&amp; input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>&lt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a> == input)</div>
<div class="line"><a name="l02473"></a><span class="lineno"> 2473</span>&#160;    {</div>
<div class="line"><a name="l02474"></a><span class="lineno"> 2474</span>&#160;        copy_source = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> ].client_public_key;</div>
<div class="line"><a name="l02475"></a><span class="lineno"> 2475</span>&#160;    }</div>
<div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;    {</div>
<div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;        {</div>
<div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress == input )</div>
<div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;            {</div>
<div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;                copy_source = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].client_public_key;</div>
<div class="line"><a name="l02483"></a><span class="lineno"> 2483</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;            }</div>
<div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;        }</div>
<div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;    }</div>
<div class="line"><a name="l02487"></a><span class="lineno"> 2487</span>&#160;</div>
<div class="line"><a name="l02488"></a><span class="lineno"> 2488</span>&#160;    <span class="keywordflow">if</span> (copy_source)</div>
<div class="line"><a name="l02489"></a><span class="lineno"> 2489</span>&#160;    {</div>
<div class="line"><a name="l02490"></a><span class="lineno"> 2490</span>&#160;        <span class="comment">// Verify that at least one byte in the public key is non-zero to indicate that the key was received</span></div>
<div class="line"><a name="l02491"></a><span class="lineno"> 2491</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> ii = 0; ii &lt; cat::EasyHandshake::PUBLIC_KEY_BYTES; ++ii)</div>
<div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160;        {</div>
<div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;            <span class="keywordflow">if</span> (copy_source[ii] != 0)</div>
<div class="line"><a name="l02494"></a><span class="lineno"> 2494</span>&#160;            {</div>
<div class="line"><a name="l02495"></a><span class="lineno"> 2495</span>&#160;                memcpy(client_public_key, copy_source, cat::EasyHandshake::PUBLIC_KEY_BYTES);</div>
<div class="line"><a name="l02496"></a><span class="lineno"> 2496</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02497"></a><span class="lineno"> 2497</span>&#160;            }</div>
<div class="line"><a name="l02498"></a><span class="lineno"> 2498</span>&#160;        }</div>
<div class="line"><a name="l02499"></a><span class="lineno"> 2499</span>&#160;    }</div>
<div class="line"><a name="l02500"></a><span class="lineno"> 2500</span>&#160;</div>
<div class="line"><a name="l02501"></a><span class="lineno"> 2501</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l02502"></a><span class="lineno"> 2502</span>&#160;<span class="preprocessor"></span>    (void) input;</div>
<div class="line"><a name="l02503"></a><span class="lineno"> 2503</span>&#160;    (void) client_public_key;</div>
<div class="line"><a name="l02504"></a><span class="lineno"> 2504</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l02505"></a><span class="lineno"> 2505</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l02506"></a><span class="lineno"> 2506</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02507"></a><span class="lineno"> 2507</span>&#160;}</div>
<div class="line"><a name="l02508"></a><span class="lineno"> 2508</span>&#160;</div>
<div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;<span class="comment">// Set the time, in MS, to use before considering ourselves disconnected after not being able to deliver a reliable packet</span></div>
<div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;<span class="comment">// \param[in] time Time, in MS</span></div>
<div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02513"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad56d9ad6b36464598a81c02caa59a716"> 2513</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad56d9ad6b36464598a81c02caa59a716" title="Set the time, in MS, to use before considering ourselves disconnected after not being able to deliver...">RakPeer::SetTimeoutTime</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeMS, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )</div>
<div class="line"><a name="l02514"></a><span class="lineno"> 2514</span>&#160;{</div>
<div class="line"><a name="l02515"></a><span class="lineno"> 2515</span>&#160;    <span class="keywordflow">if</span> (target==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;    {</div>
<div class="line"><a name="l02517"></a><span class="lineno"> 2517</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af9256c364ea3adcb09b398d4d35f9e65">defaultTimeoutTime</a>=timeMS;</div>
<div class="line"><a name="l02518"></a><span class="lineno"> 2518</span>&#160;</div>
<div class="line"><a name="l02519"></a><span class="lineno"> 2519</span>&#160;        <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l02520"></a><span class="lineno"> 2520</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02521"></a><span class="lineno"> 2521</span>&#160;        {</div>
<div class="line"><a name="l02522"></a><span class="lineno"> 2522</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive)</div>
<div class="line"><a name="l02523"></a><span class="lineno"> 2523</span>&#160;            {</div>
<div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive )</div>
<div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a48ebdf0f6521fca292535480c2f54906">SetTimeoutTime</a>(timeMS);</div>
<div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;            }</div>
<div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160;        }</div>
<div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;    }</div>
<div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02530"></a><span class="lineno"> 2530</span>&#160;    {</div>
<div class="line"><a name="l02531"></a><span class="lineno"> 2531</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( target, <span class="keyword">false</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;</div>
<div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;        <span class="keywordflow">if</span> ( remoteSystem != 0 )</div>
<div class="line"><a name="l02534"></a><span class="lineno"> 2534</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a48ebdf0f6521fca292535480c2f54906">SetTimeoutTime</a>(timeMS);</div>
<div class="line"><a name="l02535"></a><span class="lineno"> 2535</span>&#160;    }</div>
<div class="line"><a name="l02536"></a><span class="lineno"> 2536</span>&#160;}</div>
<div class="line"><a name="l02537"></a><span class="lineno"> 2537</span>&#160;</div>
<div class="line"><a name="l02538"></a><span class="lineno"> 2538</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02539"></a><span class="lineno"> 2539</span>&#160;</div>
<div class="line"><a name="l02540"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae24965aa176dd101e4770c800d7c0058"> 2540</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae24965aa176dd101e4770c800d7c0058" title="Returns the Timeout time for the given system.">RakPeer::GetTimeoutTime</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )</div>
<div class="line"><a name="l02541"></a><span class="lineno"> 2541</span>&#160;{</div>
<div class="line"><a name="l02542"></a><span class="lineno"> 2542</span>&#160;    <span class="keywordflow">if</span> (target==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02543"></a><span class="lineno"> 2543</span>&#160;    {</div>
<div class="line"><a name="l02544"></a><span class="lineno"> 2544</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af9256c364ea3adcb09b398d4d35f9e65">defaultTimeoutTime</a>;</div>
<div class="line"><a name="l02545"></a><span class="lineno"> 2545</span>&#160;    }</div>
<div class="line"><a name="l02546"></a><span class="lineno"> 2546</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02547"></a><span class="lineno"> 2547</span>&#160;    {</div>
<div class="line"><a name="l02548"></a><span class="lineno"> 2548</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( target, <span class="keyword">false</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l02549"></a><span class="lineno"> 2549</span>&#160;</div>
<div class="line"><a name="l02550"></a><span class="lineno"> 2550</span>&#160;        <span class="keywordflow">if</span> ( remoteSystem != 0 )</div>
<div class="line"><a name="l02551"></a><span class="lineno"> 2551</span>&#160;            <span class="keywordflow">return</span> remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ad7ae8c962a75dee167d2ba844bf571e1">GetTimeoutTime</a>();</div>
<div class="line"><a name="l02552"></a><span class="lineno"> 2552</span>&#160;    }</div>
<div class="line"><a name="l02553"></a><span class="lineno"> 2553</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af9256c364ea3adcb09b398d4d35f9e65">defaultTimeoutTime</a>;</div>
<div class="line"><a name="l02554"></a><span class="lineno"> 2554</span>&#160;}</div>
<div class="line"><a name="l02555"></a><span class="lineno"> 2555</span>&#160;</div>
<div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;</div>
<div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02559"></a><span class="lineno"> 2559</span>&#160;<span class="comment">// Returns the current MTU size</span></div>
<div class="line"><a name="l02560"></a><span class="lineno"> 2560</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02561"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4272ca10738749fcc2a1e3b31e048a70"> 2561</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4272ca10738749fcc2a1e3b31e048a70" title="Returns the current MTU size.">RakPeer::GetMTUSize</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )<span class="keyword"> const</span></div>
<div class="line"><a name="l02562"></a><span class="lineno"> 2562</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02563"></a><span class="lineno"> 2563</span>&#160;    <span class="keywordflow">if</span> (target!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;    {</div>
<div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *rss=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>(target, <span class="keyword">false</span>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;        <span class="keywordflow">if</span> (rss)</div>
<div class="line"><a name="l02567"></a><span class="lineno"> 2567</span>&#160;            <span class="keywordflow">return</span> rss-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>;</div>
<div class="line"><a name="l02568"></a><span class="lineno"> 2568</span>&#160;    }</div>
<div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af96dd55e6d29b96d62af7f3ac5d2332b">defaultMTUSize</a>;</div>
<div class="line"><a name="l02570"></a><span class="lineno"> 2570</span>&#160;}</div>
<div class="line"><a name="l02571"></a><span class="lineno"> 2571</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160;<span class="comment">// Returns the number of IP addresses we have</span></div>
<div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02575"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac6c72f0af658cebb78c7ed352a3f458f"> 2575</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac6c72f0af658cebb78c7ed352a3f458f" title="Returns the number of IP addresses this system has internally.">RakPeer::GetNumberOfAddresses</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l02576"></a><span class="lineno"> 2576</span>&#160;{</div>
<div class="line"><a name="l02577"></a><span class="lineno"> 2577</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>() == <span class="keyword">false</span>) {</div>
<div class="line"><a name="l02578"></a><span class="lineno"> 2578</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8285f205b3b5df5dd74ca7676710376c">FillIPList</a>();</div>
<div class="line"><a name="l02579"></a><span class="lineno"> 2579</span>&#160;    }</div>
<div class="line"><a name="l02580"></a><span class="lineno"> 2580</span>&#160;</div>
<div class="line"><a name="l02581"></a><span class="lineno"> 2581</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i] != <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>; i++) {</div>
<div class="line"><a name="l02582"></a><span class="lineno"> 2582</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i] == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>) {</div>
<div class="line"><a name="l02583"></a><span class="lineno"> 2583</span>&#160;            <span class="keywordflow">return</span> i; <span class="comment">// first unassigned address entry found -&gt; end of address list reached</span></div>
<div class="line"><a name="l02584"></a><span class="lineno"> 2584</span>&#160;        }</div>
<div class="line"><a name="l02585"></a><span class="lineno"> 2585</span>&#160;    }</div>
<div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;</div>
<div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>;</div>
<div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;}</div>
<div class="line"><a name="l02589"></a><span class="lineno"> 2589</span>&#160;</div>
<div class="line"><a name="l02590"></a><span class="lineno"> 2590</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02591"></a><span class="lineno"> 2591</span>&#160;<span class="comment">// Returns an IP address at index 0 to GetNumberOfAddresses-1</span></div>
<div class="line"><a name="l02592"></a><span class="lineno"> 2592</span>&#160;<span class="comment">// \param[in] index index into the list of IP addresses</span></div>
<div class="line"><a name="l02593"></a><span class="lineno"> 2593</span>&#160;<span class="comment">// \return The local IP address at this index</span></div>
<div class="line"><a name="l02594"></a><span class="lineno"> 2594</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02595"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a683896750aa0a4c9e4978c3090d54b10"> 2595</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a683896750aa0a4c9e4978c3090d54b10">RakPeer::GetLocalIP</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index )</div>
<div class="line"><a name="l02596"></a><span class="lineno"> 2596</span>&#160;{</div>
<div class="line"><a name="l02597"></a><span class="lineno"> 2597</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l02598"></a><span class="lineno"> 2598</span>&#160;    {</div>
<div class="line"><a name="l02599"></a><span class="lineno"> 2599</span>&#160;    <span class="comment">// Fill out ipList structure</span></div>
<div class="line"><a name="l02600"></a><span class="lineno"> 2600</span>&#160;</div>
<div class="line"><a name="l02601"></a><span class="lineno"> 2601</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8285f205b3b5df5dd74ca7676710376c">FillIPList</a>();</div>
<div class="line"><a name="l02602"></a><span class="lineno"> 2602</span>&#160;</div>
<div class="line"><a name="l02603"></a><span class="lineno"> 2603</span>&#160;    }</div>
<div class="line"><a name="l02604"></a><span class="lineno"> 2604</span>&#160;</div>
<div class="line"><a name="l02605"></a><span class="lineno"> 2605</span>&#160;</div>
<div class="line"><a name="l02606"></a><span class="lineno"> 2606</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">char</span> str[128];</div>
<div class="line"><a name="l02607"></a><span class="lineno"> 2607</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[index].<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>,str,static_cast&lt;size_t&gt;(128));</div>
<div class="line"><a name="l02608"></a><span class="lineno"> 2608</span>&#160;    <span class="keywordflow">return</span> str;</div>
<div class="line"><a name="l02609"></a><span class="lineno"> 2609</span>&#160;</div>
<div class="line"><a name="l02610"></a><span class="lineno"> 2610</span>&#160;</div>
<div class="line"><a name="l02611"></a><span class="lineno"> 2611</span>&#160;</div>
<div class="line"><a name="l02612"></a><span class="lineno"> 2612</span>&#160;</div>
<div class="line"><a name="l02613"></a><span class="lineno"> 2613</span>&#160;}</div>
<div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;</div>
<div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160;<span class="comment">// Is this a local IP?</span></div>
<div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;<span class="comment">// \param[in] An IP address to check</span></div>
<div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;<span class="comment">// \return True if this is one of the IP addresses returned by GetLocalIP</span></div>
<div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02620"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a251f0972c417a8770548a354a10178f5"> 2620</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a251f0972c417a8770548a354a10178f5">RakPeer::IsLocalIP</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *ip )</div>
<div class="line"><a name="l02621"></a><span class="lineno"> 2621</span>&#160;{</div>
<div class="line"><a name="l02622"></a><span class="lineno"> 2622</span>&#160;    <span class="keywordflow">if</span> (ip==0 || ip[0]==0)</div>
<div class="line"><a name="l02623"></a><span class="lineno"> 2623</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02624"></a><span class="lineno"> 2624</span>&#160;</div>
<div class="line"><a name="l02625"></a><span class="lineno"> 2625</span>&#160;</div>
<div class="line"><a name="l02626"></a><span class="lineno"> 2626</span>&#160;    <span class="keywordflow">if</span> (strcmp(ip, <span class="stringliteral">&quot;127.0.0.1&quot;</span>)==0 || strcmp(ip, <span class="stringliteral">&quot;localhost&quot;</span>)==0)</div>
<div class="line"><a name="l02627"></a><span class="lineno"> 2627</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02628"></a><span class="lineno"> 2628</span>&#160;</div>
<div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;    <span class="keywordtype">int</span> num = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac6c72f0af658cebb78c7ed352a3f458f" title="Returns the number of IP addresses this system has internally.">GetNumberOfAddresses</a>();</div>
<div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;    <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l02631"></a><span class="lineno"> 2631</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; num; i++)</div>
<div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;    {</div>
<div class="line"><a name="l02633"></a><span class="lineno"> 2633</span>&#160;        <span class="keywordflow">if</span> (strcmp(ip, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a683896750aa0a4c9e4978c3090d54b10">GetLocalIP</a>(i))==0)</div>
<div class="line"><a name="l02634"></a><span class="lineno"> 2634</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l02635"></a><span class="lineno"> 2635</span>&#160;    }</div>
<div class="line"><a name="l02636"></a><span class="lineno"> 2636</span>&#160;</div>
<div class="line"><a name="l02637"></a><span class="lineno"> 2637</span>&#160;</div>
<div class="line"><a name="l02638"></a><span class="lineno"> 2638</span>&#160;</div>
<div class="line"><a name="l02639"></a><span class="lineno"> 2639</span>&#160;</div>
<div class="line"><a name="l02640"></a><span class="lineno"> 2640</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02641"></a><span class="lineno"> 2641</span>&#160;}</div>
<div class="line"><a name="l02642"></a><span class="lineno"> 2642</span>&#160;</div>
<div class="line"><a name="l02643"></a><span class="lineno"> 2643</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;<span class="comment">// Allow or disallow connection responses from any IP. Normally this should be false, but may be necessary</span></div>
<div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;<span class="comment">// when connection to servers with multiple IP addresses</span></div>
<div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;<span class="comment">// Parameters:</span></div>
<div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;<span class="comment">// allow - True to allow this behavior, false to not allow.  Defaults to false.  Value persists between connections</span></div>
<div class="line"><a name="l02650"></a><span class="lineno"> 2650</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02651"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6073a5dffd55cbd7dbfc6e575c34ffc4"> 2651</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6073a5dffd55cbd7dbfc6e575c34ffc4" title="Allow or disallow connection responses from any IP.">RakPeer::AllowConnectionResponseIPMigration</a>( <span class="keywordtype">bool</span> allow )</div>
<div class="line"><a name="l02652"></a><span class="lineno"> 2652</span>&#160;{</div>
<div class="line"><a name="l02653"></a><span class="lineno"> 2653</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4d813d6705c6e3e225a7558d7cd07fc3" title="How long it has been since things were updated by a call to receiveUpdate thread uses this to determi...">allowConnectionResponseIPMigration</a> = allow;</div>
<div class="line"><a name="l02654"></a><span class="lineno"> 2654</span>&#160;}</div>
<div class="line"><a name="l02655"></a><span class="lineno"> 2655</span>&#160;</div>
<div class="line"><a name="l02656"></a><span class="lineno"> 2656</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;<span class="comment">// Description:</span></div>
<div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160;<span class="comment">// Sends a message ID_ADVERTISE_SYSTEM to the remote unconnected system.</span></div>
<div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;<span class="comment">// This will tell the remote system our external IP outside the LAN, and can be used for NAT punch through</span></div>
<div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;<span class="comment">// Requires:</span></div>
<div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;<span class="comment">// The sender and recipient must already be started via a successful call to Initialize</span></div>
<div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02664"></a><span class="lineno"> 2664</span>&#160;<span class="comment">// host: Either a dotted IP address or a domain name</span></div>
<div class="line"><a name="l02665"></a><span class="lineno"> 2665</span>&#160;<span class="comment">// remotePort: Which port to connect to on the remote machine.</span></div>
<div class="line"><a name="l02666"></a><span class="lineno"> 2666</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02667"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1337a0f14282659e56aca9c8b7d948bc"> 2667</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1337a0f14282659e56aca9c8b7d948bc" title="Sends a one byte message ID_ADVERTISE_SYSTEM to the remote unconnected system. This will send our ext...">RakPeer::AdvertiseSystem</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keywordtype">int</span> dataLength, <span class="keywordtype">unsigned</span> connectionSocketIndex )</div>
<div class="line"><a name="l02668"></a><span class="lineno"> 2668</span>&#160;{</div>
<div class="line"><a name="l02669"></a><span class="lineno"> 2669</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs;</div>
<div class="line"><a name="l02670"></a><span class="lineno"> 2670</span>&#160;    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3acb0b373f4c8b7a8ce6337bb8727d8daf">ID_ADVERTISE_SYSTEM</a>);</div>
<div class="line"><a name="l02671"></a><span class="lineno"> 2671</span>&#160;    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data,dataLength);</div>
<div class="line"><a name="l02672"></a><span class="lineno"> 2672</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a027c0f3a45a90ec530e0ba8113f7f5a4">SendOutOfBand</a>(host, remotePort, (<span class="keyword">const</span> <span class="keywordtype">char</span>*) bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>(), connectionSocketIndex );</div>
<div class="line"><a name="l02673"></a><span class="lineno"> 2673</span>&#160;}</div>
<div class="line"><a name="l02674"></a><span class="lineno"> 2674</span>&#160;</div>
<div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;<span class="comment">// Controls how often to return ID_DOWNLOAD_PROGRESS for large message downloads.</span></div>
<div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;<span class="comment">// ID_DOWNLOAD_PROGRESS is returned to indicate a new partial message chunk, roughly the MTU size, has arrived</span></div>
<div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;<span class="comment">// As it can be slow or cumbersome to get this notification for every chunk, you can set the interval at which it is returned.</span></div>
<div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160;<span class="comment">// Defaults to 0 (never return this notification)</span></div>
<div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02681"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac1cb3f6aeaa842c721bbe4a3d74c3d5d"> 2681</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac1cb3f6aeaa842c721bbe4a3d74c3d5d" title="Controls how often to return ID_DOWNLOAD_PROGRESS for large message downloads.">RakPeer::SetSplitMessageProgressInterval</a>(<span class="keywordtype">int</span> interval)</div>
<div class="line"><a name="l02682"></a><span class="lineno"> 2682</span>&#160;{</div>
<div class="line"><a name="l02683"></a><span class="lineno"> 2683</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(interval&gt;=0);</div>
<div class="line"><a name="l02684"></a><span class="lineno"> 2684</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16cc05e426a8198b7da1871aef9bcb2">splitMessageProgressInterval</a>=interval;</div>
<div class="line"><a name="l02685"></a><span class="lineno"> 2685</span>&#160;    <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02686"></a><span class="lineno"> 2686</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].reliabilityLayer.SetSplitMessageProgressInterval(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16cc05e426a8198b7da1871aef9bcb2">splitMessageProgressInterval</a>);</div>
<div class="line"><a name="l02687"></a><span class="lineno"> 2687</span>&#160;}</div>
<div class="line"><a name="l02688"></a><span class="lineno"> 2688</span>&#160;</div>
<div class="line"><a name="l02689"></a><span class="lineno"> 2689</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02690"></a><span class="lineno"> 2690</span>&#160;<span class="comment">// Returns what was passed to SetSplitMessageProgressInterval()</span></div>
<div class="line"><a name="l02691"></a><span class="lineno"> 2691</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02692"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5943788eec6c727a5b54ba20bac5a0e9"> 2692</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5943788eec6c727a5b54ba20bac5a0e9" title="Returns what was passed to SetSplitMessageProgressInterval().">RakPeer::GetSplitMessageProgressInterval</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16cc05e426a8198b7da1871aef9bcb2">splitMessageProgressInterval</a>;</div>
<div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;}</div>
<div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;</div>
<div class="line"><a name="l02697"></a><span class="lineno"> 2697</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02698"></a><span class="lineno"> 2698</span>&#160;<span class="comment">// Set how long to wait before giving up on sending an unreliable message</span></div>
<div class="line"><a name="l02699"></a><span class="lineno"> 2699</span>&#160;<span class="comment">// Useful if the network is clogged up.</span></div>
<div class="line"><a name="l02700"></a><span class="lineno"> 2700</span>&#160;<span class="comment">// Set to 0 or less to never timeout.  Defaults to 0.</span></div>
<div class="line"><a name="l02701"></a><span class="lineno"> 2701</span>&#160;<span class="comment">// timeoutMS How many ms to wait before simply not sending an unreliable message.</span></div>
<div class="line"><a name="l02702"></a><span class="lineno"> 2702</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02703"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac9967f5f19f8d1bdbdc50f12095e1e1f"> 2703</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac9967f5f19f8d1bdbdc50f12095e1e1f" title="Set how long to wait before giving up on sending an unreliable message. Useful if the network is clog...">RakPeer::SetUnreliableTimeout</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutMS)</div>
<div class="line"><a name="l02704"></a><span class="lineno"> 2704</span>&#160;{</div>
<div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78c3f7d32278a2dca98007b0db041e1c">unreliableTimeout</a>=timeoutMS;</div>
<div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;    <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].reliabilityLayer.SetUnreliableTimeout(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78c3f7d32278a2dca98007b0db041e1c">unreliableTimeout</a>);</div>
<div class="line"><a name="l02708"></a><span class="lineno"> 2708</span>&#160;}</div>
<div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;</div>
<div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160;<span class="comment">// Send a message to host, with the IP socket option TTL set to 3</span></div>
<div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;<span class="comment">// This message will not reach the host, but will open the router.</span></div>
<div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;<span class="comment">// Used for NAT-Punchthrough</span></div>
<div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02715"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ababf4af38512fb961f29cfc284dfeb22"> 2715</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ababf4af38512fb961f29cfc284dfeb22" title="Send a message to a host, with the IP socket option TTL set to 3.">RakPeer::SendTTL</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keywordtype">int</span> ttl, <span class="keywordtype">unsigned</span> connectionSocketIndex )</div>
<div class="line"><a name="l02716"></a><span class="lineno"> 2716</span>&#160;{</div>
<div class="line"><a name="l02717"></a><span class="lineno"> 2717</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l02718"></a><span class="lineno"> 2718</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">char</span> fakeData[2];</div>
<div class="line"><a name="l02719"></a><span class="lineno"> 2719</span>&#160;    fakeData[0]=0;</div>
<div class="line"><a name="l02720"></a><span class="lineno"> 2720</span>&#160;    fakeData[1]=1;</div>
<div class="line"><a name="l02721"></a><span class="lineno"> 2721</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> realIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae666a545bcac66fc454c2368b7696b64">GetRakNetSocketFromUserConnectionSocketIndex</a>(connectionSocketIndex);</div>
<div class="line"><a name="l02722"></a><span class="lineno"> 2722</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;IsBerkleySocket())</div>
<div class="line"><a name="l02723"></a><span class="lineno"> 2723</span>&#160;    {</div>
<div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160;        <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) fakeData;</div>
<div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = 2;</div>
<div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">FromStringExplicitPort</a>(host,remotePort, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;GetBoundAddress().GetIPVersion());</div>
<div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">FixForIPVersion</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;GetBoundAddress());</div>
<div class="line"><a name="l02729"></a><span class="lineno"> 2729</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a4c4e3018851fcb475e44d15fad5142ee">ttl</a>=ttl;</div>
<div class="line"><a name="l02730"></a><span class="lineno"> 2730</span>&#160;        <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l02731"></a><span class="lineno"> 2731</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l02732"></a><span class="lineno"> 2732</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*)bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a>, <a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a>), bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>);</div>
<div class="line"><a name="l02733"></a><span class="lineno"> 2733</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;Send(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160;    }</div>
<div class="line"><a name="l02735"></a><span class="lineno"> 2735</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;</div>
<div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;</div>
<div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;<span class="comment">// Attatches a Plugin interface to run code automatically on message receipt in the Receive call</span></div>
<div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02742"></a><span class="lineno"> 2742</span>&#160;<span class="comment">// \param messageHandler Pointer to a plugin to attach</span></div>
<div class="line"><a name="l02743"></a><span class="lineno"> 2743</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02744"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ab5c9a18b31e1ef50434f289b6cca9b68"> 2744</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ab5c9a18b31e1ef50434f289b6cca9b68" title="Attaches a Plugin interface to an instance of the base class (RakPeer or PacketizedTCP) to run code a...">RakPeer::AttachPlugin</a>( <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> *plugin )</div>
<div class="line"><a name="l02745"></a><span class="lineno"> 2745</span>&#160;{</div>
<div class="line"><a name="l02746"></a><span class="lineno"> 2746</span>&#160;    <span class="keywordtype">bool</span> isNotThreadsafe = plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a>();</div>
<div class="line"><a name="l02747"></a><span class="lineno"> 2747</span>&#160;    <span class="keywordflow">if</span> (isNotThreadsafe)</div>
<div class="line"><a name="l02748"></a><span class="lineno"> 2748</span>&#160;    {</div>
<div class="line"><a name="l02749"></a><span class="lineno"> 2749</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(plugin)==<a class="code" href="../../d9/d7f/_d_s___list_8h.xhtml#afc42e3d98c21b07bd24b47aeb8ef2561" title="Maximum unsigned long.">MAX_UNSIGNED_LONG</a>)</div>
<div class="line"><a name="l02750"></a><span class="lineno"> 2750</span>&#160;        {</div>
<div class="line"><a name="l02751"></a><span class="lineno"> 2751</span>&#160;            plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160;            plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8" title="Called when the interface is attached.">OnAttach</a>();</div>
<div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a5cb7d8b68d8d020a34f2186ea8d5b1c6" title="Insert an element at position position in the list.">Insert</a>(plugin, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;        }</div>
<div class="line"><a name="l02755"></a><span class="lineno"> 2755</span>&#160;    }</div>
<div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02757"></a><span class="lineno"> 2757</span>&#160;    {</div>
<div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(plugin)==<a class="code" href="../../d9/d7f/_d_s___list_8h.xhtml#afc42e3d98c21b07bd24b47aeb8ef2561" title="Maximum unsigned long.">MAX_UNSIGNED_LONG</a>)</div>
<div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;        {</div>
<div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160;            plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l02761"></a><span class="lineno"> 2761</span>&#160;            plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8" title="Called when the interface is attached.">OnAttach</a>();</div>
<div class="line"><a name="l02762"></a><span class="lineno"> 2762</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a5cb7d8b68d8d020a34f2186ea8d5b1c6" title="Insert an element at position position in the list.">Insert</a>(plugin, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02763"></a><span class="lineno"> 2763</span>&#160;        }</div>
<div class="line"><a name="l02764"></a><span class="lineno"> 2764</span>&#160;    }</div>
<div class="line"><a name="l02765"></a><span class="lineno"> 2765</span>&#160;}</div>
<div class="line"><a name="l02766"></a><span class="lineno"> 2766</span>&#160;</div>
<div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02768"></a><span class="lineno"> 2768</span>&#160;<span class="comment">// Detaches a Plugin interface to run code automatically on message receipt</span></div>
<div class="line"><a name="l02769"></a><span class="lineno"> 2769</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02770"></a><span class="lineno"> 2770</span>&#160;<span class="comment">// \param messageHandler Pointer to a plugin to detach</span></div>
<div class="line"><a name="l02771"></a><span class="lineno"> 2771</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02772"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3af7b16093477032f5739c05316463bd"> 2772</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3af7b16093477032f5739c05316463bd" title="Detaches a Plugin interface from the instance of the base class (RakPeer or PacketizedTCP) it is atta...">RakPeer::DetachPlugin</a>( <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">PluginInterface2</a> *plugin )</div>
<div class="line"><a name="l02773"></a><span class="lineno"> 2773</span>&#160;{</div>
<div class="line"><a name="l02774"></a><span class="lineno"> 2774</span>&#160;    <span class="keywordflow">if</span> (plugin==0)</div>
<div class="line"><a name="l02775"></a><span class="lineno"> 2775</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l02776"></a><span class="lineno"> 2776</span>&#160;</div>
<div class="line"><a name="l02777"></a><span class="lineno"> 2777</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index;</div>
<div class="line"><a name="l02778"></a><span class="lineno"> 2778</span>&#160;</div>
<div class="line"><a name="l02779"></a><span class="lineno"> 2779</span>&#160;    <span class="keywordtype">bool</span> isNotThreadsafe = plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a>();</div>
<div class="line"><a name="l02780"></a><span class="lineno"> 2780</span>&#160;    <span class="keywordflow">if</span> (isNotThreadsafe)</div>
<div class="line"><a name="l02781"></a><span class="lineno"> 2781</span>&#160;    {</div>
<div class="line"><a name="l02782"></a><span class="lineno"> 2782</span>&#160;        index = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(plugin);</div>
<div class="line"><a name="l02783"></a><span class="lineno"> 2783</span>&#160;        <span class="keywordflow">if</span> (index!=<a class="code" href="../../d9/d7f/_d_s___list_8h.xhtml#afc42e3d98c21b07bd24b47aeb8ef2561" title="Maximum unsigned long.">MAX_UNSIGNED_LONG</a>)</div>
<div class="line"><a name="l02784"></a><span class="lineno"> 2784</span>&#160;        {</div>
<div class="line"><a name="l02785"></a><span class="lineno"> 2785</span>&#160;            <span class="comment">// Unordered list so delete from end for speed</span></div>
<div class="line"><a name="l02786"></a><span class="lineno"> 2786</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[index]=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()-1];</div>
<div class="line"><a name="l02787"></a><span class="lineno"> 2787</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aeed32cd1075569515bb825f874dca24e" title="Delete the element at the end of the list.">RemoveFromEnd</a>();</div>
<div class="line"><a name="l02788"></a><span class="lineno"> 2788</span>&#160;        }</div>
<div class="line"><a name="l02789"></a><span class="lineno"> 2789</span>&#160;    }</div>
<div class="line"><a name="l02790"></a><span class="lineno"> 2790</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02791"></a><span class="lineno"> 2791</span>&#160;    {</div>
<div class="line"><a name="l02792"></a><span class="lineno"> 2792</span>&#160;        index = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(plugin);</div>
<div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;        <span class="keywordflow">if</span> (index!=<a class="code" href="../../d9/d7f/_d_s___list_8h.xhtml#afc42e3d98c21b07bd24b47aeb8ef2561" title="Maximum unsigned long.">MAX_UNSIGNED_LONG</a>)</div>
<div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;        {</div>
<div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160;            <span class="comment">// Unordered list so delete from end for speed</span></div>
<div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[index]=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()-1];</div>
<div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aeed32cd1075569515bb825f874dca24e" title="Delete the element at the end of the list.">RemoveFromEnd</a>();</div>
<div class="line"><a name="l02798"></a><span class="lineno"> 2798</span>&#160;        }</div>
<div class="line"><a name="l02799"></a><span class="lineno"> 2799</span>&#160;    }</div>
<div class="line"><a name="l02800"></a><span class="lineno"> 2800</span>&#160;    plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4" title="Called when the interface is detached.">OnDetach</a>();</div>
<div class="line"><a name="l02801"></a><span class="lineno"> 2801</span>&#160;    plugin-&gt;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a>(0);</div>
<div class="line"><a name="l02802"></a><span class="lineno"> 2802</span>&#160;}</div>
<div class="line"><a name="l02803"></a><span class="lineno"> 2803</span>&#160;</div>
<div class="line"><a name="l02804"></a><span class="lineno"> 2804</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02805"></a><span class="lineno"> 2805</span>&#160;<span class="comment">// Put a packet back at the end of the receive queue in case you don&#39;t want to deal with it immediately</span></div>
<div class="line"><a name="l02806"></a><span class="lineno"> 2806</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;<span class="comment">// packet The packet you want to push back.</span></div>
<div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;<span class="comment">// pushAtHead True to push the packet so that the next receive call returns it.  False to push it at the end of the queue (obviously pushing it at the end makes the packets out of order)</span></div>
<div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02810"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9968ebdb31bcc7563b035a567046169b"> 2810</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9968ebdb31bcc7563b035a567046169b" title="Puts a message back in the receive queue in case you don&#39;t want to deal with it immediately.">RakPeer::PushBackPacket</a>( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet, <span class="keywordtype">bool</span> pushAtHead)</div>
<div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;{</div>
<div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;    <span class="keywordflow">if</span> (packet==0)</div>
<div class="line"><a name="l02813"></a><span class="lineno"> 2813</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l02814"></a><span class="lineno"> 2814</span>&#160;</div>
<div class="line"><a name="l02815"></a><span class="lineno"> 2815</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l02816"></a><span class="lineno"> 2816</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l02817"></a><span class="lineno"> 2817</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a00efeea5877b06d03060947fda233dcb">pluginListTS</a>[i]-&gt;OnPushBackPacket((<span class="keyword">const</span> <span class="keywordtype">char</span>*) packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>);</div>
<div class="line"><a name="l02818"></a><span class="lineno"> 2818</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l02819"></a><span class="lineno"> 2819</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnPushBackPacket((<span class="keyword">const</span> <span class="keywordtype">char</span>*) packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>);</div>
<div class="line"><a name="l02820"></a><span class="lineno"> 2820</span>&#160;</div>
<div class="line"><a name="l02821"></a><span class="lineno"> 2821</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l02822"></a><span class="lineno"> 2822</span>&#160;    <span class="keywordflow">if</span> (pushAtHead)</div>
<div class="line"><a name="l02823"></a><span class="lineno"> 2823</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a3980613e44a80982708b9d1f49fa0fea">PushAtHead</a>(packet,0,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02824"></a><span class="lineno"> 2824</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l02825"></a><span class="lineno"> 2825</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(packet,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02826"></a><span class="lineno"> 2826</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;}</div>
<div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;</div>
<div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02830"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aed618fb97bcab993cc1711473f04c5a2"> 2830</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aed618fb97bcab993cc1711473f04c5a2">RakPeer::ChangeSystemAddress</a>(<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160;{</div>
<div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160;</div>
<div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;    bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a> = 0;</div>
<div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>=systemAddress;</div>
<div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>=guid;</div>
<div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>=<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852ead4295f17e0b333221079add6bfea828d">BufferedCommandStruct::BCS_CHANGE_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(bcs);</div>
<div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;}</div>
<div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02842"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ab225085dd102a7ce6f8e0632fc65ae58"> 2842</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a>* <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ab225085dd102a7ce6f8e0632fc65ae58" title="Returns a packet for you to write to if you want to create a Packet for some reason. You can add it to the receive buffer with PushBackPacket.">RakPeer::AllocatePacket</a>(<span class="keywordtype">unsigned</span> dataSize)</div>
<div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;{</div>
<div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(dataSize, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;}</div>
<div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02847"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5e41683a638340d3a9fefc0eef5430fc"> 2847</a></span>&#160;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a>* <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5e41683a638340d3a9fefc0eef5430fc" title="Get the socket used with a particular active connection. The smart pointer reference counts the RakNe...">RakPeer::GetSocket</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target )</div>
<div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;{</div>
<div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160;    <span class="comment">// Send a query to the thread to get the socket, and return when we got it</span></div>
<div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;    bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>=<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852ead3e133a9de49f4e1768f405d37e9b0c1">BufferedCommandStruct::BCS_GET_SOCKET</a>;</div>
<div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>=target;</div>
<div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>=0;</div>
<div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(bcs);</div>
<div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;</div>
<div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;    <span class="comment">// Block up to one second to get the socket, although it should actually take virtually no time</span></div>
<div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;    <a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml">SocketQueryOutput</a> *sqo;</div>
<div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> stopWaiting = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>()+1000;</div>
<div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetSocket2* &gt;</a> output;</div>
<div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;    <span class="keywordflow">while</span> (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>() &lt; stopWaiting)</div>
<div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;    {</div>
<div class="line"><a name="l02863"></a><span class="lineno"> 2863</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l02864"></a><span class="lineno"> 2864</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l02865"></a><span class="lineno"> 2865</span>&#160;</div>
<div class="line"><a name="l02866"></a><span class="lineno"> 2866</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(0);</div>
<div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;</div>
<div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;        sqo = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeaee4f85f6aa6870a2eb57c533ba13f5">Pop</a>();</div>
<div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;        <span class="keywordflow">if</span> (sqo)</div>
<div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;        {</div>
<div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;            output=sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>;</div>
<div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;            sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">Deallocate</a>(sqo, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;            <span class="keywordflow">if</span> (output.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>())</div>
<div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;                <span class="keywordflow">return</span> output[0];</div>
<div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l02877"></a><span class="lineno"> 2877</span>&#160;        }</div>
<div class="line"><a name="l02878"></a><span class="lineno"> 2878</span>&#160;    }</div>
<div class="line"><a name="l02879"></a><span class="lineno"> 2879</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l02880"></a><span class="lineno"> 2880</span>&#160;}</div>
<div class="line"><a name="l02881"></a><span class="lineno"> 2881</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02882"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8b456c00664ff71b0e8620376462c004"> 2882</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8b456c00664ff71b0e8620376462c004" title="Gets all sockets in use.">RakPeer::GetSockets</a>( <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetSocket2* &gt;</a> &amp;sockets )</div>
<div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160;{</div>
<div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;    sockets.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;</div>
<div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;    <span class="comment">// Send a query to the thread to get the socket, and return when we got it</span></div>
<div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;</div>
<div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;    bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>=<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852ead3e133a9de49f4e1768f405d37e9b0c1">BufferedCommandStruct::BCS_GET_SOCKET</a>;</div>
<div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>=0;</div>
<div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(bcs);</div>
<div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;</div>
<div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;    <span class="comment">// Block up to one second to get the socket, although it should actually take virtually no time</span></div>
<div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;    <a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml">SocketQueryOutput</a> *sqo;</div>
<div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;<span class="comment">//  RakNetSocket2* output;</span></div>
<div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;    <span class="keywordflow">for</span>(;;)</div>
<div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;    {</div>
<div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;</div>
<div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(0);</div>
<div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;</div>
<div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;        sqo = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeaee4f85f6aa6870a2eb57c533ba13f5">Pop</a>();</div>
<div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;        <span class="keywordflow">if</span> (sqo)</div>
<div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160;        {</div>
<div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;            sockets=sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>;</div>
<div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;            sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">Deallocate</a>(sqo, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02911"></a><span class="lineno"> 2911</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;        }</div>
<div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;    }</div>
<div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;}</div>
<div class="line"><a name="l02916"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5685399cbe6e33887f911aadc96965ea"> 2916</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5685399cbe6e33887f911aadc96965ea">RakPeer::ReleaseSockets</a>( <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetSocket2* &gt;</a> &amp;sockets )</div>
<div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;{</div>
<div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;    sockets.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;}</div>
<div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;</div>
<div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160;<span class="comment">// Adds simulated ping and packet loss to the outgoing data flow.</span></div>
<div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;<span class="comment">// To simulate bi-directional ping and packet loss, you should call this on both the sender and the recipient, with half the total ping and maxSendBPS value on each.</span></div>
<div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02926"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a02407ae593277c551cea1524816c3a56"> 2926</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a02407ae593277c551cea1524816c3a56">RakPeer::ApplyNetworkSimulator</a>( <span class="keywordtype">float</span> packetloss, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> minExtraPing, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> extraPingVariance)</div>
<div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;{</div>
<div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>)</div>
<div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;    {</div>
<div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> i;</div>
<div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++)</div>
<div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;            <span class="comment">//for (i=0; i &lt; remoteSystemListSize; i++)</span></div>
<div class="line"><a name="l02934"></a><span class="lineno"> 2934</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[i].reliabilityLayer.ApplyNetworkSimulator(packetloss, minExtraPing, extraPingVariance);</div>
<div class="line"><a name="l02935"></a><span class="lineno"> 2935</span>&#160;    }</div>
<div class="line"><a name="l02936"></a><span class="lineno"> 2936</span>&#160;</div>
<div class="line"><a name="l02937"></a><span class="lineno"> 2937</span>&#160;    _packetloss=packetloss;</div>
<div class="line"><a name="l02938"></a><span class="lineno"> 2938</span>&#160;    _minExtraPing=minExtraPing;</div>
<div class="line"><a name="l02939"></a><span class="lineno"> 2939</span>&#160;    _extraPingVariance=extraPingVariance;</div>
<div class="line"><a name="l02940"></a><span class="lineno"> 2940</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l02941"></a><span class="lineno"> 2941</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l02942"></a><span class="lineno"> 2942</span>&#160;</div>
<div class="line"><a name="l02943"></a><span class="lineno"> 2943</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02944"></a><span class="lineno"> 2944</span>&#160;</div>
<div class="line"><a name="l02945"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43eacd3c80d27df603fe9be59174359b"> 2945</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43eacd3c80d27df603fe9be59174359b">RakPeer::SetPerConnectionOutgoingBandwidthLimit</a>( <span class="keywordtype">unsigned</span> maxBitsPerSecond )</div>
<div class="line"><a name="l02946"></a><span class="lineno"> 2946</span>&#160;{</div>
<div class="line"><a name="l02947"></a><span class="lineno"> 2947</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae60f35f804bc9d7bb3d5472d94b58d89">maxOutgoingBPS</a>=maxBitsPerSecond;</div>
<div class="line"><a name="l02948"></a><span class="lineno"> 2948</span>&#160;}</div>
<div class="line"><a name="l02949"></a><span class="lineno"> 2949</span>&#160;</div>
<div class="line"><a name="l02950"></a><span class="lineno"> 2950</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02951"></a><span class="lineno"> 2951</span>&#160;<span class="comment">// Returns if you previously called ApplyNetworkSimulator</span></div>
<div class="line"><a name="l02952"></a><span class="lineno"> 2952</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02953"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a972f872d20bb187a0bbb92f29d4ae34f"> 2953</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a972f872d20bb187a0bbb92f29d4ae34f">RakPeer::IsNetworkSimulatorActive</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l02954"></a><span class="lineno"> 2954</span>&#160;{</div>
<div class="line"><a name="l02955"></a><span class="lineno"> 2955</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l02956"></a><span class="lineno"> 2956</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> _packetloss&gt;0 || _minExtraPing&gt;0 || _extraPingVariance&gt;0;</div>
<div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02959"></a><span class="lineno"> 2959</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l02960"></a><span class="lineno"> 2960</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l02961"></a><span class="lineno"> 2961</span>&#160;</div>
<div class="line"><a name="l02962"></a><span class="lineno"> 2962</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02963"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae6bc0eceacf0fcaa8054ff5f58264fde"> 2963</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae6bc0eceacf0fcaa8054ff5f58264fde">RakPeer::WriteOutOfBandHeader</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream)</div>
<div class="line"><a name="l02964"></a><span class="lineno"> 2964</span>&#160;{</div>
<div class="line"><a name="l02965"></a><span class="lineno"> 2965</span>&#160;    bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ad80d31153371d37c73e89d11e8be5221">ID_OUT_OF_BAND_INTERNAL</a>);</div>
<div class="line"><a name="l02966"></a><span class="lineno"> 2966</span>&#160;    bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>);</div>
<div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160;    bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;}</div>
<div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02970"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae4f6b423d9968af6edccfd79f95901a6"> 2970</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae4f6b423d9968af6edccfd79f95901a6">RakPeer::SetUserUpdateThread</a>(<span class="keywordtype">void</span> (*_userUpdateThreadPtr)(<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml" title="The main interface for network communications.">RakPeerInterface</a> *, <span class="keywordtype">void</span> *), <span class="keywordtype">void</span> *_userUpdateThreadData)</div>
<div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;{</div>
<div class="line"><a name="l02972"></a><span class="lineno"> 2972</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a20fcdb099d34697499fac5cc66c3cc3a">userUpdateThreadPtr</a>=_userUpdateThreadPtr;</div>
<div class="line"><a name="l02973"></a><span class="lineno"> 2973</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a28a260ba6e476355e67a7c794f4f54d2">userUpdateThreadData</a>=_userUpdateThreadData;</div>
<div class="line"><a name="l02974"></a><span class="lineno"> 2974</span>&#160;}</div>
<div class="line"><a name="l02975"></a><span class="lineno"> 2975</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02976"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8963cfc503044766fde1e73d3a92e245"> 2976</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8963cfc503044766fde1e73d3a92e245">RakPeer::SetIncomingDatagramEventHandler</a>( <span class="keywordtype">bool</span> (*_incomingDatagramEventHandler)(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *) )</div>
<div class="line"><a name="l02977"></a><span class="lineno"> 2977</span>&#160;{</div>
<div class="line"><a name="l02978"></a><span class="lineno"> 2978</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acd6e96da11f40c506d6dfaa9460f9eb8">incomingDatagramEventHandler</a>=_incomingDatagramEventHandler;</div>
<div class="line"><a name="l02979"></a><span class="lineno"> 2979</span>&#160;}</div>
<div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l02981"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a027c0f3a45a90ec530e0ba8113f7f5a4"> 2981</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a027c0f3a45a90ec530e0ba8113f7f5a4">RakPeer::SendOutOfBand</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> dataLength, <span class="keywordtype">unsigned</span> connectionSocketIndex )</div>
<div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;{</div>
<div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>() == <span class="keyword">false</span> )</div>
<div class="line"><a name="l02984"></a><span class="lineno"> 2984</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02985"></a><span class="lineno"> 2985</span>&#160;</div>
<div class="line"><a name="l02986"></a><span class="lineno"> 2986</span>&#160;    <span class="keywordflow">if</span> (host==0  || host[0]==0)</div>
<div class="line"><a name="l02987"></a><span class="lineno"> 2987</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02988"></a><span class="lineno"> 2988</span>&#160;</div>
<div class="line"><a name="l02989"></a><span class="lineno"> 2989</span>&#160;    <span class="comment">// If this assert hits then Startup wasn&#39;t called or the call failed.</span></div>
<div class="line"><a name="l02990"></a><span class="lineno"> 2990</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(connectionSocketIndex &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>());</div>
<div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;</div>
<div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;    <span class="comment">// This is a security measure.  Don&#39;t send data longer than this value</span></div>
<div class="line"><a name="l02993"></a><span class="lineno"> 2993</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(dataLength &lt;= (<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4cf9211b95bb905832531f048bb273c1">MAX_OFFLINE_DATA_LENGTH</a> + <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)+<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)));</div>
<div class="line"><a name="l02994"></a><span class="lineno"> 2994</span>&#160;</div>
<div class="line"><a name="l02995"></a><span class="lineno"> 2995</span>&#160;    <span class="keywordflow">if</span> (host==0)</div>
<div class="line"><a name="l02996"></a><span class="lineno"> 2996</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l02997"></a><span class="lineno"> 2997</span>&#160;</div>
<div class="line"><a name="l02998"></a><span class="lineno"> 2998</span>&#160;    <span class="comment">// 34 bytes</span></div>
<div class="line"><a name="l02999"></a><span class="lineno"> 2999</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream;</div>
<div class="line"><a name="l03000"></a><span class="lineno"> 3000</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae6bc0eceacf0fcaa8054ff5f58264fde">WriteOutOfBandHeader</a>(&amp;bitStream);</div>
<div class="line"><a name="l03001"></a><span class="lineno"> 3001</span>&#160;</div>
<div class="line"><a name="l03002"></a><span class="lineno"> 3002</span>&#160;    <span class="keywordflow">if</span> (dataLength&gt;0)</div>
<div class="line"><a name="l03003"></a><span class="lineno"> 3003</span>&#160;    {</div>
<div class="line"><a name="l03004"></a><span class="lineno"> 3004</span>&#160;        bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(data, dataLength);</div>
<div class="line"><a name="l03005"></a><span class="lineno"> 3005</span>&#160;    }</div>
<div class="line"><a name="l03006"></a><span class="lineno"> 3006</span>&#160;    </div>
<div class="line"><a name="l03007"></a><span class="lineno"> 3007</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> realIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae666a545bcac66fc454c2368b7696b64">GetRakNetSocketFromUserConnectionSocketIndex</a>(connectionSocketIndex);</div>
<div class="line"><a name="l03008"></a><span class="lineno"> 3008</span>&#160;</div>
<div class="line"><a name="l03009"></a><span class="lineno"> 3009</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l03010"></a><span class="lineno"> 3010</span>&#160;<span class="comment">    SystemAddress systemAddress;</span></div>
<div class="line"><a name="l03011"></a><span class="lineno"> 3011</span>&#160;<span class="comment">    systemAddress.FromStringExplicitPort(host,remotePort, socketList[realIndex]-&gt;GetBoundAddress().GetIPVersion());</span></div>
<div class="line"><a name="l03012"></a><span class="lineno"> 3012</span>&#160;<span class="comment">    systemAddress.FixForIPVersion(socketList[realIndex]-&gt;GetBoundAddress());</span></div>
<div class="line"><a name="l03013"></a><span class="lineno"> 3013</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03014"></a><span class="lineno"> 3014</span>&#160;<span class="comment">    unsigned i;</span></div>
<div class="line"><a name="l03015"></a><span class="lineno"> 3015</span>&#160;<span class="comment">    for (i=0; i &lt; pluginListNTS.Size(); i++)</span></div>
<div class="line"><a name="l03016"></a><span class="lineno"> 3016</span>&#160;<span class="comment">        pluginListNTS[i]-&gt;OnDirectSocketSend((const char*)bitStream.GetData(), bitStream.GetNumberOfBitsUsed(), systemAddress);</span></div>
<div class="line"><a name="l03017"></a><span class="lineno"> 3017</span>&#160;<span class="comment">    </span></div>
<div class="line"><a name="l03018"></a><span class="lineno"> 3018</span>&#160;<span class="comment">    SocketLayer::SendTo( socketList[realIndex], (const char*)bitStream.GetData(), (int) bitStream.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l03019"></a><span class="lineno"> 3019</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l03020"></a><span class="lineno"> 3020</span>&#160;</div>
<div class="line"><a name="l03021"></a><span class="lineno"> 3021</span>&#160;    <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l03022"></a><span class="lineno"> 3022</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l03023"></a><span class="lineno"> 3023</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l03024"></a><span class="lineno"> 3024</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">FromStringExplicitPort</a>(host,remotePort, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;GetBoundAddress().GetIPVersion());</div>
<div class="line"><a name="l03025"></a><span class="lineno"> 3025</span>&#160;    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">FixForIPVersion</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;GetBoundAddress());</div>
<div class="line"><a name="l03026"></a><span class="lineno"> 3026</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l03027"></a><span class="lineno"> 3027</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l03028"></a><span class="lineno"> 3028</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*)bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a>, <a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a>), bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a>);</div>
<div class="line"><a name="l03029"></a><span class="lineno"> 3029</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[realIndex]-&gt;Send(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03030"></a><span class="lineno"> 3030</span>&#160;</div>
<div class="line"><a name="l03031"></a><span class="lineno"> 3031</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l03032"></a><span class="lineno"> 3032</span>&#160;}</div>
<div class="line"><a name="l03033"></a><span class="lineno"> 3033</span>&#160;</div>
<div class="line"><a name="l03034"></a><span class="lineno"> 3034</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03035"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1527f04c5af89d3a1a39aaf4c42f6bde"> 3035</a></span>&#160;<a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> * <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1527f04c5af89d3a1a39aaf4c42f6bde" title="Returns a structure containing a large set of network statistics for the specified system...">RakPeer::GetStatistics</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> *rns )</div>
<div class="line"><a name="l03036"></a><span class="lineno"> 3036</span>&#160;{</div>
<div class="line"><a name="l03037"></a><span class="lineno"> 3037</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> staticStatistics;</div>
<div class="line"><a name="l03038"></a><span class="lineno"> 3038</span>&#160;    <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> *systemStats;</div>
<div class="line"><a name="l03039"></a><span class="lineno"> 3039</span>&#160;    <span class="keywordflow">if</span> (rns==0)</div>
<div class="line"><a name="l03040"></a><span class="lineno"> 3040</span>&#160;        systemStats=&amp;staticStatistics;</div>
<div class="line"><a name="l03041"></a><span class="lineno"> 3041</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03042"></a><span class="lineno"> 3042</span>&#160;        systemStats=rns;</div>
<div class="line"><a name="l03043"></a><span class="lineno"> 3043</span>&#160;</div>
<div class="line"><a name="l03044"></a><span class="lineno"> 3044</span>&#160;    <span class="keywordflow">if</span> (systemAddress==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l03045"></a><span class="lineno"> 3045</span>&#160;    {</div>
<div class="line"><a name="l03046"></a><span class="lineno"> 3046</span>&#160;        <span class="keywordtype">bool</span> firstWrite=<span class="keyword">false</span>;</div>
<div class="line"><a name="l03047"></a><span class="lineno"> 3047</span>&#160;        <span class="comment">// Return a crude sum</span></div>
<div class="line"><a name="l03048"></a><span class="lineno"> 3048</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03049"></a><span class="lineno"> 3049</span>&#160;        {</div>
<div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive)</div>
<div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;            {</div>
<div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;                <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> rnsTemp;</div>
<div class="line"><a name="l03053"></a><span class="lineno"> 3053</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3c332dc52b07cebd36c18788634e2132">GetStatistics</a>(&amp;rnsTemp);</div>
<div class="line"><a name="l03054"></a><span class="lineno"> 3054</span>&#160;</div>
<div class="line"><a name="l03055"></a><span class="lineno"> 3055</span>&#160;                <span class="keywordflow">if</span> (firstWrite==<span class="keyword">false</span>)</div>
<div class="line"><a name="l03056"></a><span class="lineno"> 3056</span>&#160;                {</div>
<div class="line"><a name="l03057"></a><span class="lineno"> 3057</span>&#160;                    memcpy(systemStats, &amp;rnsTemp, <span class="keyword">sizeof</span>(<a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a>));</div>
<div class="line"><a name="l03058"></a><span class="lineno"> 3058</span>&#160;                    firstWrite=<span class="keyword">true</span>;</div>
<div class="line"><a name="l03059"></a><span class="lineno"> 3059</span>&#160;                }</div>
<div class="line"><a name="l03060"></a><span class="lineno"> 3060</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l03061"></a><span class="lineno"> 3061</span>&#160;                    (*systemStats)+=rnsTemp;</div>
<div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;            }</div>
<div class="line"><a name="l03063"></a><span class="lineno"> 3063</span>&#160;        }</div>
<div class="line"><a name="l03064"></a><span class="lineno"> 3064</span>&#160;        <span class="keywordflow">return</span> systemStats;</div>
<div class="line"><a name="l03065"></a><span class="lineno"> 3065</span>&#160;    }</div>
<div class="line"><a name="l03066"></a><span class="lineno"> 3066</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03067"></a><span class="lineno"> 3067</span>&#160;    {</div>
<div class="line"><a name="l03068"></a><span class="lineno"> 3068</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * rss;</div>
<div class="line"><a name="l03069"></a><span class="lineno"> 3069</span>&#160;        rss = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span> );</div>
<div class="line"><a name="l03070"></a><span class="lineno"> 3070</span>&#160;        <span class="keywordflow">if</span> ( rss &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a>==<span class="keyword">false</span> )</div>
<div class="line"><a name="l03071"></a><span class="lineno"> 3071</span>&#160;        {</div>
<div class="line"><a name="l03072"></a><span class="lineno"> 3072</span>&#160;            rss-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3c332dc52b07cebd36c18788634e2132">GetStatistics</a>(systemStats);</div>
<div class="line"><a name="l03073"></a><span class="lineno"> 3073</span>&#160;            <span class="keywordflow">return</span> systemStats;</div>
<div class="line"><a name="l03074"></a><span class="lineno"> 3074</span>&#160;        }</div>
<div class="line"><a name="l03075"></a><span class="lineno"> 3075</span>&#160;    }</div>
<div class="line"><a name="l03076"></a><span class="lineno"> 3076</span>&#160;</div>
<div class="line"><a name="l03077"></a><span class="lineno"> 3077</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03078"></a><span class="lineno"> 3078</span>&#160;}</div>
<div class="line"><a name="l03079"></a><span class="lineno"> 3079</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03080"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a65d7c5d4401852bf8968a5ca4dc8efd3"> 3080</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a65d7c5d4401852bf8968a5ca4dc8efd3" title="Returns the list of systems, and statistics for each of those systems Each system has one entry in ea...">RakPeer::GetStatisticsList</a>(<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;SystemAddress&gt;</a> &amp;addresses, <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;RakNetGUID&gt;</a> &amp;guids, <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;RakNetStatistics&gt;</a> &amp;statistics)</div>
<div class="line"><a name="l03081"></a><span class="lineno"> 3081</span>&#160;{</div>
<div class="line"><a name="l03082"></a><span class="lineno"> 3082</span>&#160;    addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03083"></a><span class="lineno"> 3083</span>&#160;    guids.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03084"></a><span class="lineno"> 3084</span>&#160;    statistics.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03085"></a><span class="lineno"> 3085</span>&#160;</div>
<div class="line"><a name="l03086"></a><span class="lineno"> 3086</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l03087"></a><span class="lineno"> 3087</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03088"></a><span class="lineno"> 3088</span>&#160;</div>
<div class="line"><a name="l03089"></a><span class="lineno"> 3089</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l03090"></a><span class="lineno"> 3090</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a>; i++)</div>
<div class="line"><a name="l03091"></a><span class="lineno"> 3091</span>&#160;    {</div>
<div class="line"><a name="l03092"></a><span class="lineno"> 3092</span>&#160;        <span class="keywordflow">if</span> ((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;isActive &amp;&amp;</div>
<div class="line"><a name="l03093"></a><span class="lineno"> 3093</span>&#160;            (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;connectMode==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RakPeer::RemoteSystemStruct::CONNECTED</a>)</div>
<div class="line"><a name="l03094"></a><span class="lineno"> 3094</span>&#160;        {</div>
<div class="line"><a name="l03095"></a><span class="lineno"> 3095</span>&#160;            addresses.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;systemAddress, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l03096"></a><span class="lineno"> 3096</span>&#160;            guids.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;guid, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l03097"></a><span class="lineno"> 3097</span>&#160;            <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> rns;</div>
<div class="line"><a name="l03098"></a><span class="lineno"> 3098</span>&#160;            (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;reliabilityLayer.GetStatistics(&amp;rns);</div>
<div class="line"><a name="l03099"></a><span class="lineno"> 3099</span>&#160;            statistics.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>(rns, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03100"></a><span class="lineno"> 3100</span>&#160;        }</div>
<div class="line"><a name="l03101"></a><span class="lineno"> 3101</span>&#160;    }</div>
<div class="line"><a name="l03102"></a><span class="lineno"> 3102</span>&#160;}</div>
<div class="line"><a name="l03103"></a><span class="lineno"> 3103</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03104"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa4fd68d0b1878c6ba6dea881acbbf380"> 3104</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1527f04c5af89d3a1a39aaf4c42f6bde" title="Returns a structure containing a large set of network statistics for the specified system...">RakPeer::GetStatistics</a>( <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> *rns )</div>
<div class="line"><a name="l03105"></a><span class="lineno"> 3105</span>&#160;{</div>
<div class="line"><a name="l03106"></a><span class="lineno"> 3106</span>&#160;    <span class="keywordflow">if</span> (index &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].isActive)</div>
<div class="line"><a name="l03107"></a><span class="lineno"> 3107</span>&#160;    {</div>
<div class="line"><a name="l03108"></a><span class="lineno"> 3108</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3c332dc52b07cebd36c18788634e2132">GetStatistics</a>(rns);</div>
<div class="line"><a name="l03109"></a><span class="lineno"> 3109</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l03110"></a><span class="lineno"> 3110</span>&#160;    }</div>
<div class="line"><a name="l03111"></a><span class="lineno"> 3111</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l03112"></a><span class="lineno"> 3112</span>&#160;}</div>
<div class="line"><a name="l03113"></a><span class="lineno"> 3113</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03114"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7f1aea30c661ede5de3ead0e70ba80aa"> 3114</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7f1aea30c661ede5de3ead0e70ba80aa" title="how many messages are waiting when you call Receive()">RakPeer::GetReceiveBufferSize</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l03115"></a><span class="lineno"> 3115</span>&#160;{</div>
<div class="line"><a name="l03116"></a><span class="lineno"> 3116</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size;</div>
<div class="line"><a name="l03117"></a><span class="lineno"> 3117</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l03118"></a><span class="lineno"> 3118</span>&#160;    size=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>();</div>
<div class="line"><a name="l03119"></a><span class="lineno"> 3119</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l03120"></a><span class="lineno"> 3120</span>&#160;    <span class="keywordflow">return</span> size;</div>
<div class="line"><a name="l03121"></a><span class="lineno"> 3121</span>&#160;}</div>
<div class="line"><a name="l03122"></a><span class="lineno"> 3122</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03123"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a717d82a0a029c685ed2dcbf3ef90636c"> 3123</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">RakPeer::GetIndexFromSystemAddress</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keywordtype">bool</span> calledFromNetworkThread )<span class="keyword"> const</span></div>
<div class="line"><a name="l03124"></a><span class="lineno"> 3124</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03125"></a><span class="lineno"> 3125</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l03126"></a><span class="lineno"> 3126</span>&#160;</div>
<div class="line"><a name="l03127"></a><span class="lineno"> 3127</span>&#160;    <span class="keywordflow">if</span> ( systemAddress == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> )</div>
<div class="line"><a name="l03128"></a><span class="lineno"> 3128</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l03129"></a><span class="lineno"> 3129</span>&#160;</div>
<div class="line"><a name="l03130"></a><span class="lineno"> 3130</span>&#160;    <span class="keywordflow">if</span> (systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>!=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1 &amp;&amp; systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>==systemAddress &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a>)</div>
<div class="line"><a name="l03131"></a><span class="lineno"> 3131</span>&#160;        <span class="keywordflow">return</span> systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l03132"></a><span class="lineno"> 3132</span>&#160;</div>
<div class="line"><a name="l03133"></a><span class="lineno"> 3133</span>&#160;    <span class="keywordflow">if</span> (calledFromNetworkThread)</div>
<div class="line"><a name="l03134"></a><span class="lineno"> 3134</span>&#160;    {</div>
<div class="line"><a name="l03135"></a><span class="lineno"> 3135</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">GetRemoteSystemIndex</a>(systemAddress);</div>
<div class="line"><a name="l03136"></a><span class="lineno"> 3136</span>&#160;    }</div>
<div class="line"><a name="l03137"></a><span class="lineno"> 3137</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03138"></a><span class="lineno"> 3138</span>&#160;    {</div>
<div class="line"><a name="l03139"></a><span class="lineno"> 3139</span>&#160;        <span class="comment">// remoteSystemList in user and network thread</span></div>
<div class="line"><a name="l03140"></a><span class="lineno"> 3140</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03141"></a><span class="lineno"> 3141</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress == systemAddress )</div>
<div class="line"><a name="l03142"></a><span class="lineno"> 3142</span>&#160;                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l03143"></a><span class="lineno"> 3143</span>&#160;</div>
<div class="line"><a name="l03144"></a><span class="lineno"> 3144</span>&#160;        <span class="comment">// If no active results found, try previously active results.</span></div>
<div class="line"><a name="l03145"></a><span class="lineno"> 3145</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03146"></a><span class="lineno"> 3146</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress == systemAddress )</div>
<div class="line"><a name="l03147"></a><span class="lineno"> 3147</span>&#160;                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l03148"></a><span class="lineno"> 3148</span>&#160;    }</div>
<div class="line"><a name="l03149"></a><span class="lineno"> 3149</span>&#160;</div>
<div class="line"><a name="l03150"></a><span class="lineno"> 3150</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l03151"></a><span class="lineno"> 3151</span>&#160;}</div>
<div class="line"><a name="l03152"></a><span class="lineno"> 3152</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03153"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15ebde783ee7c1bf0cef25c3a1162ff6"> 3153</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15ebde783ee7c1bf0cef25c3a1162ff6">RakPeer::GetIndexFromGuid</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid )</div>
<div class="line"><a name="l03154"></a><span class="lineno"> 3154</span>&#160;{</div>
<div class="line"><a name="l03155"></a><span class="lineno"> 3155</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l03156"></a><span class="lineno"> 3156</span>&#160;</div>
<div class="line"><a name="l03157"></a><span class="lineno"> 3157</span>&#160;    <span class="keywordflow">if</span> ( guid == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a> )</div>
<div class="line"><a name="l03158"></a><span class="lineno"> 3158</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l03159"></a><span class="lineno"> 3159</span>&#160;</div>
<div class="line"><a name="l03160"></a><span class="lineno"> 3160</span>&#160;    <span class="keywordflow">if</span> (guid.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>!=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1 &amp;&amp; guid.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[guid.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>==guid &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ guid.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a> ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a>)</div>
<div class="line"><a name="l03161"></a><span class="lineno"> 3161</span>&#160;        <span class="keywordflow">return</span> guid.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>;</div>
<div class="line"><a name="l03162"></a><span class="lineno"> 3162</span>&#160;</div>
<div class="line"><a name="l03163"></a><span class="lineno"> 3163</span>&#160;    <span class="comment">// remoteSystemList in user and network thread</span></div>
<div class="line"><a name="l03164"></a><span class="lineno"> 3164</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03165"></a><span class="lineno"> 3165</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].guid == guid )</div>
<div class="line"><a name="l03166"></a><span class="lineno"> 3166</span>&#160;            <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l03167"></a><span class="lineno"> 3167</span>&#160;</div>
<div class="line"><a name="l03168"></a><span class="lineno"> 3168</span>&#160;    <span class="comment">// If no active results found, try previously active results.</span></div>
<div class="line"><a name="l03169"></a><span class="lineno"> 3169</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03170"></a><span class="lineno"> 3170</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].guid == guid )</div>
<div class="line"><a name="l03171"></a><span class="lineno"> 3171</span>&#160;            <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l03172"></a><span class="lineno"> 3172</span>&#160;</div>
<div class="line"><a name="l03173"></a><span class="lineno"> 3173</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l03174"></a><span class="lineno"> 3174</span>&#160;}</div>
<div class="line"><a name="l03175"></a><span class="lineno"> 3175</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03176"></a><span class="lineno"> 3176</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l03177"></a><span class="lineno"> 3177</span>&#160;<span class="preprocessor"></span><span class="keywordtype">bool</span> RakPeer::GenerateConnectionRequestChallenge(RequestedConnectionStruct *rcs,<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key" title="Passed to RakPeerInterface::Connect()">PublicKey</a> *publicKey)</div>
<div class="line"><a name="l03178"></a><span class="lineno"> 3178</span>&#160;{</div>
<div class="line"><a name="l03179"></a><span class="lineno"> 3179</span>&#160;    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: In GenerateConnectionRequestChallenge()\n&quot;</span>);</div>
<div class="line"><a name="l03180"></a><span class="lineno"> 3180</span>&#160;</div>
<div class="line"><a name="l03181"></a><span class="lineno"> 3181</span>&#160;    rcs-&gt;client_handshake = 0;</div>
<div class="line"><a name="l03182"></a><span class="lineno"> 3182</span>&#160;    rcs-&gt;publicKeyMode = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa0c9aeda7f6a0bc71b0f19d35835ac2d2" title="The connection is insecure. You can also just pass 0 for the pointer to PublicKey in RakPeerInterface...">PKM_INSECURE_CONNECTION</a>;</div>
<div class="line"><a name="l03183"></a><span class="lineno"> 3183</span>&#160;</div>
<div class="line"><a name="l03184"></a><span class="lineno"> 3184</span>&#160;    <span class="keywordflow">if</span> (!publicKey) <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l03185"></a><span class="lineno"> 3185</span>&#160;</div>
<div class="line"><a name="l03186"></a><span class="lineno"> 3186</span>&#160;    <span class="keywordflow">switch</span> (publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a9b1c0db35385c0f808c1cd7ebce22057" title="How to interpret the public key, see above.">publicKeyMode</a>)</div>
<div class="line"><a name="l03187"></a><span class="lineno"> 3187</span>&#160;    {</div>
<div class="line"><a name="l03188"></a><span class="lineno"> 3188</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l03189"></a><span class="lineno"> 3189</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa0c9aeda7f6a0bc71b0f19d35835ac2d2" title="The connection is insecure. You can also just pass 0 for the pointer to PublicKey in RakPeerInterface...">PKM_INSECURE_CONNECTION</a>:</div>
<div class="line"><a name="l03190"></a><span class="lineno"> 3190</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03191"></a><span class="lineno"> 3191</span>&#160;</div>
<div class="line"><a name="l03192"></a><span class="lineno"> 3192</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa8e840dbaa6333a47a419de4690ff6dc3">PKM_ACCEPT_ANY_PUBLIC_KEY</a>:</div>
<div class="line"><a name="l03193"></a><span class="lineno"> 3193</span>&#160;        CAT_OBJCLR(rcs-&gt;remote_public_key);</div>
<div class="line"><a name="l03194"></a><span class="lineno"> 3194</span>&#160;        rcs-&gt;client_handshake = SLNet::OP_NEW&lt;cat::ClientEasyHandshake&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03195"></a><span class="lineno"> 3195</span>&#160;</div>
<div class="line"><a name="l03196"></a><span class="lineno"> 3196</span>&#160;        rcs-&gt;publicKeyMode = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa8e840dbaa6333a47a419de4690ff6dc3">PKM_ACCEPT_ANY_PUBLIC_KEY</a>;</div>
<div class="line"><a name="l03197"></a><span class="lineno"> 3197</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03198"></a><span class="lineno"> 3198</span>&#160;</div>
<div class="line"><a name="l03199"></a><span class="lineno"> 3199</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aab798e0a1be74d9eca04bfa2b988cd9ff">PKM_USE_TWO_WAY_AUTHENTICATION</a>:</div>
<div class="line"><a name="l03200"></a><span class="lineno"> 3200</span>&#160;        <span class="keywordflow">if</span> (publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a552d1c8d7770e08266c9b06b98801c8b" title="(Optional) Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES">myPublicKey</a> == 0 || publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aa5442f44e03891100d46096b3fec0f09" title="(Optional) Pointer to a private key of length cat::EasyHandshake::PRIVATE_KEY_BYTES">myPrivateKey</a> == 0 ||</div>
<div class="line"><a name="l03201"></a><span class="lineno"> 3201</span>&#160;            publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a301ed1ea938e5bec9d5c9dd2d82f93df" title="Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample...">remoteServerPublicKey</a> == 0)</div>
<div class="line"><a name="l03202"></a><span class="lineno"> 3202</span>&#160;        {</div>
<div class="line"><a name="l03203"></a><span class="lineno"> 3203</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l03204"></a><span class="lineno"> 3204</span>&#160;        }</div>
<div class="line"><a name="l03205"></a><span class="lineno"> 3205</span>&#160;</div>
<div class="line"><a name="l03206"></a><span class="lineno"> 3206</span>&#160;        rcs-&gt;client_handshake = SLNet::OP_NEW&lt;cat::ClientEasyHandshake&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03207"></a><span class="lineno"> 3207</span>&#160;        memcpy(rcs-&gt;remote_public_key, publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a301ed1ea938e5bec9d5c9dd2d82f93df" title="Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample...">remoteServerPublicKey</a>, cat::EasyHandshake::PUBLIC_KEY_BYTES);</div>
<div class="line"><a name="l03208"></a><span class="lineno"> 3208</span>&#160;</div>
<div class="line"><a name="l03209"></a><span class="lineno"> 3209</span>&#160;        <span class="keywordflow">if</span> (!rcs-&gt;client_handshake-&gt;Initialize(publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a301ed1ea938e5bec9d5c9dd2d82f93df" title="Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample...">remoteServerPublicKey</a>) ||</div>
<div class="line"><a name="l03210"></a><span class="lineno"> 3210</span>&#160;            !rcs-&gt;client_handshake-&gt;SetIdentity(publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a552d1c8d7770e08266c9b06b98801c8b" title="(Optional) Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES">myPublicKey</a>, publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aa5442f44e03891100d46096b3fec0f09" title="(Optional) Pointer to a private key of length cat::EasyHandshake::PRIVATE_KEY_BYTES">myPrivateKey</a>) ||</div>
<div class="line"><a name="l03211"></a><span class="lineno"> 3211</span>&#160;            !rcs-&gt;client_handshake-&gt;GenerateChallenge(rcs-&gt;handshakeChallenge))</div>
<div class="line"><a name="l03212"></a><span class="lineno"> 3212</span>&#160;        {</div>
<div class="line"><a name="l03213"></a><span class="lineno"> 3213</span>&#160;            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Failure initializing new client_handshake object with identity for this RequestedConnectionStruct\n&quot;</span>);</div>
<div class="line"><a name="l03214"></a><span class="lineno"> 3214</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03215"></a><span class="lineno"> 3215</span>&#160;            rcs-&gt;client_handshake=0;</div>
<div class="line"><a name="l03216"></a><span class="lineno"> 3216</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l03217"></a><span class="lineno"> 3217</span>&#160;        }</div>
<div class="line"><a name="l03218"></a><span class="lineno"> 3218</span>&#160;</div>
<div class="line"><a name="l03219"></a><span class="lineno"> 3219</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Success initializing new client handshake object with identity for this RequestedConnectionStruct -- pre-generated challenge\n&quot;</span>);</div>
<div class="line"><a name="l03220"></a><span class="lineno"> 3220</span>&#160;</div>
<div class="line"><a name="l03221"></a><span class="lineno"> 3221</span>&#160;        rcs-&gt;publicKeyMode = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aab798e0a1be74d9eca04bfa2b988cd9ff">PKM_USE_TWO_WAY_AUTHENTICATION</a>;</div>
<div class="line"><a name="l03222"></a><span class="lineno"> 3222</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03223"></a><span class="lineno"> 3223</span>&#160;</div>
<div class="line"><a name="l03224"></a><span class="lineno"> 3224</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa3f4f835881b1bda20ee59755f5f5e6de">PKM_USE_KNOWN_PUBLIC_KEY</a>:</div>
<div class="line"><a name="l03225"></a><span class="lineno"> 3225</span>&#160;        <span class="keywordflow">if</span> (publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a301ed1ea938e5bec9d5c9dd2d82f93df" title="Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample...">remoteServerPublicKey</a> == 0)</div>
<div class="line"><a name="l03226"></a><span class="lineno"> 3226</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l03227"></a><span class="lineno"> 3227</span>&#160;</div>
<div class="line"><a name="l03228"></a><span class="lineno"> 3228</span>&#160;        rcs-&gt;client_handshake = SLNet::OP_NEW&lt;cat::ClientEasyHandshake&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03229"></a><span class="lineno"> 3229</span>&#160;        memcpy(rcs-&gt;remote_public_key, publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a301ed1ea938e5bec9d5c9dd2d82f93df" title="Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample...">remoteServerPublicKey</a>, cat::EasyHandshake::PUBLIC_KEY_BYTES);</div>
<div class="line"><a name="l03230"></a><span class="lineno"> 3230</span>&#160;</div>
<div class="line"><a name="l03231"></a><span class="lineno"> 3231</span>&#160;        <span class="keywordflow">if</span> (!rcs-&gt;client_handshake-&gt;Initialize(publicKey-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a301ed1ea938e5bec9d5c9dd2d82f93df" title="Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample...">remoteServerPublicKey</a>) ||</div>
<div class="line"><a name="l03232"></a><span class="lineno"> 3232</span>&#160;            !rcs-&gt;client_handshake-&gt;GenerateChallenge(rcs-&gt;handshakeChallenge))</div>
<div class="line"><a name="l03233"></a><span class="lineno"> 3233</span>&#160;        {</div>
<div class="line"><a name="l03234"></a><span class="lineno"> 3234</span>&#160;            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Failure initializing new client_handshake object for this RequestedConnectionStruct\n&quot;</span>);</div>
<div class="line"><a name="l03235"></a><span class="lineno"> 3235</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03236"></a><span class="lineno"> 3236</span>&#160;            rcs-&gt;client_handshake=0;</div>
<div class="line"><a name="l03237"></a><span class="lineno"> 3237</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l03238"></a><span class="lineno"> 3238</span>&#160;        }</div>
<div class="line"><a name="l03239"></a><span class="lineno"> 3239</span>&#160;</div>
<div class="line"><a name="l03240"></a><span class="lineno"> 3240</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Success initializing new client handshake object for this RequestedConnectionStruct -- pre-generated challenge\n&quot;</span>);</div>
<div class="line"><a name="l03241"></a><span class="lineno"> 3241</span>&#160;</div>
<div class="line"><a name="l03242"></a><span class="lineno"> 3242</span>&#160;        rcs-&gt;publicKeyMode = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa3f4f835881b1bda20ee59755f5f5e6de">PKM_USE_KNOWN_PUBLIC_KEY</a>;</div>
<div class="line"><a name="l03243"></a><span class="lineno"> 3243</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03244"></a><span class="lineno"> 3244</span>&#160;    }</div>
<div class="line"><a name="l03245"></a><span class="lineno"> 3245</span>&#160;</div>
<div class="line"><a name="l03246"></a><span class="lineno"> 3246</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l03247"></a><span class="lineno"> 3247</span>&#160;}</div>
<div class="line"><a name="l03248"></a><span class="lineno"> 3248</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l03249"></a><span class="lineno"> 3249</span>&#160;<span class="preprocessor"></span><span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03250"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a30ba07976c97a30115821e7d9cf01a17"> 3250</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3a">ConnectionAttemptResult</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a556ea6d3911c9e251fc5ffb2c07edee1">RakPeer::SendConnectionRequest</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keyword">const</span> <span class="keywordtype">char</span> *passwordData, <span class="keywordtype">int</span> passwordDataLength, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key" title="Passed to RakPeerInterface::Connect()">PublicKey</a> *publicKey, <span class="keywordtype">unsigned</span> connectionSocketIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> extraData, <span class="keywordtype">unsigned</span> sendConnectionAttemptCount, <span class="keywordtype">unsigned</span> timeBetweenSendConnectionAttemptsMS, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutTime )</div>
<div class="line"><a name="l03251"></a><span class="lineno"> 3251</span>&#160;{</div>
<div class="line"><a name="l03252"></a><span class="lineno"> 3252</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(passwordDataLength &lt;= 256);</div>
<div class="line"><a name="l03253"></a><span class="lineno"> 3253</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(remotePort!=0);</div>
<div class="line"><a name="l03254"></a><span class="lineno"> 3254</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress;</div>
<div class="line"><a name="l03255"></a><span class="lineno"> 3255</span>&#160;    <span class="keywordflow">if</span> (!systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">FromStringExplicitPort</a>(host,remotePort,<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[connectionSocketIndex]-&gt;GetBoundAddress().GetIPVersion()))</div>
<div class="line"><a name="l03256"></a><span class="lineno"> 3256</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa63f0a3de6ad4181844f6de2d07bc2273">CANNOT_RESOLVE_DOMAIN_NAME</a>;</div>
<div class="line"><a name="l03257"></a><span class="lineno"> 3257</span>&#160;</div>
<div class="line"><a name="l03258"></a><span class="lineno"> 3258</span>&#160;    <span class="comment">// Already connected?</span></div>
<div class="line"><a name="l03259"></a><span class="lineno"> 3259</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>(systemAddress, <span class="keyword">false</span>, <span class="keyword">true</span>))</div>
<div class="line"><a name="l03260"></a><span class="lineno"> 3260</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa05a8300a2a0b64b7007e2c98f7030b57">ALREADY_CONNECTED_TO_ENDPOINT</a>;</div>
<div class="line"><a name="l03261"></a><span class="lineno"> 3261</span>&#160;</div>
<div class="line"><a name="l03262"></a><span class="lineno"> 3262</span>&#160;    <span class="comment">//RequestedConnectionStruct *rcs = (RequestedConnectionStruct *) rakMalloc_Ex(sizeof(RequestedConnectionStruct), _FILE_AND_LINE_);</span></div>
<div class="line"><a name="l03263"></a><span class="lineno"> 3263</span>&#160;    <a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml">RequestedConnectionStruct</a> *rcs = SLNet::OP_NEW&lt;RequestedConnectionStruct&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03264"></a><span class="lineno"> 3264</span>&#160;</div>
<div class="line"><a name="l03265"></a><span class="lineno"> 3265</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>=systemAddress;</div>
<div class="line"><a name="l03266"></a><span class="lineno"> 3266</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a69c920b5c29fd47be2983c7085f7ae97">nextRequestTime</a>= <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l03267"></a><span class="lineno"> 3267</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a>=0;</div>
<div class="line"><a name="l03268"></a><span class="lineno"> 3268</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abc09ef34c18e8392435b765918719f88">data</a>=0;</div>
<div class="line"><a name="l03269"></a><span class="lineno"> 3269</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a>=0;</div>
<div class="line"><a name="l03270"></a><span class="lineno"> 3270</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a346b091801772692ca284e543f5b835d">extraData</a>=extraData;</div>
<div class="line"><a name="l03271"></a><span class="lineno"> 3271</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a289662f5011cad7efab244af18fecb60">socketIndex</a>=connectionSocketIndex;</div>
<div class="line"><a name="l03272"></a><span class="lineno"> 3272</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#afeed335c2c0cb0959867454c88005883">actionToTake</a>=<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a88e713318705d54ebdc502ddde977497aacba564b90938bd259399c78aa1af3b1">RequestedConnectionStruct::CONNECT</a>;</div>
<div class="line"><a name="l03273"></a><span class="lineno"> 3273</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>=sendConnectionAttemptCount;</div>
<div class="line"><a name="l03274"></a><span class="lineno"> 3274</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a3bd6cadad9dc734293ceb8544a83b00c">timeBetweenSendConnectionAttemptsMS</a>=timeBetweenSendConnectionAttemptsMS;</div>
<div class="line"><a name="l03275"></a><span class="lineno"> 3275</span>&#160;    memcpy(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#aeca8c43876bfa7e1d48c8666f670e52b">outgoingPassword</a>, passwordData, passwordDataLength);</div>
<div class="line"><a name="l03276"></a><span class="lineno"> 3276</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a22d597496cbad49ca972d7affd4e203f">outgoingPasswordLength</a>=(<span class="keywordtype">unsigned</span> char) passwordDataLength;</div>
<div class="line"><a name="l03277"></a><span class="lineno"> 3277</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a6ece6e5171327a59002ff3d4581a7032">timeoutTime</a>=timeoutTime;</div>
<div class="line"><a name="l03278"></a><span class="lineno"> 3278</span>&#160;</div>
<div class="line"><a name="l03279"></a><span class="lineno"> 3279</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l03280"></a><span class="lineno"> 3280</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: In SendConnectionRequest()\n&quot;</span>);</div>
<div class="line"><a name="l03281"></a><span class="lineno"> 3281</span>&#160;    <span class="keywordflow">if</span> (!GenerateConnectionRequestChallenge(rcs,publicKey))</div>
<div class="line"><a name="l03282"></a><span class="lineno"> 3282</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aac9ed35a31823a92338932b90daad030d">SECURITY_INITIALIZATION_FAILED</a>;</div>
<div class="line"><a name="l03283"></a><span class="lineno"> 3283</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l03284"></a><span class="lineno"> 3284</span>&#160;<span class="preprocessor"></span>    (void) publicKey;</div>
<div class="line"><a name="l03285"></a><span class="lineno"> 3285</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l03286"></a><span class="lineno"> 3286</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l03287"></a><span class="lineno"> 3287</span>&#160;    <span class="comment">// Return false if already pending, else push on queue</span></div>
<div class="line"><a name="l03288"></a><span class="lineno"> 3288</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;</div>
<div class="line"><a name="l03289"></a><span class="lineno"> 3289</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l03290"></a><span class="lineno"> 3290</span>&#160;    <span class="keywordflow">for</span> (; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l03291"></a><span class="lineno"> 3291</span>&#160;    {</div>
<div class="line"><a name="l03292"></a><span class="lineno"> 3292</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i]-&gt;systemAddress==systemAddress)</div>
<div class="line"><a name="l03293"></a><span class="lineno"> 3293</span>&#160;        {</div>
<div class="line"><a name="l03294"></a><span class="lineno"> 3294</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l03295"></a><span class="lineno"> 3295</span>&#160;            <span class="comment">// Not necessary</span></div>
<div class="line"><a name="l03296"></a><span class="lineno"> 3296</span>&#160;            <span class="comment">//SLNet::OP_DELETE(rcs-&gt;client_handshake,_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l03297"></a><span class="lineno"> 3297</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03298"></a><span class="lineno"> 3298</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa141986ebfa53cd8c24553aa56ff7b06b">CONNECTION_ATTEMPT_ALREADY_IN_PROGRESS</a>;</div>
<div class="line"><a name="l03299"></a><span class="lineno"> 3299</span>&#160;        }</div>
<div class="line"><a name="l03300"></a><span class="lineno"> 3300</span>&#160;    }</div>
<div class="line"><a name="l03301"></a><span class="lineno"> 3301</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(rcs, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l03302"></a><span class="lineno"> 3302</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l03303"></a><span class="lineno"> 3303</span>&#160;</div>
<div class="line"><a name="l03304"></a><span class="lineno"> 3304</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa0a136aa63c90c79379ed3958e4935560">CONNECTION_ATTEMPT_STARTED</a>;</div>
<div class="line"><a name="l03305"></a><span class="lineno"> 3305</span>&#160;}</div>
<div class="line"><a name="l03306"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a556ea6d3911c9e251fc5ffb2c07edee1"> 3306</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3a">ConnectionAttemptResult</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a556ea6d3911c9e251fc5ffb2c07edee1">RakPeer::SendConnectionRequest</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <span class="keyword">const</span> <span class="keywordtype">char</span> *passwordData, <span class="keywordtype">int</span> passwordDataLength, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key" title="Passed to RakPeerInterface::Connect()">PublicKey</a> *publicKey, <span class="keywordtype">unsigned</span> connectionSocketIndex, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> extraData, <span class="keywordtype">unsigned</span> sendConnectionAttemptCount, <span class="keywordtype">unsigned</span> timeBetweenSendConnectionAttemptsMS, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> timeoutTime, <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a>* socket )</div>
<div class="line"><a name="l03307"></a><span class="lineno"> 3307</span>&#160;{</div>
<div class="line"><a name="l03308"></a><span class="lineno"> 3308</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(passwordDataLength &lt;= 256);</div>
<div class="line"><a name="l03309"></a><span class="lineno"> 3309</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress;</div>
<div class="line"><a name="l03310"></a><span class="lineno"> 3310</span>&#160;    systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">FromStringExplicitPort</a>(host,remotePort);</div>
<div class="line"><a name="l03311"></a><span class="lineno"> 3311</span>&#160;</div>
<div class="line"><a name="l03312"></a><span class="lineno"> 3312</span>&#160;    <span class="comment">// Already connected?</span></div>
<div class="line"><a name="l03313"></a><span class="lineno"> 3313</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>(systemAddress, <span class="keyword">false</span>, <span class="keyword">true</span>))</div>
<div class="line"><a name="l03314"></a><span class="lineno"> 3314</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa05a8300a2a0b64b7007e2c98f7030b57">ALREADY_CONNECTED_TO_ENDPOINT</a>;</div>
<div class="line"><a name="l03315"></a><span class="lineno"> 3315</span>&#160;</div>
<div class="line"><a name="l03316"></a><span class="lineno"> 3316</span>&#160;    <span class="comment">//RequestedConnectionStruct *rcs = (RequestedConnectionStruct *) rakMalloc_Ex(sizeof(RequestedConnectionStruct), _FILE_AND_LINE_);</span></div>
<div class="line"><a name="l03317"></a><span class="lineno"> 3317</span>&#160;    <a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml">RequestedConnectionStruct</a> *rcs = SLNet::OP_NEW&lt;RequestedConnectionStruct&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03318"></a><span class="lineno"> 3318</span>&#160;</div>
<div class="line"><a name="l03319"></a><span class="lineno"> 3319</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>=systemAddress;</div>
<div class="line"><a name="l03320"></a><span class="lineno"> 3320</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a69c920b5c29fd47be2983c7085f7ae97">nextRequestTime</a>= <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l03321"></a><span class="lineno"> 3321</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a>=0;</div>
<div class="line"><a name="l03322"></a><span class="lineno"> 3322</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abc09ef34c18e8392435b765918719f88">data</a>=0;</div>
<div class="line"><a name="l03323"></a><span class="lineno"> 3323</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a>=0;</div>
<div class="line"><a name="l03324"></a><span class="lineno"> 3324</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a346b091801772692ca284e543f5b835d">extraData</a>=extraData;</div>
<div class="line"><a name="l03325"></a><span class="lineno"> 3325</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a289662f5011cad7efab244af18fecb60">socketIndex</a>=connectionSocketIndex;</div>
<div class="line"><a name="l03326"></a><span class="lineno"> 3326</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#afeed335c2c0cb0959867454c88005883">actionToTake</a>=<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a88e713318705d54ebdc502ddde977497aacba564b90938bd259399c78aa1af3b1">RequestedConnectionStruct::CONNECT</a>;</div>
<div class="line"><a name="l03327"></a><span class="lineno"> 3327</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>=sendConnectionAttemptCount;</div>
<div class="line"><a name="l03328"></a><span class="lineno"> 3328</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a3bd6cadad9dc734293ceb8544a83b00c">timeBetweenSendConnectionAttemptsMS</a>=timeBetweenSendConnectionAttemptsMS;</div>
<div class="line"><a name="l03329"></a><span class="lineno"> 3329</span>&#160;    memcpy(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#aeca8c43876bfa7e1d48c8666f670e52b">outgoingPassword</a>, passwordData, passwordDataLength);</div>
<div class="line"><a name="l03330"></a><span class="lineno"> 3330</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a22d597496cbad49ca972d7affd4e203f">outgoingPasswordLength</a>=(<span class="keywordtype">unsigned</span> char) passwordDataLength;</div>
<div class="line"><a name="l03331"></a><span class="lineno"> 3331</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a6ece6e5171327a59002ff3d4581a7032">timeoutTime</a>=timeoutTime;</div>
<div class="line"><a name="l03332"></a><span class="lineno"> 3332</span>&#160;    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a>=socket;</div>
<div class="line"><a name="l03333"></a><span class="lineno"> 3333</span>&#160;</div>
<div class="line"><a name="l03334"></a><span class="lineno"> 3334</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l03335"></a><span class="lineno"> 3335</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (!GenerateConnectionRequestChallenge(rcs,publicKey))</div>
<div class="line"><a name="l03336"></a><span class="lineno"> 3336</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aac9ed35a31823a92338932b90daad030d">SECURITY_INITIALIZATION_FAILED</a>;</div>
<div class="line"><a name="l03337"></a><span class="lineno"> 3337</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l03338"></a><span class="lineno"> 3338</span>&#160;<span class="preprocessor"></span>    (void) publicKey;</div>
<div class="line"><a name="l03339"></a><span class="lineno"> 3339</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l03340"></a><span class="lineno"> 3340</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l03341"></a><span class="lineno"> 3341</span>&#160;    <span class="comment">// Return false if already pending, else push on queue</span></div>
<div class="line"><a name="l03342"></a><span class="lineno"> 3342</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;</div>
<div class="line"><a name="l03343"></a><span class="lineno"> 3343</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l03344"></a><span class="lineno"> 3344</span>&#160;    <span class="keywordflow">for</span> (; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l03345"></a><span class="lineno"> 3345</span>&#160;    {</div>
<div class="line"><a name="l03346"></a><span class="lineno"> 3346</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i]-&gt;systemAddress==systemAddress)</div>
<div class="line"><a name="l03347"></a><span class="lineno"> 3347</span>&#160;        {</div>
<div class="line"><a name="l03348"></a><span class="lineno"> 3348</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l03349"></a><span class="lineno"> 3349</span>&#160;            <span class="comment">// Not necessary</span></div>
<div class="line"><a name="l03350"></a><span class="lineno"> 3350</span>&#160;            <span class="comment">//SLNet::OP_DELETE(rcs-&gt;client_handshake,_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l03351"></a><span class="lineno"> 3351</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03352"></a><span class="lineno"> 3352</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa141986ebfa53cd8c24553aa56ff7b06b">CONNECTION_ATTEMPT_ALREADY_IN_PROGRESS</a>;</div>
<div class="line"><a name="l03353"></a><span class="lineno"> 3353</span>&#160;        }</div>
<div class="line"><a name="l03354"></a><span class="lineno"> 3354</span>&#160;    }</div>
<div class="line"><a name="l03355"></a><span class="lineno"> 3355</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(rcs, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l03356"></a><span class="lineno"> 3356</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l03357"></a><span class="lineno"> 3357</span>&#160;</div>
<div class="line"><a name="l03358"></a><span class="lineno"> 3358</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa0a136aa63c90c79379ed3958e4935560">CONNECTION_ATTEMPT_STARTED</a>;</div>
<div class="line"><a name="l03359"></a><span class="lineno"> 3359</span>&#160;}</div>
<div class="line"><a name="l03360"></a><span class="lineno"> 3360</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03361"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f3967447435d11f7fcb8ca790e19050"> 3361</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f3967447435d11f7fcb8ca790e19050">RakPeer::ValidateRemoteSystemLookup</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l03362"></a><span class="lineno"> 3362</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03363"></a><span class="lineno"> 3363</span>&#160;}</div>
<div class="line"><a name="l03364"></a><span class="lineno"> 3364</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03365"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0"> 3365</a></span>&#160;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">RakPeer::GetRemoteSystem</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> calledFromNetworkThread, <span class="keywordtype">bool</span> onlyActive )<span class="keyword"> const</span></div>
<div class="line"><a name="l03366"></a><span class="lineno"> 3366</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03367"></a><span class="lineno"> 3367</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l03368"></a><span class="lineno"> 3368</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2259cca1a81b5b8a5cb94c26af2aa7d1">GetRemoteSystemFromGUID</a>(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>, onlyActive);</div>
<div class="line"><a name="l03369"></a><span class="lineno"> 3369</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03370"></a><span class="lineno"> 3370</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>, calledFromNetworkThread, onlyActive);</div>
<div class="line"><a name="l03371"></a><span class="lineno"> 3371</span>&#160;}</div>
<div class="line"><a name="l03372"></a><span class="lineno"> 3372</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03373"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531"> 3373</a></span>&#160;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">RakPeer::GetRemoteSystemFromSystemAddress</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keywordtype">bool</span> calledFromNetworkThread, <span class="keywordtype">bool</span> onlyActive )<span class="keyword"> const</span></div>
<div class="line"><a name="l03374"></a><span class="lineno"> 3374</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03375"></a><span class="lineno"> 3375</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l03376"></a><span class="lineno"> 3376</span>&#160;</div>
<div class="line"><a name="l03377"></a><span class="lineno"> 3377</span>&#160;    <span class="keywordflow">if</span> ( systemAddress == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> )</div>
<div class="line"><a name="l03378"></a><span class="lineno"> 3378</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03379"></a><span class="lineno"> 3379</span>&#160;</div>
<div class="line"><a name="l03380"></a><span class="lineno"> 3380</span>&#160;    <span class="keywordflow">if</span> (calledFromNetworkThread)</div>
<div class="line"><a name="l03381"></a><span class="lineno"> 3381</span>&#160;    {</div>
<div class="line"><a name="l03382"></a><span class="lineno"> 3382</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">GetRemoteSystemIndex</a>(systemAddress);</div>
<div class="line"><a name="l03383"></a><span class="lineno"> 3383</span>&#160;        <span class="keywordflow">if</span> (index!=(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1)</div>
<div class="line"><a name="l03384"></a><span class="lineno"> 3384</span>&#160;        {</div>
<div class="line"><a name="l03385"></a><span class="lineno"> 3385</span>&#160;            <span class="keywordflow">if</span> (onlyActive==<span class="keyword">false</span> || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ index ].isActive==<span class="keyword">true</span> )</div>
<div class="line"><a name="l03386"></a><span class="lineno"> 3386</span>&#160;            {</div>
<div class="line"><a name="l03387"></a><span class="lineno"> 3387</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].systemAddress==systemAddress);</div>
<div class="line"><a name="l03388"></a><span class="lineno"> 3388</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> + index;</div>
<div class="line"><a name="l03389"></a><span class="lineno"> 3389</span>&#160;            }</div>
<div class="line"><a name="l03390"></a><span class="lineno"> 3390</span>&#160;        }</div>
<div class="line"><a name="l03391"></a><span class="lineno"> 3391</span>&#160;    }</div>
<div class="line"><a name="l03392"></a><span class="lineno"> 3392</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03393"></a><span class="lineno"> 3393</span>&#160;    {</div>
<div class="line"><a name="l03394"></a><span class="lineno"> 3394</span>&#160;        <span class="keywordtype">int</span> deadConnectionIndex=-1;</div>
<div class="line"><a name="l03395"></a><span class="lineno"> 3395</span>&#160;</div>
<div class="line"><a name="l03396"></a><span class="lineno"> 3396</span>&#160;        <span class="comment">// Active connections take priority.  But if there are no active connections, return the first systemAddress match found</span></div>
<div class="line"><a name="l03397"></a><span class="lineno"> 3397</span>&#160;        <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03398"></a><span class="lineno"> 3398</span>&#160;        {</div>
<div class="line"><a name="l03399"></a><span class="lineno"> 3399</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress == systemAddress)</div>
<div class="line"><a name="l03400"></a><span class="lineno"> 3400</span>&#160;            {</div>
<div class="line"><a name="l03401"></a><span class="lineno"> 3401</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive )</div>
<div class="line"><a name="l03402"></a><span class="lineno"> 3402</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> + i;</div>
<div class="line"><a name="l03403"></a><span class="lineno"> 3403</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (deadConnectionIndex==-1)</div>
<div class="line"><a name="l03404"></a><span class="lineno"> 3404</span>&#160;                    deadConnectionIndex=i;</div>
<div class="line"><a name="l03405"></a><span class="lineno"> 3405</span>&#160;            }</div>
<div class="line"><a name="l03406"></a><span class="lineno"> 3406</span>&#160;        }</div>
<div class="line"><a name="l03407"></a><span class="lineno"> 3407</span>&#160;</div>
<div class="line"><a name="l03408"></a><span class="lineno"> 3408</span>&#160;        <span class="keywordflow">if</span> (deadConnectionIndex!=-1 &amp;&amp; onlyActive==<span class="keyword">false</span>)</div>
<div class="line"><a name="l03409"></a><span class="lineno"> 3409</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> + deadConnectionIndex;</div>
<div class="line"><a name="l03410"></a><span class="lineno"> 3410</span>&#160;    }</div>
<div class="line"><a name="l03411"></a><span class="lineno"> 3411</span>&#160;</div>
<div class="line"><a name="l03412"></a><span class="lineno"> 3412</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03413"></a><span class="lineno"> 3413</span>&#160;}</div>
<div class="line"><a name="l03414"></a><span class="lineno"> 3414</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03415"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2259cca1a81b5b8a5cb94c26af2aa7d1"> 3415</a></span>&#160;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2259cca1a81b5b8a5cb94c26af2aa7d1">RakPeer::GetRemoteSystemFromGUID</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid, <span class="keywordtype">bool</span> onlyActive )<span class="keyword"> const</span></div>
<div class="line"><a name="l03416"></a><span class="lineno"> 3416</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03417"></a><span class="lineno"> 3417</span>&#160;    <span class="keywordflow">if</span> (guid==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l03418"></a><span class="lineno"> 3418</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03419"></a><span class="lineno"> 3419</span>&#160;</div>
<div class="line"><a name="l03420"></a><span class="lineno"> 3420</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l03421"></a><span class="lineno"> 3421</span>&#160;    <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03422"></a><span class="lineno"> 3422</span>&#160;    {</div>
<div class="line"><a name="l03423"></a><span class="lineno"> 3423</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].guid == guid &amp;&amp; (onlyActive==<span class="keyword">false</span> || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive))</div>
<div class="line"><a name="l03424"></a><span class="lineno"> 3424</span>&#160;        {</div>
<div class="line"><a name="l03425"></a><span class="lineno"> 3425</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> + i;</div>
<div class="line"><a name="l03426"></a><span class="lineno"> 3426</span>&#160;        }</div>
<div class="line"><a name="l03427"></a><span class="lineno"> 3427</span>&#160;    }</div>
<div class="line"><a name="l03428"></a><span class="lineno"> 3428</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03429"></a><span class="lineno"> 3429</span>&#160;}</div>
<div class="line"><a name="l03430"></a><span class="lineno"> 3430</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03431"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa5bcdfc861e18f76e3baf317eb998cfc"> 3431</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa5bcdfc861e18f76e3baf317eb998cfc" title="Parse out a connection request packet.">RakPeer::ParseConnectionRequestPacket</a>( <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *remoteSystem, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keywordtype">int</span> byteSize )</div>
<div class="line"><a name="l03432"></a><span class="lineno"> 3432</span>&#160;{</div>
<div class="line"><a name="l03433"></a><span class="lineno"> 3433</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data,byteSize,<span class="keyword">false</span>);</div>
<div class="line"><a name="l03434"></a><span class="lineno"> 3434</span>&#160;    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l03435"></a><span class="lineno"> 3435</span>&#160;    <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid;</div>
<div class="line"><a name="l03436"></a><span class="lineno"> 3436</span>&#160;    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(guid);</div>
<div class="line"><a name="l03437"></a><span class="lineno"> 3437</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> incomingTimestamp;</div>
<div class="line"><a name="l03438"></a><span class="lineno"> 3438</span>&#160;    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(incomingTimestamp);</div>
<div class="line"><a name="l03439"></a><span class="lineno"> 3439</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> doSecurity;</div>
<div class="line"><a name="l03440"></a><span class="lineno"> 3440</span>&#160;    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(doSecurity);</div>
<div class="line"><a name="l03441"></a><span class="lineno"> 3441</span>&#160;</div>
<div class="line"><a name="l03442"></a><span class="lineno"> 3442</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l03443"></a><span class="lineno"> 3443</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> doClientKey;</div>
<div class="line"><a name="l03444"></a><span class="lineno"> 3444</span>&#160;    <span class="keywordflow">if</span> (_using_security)</div>
<div class="line"><a name="l03445"></a><span class="lineno"> 3445</span>&#160;    {</div>
<div class="line"><a name="l03446"></a><span class="lineno"> 3446</span>&#160;        <span class="comment">// Ignore message on bad state</span></div>
<div class="line"><a name="l03447"></a><span class="lineno"> 3447</span>&#160;        <span class="keywordflow">if</span> (doSecurity != 1 || !remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.GetAuthenticatedEncryption())</div>
<div class="line"><a name="l03448"></a><span class="lineno"> 3448</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03449"></a><span class="lineno"> 3449</span>&#160;</div>
<div class="line"><a name="l03450"></a><span class="lineno"> 3450</span>&#160;        <span class="comment">// Validate client proof of key</span></div>
<div class="line"><a name="l03451"></a><span class="lineno"> 3451</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> proof[cat::EasyHandshake::PROOF_BYTES];</div>
<div class="line"><a name="l03452"></a><span class="lineno"> 3452</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>(proof, <span class="keyword">sizeof</span>(proof));</div>
<div class="line"><a name="l03453"></a><span class="lineno"> 3453</span>&#160;        <span class="keywordflow">if</span> (!remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.GetAuthenticatedEncryption()-&gt;ValidateProof(proof, <span class="keyword">sizeof</span>(proof)))</div>
<div class="line"><a name="l03454"></a><span class="lineno"> 3454</span>&#160;        {</div>
<div class="line"><a name="l03455"></a><span class="lineno"> 3455</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a> = <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>;</div>
<div class="line"><a name="l03456"></a><span class="lineno"> 3456</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03457"></a><span class="lineno"> 3457</span>&#160;        }</div>
<div class="line"><a name="l03458"></a><span class="lineno"> 3458</span>&#160;</div>
<div class="line"><a name="l03459"></a><span class="lineno"> 3459</span>&#160;        CAT_OBJCLR(remoteSystem-&gt;client_public_key);</div>
<div class="line"><a name="l03460"></a><span class="lineno"> 3460</span>&#160;</div>
<div class="line"><a name="l03461"></a><span class="lineno"> 3461</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(doClientKey);</div>
<div class="line"><a name="l03462"></a><span class="lineno"> 3462</span>&#160;</div>
<div class="line"><a name="l03463"></a><span class="lineno"> 3463</span>&#160;        <span class="comment">// Check if client wants to prove identity</span></div>
<div class="line"><a name="l03464"></a><span class="lineno"> 3464</span>&#160;        <span class="keywordflow">if</span> (doClientKey == 1)</div>
<div class="line"><a name="l03465"></a><span class="lineno"> 3465</span>&#160;        {</div>
<div class="line"><a name="l03466"></a><span class="lineno"> 3466</span>&#160;            <span class="comment">// Read identity proof</span></div>
<div class="line"><a name="l03467"></a><span class="lineno"> 3467</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> ident[cat::EasyHandshake::IDENTITY_BYTES];</div>
<div class="line"><a name="l03468"></a><span class="lineno"> 3468</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>(ident, <span class="keyword">sizeof</span>(ident));</div>
<div class="line"><a name="l03469"></a><span class="lineno"> 3469</span>&#160;</div>
<div class="line"><a name="l03470"></a><span class="lineno"> 3470</span>&#160;            <span class="comment">// If we are listening to these proofs,</span></div>
<div class="line"><a name="l03471"></a><span class="lineno"> 3471</span>&#160;            <span class="keywordflow">if</span> (_require_client_public_key)</div>
<div class="line"><a name="l03472"></a><span class="lineno"> 3472</span>&#160;            {</div>
<div class="line"><a name="l03473"></a><span class="lineno"> 3473</span>&#160;                <span class="comment">// Validate client identity</span></div>
<div class="line"><a name="l03474"></a><span class="lineno"> 3474</span>&#160;                <span class="keywordflow">if</span> (!_server_handshake-&gt;VerifyInitiatorIdentity(remoteSystem-&gt;answer, ident, remoteSystem-&gt;client_public_key))</div>
<div class="line"><a name="l03475"></a><span class="lineno"> 3475</span>&#160;                {</div>
<div class="line"><a name="l03476"></a><span class="lineno"> 3476</span>&#160;                    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream;</div>
<div class="line"><a name="l03477"></a><span class="lineno"> 3477</span>&#160;                    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d4b064d4e8e1c0a24c9bb8d7eef82a0" title="RakPeer - Remote system requires secure connections, pass a public key to RakPeerInterface::Connect()...">ID_REMOTE_SYSTEM_REQUIRES_PUBLIC_KEY</a>); <span class="comment">// Report an error since the client is not providing an identity when it is necessary to connect</span></div>
<div class="line"><a name="l03478"></a><span class="lineno"> 3478</span>&#160;                    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)2); <span class="comment">// Indicate client identity is invalid</span></div>
<div class="line"><a name="l03479"></a><span class="lineno"> 3479</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*) bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eabc6ba98e9404532481e43eea39731929" title="The message is sent reliably, but not necessarily in any order. Same overhead as UNRELIABLE.">RELIABLE</a>, 0, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0);</div>
<div class="line"><a name="l03480"></a><span class="lineno"> 3480</span>&#160;                    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a> = <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>;</div>
<div class="line"><a name="l03481"></a><span class="lineno"> 3481</span>&#160;                    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03482"></a><span class="lineno"> 3482</span>&#160;                }</div>
<div class="line"><a name="l03483"></a><span class="lineno"> 3483</span>&#160;            }</div>
<div class="line"><a name="l03484"></a><span class="lineno"> 3484</span>&#160;</div>
<div class="line"><a name="l03485"></a><span class="lineno"> 3485</span>&#160;            <span class="comment">// Otherwise ignore the client public key</span></div>
<div class="line"><a name="l03486"></a><span class="lineno"> 3486</span>&#160;        }</div>
<div class="line"><a name="l03487"></a><span class="lineno"> 3487</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l03488"></a><span class="lineno"> 3488</span>&#160;        {</div>
<div class="line"><a name="l03489"></a><span class="lineno"> 3489</span>&#160;            <span class="comment">// If no client key was provided but it is required,</span></div>
<div class="line"><a name="l03490"></a><span class="lineno"> 3490</span>&#160;            <span class="keywordflow">if</span> (_require_client_public_key)</div>
<div class="line"><a name="l03491"></a><span class="lineno"> 3491</span>&#160;            {</div>
<div class="line"><a name="l03492"></a><span class="lineno"> 3492</span>&#160;                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream;</div>
<div class="line"><a name="l03493"></a><span class="lineno"> 3493</span>&#160;                bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d4b064d4e8e1c0a24c9bb8d7eef82a0" title="RakPeer - Remote system requires secure connections, pass a public key to RakPeerInterface::Connect()...">ID_REMOTE_SYSTEM_REQUIRES_PUBLIC_KEY</a>); <span class="comment">// Report an error since the client is not providing an identity when it is necessary to connect</span></div>
<div class="line"><a name="l03494"></a><span class="lineno"> 3494</span>&#160;                bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)1); <span class="comment">// Indicate client identity is missing</span></div>
<div class="line"><a name="l03495"></a><span class="lineno"> 3495</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*) bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eabc6ba98e9404532481e43eea39731929" title="The message is sent reliably, but not necessarily in any order. Same overhead as UNRELIABLE.">RELIABLE</a>, 0, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0);</div>
<div class="line"><a name="l03496"></a><span class="lineno"> 3496</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a> = <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>;</div>
<div class="line"><a name="l03497"></a><span class="lineno"> 3497</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03498"></a><span class="lineno"> 3498</span>&#160;            }</div>
<div class="line"><a name="l03499"></a><span class="lineno"> 3499</span>&#160;        }</div>
<div class="line"><a name="l03500"></a><span class="lineno"> 3500</span>&#160;    }</div>
<div class="line"><a name="l03501"></a><span class="lineno"> 3501</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l03502"></a><span class="lineno"> 3502</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l03503"></a><span class="lineno"> 3503</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *password = bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>()+<a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>(bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1bbe42adf8f779256b04d5becdafe342" title="Returns the number of bits into the stream that we have read.">GetReadOffset</a>());</div>
<div class="line"><a name="l03504"></a><span class="lineno"> 3504</span>&#160;    <span class="keywordtype">int</span> passwordLength = byteSize - <a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>(bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1bbe42adf8f779256b04d5becdafe342" title="Returns the number of bits into the stream that we have read.">GetReadOffset</a>());</div>
<div class="line"><a name="l03505"></a><span class="lineno"> 3505</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36a0b0cd5c5f3c0b0cd07a59178a37a4">incomingPasswordLength</a> != passwordLength ||</div>
<div class="line"><a name="l03506"></a><span class="lineno"> 3506</span>&#160;        memcmp( password, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af247fd618c728c9fb340c181f2949b56" title="Local Player ID.">incomingPassword</a>, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36a0b0cd5c5f3c0b0cd07a59178a37a4">incomingPasswordLength</a> ) != 0 )</div>
<div class="line"><a name="l03507"></a><span class="lineno"> 3507</span>&#160;    {</div>
<div class="line"><a name="l03508"></a><span class="lineno"> 3508</span>&#160;        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Invalid password\n&quot;</span>);</div>
<div class="line"><a name="l03509"></a><span class="lineno"> 3509</span>&#160;        <span class="comment">// This one we only send once since we don&#39;t care if it arrives.</span></div>
<div class="line"><a name="l03510"></a><span class="lineno"> 3510</span>&#160;        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream;</div>
<div class="line"><a name="l03511"></a><span class="lineno"> 3511</span>&#160;        bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a2c69119824c8bd3faa96d9953d02a41d" title="RakPeer - The remote system is using a password and has refused our connection because we did not set...">ID_INVALID_PASSWORD</a>);</div>
<div class="line"><a name="l03512"></a><span class="lineno"> 3512</span>&#160;        bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l03513"></a><span class="lineno"> 3513</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*) bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eabc6ba98e9404532481e43eea39731929" title="The message is sent reliably, but not necessarily in any order. Same overhead as UNRELIABLE.">RELIABLE</a>, 0, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0);</div>
<div class="line"><a name="l03514"></a><span class="lineno"> 3514</span>&#160;        remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>;</div>
<div class="line"><a name="l03515"></a><span class="lineno"> 3515</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03516"></a><span class="lineno"> 3516</span>&#160;    }</div>
<div class="line"><a name="l03517"></a><span class="lineno"> 3517</span>&#160;</div>
<div class="line"><a name="l03518"></a><span class="lineno"> 3518</span>&#160;    <span class="comment">// OK</span></div>
<div class="line"><a name="l03519"></a><span class="lineno"> 3519</span>&#160;    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a3655df1b4cee55eb3556bce5bc170584">RemoteSystemStruct::HANDLING_CONNECTION_REQUEST</a>;</div>
<div class="line"><a name="l03520"></a><span class="lineno"> 3520</span>&#160;</div>
<div class="line"><a name="l03521"></a><span class="lineno"> 3521</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aaaca9ace501fd07ed499f9611feac31b">OnConnectionRequest</a>( remoteSystem, incomingTimestamp );</div>
<div class="line"><a name="l03522"></a><span class="lineno"> 3522</span>&#160;}</div>
<div class="line"><a name="l03523"></a><span class="lineno"> 3523</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03524"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aaaca9ace501fd07ed499f9611feac31b"> 3524</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aaaca9ace501fd07ed499f9611feac31b">RakPeer::OnConnectionRequest</a>( <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *remoteSystem, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> incomingTimestamp )</div>
<div class="line"><a name="l03525"></a><span class="lineno"> 3525</span>&#160;{</div>
<div class="line"><a name="l03526"></a><span class="lineno"> 3526</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream;</div>
<div class="line"><a name="l03527"></a><span class="lineno"> 3527</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8e1677131f83c52ed49001d6401fd2e7" title="RakPeer - In a client/server environment, our connection request to the server has been accepted...">ID_CONNECTION_REQUEST_ACCEPTED</a>);</div>
<div class="line"><a name="l03528"></a><span class="lineno"> 3528</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>);</div>
<div class="line"><a name="l03529"></a><span class="lineno"> 3529</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a> systemIndex = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l03530"></a><span class="lineno"> 3530</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(systemIndex!=65535);</div>
<div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(systemIndex);</div>
<div class="line"><a name="l03532"></a><span class="lineno"> 3532</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; i++)</div>
<div class="line"><a name="l03533"></a><span class="lineno"> 3533</span>&#160;        bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i]);</div>
<div class="line"><a name="l03534"></a><span class="lineno"> 3534</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(incomingTimestamp);</div>
<div class="line"><a name="l03535"></a><span class="lineno"> 3535</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>());</div>
<div class="line"><a name="l03536"></a><span class="lineno"> 3536</span>&#160;</div>
<div class="line"><a name="l03537"></a><span class="lineno"> 3537</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*)bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>, 0, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0);</div>
<div class="line"><a name="l03538"></a><span class="lineno"> 3538</span>&#160;}</div>
<div class="line"><a name="l03539"></a><span class="lineno"> 3539</span>&#160;</div>
<div class="line"><a name="l03540"></a><span class="lineno"> 3540</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03541"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a34ef012d4c7fdae387cff33ef3f8a82c"> 3541</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a34ef012d4c7fdae387cff33ef3f8a82c" title="Send a reliable disconnect packet to this player and disconnect them when it is delivered.">RakPeer::NotifyAndFlagForShutdown</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keywordtype">bool</span> performImmediate, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> orderingChannel, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> disconnectionNotificationPriority )</div>
<div class="line"><a name="l03542"></a><span class="lineno"> 3542</span>&#160;{</div>
<div class="line"><a name="l03543"></a><span class="lineno"> 3543</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> temp( <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) );</div>
<div class="line"><a name="l03544"></a><span class="lineno"> 3544</span>&#160;    temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>( (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa3c9ab42767af4b738cceb5a5b3600ae">ID_DISCONNECTION_NOTIFICATION</a> );</div>
<div class="line"><a name="l03545"></a><span class="lineno"> 3545</span>&#160;    <span class="keywordflow">if</span> (performImmediate)</div>
<div class="line"><a name="l03546"></a><span class="lineno"> 3546</span>&#160;    {</div>
<div class="line"><a name="l03547"></a><span class="lineno"> 3547</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*)temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), disconnectionNotificationPriority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>, orderingChannel, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0);</div>
<div class="line"><a name="l03548"></a><span class="lineno"> 3548</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *rss=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>(systemAddress, <span class="keyword">true</span>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l03549"></a><span class="lineno"> 3549</span>&#160;        rss-&gt;connectMode=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04aea755206e361e47b9640808a977dc0d6">RemoteSystemStruct::DISCONNECT_ASAP</a>;</div>
<div class="line"><a name="l03550"></a><span class="lineno"> 3550</span>&#160;    }</div>
<div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03552"></a><span class="lineno"> 3552</span>&#160;    {</div>
<div class="line"><a name="l03553"></a><span class="lineno"> 3553</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a705e3d72e100fc87f2a1878b0882dc38">SendBuffered</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), disconnectionNotificationPriority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>, orderingChannel, systemAddress, <span class="keyword">false</span>, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04aea755206e361e47b9640808a977dc0d6">RemoteSystemStruct::DISCONNECT_ASAP</a>, 0);</div>
<div class="line"><a name="l03554"></a><span class="lineno"> 3554</span>&#160;    }</div>
<div class="line"><a name="l03555"></a><span class="lineno"> 3555</span>&#160;}</div>
<div class="line"><a name="l03556"></a><span class="lineno"> 3556</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03557"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36d2e214665c8fccf0b16593252e9fab"> 3557</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36d2e214665c8fccf0b16593252e9fab" title="Returns how many remote systems initiated a connection to us.">RakPeer::GetNumberOfRemoteInitiatedConnections</a>( <span class="keywordtype">void</span> )<span class="keyword"> const</span></div>
<div class="line"><a name="l03558"></a><span class="lineno"> 3558</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03559"></a><span class="lineno"> 3559</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l03560"></a><span class="lineno"> 3560</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03561"></a><span class="lineno"> 3561</span>&#160;</div>
<div class="line"><a name="l03562"></a><span class="lineno"> 3562</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numberOfIncomingConnections;</div>
<div class="line"><a name="l03563"></a><span class="lineno"> 3563</span>&#160;    numberOfIncomingConnections = 0;</div>
<div class="line"><a name="l03564"></a><span class="lineno"> 3564</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l03565"></a><span class="lineno"> 3565</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a>; i++)</div>
<div class="line"><a name="l03566"></a><span class="lineno"> 3566</span>&#160;    {</div>
<div class="line"><a name="l03567"></a><span class="lineno"> 3567</span>&#160;        <span class="keywordflow">if</span> ((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;isActive &amp;&amp;</div>
<div class="line"><a name="l03568"></a><span class="lineno"> 3568</span>&#160;            (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;connectMode==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RakPeer::RemoteSystemStruct::CONNECTED</a> &amp;&amp;</div>
<div class="line"><a name="l03569"></a><span class="lineno"> 3569</span>&#160;            (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i])-&gt;weInitiatedTheConnection==<span class="keyword">false</span></div>
<div class="line"><a name="l03570"></a><span class="lineno"> 3570</span>&#160;            )</div>
<div class="line"><a name="l03571"></a><span class="lineno"> 3571</span>&#160;        {</div>
<div class="line"><a name="l03572"></a><span class="lineno"> 3572</span>&#160;            numberOfIncomingConnections++;</div>
<div class="line"><a name="l03573"></a><span class="lineno"> 3573</span>&#160;        }</div>
<div class="line"><a name="l03574"></a><span class="lineno"> 3574</span>&#160;    }</div>
<div class="line"><a name="l03575"></a><span class="lineno"> 3575</span>&#160;    <span class="keywordflow">return</span> numberOfIncomingConnections;</div>
<div class="line"><a name="l03576"></a><span class="lineno"> 3576</span>&#160;}</div>
<div class="line"><a name="l03577"></a><span class="lineno"> 3577</span>&#160;</div>
<div class="line"><a name="l03578"></a><span class="lineno"> 3578</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03579"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a102510a3e5e43acdd3c2ca9ca7f1af6e"> 3579</a></span>&#160;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> * <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a102510a3e5e43acdd3c2ca9ca7f1af6e" title="Get a free remote system from the list and assign our systemAddress to it.">RakPeer::AssignSystemAddressToRemoteSystemList</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04">RemoteSystemStruct::ConnectMode</a> connectionMode, <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a>* incomingRakNetSocket, <span class="keywordtype">bool</span> *thisIPConnectedRecently, <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> bindingAddress, <span class="keywordtype">int</span> incomingMTU, <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid, <span class="keywordtype">bool</span> useSecurity )</div>
<div class="line"><a name="l03580"></a><span class="lineno"> 3580</span>&#160;{</div>
<div class="line"><a name="l03581"></a><span class="lineno"> 3581</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> * remoteSystem;</div>
<div class="line"><a name="l03582"></a><span class="lineno"> 3582</span>&#160;    <span class="keywordtype">unsigned</span> i,j,assignedIndex;</div>
<div class="line"><a name="l03583"></a><span class="lineno"> 3583</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4772a177cb3fcb5d9e699a6670c3fb8a">SLNet::GetTimeMS</a>();</div>
<div class="line"><a name="l03584"></a><span class="lineno"> 3584</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(systemAddress!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>);</div>
<div class="line"><a name="l03586"></a><span class="lineno"> 3586</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l03587"></a><span class="lineno"> 3587</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l03588"></a><span class="lineno"> 3588</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2b117b10a74d64638237f30028f5636b">limitConnectionFrequencyFromTheSameIP</a>)</div>
<div class="line"><a name="l03589"></a><span class="lineno"> 3589</span>&#160;    {</div>
<div class="line"><a name="l03590"></a><span class="lineno"> 3590</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff2110cddbbcea96b4ecf6acb310ec48">IsLoopbackAddress</a>(systemAddress,<span class="keyword">false</span>)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l03591"></a><span class="lineno"> 3591</span>&#160;        {</div>
<div class="line"><a name="l03592"></a><span class="lineno"> 3592</span>&#160;            <span class="keywordflow">for</span> ( i = 0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; i++ )</div>
<div class="line"><a name="l03593"></a><span class="lineno"> 3593</span>&#160;            {</div>
<div class="line"><a name="l03594"></a><span class="lineno"> 3594</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].isActive==<span class="keyword">true</span> &amp;&amp;</div>
<div class="line"><a name="l03595"></a><span class="lineno"> 3595</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5915af5dc768047a85938ae1a7a9b034" title="Returns if two system addresses have the same IP (port is not checked)">EqualsExcludingPort</a>(systemAddress) &amp;&amp;</div>
<div class="line"><a name="l03596"></a><span class="lineno"> 3596</span>&#160;                    time &gt;= <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ad646eb8a83b16c21d36ec3e4cd534674" title="When did the last reliable send occur. Reliable sends must occur at least once every timeoutTime/2 un...">connectionTime</a> &amp;&amp;</div>
<div class="line"><a name="l03597"></a><span class="lineno"> 3597</span>&#160;                    time - <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ i ].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ad646eb8a83b16c21d36ec3e4cd534674" title="When did the last reliable send occur. Reliable sends must occur at least once every timeoutTime/2 un...">connectionTime</a> &lt; 100</div>
<div class="line"><a name="l03598"></a><span class="lineno"> 3598</span>&#160;                    )</div>
<div class="line"><a name="l03599"></a><span class="lineno"> 3599</span>&#160;                {</div>
<div class="line"><a name="l03600"></a><span class="lineno"> 3600</span>&#160;                    <span class="comment">// 4/13/09 Attackers can flood ID_OPEN_CONNECTION_REQUEST and use up all available connection slots</span></div>
<div class="line"><a name="l03601"></a><span class="lineno"> 3601</span>&#160;                    <span class="comment">// Ignore connection attempts if this IP address connected within the last 100 milliseconds</span></div>
<div class="line"><a name="l03602"></a><span class="lineno"> 3602</span>&#160;                    *thisIPConnectedRecently=<span class="keyword">true</span>;</div>
<div class="line"><a name="l03603"></a><span class="lineno"> 3603</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f3967447435d11f7fcb8ca790e19050">ValidateRemoteSystemLookup</a>();</div>
<div class="line"><a name="l03604"></a><span class="lineno"> 3604</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03605"></a><span class="lineno"> 3605</span>&#160;                }</div>
<div class="line"><a name="l03606"></a><span class="lineno"> 3606</span>&#160;            }</div>
<div class="line"><a name="l03607"></a><span class="lineno"> 3607</span>&#160;        }</div>
<div class="line"><a name="l03608"></a><span class="lineno"> 3608</span>&#160;    }</div>
<div class="line"><a name="l03609"></a><span class="lineno"> 3609</span>&#160;</div>
<div class="line"><a name="l03610"></a><span class="lineno"> 3610</span>&#160;    <span class="comment">// Don&#39;t use a different port than what we received on</span></div>
<div class="line"><a name="l03611"></a><span class="lineno"> 3611</span>&#160;    bindingAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a9750eb4a3b71d71ff00d6ed856a1c5c9" title="Copy the port from another SystemAddress structure.">CopyPort</a>(incomingRakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a58ced3513884d5224dfa50c46fe5a64a">GetBoundAddress</a>());</div>
<div class="line"><a name="l03612"></a><span class="lineno"> 3612</span>&#160;</div>
<div class="line"><a name="l03613"></a><span class="lineno"> 3613</span>&#160;    *thisIPConnectedRecently=<span class="keyword">false</span>;</div>
<div class="line"><a name="l03614"></a><span class="lineno"> 3614</span>&#160;    <span class="keywordflow">for</span> ( assignedIndex = 0; assignedIndex &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; assignedIndex++ )</div>
<div class="line"><a name="l03615"></a><span class="lineno"> 3615</span>&#160;    {</div>
<div class="line"><a name="l03616"></a><span class="lineno"> 3616</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ assignedIndex ].isActive==<span class="keyword">false</span> )</div>
<div class="line"><a name="l03617"></a><span class="lineno"> 3617</span>&#160;        {</div>
<div class="line"><a name="l03618"></a><span class="lineno"> 3618</span>&#160;            <span class="comment">// printf(&quot;--- Address %s has become active\n&quot;, systemAddress.ToString());</span></div>
<div class="line"><a name="l03619"></a><span class="lineno"> 3619</span>&#160;</div>
<div class="line"><a name="l03620"></a><span class="lineno"> 3620</span>&#160;            remoteSystem=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>+assignedIndex;</div>
<div class="line"><a name="l03621"></a><span class="lineno"> 3621</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa7a78cc11c83e82a231bf39c1f0dd420">ReferenceRemoteSystem</a>(systemAddress, assignedIndex);</div>
<div class="line"><a name="l03622"></a><span class="lineno"> 3622</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af96dd55e6d29b96d62af7f3ac5d2332b">defaultMTUSize</a>;</div>
<div class="line"><a name="l03623"></a><span class="lineno"> 3623</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>=guid;</div>
<div class="line"><a name="l03624"></a><span class="lineno"> 3624</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a> = <span class="keyword">true</span>; <span class="comment">// This one line causes future incoming packets to go through the reliability layer</span></div>
<div class="line"><a name="l03625"></a><span class="lineno"> 3625</span>&#160;            <span class="comment">// Reserve this reliability layer for ourselves.</span></div>
<div class="line"><a name="l03626"></a><span class="lineno"> 3626</span>&#160;            <span class="keywordflow">if</span> (incomingMTU &gt; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>)</div>
<div class="line"><a name="l03627"></a><span class="lineno"> 3627</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>=incomingMTU;</div>
<div class="line"><a name="l03628"></a><span class="lineno"> 3628</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a> &lt;= <a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a>);</div>
<div class="line"><a name="l03629"></a><span class="lineno"> 3629</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a82a18156ee862239ce046aa4fb5acc79" title="Resets the layer for reuse.">Reset</a>(<span class="keyword">true</span>, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>, useSecurity);</div>
<div class="line"><a name="l03630"></a><span class="lineno"> 3630</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a4bb5b8fba7d1c3397594a62e6ffd7c97">SetSplitMessageProgressInterval</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16cc05e426a8198b7da1871aef9bcb2">splitMessageProgressInterval</a>);</div>
<div class="line"><a name="l03631"></a><span class="lineno"> 3631</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#add22038276a9b7732ff95378be35c679">SetUnreliableTimeout</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78c3f7d32278a2dca98007b0db041e1c">unreliableTimeout</a>);</div>
<div class="line"><a name="l03632"></a><span class="lineno"> 3632</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a48ebdf0f6521fca292535480c2f54906">SetTimeoutTime</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af9256c364ea3adcb09b398d4d35f9e65">defaultTimeoutTime</a>);</div>
<div class="line"><a name="l03633"></a><span class="lineno"> 3633</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a669ac81cf71390a91ccc90b992b4cda3">AddToActiveSystemList</a>(assignedIndex);</div>
<div class="line"><a name="l03634"></a><span class="lineno"> 3634</span>&#160;            <span class="keywordflow">if</span> (incomingRakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a58ced3513884d5224dfa50c46fe5a64a">GetBoundAddress</a>()==bindingAddress)</div>
<div class="line"><a name="l03635"></a><span class="lineno"> 3635</span>&#160;            {</div>
<div class="line"><a name="l03636"></a><span class="lineno"> 3636</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5a5790ea4c270243539880c1f3bfe683">rakNetSocket</a>=incomingRakNetSocket;</div>
<div class="line"><a name="l03637"></a><span class="lineno"> 3637</span>&#160;            }</div>
<div class="line"><a name="l03638"></a><span class="lineno"> 3638</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l03639"></a><span class="lineno"> 3639</span>&#160;            {</div>
<div class="line"><a name="l03640"></a><span class="lineno"> 3640</span>&#160;                <span class="keywordtype">char</span> str[256];</div>
<div class="line"><a name="l03641"></a><span class="lineno"> 3641</span>&#160;                bindingAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">true</span>,str,static_cast&lt;size_t&gt;(256));</div>
<div class="line"><a name="l03642"></a><span class="lineno"> 3642</span>&#160;                <span class="comment">// See if this is an internal IP address.</span></div>
<div class="line"><a name="l03643"></a><span class="lineno"> 3643</span>&#160;                <span class="comment">// If so, force binding on it so we reply on the same IP address as they sent to.</span></div>
<div class="line"><a name="l03644"></a><span class="lineno"> 3644</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ipListIndex, foundIndex=(<span class="keywordtype">unsigned</span> int)-1;</div>
<div class="line"><a name="l03645"></a><span class="lineno"> 3645</span>&#160;</div>
<div class="line"><a name="l03646"></a><span class="lineno"> 3646</span>&#160;                <span class="keywordflow">for</span> (ipListIndex=0; ipListIndex &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; ipListIndex++)</div>
<div class="line"><a name="l03647"></a><span class="lineno"> 3647</span>&#160;                {</div>
<div class="line"><a name="l03648"></a><span class="lineno"> 3648</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[ipListIndex]==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l03649"></a><span class="lineno"> 3649</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03650"></a><span class="lineno"> 3650</span>&#160;</div>
<div class="line"><a name="l03651"></a><span class="lineno"> 3651</span>&#160;                    <span class="keywordflow">if</span> (bindingAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5915af5dc768047a85938ae1a7a9b034" title="Returns if two system addresses have the same IP (port is not checked)">EqualsExcludingPort</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[ipListIndex]))</div>
<div class="line"><a name="l03652"></a><span class="lineno"> 3652</span>&#160;                    {</div>
<div class="line"><a name="l03653"></a><span class="lineno"> 3653</span>&#160;                        foundIndex=ipListIndex;</div>
<div class="line"><a name="l03654"></a><span class="lineno"> 3654</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03655"></a><span class="lineno"> 3655</span>&#160;                    }</div>
<div class="line"><a name="l03656"></a><span class="lineno"> 3656</span>&#160;                }</div>
<div class="line"><a name="l03657"></a><span class="lineno"> 3657</span>&#160;</div>
<div class="line"><a name="l03658"></a><span class="lineno"> 3658</span>&#160;                <span class="comment">// 06/26/09 Unconfirmed report that Vista firewall blocks the reply if we force a binding</span></div>
<div class="line"><a name="l03659"></a><span class="lineno"> 3659</span>&#160;                <span class="comment">// For now use the incoming socket only</span></div>
<div class="line"><a name="l03660"></a><span class="lineno"> 3660</span>&#160;                <span class="comment">// Originally this code was to force a machine with multiple IP addresses to reply back on the IP</span></div>
<div class="line"><a name="l03661"></a><span class="lineno"> 3661</span>&#160;                <span class="comment">// that the datagram came in on</span></div>
<div class="line"><a name="l03662"></a><span class="lineno"> 3662</span>&#160;                <span class="comment">//if (1 || foundIndex==(unsigned int)-1)</span></div>
<div class="line"><a name="l03663"></a><span class="lineno"> 3663</span>&#160;                <span class="comment">//{</span></div>
<div class="line"><a name="l03664"></a><span class="lineno"> 3664</span>&#160;                    <span class="comment">// Must not be an internal LAN address. Just use whatever socket it came in on</span></div>
<div class="line"><a name="l03665"></a><span class="lineno"> 3665</span>&#160;                    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5a5790ea4c270243539880c1f3bfe683">rakNetSocket</a>=incomingRakNetSocket;</div>
<div class="line"><a name="l03666"></a><span class="lineno"> 3666</span>&#160;                <span class="comment">//}</span></div>
<div class="line"><a name="l03667"></a><span class="lineno"> 3667</span>&#160;                <span class="comment">//else</span></div>
<div class="line"><a name="l03668"></a><span class="lineno"> 3668</span>&#160;                <span class="comment">//{</span></div>
<div class="line"><a name="l03669"></a><span class="lineno"> 3669</span>&#160;                    <span class="comment">/*</span></div>
<div class="line"><a name="l03670"></a><span class="lineno"> 3670</span>&#160;<span class="comment">                    // Force binding</span></div>
<div class="line"><a name="l03671"></a><span class="lineno"> 3671</span>&#160;<span class="comment">                    unsigned int socketListIndex;</span></div>
<div class="line"><a name="l03672"></a><span class="lineno"> 3672</span>&#160;<span class="comment">                    for (socketListIndex=0; socketListIndex &lt; socketList.Size(); socketListIndex++)</span></div>
<div class="line"><a name="l03673"></a><span class="lineno"> 3673</span>&#160;<span class="comment">                    {</span></div>
<div class="line"><a name="l03674"></a><span class="lineno"> 3674</span>&#160;<span class="comment">                        if (socketList[socketListIndex]-&gt;GetBoundAddress()==bindingAddress)</span></div>
<div class="line"><a name="l03675"></a><span class="lineno"> 3675</span>&#160;<span class="comment">                        {</span></div>
<div class="line"><a name="l03676"></a><span class="lineno"> 3676</span>&#160;<span class="comment">                            // Force binding with existing socket</span></div>
<div class="line"><a name="l03677"></a><span class="lineno"> 3677</span>&#160;<span class="comment">                            remoteSystem-&gt;rakNetSocket=socketList[socketListIndex];</span></div>
<div class="line"><a name="l03678"></a><span class="lineno"> 3678</span>&#160;<span class="comment">                            break;</span></div>
<div class="line"><a name="l03679"></a><span class="lineno"> 3679</span>&#160;<span class="comment">                        }</span></div>
<div class="line"><a name="l03680"></a><span class="lineno"> 3680</span>&#160;<span class="comment">                    }</span></div>
<div class="line"><a name="l03681"></a><span class="lineno"> 3681</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03682"></a><span class="lineno"> 3682</span>&#160;<span class="comment">                    if (socketListIndex==socketList.Size())</span></div>
<div class="line"><a name="l03683"></a><span class="lineno"> 3683</span>&#160;<span class="comment">                    {</span></div>
<div class="line"><a name="l03684"></a><span class="lineno"> 3684</span>&#160;<span class="comment">                        char ipListFoundIndexStr[128];</span></div>
<div class="line"><a name="l03685"></a><span class="lineno"> 3685</span>&#160;<span class="comment">                        ipList[foundIndex].ToString(false,str);</span></div>
<div class="line"><a name="l03686"></a><span class="lineno"> 3686</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03687"></a><span class="lineno"> 3687</span>&#160;<span class="comment">                        // Force binding with new socket</span></div>
<div class="line"><a name="l03688"></a><span class="lineno"> 3688</span>&#160;<span class="comment">                        RakNetSocket* rns(SLNet::OP_NEW&lt;RakNetSocket&gt;(_FILE_AND_LINE_));</span></div>
<div class="line"><a name="l03689"></a><span class="lineno"> 3689</span>&#160;<span class="comment">                        if (incomingRakNetSocket-&gt;GetRemotePortRakNetWasStartedOn()==0)</span></div>
<div class="line"><a name="l03690"></a><span class="lineno"> 3690</span>&#160;<span class="comment">                            rns = SocketLayer::CreateBoundSocket( this, bindingAddress.GetPort(), incomingRakNetSocket-&gt;GetBlockingSocket(), ipListFoundIndexStr, 0, incomingRakNetSocket-&gt;GetExtraSocketOptions(), incomingRakNetSocket-&gt;GetSocketFamily(), incomingRakNetSocket-&gt;GetChromeInstance() );</span></div>
<div class="line"><a name="l03691"></a><span class="lineno"> 3691</span>&#160;<span class="comment">                        else</span></div>
<div class="line"><a name="l03692"></a><span class="lineno"> 3692</span>&#160;<span class="comment">                            rns = SocketLayer::CreateBoundSocket_PS3Lobby( bindingAddress.GetPort(), incomingRakNetSocket-&gt;GetBlockingSocket(), ipListFoundIndexStr, incomingRakNetSocket-&gt;GetSocketFamily() );</span></div>
<div class="line"><a name="l03693"></a><span class="lineno"> 3693</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03694"></a><span class="lineno"> 3694</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03695"></a><span class="lineno"> 3695</span>&#160;<span class="comment">                        if (rns==0)</span></div>
<div class="line"><a name="l03696"></a><span class="lineno"> 3696</span>&#160;<span class="comment">                        {</span></div>
<div class="line"><a name="l03697"></a><span class="lineno"> 3697</span>&#160;<span class="comment">                            // Can&#39;t bind. Just use whatever socket it came in on</span></div>
<div class="line"><a name="l03698"></a><span class="lineno"> 3698</span>&#160;<span class="comment">                            remoteSystem-&gt;rakNetSocket=incomingRakNetSocket;</span></div>
<div class="line"><a name="l03699"></a><span class="lineno"> 3699</span>&#160;<span class="comment">                        }</span></div>
<div class="line"><a name="l03700"></a><span class="lineno"> 3700</span>&#160;<span class="comment">                        else</span></div>
<div class="line"><a name="l03701"></a><span class="lineno"> 3701</span>&#160;<span class="comment">                        {</span></div>
<div class="line"><a name="l03702"></a><span class="lineno"> 3702</span>&#160;<span class="comment">                            rns-&gt;GetBoundAddress()=bindingAddress;</span></div>
<div class="line"><a name="l03703"></a><span class="lineno"> 3703</span>&#160;<span class="comment">                            rns-&gt;SetUserConnectionSocketIndex((unsigned int)-1);</span></div>
<div class="line"><a name="l03704"></a><span class="lineno"> 3704</span>&#160;<span class="comment">                            socketList.Push(rns, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l03705"></a><span class="lineno"> 3705</span>&#160;<span class="comment">                            remoteSystem-&gt;rakNetSocket=rns;</span></div>
<div class="line"><a name="l03706"></a><span class="lineno"> 3706</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03707"></a><span class="lineno"> 3707</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03708"></a><span class="lineno"> 3708</span>&#160;<span class="comment">#ifdef _WIN32</span></div>
<div class="line"><a name="l03709"></a><span class="lineno"> 3709</span>&#160;<span class="comment">                            int highPriority=THREAD_PRIORITY_ABOVE_NORMAL;</span></div>
<div class="line"><a name="l03710"></a><span class="lineno"> 3710</span>&#160;<span class="comment">#else</span></div>
<div class="line"><a name="l03711"></a><span class="lineno"> 3711</span>&#160;<span class="comment">                            int highPriority=-10;</span></div>
<div class="line"><a name="l03712"></a><span class="lineno"> 3712</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l03713"></a><span class="lineno"> 3713</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03714"></a><span class="lineno"> 3714</span>&#160;<span class="comment">                            highPriority=0;</span></div>
<div class="line"><a name="l03715"></a><span class="lineno"> 3715</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03716"></a><span class="lineno"> 3716</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03717"></a><span class="lineno"> 3717</span>&#160;<span class="comment">                        }</span></div>
<div class="line"><a name="l03718"></a><span class="lineno"> 3718</span>&#160;<span class="comment">                    }</span></div>
<div class="line"><a name="l03719"></a><span class="lineno"> 3719</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l03720"></a><span class="lineno"> 3720</span>&#160;<span class="comment">                    */</span></div>
<div class="line"><a name="l03721"></a><span class="lineno"> 3721</span>&#160;                <span class="comment">//}</span></div>
<div class="line"><a name="l03722"></a><span class="lineno"> 3722</span>&#160;            }</div>
<div class="line"><a name="l03723"></a><span class="lineno"> 3723</span>&#160;</div>
<div class="line"><a name="l03724"></a><span class="lineno"> 3724</span>&#160;            <span class="keywordflow">for</span> ( j = 0; j &lt; (unsigned) <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7f327e4ef01ce07159269c3bb6bd98f9">PING_TIMES_ARRAY_SIZE</a>; j++ )</div>
<div class="line"><a name="l03725"></a><span class="lineno"> 3725</span>&#160;            {</div>
<div class="line"><a name="l03726"></a><span class="lineno"> 3726</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ j ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a> = 65535;</div>
<div class="line"><a name="l03727"></a><span class="lineno"> 3727</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ j ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a859a7b3b3d523f63f0d6e22a90d7689c">clockDifferential</a> = 0;</div>
<div class="line"><a name="l03728"></a><span class="lineno"> 3728</span>&#160;            }</div>
<div class="line"><a name="l03729"></a><span class="lineno"> 3729</span>&#160;</div>
<div class="line"><a name="l03730"></a><span class="lineno"> 3730</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=connectionMode;</div>
<div class="line"><a name="l03731"></a><span class="lineno"> 3731</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> = 0;</div>
<div class="line"><a name="l03732"></a><span class="lineno"> 3732</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a05de1f27b328bbedba18cfb7047a3e85" title="The index we are writing into the pingAndClockDifferential circular buffer.">lowestPing</a> = 65535;</div>
<div class="line"><a name="l03733"></a><span class="lineno"> 3733</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa39014879cfdaf3efb54fccdbabcc865" title="The lowest ping value encountered.">nextPingTime</a> = 0; <span class="comment">// Ping immediately</span></div>
<div class="line"><a name="l03734"></a><span class="lineno"> 3734</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a713ed9180dc032af8ebddf8762fc6643" title="The reliability layer associated with this player.">weInitiatedTheConnection</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l03735"></a><span class="lineno"> 3735</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ad646eb8a83b16c21d36ec3e4cd534674" title="When did the last reliable send occur. Reliable sends must occur at least once every timeoutTime/2 un...">connectionTime</a> = time;</div>
<div class="line"><a name="l03736"></a><span class="lineno"> 3736</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a8907915e3ad157baf1609efc43801ba7" title="Their external IP on the internet.">myExternalSystemAddress</a> = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l03737"></a><span class="lineno"> 3737</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a2834ea8e57e593e19af4746aaff6a041" title="When to next ping this player.">lastReliableSend</a>=time;</div>
<div class="line"><a name="l03738"></a><span class="lineno"> 3738</span>&#160;</div>
<div class="line"><a name="l03739"></a><span class="lineno"> 3739</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l03740"></a><span class="lineno"> 3740</span>&#160;<span class="preprocessor"></span>            <span class="keywordtype">int</span> indexLoopupCheck=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( systemAddress, <span class="keyword">true</span> );</div>
<div class="line"><a name="l03741"></a><span class="lineno"> 3741</span>&#160;            <span class="keywordflow">if</span> ((<span class="keywordtype">int</span>) indexLoopupCheck!=(<span class="keywordtype">int</span>) assignedIndex)</div>
<div class="line"><a name="l03742"></a><span class="lineno"> 3742</span>&#160;            {</div>
<div class="line"><a name="l03743"></a><span class="lineno"> 3743</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>((<span class="keywordtype">int</span>) indexLoopupCheck==(<span class="keywordtype">int</span>) assignedIndex);</div>
<div class="line"><a name="l03744"></a><span class="lineno"> 3744</span>&#160;            }</div>
<div class="line"><a name="l03745"></a><span class="lineno"> 3745</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l03746"></a><span class="lineno"> 3746</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l03747"></a><span class="lineno"> 3747</span>&#160;            <span class="keywordflow">return</span> remoteSystem;</div>
<div class="line"><a name="l03748"></a><span class="lineno"> 3748</span>&#160;        }</div>
<div class="line"><a name="l03749"></a><span class="lineno"> 3749</span>&#160;    }</div>
<div class="line"><a name="l03750"></a><span class="lineno"> 3750</span>&#160;</div>
<div class="line"><a name="l03751"></a><span class="lineno"> 3751</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03752"></a><span class="lineno"> 3752</span>&#160;}</div>
<div class="line"><a name="l03753"></a><span class="lineno"> 3753</span>&#160;</div>
<div class="line"><a name="l03754"></a><span class="lineno"> 3754</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03755"></a><span class="lineno"> 3755</span>&#160;<span class="comment">// Adjust the first four bytes (treated as unsigned int) of the pointer</span></div>
<div class="line"><a name="l03756"></a><span class="lineno"> 3756</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03757"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac1dc88400a0218fd22ed94c0db10b06f"> 3757</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac1dc88400a0218fd22ed94c0db10b06f" title="Adjust the timestamp of the incoming packet to be relative to this system.">RakPeer::ShiftIncomingTimestamp</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress )<span class="keyword"> const</span></div>
<div class="line"><a name="l03758"></a><span class="lineno"> 3758</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03759"></a><span class="lineno"> 3759</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l03760"></a><span class="lineno"> 3760</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>() );</div>
<div class="line"><a name="l03761"></a><span class="lineno"> 3761</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( data );</div>
<div class="line"><a name="l03762"></a><span class="lineno"> 3762</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l03763"></a><span class="lineno"> 3763</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l03764"></a><span class="lineno"> 3764</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> timeBS( data, <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>), <span class="keyword">false</span>);</div>
<div class="line"><a name="l03765"></a><span class="lineno"> 3765</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> encodedTimestamp;</div>
<div class="line"><a name="l03766"></a><span class="lineno"> 3766</span>&#160;    timeBS.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(encodedTimestamp);</div>
<div class="line"><a name="l03767"></a><span class="lineno"> 3767</span>&#160;</div>
<div class="line"><a name="l03768"></a><span class="lineno"> 3768</span>&#160;    encodedTimestamp = encodedTimestamp - <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16ccc27ff545fc026aec10149a99543">GetBestClockDifferential</a>( systemAddress );</div>
<div class="line"><a name="l03769"></a><span class="lineno"> 3769</span>&#160;    timeBS.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a751b4600c1e9ea4419a9358a77a6ee50" title="Move the write pointer to a position on the array.">SetWriteOffset</a>(0);</div>
<div class="line"><a name="l03770"></a><span class="lineno"> 3770</span>&#160;    timeBS.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(encodedTimestamp);</div>
<div class="line"><a name="l03771"></a><span class="lineno"> 3771</span>&#160;}</div>
<div class="line"><a name="l03772"></a><span class="lineno"> 3772</span>&#160;</div>
<div class="line"><a name="l03773"></a><span class="lineno"> 3773</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03774"></a><span class="lineno"> 3774</span>&#160;<span class="comment">// Thanks to Chris Taylor (cat02e@fsu.edu) for the improved timestamping algorithm</span></div>
<div class="line"><a name="l03775"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16ccc27ff545fc026aec10149a99543"> 3775</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa16ccc27ff545fc026aec10149a99543">RakPeer::GetBestClockDifferential</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress )<span class="keyword"> const</span></div>
<div class="line"><a name="l03776"></a><span class="lineno"> 3776</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03777"></a><span class="lineno"> 3777</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( systemAddress, <span class="keyword">true</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l03778"></a><span class="lineno"> 3778</span>&#160;</div>
<div class="line"><a name="l03779"></a><span class="lineno"> 3779</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem == 0 )</div>
<div class="line"><a name="l03780"></a><span class="lineno"> 3780</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03781"></a><span class="lineno"> 3781</span>&#160;</div>
<div class="line"><a name="l03782"></a><span class="lineno"> 3782</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeabaee7ed9e1ab93188ebd2e2eecd9b2">GetClockDifferentialInt</a>(remoteSystem);</div>
<div class="line"><a name="l03783"></a><span class="lineno"> 3783</span>&#160;}</div>
<div class="line"><a name="l03784"></a><span class="lineno"> 3784</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03785"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aef0921d261520f62eca004428cca1519"> 3785</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aef0921d261520f62eca004428cca1519">RakPeer::RemoteSystemLookupHashIndex</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)<span class="keyword"> const</span></div>
<div class="line"><a name="l03786"></a><span class="lineno"> 3786</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03787"></a><span class="lineno"> 3787</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae283da58448d126c440fee04dfdce2c6" title="Hash the system address.">SystemAddress::ToInteger</a>(sa) % ((<span class="keywordtype">unsigned</span> int) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a> * <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aacb22d714d93c291fd62b221aa5b453f">REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE</a>);</div>
<div class="line"><a name="l03788"></a><span class="lineno"> 3788</span>&#160;}</div>
<div class="line"><a name="l03789"></a><span class="lineno"> 3789</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03790"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa7a78cc11c83e82a231bf39c1f0dd420"> 3790</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa7a78cc11c83e82a231bf39c1f0dd420">RakPeer::ReferenceRemoteSystem</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> remoteSystemListIndex)</div>
<div class="line"><a name="l03791"></a><span class="lineno"> 3791</span>&#160;{</div>
<div class="line"><a name="l03792"></a><span class="lineno"> 3792</span>&#160;<span class="comment">// #ifdef _DEBUG</span></div>
<div class="line"><a name="l03793"></a><span class="lineno"> 3793</span>&#160;<span class="comment">//  for ( int remoteSystemIndex = 0; remoteSystemIndex &lt; maximumNumberOfPeers; ++remoteSystemIndex )</span></div>
<div class="line"><a name="l03794"></a><span class="lineno"> 3794</span>&#160;<span class="comment">//  {</span></div>
<div class="line"><a name="l03795"></a><span class="lineno"> 3795</span>&#160;<span class="comment">//      if (remoteSystemList[remoteSystemIndex].isActive )</span></div>
<div class="line"><a name="l03796"></a><span class="lineno"> 3796</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l03797"></a><span class="lineno"> 3797</span>&#160;<span class="comment">//          unsigned int hashIndex = GetRemoteSystemIndex(remoteSystemList[remoteSystemIndex].systemAddress);</span></div>
<div class="line"><a name="l03798"></a><span class="lineno"> 3798</span>&#160;<span class="comment">//          RakAssert(hashIndex==remoteSystemIndex);</span></div>
<div class="line"><a name="l03799"></a><span class="lineno"> 3799</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l03800"></a><span class="lineno"> 3800</span>&#160;<span class="comment">//  }</span></div>
<div class="line"><a name="l03801"></a><span class="lineno"> 3801</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l03802"></a><span class="lineno"> 3802</span>&#160;</div>
<div class="line"><a name="l03803"></a><span class="lineno"> 3803</span>&#160;</div>
<div class="line"><a name="l03804"></a><span class="lineno"> 3804</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> oldAddress = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemListIndex].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>;</div>
<div class="line"><a name="l03805"></a><span class="lineno"> 3805</span>&#160;    <span class="keywordflow">if</span> (oldAddress!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l03806"></a><span class="lineno"> 3806</span>&#160;    {</div>
<div class="line"><a name="l03807"></a><span class="lineno"> 3807</span>&#160;        <span class="comment">// The system might be active if rerouting</span></div>
<div class="line"><a name="l03808"></a><span class="lineno"> 3808</span>&#160;<span class="comment">//      RakAssert(remoteSystemList[remoteSystemListIndex].isActive==false);</span></div>
<div class="line"><a name="l03809"></a><span class="lineno"> 3809</span>&#160;</div>
<div class="line"><a name="l03810"></a><span class="lineno"> 3810</span>&#160;        <span class="comment">// Remove the reference if the reference is pointing to this inactive system</span></div>
<div class="line"><a name="l03811"></a><span class="lineno"> 3811</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>(oldAddress)==&amp;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemListIndex])</div>
<div class="line"><a name="l03812"></a><span class="lineno"> 3812</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6cf24206782e09bfeb84e50b6b07121">DereferenceRemoteSystem</a>(oldAddress);</div>
<div class="line"><a name="l03813"></a><span class="lineno"> 3813</span>&#160;    }</div>
<div class="line"><a name="l03814"></a><span class="lineno"> 3814</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6cf24206782e09bfeb84e50b6b07121">DereferenceRemoteSystem</a>(sa);</div>
<div class="line"><a name="l03815"></a><span class="lineno"> 3815</span>&#160;</div>
<div class="line"><a name="l03816"></a><span class="lineno"> 3816</span>&#160;<span class="comment">// #ifdef _DEBUG</span></div>
<div class="line"><a name="l03817"></a><span class="lineno"> 3817</span>&#160;<span class="comment">//  for ( int remoteSystemIndex = 0; remoteSystemIndex &lt; maximumNumberOfPeers; ++remoteSystemIndex )</span></div>
<div class="line"><a name="l03818"></a><span class="lineno"> 3818</span>&#160;<span class="comment">//  {</span></div>
<div class="line"><a name="l03819"></a><span class="lineno"> 3819</span>&#160;<span class="comment">//      if (remoteSystemList[remoteSystemIndex].isActive )</span></div>
<div class="line"><a name="l03820"></a><span class="lineno"> 3820</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l03821"></a><span class="lineno"> 3821</span>&#160;<span class="comment">//          unsigned int hashIndex = GetRemoteSystemIndex(remoteSystemList[remoteSystemIndex].systemAddress);</span></div>
<div class="line"><a name="l03822"></a><span class="lineno"> 3822</span>&#160;<span class="comment">//          if (hashIndex!=remoteSystemIndex)</span></div>
<div class="line"><a name="l03823"></a><span class="lineno"> 3823</span>&#160;<span class="comment">//          {</span></div>
<div class="line"><a name="l03824"></a><span class="lineno"> 3824</span>&#160;<span class="comment">//              RakAssert(hashIndex==remoteSystemIndex);</span></div>
<div class="line"><a name="l03825"></a><span class="lineno"> 3825</span>&#160;<span class="comment">//          }</span></div>
<div class="line"><a name="l03826"></a><span class="lineno"> 3826</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l03827"></a><span class="lineno"> 3827</span>&#160;<span class="comment">//  }</span></div>
<div class="line"><a name="l03828"></a><span class="lineno"> 3828</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l03829"></a><span class="lineno"> 3829</span>&#160;</div>
<div class="line"><a name="l03830"></a><span class="lineno"> 3830</span>&#160;</div>
<div class="line"><a name="l03831"></a><span class="lineno"> 3831</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemListIndex].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>=sa;</div>
<div class="line"><a name="l03832"></a><span class="lineno"> 3832</span>&#160;</div>
<div class="line"><a name="l03833"></a><span class="lineno"> 3833</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> hashIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aef0921d261520f62eca004428cca1519">RemoteSystemLookupHashIndex</a>(sa);</div>
<div class="line"><a name="l03834"></a><span class="lineno"> 3834</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#dc/dd2/struct_s_l_net_1_1_remote_system_index">RemoteSystemIndex</a> *rsi;</div>
<div class="line"><a name="l03835"></a><span class="lineno"> 3835</span>&#160;    rsi = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab5608c4c17cc637a73a1ece2efcf6c2">remoteSystemIndexPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#af59cca601f390601953e37c46deca03a">Allocate</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03836"></a><span class="lineno"> 3836</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>[hashIndex]==0)</div>
<div class="line"><a name="l03837"></a><span class="lineno"> 3837</span>&#160;    {</div>
<div class="line"><a name="l03838"></a><span class="lineno"> 3838</span>&#160;        rsi-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>=0;</div>
<div class="line"><a name="l03839"></a><span class="lineno"> 3839</span>&#160;        rsi-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2909e21861b785067fd8e2150a850eb3">index</a>=remoteSystemListIndex;</div>
<div class="line"><a name="l03840"></a><span class="lineno"> 3840</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>[hashIndex]=rsi;</div>
<div class="line"><a name="l03841"></a><span class="lineno"> 3841</span>&#160;    }</div>
<div class="line"><a name="l03842"></a><span class="lineno"> 3842</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l03843"></a><span class="lineno"> 3843</span>&#160;    {</div>
<div class="line"><a name="l03844"></a><span class="lineno"> 3844</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#dc/dd2/struct_s_l_net_1_1_remote_system_index">RemoteSystemIndex</a> *cur = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>[hashIndex];</div>
<div class="line"><a name="l03845"></a><span class="lineno"> 3845</span>&#160;        <span class="keywordflow">while</span> (cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>!=0)</div>
<div class="line"><a name="l03846"></a><span class="lineno"> 3846</span>&#160;        {</div>
<div class="line"><a name="l03847"></a><span class="lineno"> 3847</span>&#160;            cur=cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>;</div>
<div class="line"><a name="l03848"></a><span class="lineno"> 3848</span>&#160;        }</div>
<div class="line"><a name="l03849"></a><span class="lineno"> 3849</span>&#160;</div>
<div class="line"><a name="l03850"></a><span class="lineno"> 3850</span>&#160;        rsi = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab5608c4c17cc637a73a1ece2efcf6c2">remoteSystemIndexPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#af59cca601f390601953e37c46deca03a">Allocate</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03851"></a><span class="lineno"> 3851</span>&#160;        rsi-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>=0;</div>
<div class="line"><a name="l03852"></a><span class="lineno"> 3852</span>&#160;        rsi-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2909e21861b785067fd8e2150a850eb3">index</a>=remoteSystemListIndex;</div>
<div class="line"><a name="l03853"></a><span class="lineno"> 3853</span>&#160;        cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>=rsi;</div>
<div class="line"><a name="l03854"></a><span class="lineno"> 3854</span>&#160;    }</div>
<div class="line"><a name="l03855"></a><span class="lineno"> 3855</span>&#160;</div>
<div class="line"><a name="l03856"></a><span class="lineno"> 3856</span>&#160;<span class="comment">// #ifdef _DEBUG</span></div>
<div class="line"><a name="l03857"></a><span class="lineno"> 3857</span>&#160;<span class="comment">//  for ( int remoteSystemIndex = 0; remoteSystemIndex &lt; maximumNumberOfPeers; ++remoteSystemIndex )</span></div>
<div class="line"><a name="l03858"></a><span class="lineno"> 3858</span>&#160;<span class="comment">//  {</span></div>
<div class="line"><a name="l03859"></a><span class="lineno"> 3859</span>&#160;<span class="comment">//      if (remoteSystemList[remoteSystemIndex].isActive )</span></div>
<div class="line"><a name="l03860"></a><span class="lineno"> 3860</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l03861"></a><span class="lineno"> 3861</span>&#160;<span class="comment">//          unsigned int hashIndex = GetRemoteSystemIndex(remoteSystemList[remoteSystemIndex].systemAddress);</span></div>
<div class="line"><a name="l03862"></a><span class="lineno"> 3862</span>&#160;<span class="comment">//          RakAssert(hashIndex==remoteSystemIndex);</span></div>
<div class="line"><a name="l03863"></a><span class="lineno"> 3863</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l03864"></a><span class="lineno"> 3864</span>&#160;<span class="comment">//  }</span></div>
<div class="line"><a name="l03865"></a><span class="lineno"> 3865</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l03866"></a><span class="lineno"> 3866</span>&#160;</div>
<div class="line"><a name="l03867"></a><span class="lineno"> 3867</span>&#160;</div>
<div class="line"><a name="l03868"></a><span class="lineno"> 3868</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">GetRemoteSystemIndex</a>(sa)==remoteSystemListIndex);</div>
<div class="line"><a name="l03869"></a><span class="lineno"> 3869</span>&#160;}</div>
<div class="line"><a name="l03870"></a><span class="lineno"> 3870</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03871"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6cf24206782e09bfeb84e50b6b07121"> 3871</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6cf24206782e09bfeb84e50b6b07121">RakPeer::DereferenceRemoteSystem</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)</div>
<div class="line"><a name="l03872"></a><span class="lineno"> 3872</span>&#160;{</div>
<div class="line"><a name="l03873"></a><span class="lineno"> 3873</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> hashIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aef0921d261520f62eca004428cca1519">RemoteSystemLookupHashIndex</a>(sa);</div>
<div class="line"><a name="l03874"></a><span class="lineno"> 3874</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#dc/dd2/struct_s_l_net_1_1_remote_system_index">RemoteSystemIndex</a> *cur = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>[hashIndex];</div>
<div class="line"><a name="l03875"></a><span class="lineno"> 3875</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#dc/dd2/struct_s_l_net_1_1_remote_system_index">RemoteSystemIndex</a> *last = 0;</div>
<div class="line"><a name="l03876"></a><span class="lineno"> 3876</span>&#160;    <span class="keywordflow">while</span> (cur!=0)</div>
<div class="line"><a name="l03877"></a><span class="lineno"> 3877</span>&#160;    {</div>
<div class="line"><a name="l03878"></a><span class="lineno"> 3878</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2909e21861b785067fd8e2150a850eb3">index</a>].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>==sa)</div>
<div class="line"><a name="l03879"></a><span class="lineno"> 3879</span>&#160;        {</div>
<div class="line"><a name="l03880"></a><span class="lineno"> 3880</span>&#160;            <span class="keywordflow">if</span> (last==0)</div>
<div class="line"><a name="l03881"></a><span class="lineno"> 3881</span>&#160;            {</div>
<div class="line"><a name="l03882"></a><span class="lineno"> 3882</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>[hashIndex]=cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>;</div>
<div class="line"><a name="l03883"></a><span class="lineno"> 3883</span>&#160;            }</div>
<div class="line"><a name="l03884"></a><span class="lineno"> 3884</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l03885"></a><span class="lineno"> 3885</span>&#160;            {</div>
<div class="line"><a name="l03886"></a><span class="lineno"> 3886</span>&#160;                last-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>=cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>;</div>
<div class="line"><a name="l03887"></a><span class="lineno"> 3887</span>&#160;            }</div>
<div class="line"><a name="l03888"></a><span class="lineno"> 3888</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab5608c4c17cc637a73a1ece2efcf6c2">remoteSystemIndexPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#abd282ac19fb6b29ee31c7e11d3b6131d">Release</a>(cur,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03889"></a><span class="lineno"> 3889</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l03890"></a><span class="lineno"> 3890</span>&#160;        }</div>
<div class="line"><a name="l03891"></a><span class="lineno"> 3891</span>&#160;        last=cur;</div>
<div class="line"><a name="l03892"></a><span class="lineno"> 3892</span>&#160;        cur=cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>;</div>
<div class="line"><a name="l03893"></a><span class="lineno"> 3893</span>&#160;    }</div>
<div class="line"><a name="l03894"></a><span class="lineno"> 3894</span>&#160;}</div>
<div class="line"><a name="l03895"></a><span class="lineno"> 3895</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03896"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95"> 3896</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">RakPeer::GetRemoteSystemIndex</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)<span class="keyword"> const</span></div>
<div class="line"><a name="l03897"></a><span class="lineno"> 3897</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03898"></a><span class="lineno"> 3898</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> hashIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aef0921d261520f62eca004428cca1519">RemoteSystemLookupHashIndex</a>(sa);</div>
<div class="line"><a name="l03899"></a><span class="lineno"> 3899</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#dc/dd2/struct_s_l_net_1_1_remote_system_index">RemoteSystemIndex</a> *cur = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>[hashIndex];</div>
<div class="line"><a name="l03900"></a><span class="lineno"> 3900</span>&#160;    <span class="keywordflow">while</span> (cur!=0)</div>
<div class="line"><a name="l03901"></a><span class="lineno"> 3901</span>&#160;    {</div>
<div class="line"><a name="l03902"></a><span class="lineno"> 3902</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2909e21861b785067fd8e2150a850eb3">index</a>].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>==sa)</div>
<div class="line"><a name="l03903"></a><span class="lineno"> 3903</span>&#160;            <span class="keywordflow">return</span> cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2909e21861b785067fd8e2150a850eb3">index</a>;</div>
<div class="line"><a name="l03904"></a><span class="lineno"> 3904</span>&#160;        cur=cur-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a6d9e678544a2b692d9a2d0cbf96a8306">next</a>;</div>
<div class="line"><a name="l03905"></a><span class="lineno"> 3905</span>&#160;    }</div>
<div class="line"><a name="l03906"></a><span class="lineno"> 3906</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1;</div>
<div class="line"><a name="l03907"></a><span class="lineno"> 3907</span>&#160;}</div>
<div class="line"><a name="l03908"></a><span class="lineno"> 3908</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03909"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a59577ac6af160e693a4129c3517fac3e"> 3909</a></span>&#160;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a>* <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">RakPeer::GetRemoteSystem</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)<span class="keyword"> const</span></div>
<div class="line"><a name="l03910"></a><span class="lineno"> 3910</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03911"></a><span class="lineno"> 3911</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> remoteSystemIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">GetRemoteSystemIndex</a>(sa);</div>
<div class="line"><a name="l03912"></a><span class="lineno"> 3912</span>&#160;    <span class="keywordflow">if</span> (remoteSystemIndex==(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)-1)</div>
<div class="line"><a name="l03913"></a><span class="lineno"> 3913</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l03914"></a><span class="lineno"> 3914</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> + remoteSystemIndex;</div>
<div class="line"><a name="l03915"></a><span class="lineno"> 3915</span>&#160;}</div>
<div class="line"><a name="l03916"></a><span class="lineno"> 3916</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03917"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1d720ae46165554561ab4119e3c0ab91"> 3917</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a1d720ae46165554561ab4119e3c0ab91">RakPeer::ClearRemoteSystemLookup</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l03918"></a><span class="lineno"> 3918</span>&#160;{</div>
<div class="line"><a name="l03919"></a><span class="lineno"> 3919</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aab5608c4c17cc637a73a1ece2efcf6c2">remoteSystemIndexPool</a>.<a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml#a2e91807b7e7fe95ee3c3d503fb8e6207">Clear</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03920"></a><span class="lineno"> 3920</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acd53258ab2c0b731df325c91b2e85c9b">SLNet::OP_DELETE_ARRAY</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l03921"></a><span class="lineno"> 3921</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0d05a3cd8fca07c605c067dc13b81882">remoteSystemLookup</a>=0;</div>
<div class="line"><a name="l03922"></a><span class="lineno"> 3922</span>&#160;}</div>
<div class="line"><a name="l03923"></a><span class="lineno"> 3923</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03924"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a669ac81cf71390a91ccc90b992b4cda3"> 3924</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a669ac81cf71390a91ccc90b992b4cda3">RakPeer::AddToActiveSystemList</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> remoteSystemListIndex)</div>
<div class="line"><a name="l03925"></a><span class="lineno"> 3925</span>&#160;{</div>
<div class="line"><a name="l03926"></a><span class="lineno"> 3926</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a>++]=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>+remoteSystemListIndex;</div>
<div class="line"><a name="l03927"></a><span class="lineno"> 3927</span>&#160;}</div>
<div class="line"><a name="l03928"></a><span class="lineno"> 3928</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03929"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a76f651db495195a9c450d1c2925922e5"> 3929</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a76f651db495195a9c450d1c2925922e5">RakPeer::RemoveFromActiveSystemList</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)</div>
<div class="line"><a name="l03930"></a><span class="lineno"> 3930</span>&#160;{</div>
<div class="line"><a name="l03931"></a><span class="lineno"> 3931</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l03932"></a><span class="lineno"> 3932</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a>; i++)</div>
<div class="line"><a name="l03933"></a><span class="lineno"> 3933</span>&#160;    {</div>
<div class="line"><a name="l03934"></a><span class="lineno"> 3934</span>&#160;        <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *rss=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i];</div>
<div class="line"><a name="l03935"></a><span class="lineno"> 3935</span>&#160;        <span class="keywordflow">if</span> (rss-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>==sa)</div>
<div class="line"><a name="l03936"></a><span class="lineno"> 3936</span>&#160;        {</div>
<div class="line"><a name="l03937"></a><span class="lineno"> 3937</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[i]=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[activeSystemListSize-1];</div>
<div class="line"><a name="l03938"></a><span class="lineno"> 3938</span>&#160;            activeSystemListSize--;</div>
<div class="line"><a name="l03939"></a><span class="lineno"> 3939</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l03940"></a><span class="lineno"> 3940</span>&#160;        }</div>
<div class="line"><a name="l03941"></a><span class="lineno"> 3941</span>&#160;    }</div>
<div class="line"><a name="l03942"></a><span class="lineno"> 3942</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<span class="stringliteral">&quot;activeSystemList invalid, entry not found in RemoveFromActiveSystemList. Ensure that AddToActiveSystemList and RemoveFromActiveSystemList are called by the same thread.&quot;</span> &amp;&amp; 0);</div>
<div class="line"><a name="l03943"></a><span class="lineno"> 3943</span>&#160;}</div>
<div class="line"><a name="l03944"></a><span class="lineno"> 3944</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03945"></a><span class="lineno"> 3945</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l03946"></a><span class="lineno"> 3946</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03947"></a><span class="lineno"> 3947</span>&#160;<span class="comment">unsigned int RakPeer::LookupIndexUsingHashIndex(const SystemAddress &amp;sa) const</span></div>
<div class="line"><a name="l03948"></a><span class="lineno"> 3948</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l03949"></a><span class="lineno"> 3949</span>&#160;<span class="comment">    unsigned int scanCount=0;</span></div>
<div class="line"><a name="l03950"></a><span class="lineno"> 3950</span>&#160;<span class="comment">    unsigned int index = RemoteSystemLookupHashIndex(sa);</span></div>
<div class="line"><a name="l03951"></a><span class="lineno"> 3951</span>&#160;<span class="comment">    if (remoteSystemLookup[index].index==(unsigned int)-1)</span></div>
<div class="line"><a name="l03952"></a><span class="lineno"> 3952</span>&#160;<span class="comment">        return (unsigned int) -1;</span></div>
<div class="line"><a name="l03953"></a><span class="lineno"> 3953</span>&#160;<span class="comment">    while (remoteSystemList[remoteSystemLookup[index].index].systemAddress!=sa)</span></div>
<div class="line"><a name="l03954"></a><span class="lineno"> 3954</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l03955"></a><span class="lineno"> 3955</span>&#160;<span class="comment">        if (++index==(unsigned int) maximumNumberOfPeers*REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE)</span></div>
<div class="line"><a name="l03956"></a><span class="lineno"> 3956</span>&#160;<span class="comment">            index=0;</span></div>
<div class="line"><a name="l03957"></a><span class="lineno"> 3957</span>&#160;<span class="comment">        if (++scanCount&gt;(unsigned int) maximumNumberOfPeers*REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE)</span></div>
<div class="line"><a name="l03958"></a><span class="lineno"> 3958</span>&#160;<span class="comment">            return (unsigned int) -1;</span></div>
<div class="line"><a name="l03959"></a><span class="lineno"> 3959</span>&#160;<span class="comment">        if (remoteSystemLookup[index].index==-1)</span></div>
<div class="line"><a name="l03960"></a><span class="lineno"> 3960</span>&#160;<span class="comment">            return (unsigned int) -1;</span></div>
<div class="line"><a name="l03961"></a><span class="lineno"> 3961</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l03962"></a><span class="lineno"> 3962</span>&#160;<span class="comment">    return index;</span></div>
<div class="line"><a name="l03963"></a><span class="lineno"> 3963</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l03964"></a><span class="lineno"> 3964</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03965"></a><span class="lineno"> 3965</span>&#160;<span class="comment">unsigned int RakPeer::RemoteSystemListIndexUsingHashIndex(const SystemAddress &amp;sa) const</span></div>
<div class="line"><a name="l03966"></a><span class="lineno"> 3966</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l03967"></a><span class="lineno"> 3967</span>&#160;<span class="comment">    unsigned int index = LookupIndexUsingHashIndex(sa);</span></div>
<div class="line"><a name="l03968"></a><span class="lineno"> 3968</span>&#160;<span class="comment">    if (index!=(unsigned int) -1)</span></div>
<div class="line"><a name="l03969"></a><span class="lineno"> 3969</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l03970"></a><span class="lineno"> 3970</span>&#160;<span class="comment">        return remoteSystemLookup[index].index;</span></div>
<div class="line"><a name="l03971"></a><span class="lineno"> 3971</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l03972"></a><span class="lineno"> 3972</span>&#160;<span class="comment">    return (unsigned int) -1;</span></div>
<div class="line"><a name="l03973"></a><span class="lineno"> 3973</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l03974"></a><span class="lineno"> 3974</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03975"></a><span class="lineno"> 3975</span>&#160;<span class="comment">unsigned int RakPeer::FirstFreeRemoteSystemLookupIndex(const SystemAddress &amp;sa) const</span></div>
<div class="line"><a name="l03976"></a><span class="lineno"> 3976</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l03977"></a><span class="lineno"> 3977</span>&#160;<span class="comment">//  unsigned int collisionCount=0;</span></div>
<div class="line"><a name="l03978"></a><span class="lineno"> 3978</span>&#160;<span class="comment">    unsigned int index = RemoteSystemLookupHashIndex(sa);</span></div>
<div class="line"><a name="l03979"></a><span class="lineno"> 3979</span>&#160;<span class="comment">    while (remoteSystemLookup[index].index!=(unsigned int)-1)</span></div>
<div class="line"><a name="l03980"></a><span class="lineno"> 3980</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l03981"></a><span class="lineno"> 3981</span>&#160;<span class="comment">        if (++index==(unsigned int) maximumNumberOfPeers*REMOTE_SYSTEM_LOOKUP_HASH_MULTIPLE)</span></div>
<div class="line"><a name="l03982"></a><span class="lineno"> 3982</span>&#160;<span class="comment">            index=0;</span></div>
<div class="line"><a name="l03983"></a><span class="lineno"> 3983</span>&#160;<span class="comment">//      collisionCount++;</span></div>
<div class="line"><a name="l03984"></a><span class="lineno"> 3984</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l03985"></a><span class="lineno"> 3985</span>&#160;<span class="comment">//  printf(&quot;%i collisions. Using index %i\n&quot;, collisionCount, index);</span></div>
<div class="line"><a name="l03986"></a><span class="lineno"> 3986</span>&#160;<span class="comment">    return index;</span></div>
<div class="line"><a name="l03987"></a><span class="lineno"> 3987</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l03988"></a><span class="lineno"> 3988</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l03989"></a><span class="lineno"> 3989</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l03990"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff2110cddbbcea96b4ecf6acb310ec48"> 3990</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff2110cddbbcea96b4ecf6acb310ec48">RakPeer::IsLoopbackAddress</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> &amp;systemIdentifier, <span class="keywordtype">bool</span> matchPort)<span class="keyword"> const</span></div>
<div class="line"><a name="l03991"></a><span class="lineno"> 3991</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l03992"></a><span class="lineno"> 3992</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l03993"></a><span class="lineno"> 3993</span>&#160;        <span class="keywordflow">return</span> systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>==<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>;</div>
<div class="line"><a name="l03994"></a><span class="lineno"> 3994</span>&#160;</div>
<div class="line"><a name="l03995"></a><span class="lineno"> 3995</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i]!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>; i++)</div>
<div class="line"><a name="l03996"></a><span class="lineno"> 3996</span>&#160;    {</div>
<div class="line"><a name="l03997"></a><span class="lineno"> 3997</span>&#160;        <span class="keywordflow">if</span> (matchPort)</div>
<div class="line"><a name="l03998"></a><span class="lineno"> 3998</span>&#160;        {</div>
<div class="line"><a name="l03999"></a><span class="lineno"> 3999</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i]==systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>)</div>
<div class="line"><a name="l04000"></a><span class="lineno"> 4000</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04001"></a><span class="lineno"> 4001</span>&#160;        }</div>
<div class="line"><a name="l04002"></a><span class="lineno"> 4002</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l04003"></a><span class="lineno"> 4003</span>&#160;        {</div>
<div class="line"><a name="l04004"></a><span class="lineno"> 4004</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i].EqualsExcludingPort(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>))</div>
<div class="line"><a name="l04005"></a><span class="lineno"> 4005</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04006"></a><span class="lineno"> 4006</span>&#160;        }</div>
<div class="line"><a name="l04007"></a><span class="lineno"> 4007</span>&#160;    }</div>
<div class="line"><a name="l04008"></a><span class="lineno"> 4008</span>&#160;</div>
<div class="line"><a name="l04009"></a><span class="lineno"> 4009</span>&#160;    <span class="keywordflow">return</span> (matchPort==<span class="keyword">true</span> &amp;&amp; systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>==<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>) ||</div>
<div class="line"><a name="l04010"></a><span class="lineno"> 4010</span>&#160;        (matchPort==<span class="keyword">false</span> &amp;&amp; systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5915af5dc768047a85938ae1a7a9b034" title="Returns if two system addresses have the same IP (port is not checked)">EqualsExcludingPort</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>));</div>
<div class="line"><a name="l04011"></a><span class="lineno"> 4011</span>&#160;}</div>
<div class="line"><a name="l04012"></a><span class="lineno"> 4012</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04013"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adbedc1bd441fe62b405bf27c5ffe5389"> 4013</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adbedc1bd441fe62b405bf27c5ffe5389">RakPeer::GetLoopbackAddress</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l04014"></a><span class="lineno"> 4014</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l04015"></a><span class="lineno"> 4015</span>&#160;</div>
<div class="line"><a name="l04016"></a><span class="lineno"> 4016</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[0];</div>
<div class="line"><a name="l04017"></a><span class="lineno"> 4017</span>&#160;</div>
<div class="line"><a name="l04018"></a><span class="lineno"> 4018</span>&#160;</div>
<div class="line"><a name="l04019"></a><span class="lineno"> 4019</span>&#160;</div>
<div class="line"><a name="l04020"></a><span class="lineno"> 4020</span>&#160;}</div>
<div class="line"><a name="l04021"></a><span class="lineno"> 4021</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04022"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a25b2da73418842f2a655199cb434a859"> 4022</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a25b2da73418842f2a655199cb434a859">RakPeer::AllowIncomingConnections</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l04023"></a><span class="lineno"> 4023</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l04024"></a><span class="lineno"> 4024</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a36d2e214665c8fccf0b16593252e9fab" title="Returns how many remote systems initiated a connection to us.">GetNumberOfRemoteInitiatedConnections</a>() &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4de15c29e41694e8981ab8d4cb90baf4" title="Returns the value passed to SetMaximumIncomingConnections().">GetMaximumIncomingConnections</a>();</div>
<div class="line"><a name="l04025"></a><span class="lineno"> 4025</span>&#160;}</div>
<div class="line"><a name="l04026"></a><span class="lineno"> 4026</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04027"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af8274d9273cee687274854660b37a3be"> 4027</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af8274d9273cee687274854660b37a3be">RakPeer::DeallocRNS2RecvStruct</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *s, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l04028"></a><span class="lineno"> 4028</span>&#160;{</div>
<div class="line"><a name="l04029"></a><span class="lineno"> 4029</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04030"></a><span class="lineno"> 4030</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f87f726717d3e4706d5063b3f4b14a1">bufferedPacketsFreePool</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(s, file, line);</div>
<div class="line"><a name="l04031"></a><span class="lineno"> 4031</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04032"></a><span class="lineno"> 4032</span>&#160;}</div>
<div class="line"><a name="l04033"></a><span class="lineno"> 4033</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04034"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae2d7d23b28c0d9e8df2a260ba5d77f37"> 4034</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae2d7d23b28c0d9e8df2a260ba5d77f37">RakPeer::AllocRNS2RecvStruct</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l04035"></a><span class="lineno"> 4035</span>&#160;{</div>
<div class="line"><a name="l04036"></a><span class="lineno"> 4036</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04037"></a><span class="lineno"> 4037</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f87f726717d3e4706d5063b3f4b14a1">bufferedPacketsFreePool</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>()&gt;0)</div>
<div class="line"><a name="l04038"></a><span class="lineno"> 4038</span>&#160;    {</div>
<div class="line"><a name="l04039"></a><span class="lineno"> 4039</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *s = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f87f726717d3e4706d5063b3f4b14a1">bufferedPacketsFreePool</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l04040"></a><span class="lineno"> 4040</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04041"></a><span class="lineno"> 4041</span>&#160;        <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l04042"></a><span class="lineno"> 4042</span>&#160;    }</div>
<div class="line"><a name="l04043"></a><span class="lineno"> 4043</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04044"></a><span class="lineno"> 4044</span>&#160;    {</div>
<div class="line"><a name="l04045"></a><span class="lineno"> 4045</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04046"></a><span class="lineno"> 4046</span>&#160;        <span class="keywordflow">return</span> SLNet::OP_NEW&lt;RNS2RecvStruct&gt;(file,line);</div>
<div class="line"><a name="l04047"></a><span class="lineno"> 4047</span>&#160;    }</div>
<div class="line"><a name="l04048"></a><span class="lineno"> 4048</span>&#160;}</div>
<div class="line"><a name="l04049"></a><span class="lineno"> 4049</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04050"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281f387ca70c252bc753815e3763a36b"> 4050</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a281f387ca70c252bc753815e3763a36b">RakPeer::ClearBufferedPackets</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04051"></a><span class="lineno"> 4051</span>&#160;{</div>
<div class="line"><a name="l04052"></a><span class="lineno"> 4052</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04053"></a><span class="lineno"> 4053</span>&#160;    <span class="keywordflow">while</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f87f726717d3e4706d5063b3f4b14a1">bufferedPacketsFreePool</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>()&gt;0)</div>
<div class="line"><a name="l04054"></a><span class="lineno"> 4054</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8f87f726717d3e4706d5063b3f4b14a1">bufferedPacketsFreePool</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>(), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04055"></a><span class="lineno"> 4055</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a43bd8073fa9ad174ace8c3f476f73b7d">bufferedPacketsFreePoolMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04056"></a><span class="lineno"> 4056</span>&#160;</div>
<div class="line"><a name="l04057"></a><span class="lineno"> 4057</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04058"></a><span class="lineno"> 4058</span>&#160;    <span class="keywordflow">while</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7365d72f247e174586de1d496ae09890">bufferedPacketsQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>()&gt;0)</div>
<div class="line"><a name="l04059"></a><span class="lineno"> 4059</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7365d72f247e174586de1d496ae09890">bufferedPacketsQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>(), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04060"></a><span class="lineno"> 4060</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04061"></a><span class="lineno"> 4061</span>&#160;}</div>
<div class="line"><a name="l04062"></a><span class="lineno"> 4062</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04063"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac35b89a689580275d89b01f7b7da8e5c"> 4063</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac35b89a689580275d89b01f7b7da8e5c">RakPeer::SetupBufferedPackets</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04064"></a><span class="lineno"> 4064</span>&#160;{</div>
<div class="line"><a name="l04065"></a><span class="lineno"> 4065</span>&#160;}</div>
<div class="line"><a name="l04066"></a><span class="lineno"> 4066</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04067"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a872edaaa63da89c051fd40965edcafcd"> 4067</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a872edaaa63da89c051fd40965edcafcd">RakPeer::PushBufferedPacket</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> * p)</div>
<div class="line"><a name="l04068"></a><span class="lineno"> 4068</span>&#160;{</div>
<div class="line"><a name="l04069"></a><span class="lineno"> 4069</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04070"></a><span class="lineno"> 4070</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7365d72f247e174586de1d496ae09890">bufferedPacketsQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(p, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04071"></a><span class="lineno"> 4071</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04072"></a><span class="lineno"> 4072</span>&#160;}</div>
<div class="line"><a name="l04073"></a><span class="lineno"> 4073</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04074"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5ba127831e551667e78a3a997bb675c5"> 4074</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5ba127831e551667e78a3a997bb675c5">RakPeer::PopBufferedPacket</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04075"></a><span class="lineno"> 4075</span>&#160;{</div>
<div class="line"><a name="l04076"></a><span class="lineno"> 4076</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04077"></a><span class="lineno"> 4077</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7365d72f247e174586de1d496ae09890">bufferedPacketsQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>()&gt;0)</div>
<div class="line"><a name="l04078"></a><span class="lineno"> 4078</span>&#160;    {</div>
<div class="line"><a name="l04079"></a><span class="lineno"> 4079</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *s = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7365d72f247e174586de1d496ae09890">bufferedPacketsQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l04080"></a><span class="lineno"> 4080</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04081"></a><span class="lineno"> 4081</span>&#160;        <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l04082"></a><span class="lineno"> 4082</span>&#160;    }</div>
<div class="line"><a name="l04083"></a><span class="lineno"> 4083</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adb071c4f89817bdd8371cdc0956e792f">bufferedPacketsQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04084"></a><span class="lineno"> 4084</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l04085"></a><span class="lineno"> 4085</span>&#160;}</div>
<div class="line"><a name="l04086"></a><span class="lineno"> 4086</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04087"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4"> 4087</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4">RakPeer::PingInternal</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target, <span class="keywordtype">bool</span> performImmediate, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability )</div>
<div class="line"><a name="l04088"></a><span class="lineno"> 4088</span>&#160;{</div>
<div class="line"><a name="l04089"></a><span class="lineno"> 4089</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a52ff3b23878d11d8b00473835d44b1f5" title="Returns true if the network thread is running.">IsActive</a>() == <span class="keyword">false</span> )</div>
<div class="line"><a name="l04090"></a><span class="lineno"> 4090</span>&#160;        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9717e7bbecb906637e86cef6da3d83c2">return</a> ;</div>
<div class="line"><a name="l04091"></a><span class="lineno"> 4091</span>&#160;</div>
<div class="line"><a name="l04092"></a><span class="lineno"> 4092</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>));</div>
<div class="line"><a name="l04093"></a><span class="lineno"> 4093</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa5943bb3e478a4862d612f9bd1a87fb8">ID_CONNECTED_PING</a>);</div>
<div class="line"><a name="l04094"></a><span class="lineno"> 4094</span>&#160;    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>());</div>
<div class="line"><a name="l04095"></a><span class="lineno"> 4095</span>&#160;    <span class="keywordflow">if</span> (performImmediate)</div>
<div class="line"><a name="l04096"></a><span class="lineno"> 4096</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>( (<span class="keywordtype">char</span>*)bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, reliability, 0, target, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0 );</div>
<div class="line"><a name="l04097"></a><span class="lineno"> 4097</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04098"></a><span class="lineno"> 4098</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4e1766fd244af7941b327e8751a4e9ee" title="Sends a block of data to the specified system that you are connected to.">Send</a>( &amp;bitStream, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, reliability, 0, target, <span class="keyword">false</span> );</div>
<div class="line"><a name="l04099"></a><span class="lineno"> 4099</span>&#160;}</div>
<div class="line"><a name="l04100"></a><span class="lineno"> 4100</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04101"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac2555dbfa33331201626527858f7a8f9"> 4101</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac2555dbfa33331201626527858f7a8f9">RakPeer::CloseConnectionInternal</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a>&amp; systemIdentifier, <span class="keywordtype">bool</span> sendDisconnectionNotification, <span class="keywordtype">bool</span> performImmediate, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> orderingChannel, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> disconnectionNotificationPriority )</div>
<div class="line"><a name="l04102"></a><span class="lineno"> 4102</span>&#160;{</div>
<div class="line"><a name="l04103"></a><span class="lineno"> 4103</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l04104"></a><span class="lineno"> 4104</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(orderingChannel &lt; 32);</div>
<div class="line"><a name="l04105"></a><span class="lineno"> 4105</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l04106"></a><span class="lineno"> 4106</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04107"></a><span class="lineno"> 4107</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a61d231c237e3eaea84445c47b4003ddc">IsUndefined</a>())</div>
<div class="line"><a name="l04108"></a><span class="lineno"> 4108</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l04109"></a><span class="lineno"> 4109</span>&#160;</div>
<div class="line"><a name="l04110"></a><span class="lineno"> 4110</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a> == 0 || <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l04111"></a><span class="lineno"> 4111</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l04112"></a><span class="lineno"> 4112</span>&#160;</div>
<div class="line"><a name="l04113"></a><span class="lineno"> 4113</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> target;</div>
<div class="line"><a name="l04114"></a><span class="lineno"> 4114</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l04115"></a><span class="lineno"> 4115</span>&#160;    {</div>
<div class="line"><a name="l04116"></a><span class="lineno"> 4116</span>&#160;        target=systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>;</div>
<div class="line"><a name="l04117"></a><span class="lineno"> 4117</span>&#160;    }</div>
<div class="line"><a name="l04118"></a><span class="lineno"> 4118</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04119"></a><span class="lineno"> 4119</span>&#160;    {</div>
<div class="line"><a name="l04120"></a><span class="lineno"> 4120</span>&#160;        target=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7b99f10bb48b76fcef310226c277870a" title="Gives the system address of a connected system, given its GUID. The GUID will be the same on all syst...">GetSystemAddressFromGuid</a>(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>);</div>
<div class="line"><a name="l04121"></a><span class="lineno"> 4121</span>&#160;    }</div>
<div class="line"><a name="l04122"></a><span class="lineno"> 4122</span>&#160;</div>
<div class="line"><a name="l04123"></a><span class="lineno"> 4123</span>&#160;    <span class="keywordflow">if</span> (target!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> &amp;&amp; performImmediate)</div>
<div class="line"><a name="l04124"></a><span class="lineno"> 4124</span>&#160;        target.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">FixForIPVersion</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0]-&gt;GetBoundAddress());</div>
<div class="line"><a name="l04125"></a><span class="lineno"> 4125</span>&#160;</div>
<div class="line"><a name="l04126"></a><span class="lineno"> 4126</span>&#160;    <span class="keywordflow">if</span> (sendDisconnectionNotification)</div>
<div class="line"><a name="l04127"></a><span class="lineno"> 4127</span>&#160;    {</div>
<div class="line"><a name="l04128"></a><span class="lineno"> 4128</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a34ef012d4c7fdae387cff33ef3f8a82c" title="Send a reliable disconnect packet to this player and disconnect them when it is delivered.">NotifyAndFlagForShutdown</a>(target, performImmediate, orderingChannel, disconnectionNotificationPriority);</div>
<div class="line"><a name="l04129"></a><span class="lineno"> 4129</span>&#160;    }</div>
<div class="line"><a name="l04130"></a><span class="lineno"> 4130</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04131"></a><span class="lineno"> 4131</span>&#160;    {</div>
<div class="line"><a name="l04132"></a><span class="lineno"> 4132</span>&#160;        <span class="keywordflow">if</span> (performImmediate)</div>
<div class="line"><a name="l04133"></a><span class="lineno"> 4133</span>&#160;        {</div>
<div class="line"><a name="l04134"></a><span class="lineno"> 4134</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">GetRemoteSystemIndex</a>(target);</div>
<div class="line"><a name="l04135"></a><span class="lineno"> 4135</span>&#160;            <span class="keywordflow">if</span> (index!=(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1)</div>
<div class="line"><a name="l04136"></a><span class="lineno"> 4136</span>&#160;            {</div>
<div class="line"><a name="l04137"></a><span class="lineno"> 4137</span>&#160;                <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].isActive )</div>
<div class="line"><a name="l04138"></a><span class="lineno"> 4138</span>&#160;                {</div>
<div class="line"><a name="l04139"></a><span class="lineno"> 4139</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a76f651db495195a9c450d1c2925922e5">RemoveFromActiveSystemList</a>(target);</div>
<div class="line"><a name="l04140"></a><span class="lineno"> 4140</span>&#160;</div>
<div class="line"><a name="l04141"></a><span class="lineno"> 4141</span>&#160;                    <span class="comment">// Found the index to stop</span></div>
<div class="line"><a name="l04142"></a><span class="lineno"> 4142</span>&#160;                    <span class="comment">// printf(&quot;--- Address %s has become inactive\n&quot;, remoteSystemList[index].systemAddress.ToString());</span></div>
<div class="line"><a name="l04143"></a><span class="lineno"> 4143</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l04144"></a><span class="lineno"> 4144</span>&#160;</div>
<div class="line"><a name="l04145"></a><span class="lineno"> 4145</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l04146"></a><span class="lineno"> 4146</span>&#160;</div>
<div class="line"><a name="l04147"></a><span class="lineno"> 4147</span>&#160;                    <span class="comment">// Reserve this reliability layer for ourselves</span></div>
<div class="line"><a name="l04148"></a><span class="lineno"> 4148</span>&#160;                    <span class="comment">//remoteSystemList[ remoteSystemLookup[index].index ].systemAddress = UNASSIGNED_SYSTEM_ADDRESS;</span></div>
<div class="line"><a name="l04149"></a><span class="lineno"> 4149</span>&#160;</div>
<div class="line"><a name="l04150"></a><span class="lineno"> 4150</span>&#160;                    <span class="comment">// Clear any remaining messages</span></div>
<div class="line"><a name="l04151"></a><span class="lineno"> 4151</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].MTUSize &lt;= <a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a>);</div>
<div class="line"><a name="l04152"></a><span class="lineno"> 4152</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a82a18156ee862239ce046aa4fb5acc79" title="Resets the layer for reuse.">Reset</a>(<span class="keyword">false</span>, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].MTUSize, <span class="keyword">false</span>);</div>
<div class="line"><a name="l04153"></a><span class="lineno"> 4153</span>&#160;</div>
<div class="line"><a name="l04154"></a><span class="lineno"> 4154</span>&#160;                    <span class="comment">// Not using this socket</span></div>
<div class="line"><a name="l04155"></a><span class="lineno"> 4155</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[index].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5a5790ea4c270243539880c1f3bfe683">rakNetSocket</a> = 0;</div>
<div class="line"><a name="l04156"></a><span class="lineno"> 4156</span>&#160;                }</div>
<div class="line"><a name="l04157"></a><span class="lineno"> 4157</span>&#160;            }</div>
<div class="line"><a name="l04158"></a><span class="lineno"> 4158</span>&#160;        }</div>
<div class="line"><a name="l04159"></a><span class="lineno"> 4159</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l04160"></a><span class="lineno"> 4160</span>&#160;        {</div>
<div class="line"><a name="l04161"></a><span class="lineno"> 4161</span>&#160;            <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l04162"></a><span class="lineno"> 4162</span>&#160;            bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04163"></a><span class="lineno"> 4163</span>&#160;            bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>=<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852eae900fb365ae37ee2984c6f5d53eb0f9f">BufferedCommandStruct::BCS_CLOSE_CONNECTION</a>;</div>
<div class="line"><a name="l04164"></a><span class="lineno"> 4164</span>&#160;            bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>=target;</div>
<div class="line"><a name="l04165"></a><span class="lineno"> 4165</span>&#160;            bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>=0;</div>
<div class="line"><a name="l04166"></a><span class="lineno"> 4166</span>&#160;            bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a27ee0f572a3dac31652e24e0e3085b12">orderingChannel</a>=orderingChannel;</div>
<div class="line"><a name="l04167"></a><span class="lineno"> 4167</span>&#160;            bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a3106756bf73ed3923a1662265933e3bb">priority</a>=disconnectionNotificationPriority;</div>
<div class="line"><a name="l04168"></a><span class="lineno"> 4168</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(bcs);</div>
<div class="line"><a name="l04169"></a><span class="lineno"> 4169</span>&#160;        }</div>
<div class="line"><a name="l04170"></a><span class="lineno"> 4170</span>&#160;    }</div>
<div class="line"><a name="l04171"></a><span class="lineno"> 4171</span>&#160;}</div>
<div class="line"><a name="l04172"></a><span class="lineno"> 4172</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04173"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a705e3d72e100fc87f2a1878b0882dc38"> 4173</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a705e3d72e100fc87f2a1878b0882dc38">RakPeer::SendBuffered</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> numberOfBitsToSend, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04">RemoteSystemStruct::ConnectMode</a> connectionMode, <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receipt )</div>
<div class="line"><a name="l04174"></a><span class="lineno"> 4174</span>&#160;{</div>
<div class="line"><a name="l04175"></a><span class="lineno"> 4175</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l04176"></a><span class="lineno"> 4176</span>&#160;</div>
<div class="line"><a name="l04177"></a><span class="lineno"> 4177</span>&#160;    bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04178"></a><span class="lineno"> 4178</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a> = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (<span class="keywordtype">size_t</span>) <a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>(numberOfBitsToSend), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> ); <span class="comment">// Making a copy doesn&#39;t lose efficiency because I tell the reliability layer to use this allocation for its own copy</span></div>
<div class="line"><a name="l04179"></a><span class="lineno"> 4179</span>&#160;    <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>==0)</div>
<div class="line"><a name="l04180"></a><span class="lineno"> 4180</span>&#160;    {</div>
<div class="line"><a name="l04181"></a><span class="lineno"> 4181</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04182"></a><span class="lineno"> 4182</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">Deallocate</a>(bcs, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04183"></a><span class="lineno"> 4183</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l04184"></a><span class="lineno"> 4184</span>&#160;    }</div>
<div class="line"><a name="l04185"></a><span class="lineno"> 4185</span>&#160;    </div>
<div class="line"><a name="l04186"></a><span class="lineno"> 4186</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( reliability &gt;= <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaf49e4584ca35290efd854922f4cad6be">NUMBER_OF_RELIABILITIES</a> || reliability &lt; 0 ) );</div>
<div class="line"><a name="l04187"></a><span class="lineno"> 4187</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( priority &gt; <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca619c0d06913ad9d663b086aca30f7cdc">NUMBER_OF_PRIORITIES</a> || priority &lt; 0 ) );</div>
<div class="line"><a name="l04188"></a><span class="lineno"> 4188</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( orderingChannel &gt;= <a class="code" href="../../dd/dba/_reliability_layer_8h.xhtml#aaabd5ed6e95299bf0ae89b0a972f5071" title="Number of ordered streams available. You can use up to 32 ordered streams.">NUMBER_OF_ORDERED_STREAMS</a> ) );</div>
<div class="line"><a name="l04189"></a><span class="lineno"> 4189</span>&#160;</div>
<div class="line"><a name="l04190"></a><span class="lineno"> 4190</span>&#160;    memcpy(bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>, data, (<span class="keywordtype">size_t</span>) <a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>(numberOfBitsToSend));</div>
<div class="line"><a name="l04191"></a><span class="lineno"> 4191</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a4d3c89e3ffdf2d0e1a41465f578b8b6a">numberOfBitsToSend</a>=numberOfBitsToSend;</div>
<div class="line"><a name="l04192"></a><span class="lineno"> 4192</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a3106756bf73ed3923a1662265933e3bb">priority</a>=priority;</div>
<div class="line"><a name="l04193"></a><span class="lineno"> 4193</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0507fba98e8fdac29bc45213948b1a9f">reliability</a>=reliability;</div>
<div class="line"><a name="l04194"></a><span class="lineno"> 4194</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a27ee0f572a3dac31652e24e0e3085b12">orderingChannel</a>=orderingChannel;</div>
<div class="line"><a name="l04195"></a><span class="lineno"> 4195</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>=systemIdentifier;</div>
<div class="line"><a name="l04196"></a><span class="lineno"> 4196</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a4b6cb86fd055cb9b596b47bc21f2329a">broadcast</a>=broadcast;</div>
<div class="line"><a name="l04197"></a><span class="lineno"> 4197</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#ac2713256cf8b9e89ac17865ac86b8242">connectionMode</a>=connectionMode;</div>
<div class="line"><a name="l04198"></a><span class="lineno"> 4198</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a018b0d4fa80c4d90f09e6d4e31886fe5">receipt</a>=receipt;</div>
<div class="line"><a name="l04199"></a><span class="lineno"> 4199</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>=<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852eac93dd4e021b9f56191ecbcaf7b94c591">BufferedCommandStruct::BCS_SEND</a>;</div>
<div class="line"><a name="l04200"></a><span class="lineno"> 4200</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(bcs);</div>
<div class="line"><a name="l04201"></a><span class="lineno"> 4201</span>&#160;</div>
<div class="line"><a name="l04202"></a><span class="lineno"> 4202</span>&#160;    <span class="keywordflow">if</span> (priority==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>)</div>
<div class="line"><a name="l04203"></a><span class="lineno"> 4203</span>&#160;    {</div>
<div class="line"><a name="l04204"></a><span class="lineno"> 4204</span>&#160;        <span class="comment">// Forces pending sends to go out now, rather than waiting to the next update interval</span></div>
<div class="line"><a name="l04205"></a><span class="lineno"> 4205</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l04206"></a><span class="lineno"> 4206</span>&#160;    }</div>
<div class="line"><a name="l04207"></a><span class="lineno"> 4207</span>&#160;}</div>
<div class="line"><a name="l04208"></a><span class="lineno"> 4208</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04209"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7bcc8f1dc3c6735b73a1f9f57b446eb2"> 4209</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a7bcc8f1dc3c6735b73a1f9f57b446eb2">RakPeer::SendBufferedList</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> **data, <span class="keyword">const</span> <span class="keywordtype">int</span> *lengths, <span class="keyword">const</span> <span class="keywordtype">int</span> numParameters, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04">RemoteSystemStruct::ConnectMode</a> connectionMode, <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receipt )</div>
<div class="line"><a name="l04210"></a><span class="lineno"> 4210</span>&#160;{</div>
<div class="line"><a name="l04211"></a><span class="lineno"> 4211</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l04212"></a><span class="lineno"> 4212</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> totalLength=0;</div>
<div class="line"><a name="l04213"></a><span class="lineno"> 4213</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lengthOffset;</div>
<div class="line"><a name="l04214"></a><span class="lineno"> 4214</span>&#160;    <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l04215"></a><span class="lineno"> 4215</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; numParameters; i++)</div>
<div class="line"><a name="l04216"></a><span class="lineno"> 4216</span>&#160;    {</div>
<div class="line"><a name="l04217"></a><span class="lineno"> 4217</span>&#160;        <span class="keywordflow">if</span> (lengths[i]&gt;0)</div>
<div class="line"><a name="l04218"></a><span class="lineno"> 4218</span>&#160;            totalLength+=lengths[i];</div>
<div class="line"><a name="l04219"></a><span class="lineno"> 4219</span>&#160;    }</div>
<div class="line"><a name="l04220"></a><span class="lineno"> 4220</span>&#160;    <span class="keywordflow">if</span> (totalLength==0)</div>
<div class="line"><a name="l04221"></a><span class="lineno"> 4221</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l04222"></a><span class="lineno"> 4222</span>&#160;</div>
<div class="line"><a name="l04223"></a><span class="lineno"> 4223</span>&#160;    <span class="keywordtype">char</span> *dataAggregate;</div>
<div class="line"><a name="l04224"></a><span class="lineno"> 4224</span>&#160;    dataAggregate = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (<span class="keywordtype">size_t</span>) totalLength, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> ); <span class="comment">// Making a copy doesn&#39;t lose efficiency because I tell the reliability layer to use this allocation for its own copy</span></div>
<div class="line"><a name="l04225"></a><span class="lineno"> 4225</span>&#160;    <span class="keywordflow">if</span> (dataAggregate==0)</div>
<div class="line"><a name="l04226"></a><span class="lineno"> 4226</span>&#160;    {</div>
<div class="line"><a name="l04227"></a><span class="lineno"> 4227</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04228"></a><span class="lineno"> 4228</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l04229"></a><span class="lineno"> 4229</span>&#160;    }</div>
<div class="line"><a name="l04230"></a><span class="lineno"> 4230</span>&#160;    <span class="keywordflow">for</span> (i=0, lengthOffset=0; i &lt; numParameters; i++)</div>
<div class="line"><a name="l04231"></a><span class="lineno"> 4231</span>&#160;    {</div>
<div class="line"><a name="l04232"></a><span class="lineno"> 4232</span>&#160;        <span class="keywordflow">if</span> (lengths[i]&gt;0)</div>
<div class="line"><a name="l04233"></a><span class="lineno"> 4233</span>&#160;        {</div>
<div class="line"><a name="l04234"></a><span class="lineno"> 4234</span>&#160;            memcpy(dataAggregate+lengthOffset, data[i], lengths[i]);</div>
<div class="line"><a name="l04235"></a><span class="lineno"> 4235</span>&#160;            lengthOffset+=lengths[i];</div>
<div class="line"><a name="l04236"></a><span class="lineno"> 4236</span>&#160;        }</div>
<div class="line"><a name="l04237"></a><span class="lineno"> 4237</span>&#160;    }</div>
<div class="line"><a name="l04238"></a><span class="lineno"> 4238</span>&#160;</div>
<div class="line"><a name="l04239"></a><span class="lineno"> 4239</span>&#160;    <span class="keywordflow">if</span> (broadcast==<span class="keyword">false</span> &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aff2110cddbbcea96b4ecf6acb310ec48">IsLoopbackAddress</a>(systemIdentifier,<span class="keyword">true</span>))</div>
<div class="line"><a name="l04240"></a><span class="lineno"> 4240</span>&#160;    {</div>
<div class="line"><a name="l04241"></a><span class="lineno"> 4241</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a888819dc988a3282c41db84ee0a00b6e" title="&quot;Send&quot; to yourself rather than a remote system.">SendLoopback</a>(dataAggregate,totalLength);</div>
<div class="line"><a name="l04242"></a><span class="lineno"> 4242</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(dataAggregate,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04243"></a><span class="lineno"> 4243</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l04244"></a><span class="lineno"> 4244</span>&#160;    }</div>
<div class="line"><a name="l04245"></a><span class="lineno"> 4245</span>&#160;</div>
<div class="line"><a name="l04246"></a><span class="lineno"> 4246</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( reliability &gt;= <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaf49e4584ca35290efd854922f4cad6be">NUMBER_OF_RELIABILITIES</a> || reliability &lt; 0 ) );</div>
<div class="line"><a name="l04247"></a><span class="lineno"> 4247</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( priority &gt; <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca619c0d06913ad9d663b086aca30f7cdc">NUMBER_OF_PRIORITIES</a> || priority &lt; 0 ) );</div>
<div class="line"><a name="l04248"></a><span class="lineno"> 4248</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>( !( orderingChannel &gt;= <a class="code" href="../../dd/dba/_reliability_layer_8h.xhtml#aaabd5ed6e95299bf0ae89b0a972f5071" title="Number of ordered streams available. You can use up to 32 ordered streams.">NUMBER_OF_ORDERED_STREAMS</a> ) );</div>
<div class="line"><a name="l04249"></a><span class="lineno"> 4249</span>&#160;</div>
<div class="line"><a name="l04250"></a><span class="lineno"> 4250</span>&#160;    bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04251"></a><span class="lineno"> 4251</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a> = dataAggregate;</div>
<div class="line"><a name="l04252"></a><span class="lineno"> 4252</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a4d3c89e3ffdf2d0e1a41465f578b8b6a">numberOfBitsToSend</a>=<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(totalLength);</div>
<div class="line"><a name="l04253"></a><span class="lineno"> 4253</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a3106756bf73ed3923a1662265933e3bb">priority</a>=priority;</div>
<div class="line"><a name="l04254"></a><span class="lineno"> 4254</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0507fba98e8fdac29bc45213948b1a9f">reliability</a>=reliability;</div>
<div class="line"><a name="l04255"></a><span class="lineno"> 4255</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a27ee0f572a3dac31652e24e0e3085b12">orderingChannel</a>=orderingChannel;</div>
<div class="line"><a name="l04256"></a><span class="lineno"> 4256</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>=systemIdentifier;</div>
<div class="line"><a name="l04257"></a><span class="lineno"> 4257</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a4b6cb86fd055cb9b596b47bc21f2329a">broadcast</a>=broadcast;</div>
<div class="line"><a name="l04258"></a><span class="lineno"> 4258</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#ac2713256cf8b9e89ac17865ac86b8242">connectionMode</a>=connectionMode;</div>
<div class="line"><a name="l04259"></a><span class="lineno"> 4259</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a018b0d4fa80c4d90f09e6d4e31886fe5">receipt</a>=receipt;</div>
<div class="line"><a name="l04260"></a><span class="lineno"> 4260</span>&#160;    bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>=<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852eac93dd4e021b9f56191ecbcaf7b94c591">BufferedCommandStruct::BCS_SEND</a>;</div>
<div class="line"><a name="l04261"></a><span class="lineno"> 4261</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(bcs);</div>
<div class="line"><a name="l04262"></a><span class="lineno"> 4262</span>&#160;</div>
<div class="line"><a name="l04263"></a><span class="lineno"> 4263</span>&#160;    <span class="keywordflow">if</span> (priority==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>)</div>
<div class="line"><a name="l04264"></a><span class="lineno"> 4264</span>&#160;    {</div>
<div class="line"><a name="l04265"></a><span class="lineno"> 4265</span>&#160;        <span class="comment">// Forces pending sends to go out now, rather than waiting to the next update interval</span></div>
<div class="line"><a name="l04266"></a><span class="lineno"> 4266</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l04267"></a><span class="lineno"> 4267</span>&#160;    }</div>
<div class="line"><a name="l04268"></a><span class="lineno"> 4268</span>&#160;}</div>
<div class="line"><a name="l04269"></a><span class="lineno"> 4269</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04270"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993"> 4270</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">RakPeer::SendImmediate</a>( <span class="keywordtype">char</span> *data, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> numberOfBitsToSend, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <span class="keywordtype">bool</span> useCallerDataAllocation, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> currentTime, <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> receipt )</div>
<div class="line"><a name="l04271"></a><span class="lineno"> 4271</span>&#160;{</div>
<div class="line"><a name="l04272"></a><span class="lineno"> 4272</span>&#160;    <span class="keywordtype">unsigned</span> *sendList;</div>
<div class="line"><a name="l04273"></a><span class="lineno"> 4273</span>&#160;    <span class="keywordtype">unsigned</span> sendListSize;</div>
<div class="line"><a name="l04274"></a><span class="lineno"> 4274</span>&#160;    <span class="keywordtype">bool</span> callerDataAllocationUsed;</div>
<div class="line"><a name="l04275"></a><span class="lineno"> 4275</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> remoteSystemIndex, sendListIndex; <span class="comment">// Iterates into the list of remote systems</span></div>
<div class="line"><a name="l04276"></a><span class="lineno"> 4276</span>&#160;<span class="comment">//  unsigned numberOfBytesUsed = (unsigned) BITS_TO_BYTES(numberOfBitsToSend);</span></div>
<div class="line"><a name="l04277"></a><span class="lineno"> 4277</span>&#160;    callerDataAllocationUsed=<span class="keyword">false</span>;</div>
<div class="line"><a name="l04278"></a><span class="lineno"> 4278</span>&#160;</div>
<div class="line"><a name="l04279"></a><span class="lineno"> 4279</span>&#160;    sendListSize=0;</div>
<div class="line"><a name="l04280"></a><span class="lineno"> 4280</span>&#160;</div>
<div class="line"><a name="l04281"></a><span class="lineno"> 4281</span>&#160;    <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l04282"></a><span class="lineno"> 4282</span>&#160;        remoteSystemIndex=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l04283"></a><span class="lineno"> 4283</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l04284"></a><span class="lineno"> 4284</span>&#160;        remoteSystemIndex=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8650db1b4cbcedf91564235c538f358b">GetSystemIndexFromGuid</a>(systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>);</div>
<div class="line"><a name="l04285"></a><span class="lineno"> 4285</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04286"></a><span class="lineno"> 4286</span>&#160;        remoteSystemIndex=(<span class="keywordtype">unsigned</span> int) -1;</div>
<div class="line"><a name="l04287"></a><span class="lineno"> 4287</span>&#160;</div>
<div class="line"><a name="l04288"></a><span class="lineno"> 4288</span>&#160;    <span class="comment">// 03/06/06 - If broadcast is false, use the optimized version of GetIndexFromSystemAddress</span></div>
<div class="line"><a name="l04289"></a><span class="lineno"> 4289</span>&#160;    <span class="keywordflow">if</span> (broadcast==<span class="keyword">false</span>)</div>
<div class="line"><a name="l04290"></a><span class="lineno"> 4290</span>&#160;    {</div>
<div class="line"><a name="l04291"></a><span class="lineno"> 4291</span>&#160;        <span class="keywordflow">if</span> (remoteSystemIndex==(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1)</div>
<div class="line"><a name="l04292"></a><span class="lineno"> 4292</span>&#160;        {</div>
<div class="line"><a name="l04293"></a><span class="lineno"> 4293</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l04294"></a><span class="lineno"> 4294</span>&#160;<span class="preprocessor"></span><span class="comment">//          int debugIndex = GetRemoteSystemIndex(systemIdentifier.systemAddress);</span></div>
<div class="line"><a name="l04295"></a><span class="lineno"> 4295</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l04296"></a><span class="lineno"> 4296</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l04297"></a><span class="lineno"> 4297</span>&#160;        }</div>
<div class="line"><a name="l04298"></a><span class="lineno"> 4298</span>&#160;</div>
<div class="line"><a name="l04299"></a><span class="lineno"> 4299</span>&#160;<span class="preprocessor">        #if USE_ALLOCA==1</span></div>
<div class="line"><a name="l04300"></a><span class="lineno"> 4300</span>&#160;<span class="preprocessor"></span>            sendList=(<span class="keywordtype">unsigned</span> *)alloca(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span>));</div>
<div class="line"><a name="l04301"></a><span class="lineno"> 4301</span>&#160;<span class="preprocessor">        #else</span></div>
<div class="line"><a name="l04302"></a><span class="lineno"> 4302</span>&#160;<span class="preprocessor"></span>            sendList = (<span class="keywordtype">unsigned</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span>), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04303"></a><span class="lineno"> 4303</span>&#160;<span class="preprocessor">        #endif</span></div>
<div class="line"><a name="l04304"></a><span class="lineno"> 4304</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04305"></a><span class="lineno"> 4305</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemIndex].isActive &amp;&amp;</div>
<div class="line"><a name="l04306"></a><span class="lineno"> 4306</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemIndex].connectMode!=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04aea755206e361e47b9640808a977dc0d6">RemoteSystemStruct::DISCONNECT_ASAP</a> &amp;&amp;</div>
<div class="line"><a name="l04307"></a><span class="lineno"> 4307</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemIndex].connectMode!=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a> &amp;&amp;</div>
<div class="line"><a name="l04308"></a><span class="lineno"> 4308</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[remoteSystemIndex].connectMode!=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a84516385fdb35a2d6cb7602af2d6ccf4">RemoteSystemStruct::DISCONNECT_ON_NO_ACK</a>)</div>
<div class="line"><a name="l04309"></a><span class="lineno"> 4309</span>&#160;        {</div>
<div class="line"><a name="l04310"></a><span class="lineno"> 4310</span>&#160;            sendList[0]=remoteSystemIndex;</div>
<div class="line"><a name="l04311"></a><span class="lineno"> 4311</span>&#160;            sendListSize=1;</div>
<div class="line"><a name="l04312"></a><span class="lineno"> 4312</span>&#160;        }</div>
<div class="line"><a name="l04313"></a><span class="lineno"> 4313</span>&#160;    }</div>
<div class="line"><a name="l04314"></a><span class="lineno"> 4314</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04315"></a><span class="lineno"> 4315</span>&#160;    {</div>
<div class="line"><a name="l04316"></a><span class="lineno"> 4316</span>&#160;<span class="preprocessor">        #if USE_ALLOCA==1</span></div>
<div class="line"><a name="l04317"></a><span class="lineno"> 4317</span>&#160;<span class="preprocessor"></span>            sendList=(<span class="keywordtype">unsigned</span> *)alloca(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span>)*<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>);</div>
<div class="line"><a name="l04318"></a><span class="lineno"> 4318</span>&#160;<span class="preprocessor">        #else</span></div>
<div class="line"><a name="l04319"></a><span class="lineno"> 4319</span>&#160;<span class="preprocessor"></span>            sendList = (<span class="keywordtype">unsigned</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span>)*<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04320"></a><span class="lineno"> 4320</span>&#160;<span class="preprocessor">        #endif</span></div>
<div class="line"><a name="l04321"></a><span class="lineno"> 4321</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04322"></a><span class="lineno"> 4322</span>&#160;        <span class="comment">// remoteSystemList in network thread</span></div>
<div class="line"><a name="l04323"></a><span class="lineno"> 4323</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx;</div>
<div class="line"><a name="l04324"></a><span class="lineno"> 4324</span>&#160;        <span class="keywordflow">for</span> ( idx = 0; idx &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0f972ed71cf72e62cede64a16de6c96c" title="Store the maximum number of peers allowed to connect.">maximumNumberOfPeers</a>; idx++ )</div>
<div class="line"><a name="l04325"></a><span class="lineno"> 4325</span>&#160;        {</div>
<div class="line"><a name="l04326"></a><span class="lineno"> 4326</span>&#160;            <span class="keywordflow">if</span> (remoteSystemIndex!=(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1 &amp;&amp; idx==remoteSystemIndex)</div>
<div class="line"><a name="l04327"></a><span class="lineno"> 4327</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l04328"></a><span class="lineno"> 4328</span>&#160;</div>
<div class="line"><a name="l04329"></a><span class="lineno"> 4329</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ idx ].isActive &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[ idx ].systemAddress != <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> )</div>
<div class="line"><a name="l04330"></a><span class="lineno"> 4330</span>&#160;                sendList[sendListSize++]=idx;</div>
<div class="line"><a name="l04331"></a><span class="lineno"> 4331</span>&#160;        }</div>
<div class="line"><a name="l04332"></a><span class="lineno"> 4332</span>&#160;    }</div>
<div class="line"><a name="l04333"></a><span class="lineno"> 4333</span>&#160;</div>
<div class="line"><a name="l04334"></a><span class="lineno"> 4334</span>&#160;    <span class="keywordflow">if</span> (sendListSize==0)</div>
<div class="line"><a name="l04335"></a><span class="lineno"> 4335</span>&#160;    {</div>
<div class="line"><a name="l04336"></a><span class="lineno"> 4336</span>&#160;<span class="preprocessor">        #if !defined(USE_ALLOCA)</span></div>
<div class="line"><a name="l04337"></a><span class="lineno"> 4337</span>&#160;<span class="preprocessor"></span>            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(sendList, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04338"></a><span class="lineno"> 4338</span>&#160;<span class="preprocessor">        #endif</span></div>
<div class="line"><a name="l04339"></a><span class="lineno"> 4339</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04340"></a><span class="lineno"> 4340</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l04341"></a><span class="lineno"> 4341</span>&#160;    }</div>
<div class="line"><a name="l04342"></a><span class="lineno"> 4342</span>&#160;</div>
<div class="line"><a name="l04343"></a><span class="lineno"> 4343</span>&#160;    <span class="keywordflow">for</span> (sendListIndex=0; sendListIndex &lt; sendListSize; sendListIndex++)</div>
<div class="line"><a name="l04344"></a><span class="lineno"> 4344</span>&#160;    {</div>
<div class="line"><a name="l04345"></a><span class="lineno"> 4345</span>&#160;        <span class="comment">// Send may split the packet and thus deallocate data.  Don&#39;t assume data is valid if we use the callerAllocationData</span></div>
<div class="line"><a name="l04346"></a><span class="lineno"> 4346</span>&#160;        <span class="keywordtype">bool</span> useData = useCallerDataAllocation &amp;&amp; callerDataAllocationUsed==<span class="keyword">false</span> &amp;&amp; sendListIndex+1==sendListSize;</div>
<div class="line"><a name="l04347"></a><span class="lineno"> 4347</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[sendList[sendListIndex]].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a443507154f9a5f99353a32a45ccc9e9d">Send</a>( data, numberOfBitsToSend, priority, reliability, orderingChannel, useData==<span class="keyword">false</span>, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[sendList[sendListIndex]].MTUSize, currentTime, receipt );</div>
<div class="line"><a name="l04348"></a><span class="lineno"> 4348</span>&#160;        <span class="keywordflow">if</span> (useData)</div>
<div class="line"><a name="l04349"></a><span class="lineno"> 4349</span>&#160;            callerDataAllocationUsed=<span class="keyword">true</span>;</div>
<div class="line"><a name="l04350"></a><span class="lineno"> 4350</span>&#160;</div>
<div class="line"><a name="l04351"></a><span class="lineno"> 4351</span>&#160;        <span class="keywordflow">if</span> (reliability==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eabc6ba98e9404532481e43eea39731929" title="The message is sent reliably, but not necessarily in any order. Same overhead as UNRELIABLE.">RELIABLE</a> ||</div>
<div class="line"><a name="l04352"></a><span class="lineno"> 4352</span>&#160;            reliability==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a> ||</div>
<div class="line"><a name="l04353"></a><span class="lineno"> 4353</span>&#160;            reliability==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eae1fc3633b353730ff448e5b6675f7085">RELIABLE_SEQUENCED</a> ||</div>
<div class="line"><a name="l04354"></a><span class="lineno"> 4354</span>&#160;            reliability==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eacd15d4c4a2cea8b4c4459f1d3c09d95f" title="Same as RELIABLE. The user will also get ID_SND_RECEIPT_ACKED after the message is delivered when cal...">RELIABLE_WITH_ACK_RECEIPT</a> ||</div>
<div class="line"><a name="l04355"></a><span class="lineno"> 4355</span>&#160;            reliability==<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eae94727e3abc9217e16c1c19f1e8f850a" title="Same as RELIABLE_ORDERED_ACK_RECEIPT. The user will also get ID_SND_RECEIPT_ACKED after the message i...">RELIABLE_ORDERED_WITH_ACK_RECEIPT</a></div>
<div class="line"><a name="l04356"></a><span class="lineno"> 4356</span>&#160;<span class="comment">//          ||</span></div>
<div class="line"><a name="l04357"></a><span class="lineno"> 4357</span>&#160;<span class="comment">//          reliability==RELIABLE_SEQUENCED_WITH_ACK_RECEIPT</span></div>
<div class="line"><a name="l04358"></a><span class="lineno"> 4358</span>&#160;            )</div>
<div class="line"><a name="l04359"></a><span class="lineno"> 4359</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3c0065f7f633843ce03772ff03ad1f72">remoteSystemList</a>[sendList[sendListIndex]].<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a2834ea8e57e593e19af4746aaff6a041" title="When to next ping this player.">lastReliableSend</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>)(currentTime/(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a>)1000);</div>
<div class="line"><a name="l04360"></a><span class="lineno"> 4360</span>&#160;    }</div>
<div class="line"><a name="l04361"></a><span class="lineno"> 4361</span>&#160;</div>
<div class="line"><a name="l04362"></a><span class="lineno"> 4362</span>&#160;<span class="preprocessor">#if !defined(USE_ALLOCA)</span></div>
<div class="line"><a name="l04363"></a><span class="lineno"> 4363</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(sendList, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04364"></a><span class="lineno"> 4364</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l04365"></a><span class="lineno"> 4365</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04366"></a><span class="lineno"> 4366</span>&#160;    <span class="comment">// Return value only meaningful if true was passed for useCallerDataAllocation.  Means the reliability layer used that data copy, so the caller should not deallocate it</span></div>
<div class="line"><a name="l04367"></a><span class="lineno"> 4367</span>&#160;    <span class="keywordflow">return</span> callerDataAllocationUsed;</div>
<div class="line"><a name="l04368"></a><span class="lineno"> 4368</span>&#160;}</div>
<div class="line"><a name="l04369"></a><span class="lineno"> 4369</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04370"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2f6e2dae8f4d9c07d9bae3b9b7218eca"> 4370</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2f6e2dae8f4d9c07d9bae3b9b7218eca">RakPeer::ResetSendReceipt</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04371"></a><span class="lineno"> 4371</span>&#160;{</div>
<div class="line"><a name="l04372"></a><span class="lineno"> 4372</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04373"></a><span class="lineno"> 4373</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa806e89a017fb5121744ff979c4304c9">sendReceiptSerial</a>=1;</div>
<div class="line"><a name="l04374"></a><span class="lineno"> 4374</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4871927ec9c825744361555fdbe534fc">sendReceiptSerialMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04375"></a><span class="lineno"> 4375</span>&#160;}</div>
<div class="line"><a name="l04376"></a><span class="lineno"> 4376</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04377"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a331b4c503549cc0de052c81f895fac9e"> 4377</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a331b4c503549cc0de052c81f895fac9e">RakPeer::OnConnectedPong</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPingTime, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPongTime, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RemoteSystemStruct</a> *remoteSystem)</div>
<div class="line"><a name="l04378"></a><span class="lineno"> 4378</span>&#160;{</div>
<div class="line"><a name="l04379"></a><span class="lineno"> 4379</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> ping;</div>
<div class="line"><a name="l04380"></a><span class="lineno"> 4380</span>&#160;<span class="comment">//  SLNet::TimeMS lastPing;</span></div>
<div class="line"><a name="l04381"></a><span class="lineno"> 4381</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> time = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>(); <span class="comment">// Update the time value to be accurate</span></div>
<div class="line"><a name="l04382"></a><span class="lineno"> 4382</span>&#160;    <span class="keywordflow">if</span> (time &gt; sendPingTime)</div>
<div class="line"><a name="l04383"></a><span class="lineno"> 4383</span>&#160;        ping = time - sendPingTime;</div>
<div class="line"><a name="l04384"></a><span class="lineno"> 4384</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04385"></a><span class="lineno"> 4385</span>&#160;        ping=0;</div>
<div class="line"><a name="l04386"></a><span class="lineno"> 4386</span>&#160;</div>
<div class="line"><a name="l04387"></a><span class="lineno"> 4387</span>&#160;<span class="comment">//  lastPing = remoteSystem-&gt;pingAndClockDifferential[ remoteSystem-&gt;pingAndClockDifferentialWriteIndex ].pingTime;</span></div>
<div class="line"><a name="l04388"></a><span class="lineno"> 4388</span>&#160;</div>
<div class="line"><a name="l04389"></a><span class="lineno"> 4389</span>&#160;    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aad44476f4caab53d178f2a454daef883">pingTime</a> = ( <span class="keywordtype">unsigned</span> short ) ping;</div>
<div class="line"><a name="l04390"></a><span class="lineno"> 4390</span>&#160;    <span class="comment">// Thanks to Chris Taylor (cat02e@fsu.edu) for the improved timestamping algorithm</span></div>
<div class="line"><a name="l04391"></a><span class="lineno"> 4391</span>&#160;    <span class="comment">// Divide each integer by 2, rather than the sum by 2, to prevent overflow</span></div>
<div class="line"><a name="l04392"></a><span class="lineno"> 4392</span>&#160;    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a96289ba00670fb915d57bf9b40296330" title="True if we started this connection via Connect. False if someone else connected to us...">pingAndClockDifferential</a>[ remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> ].<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a859a7b3b3d523f63f0d6e22a90d7689c">clockDifferential</a> = sendPongTime - ( time/2 + sendPingTime/2 );</div>
<div class="line"><a name="l04393"></a><span class="lineno"> 4393</span>&#160;</div>
<div class="line"><a name="l04394"></a><span class="lineno"> 4394</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a05de1f27b328bbedba18cfb7047a3e85" title="The index we are writing into the pingAndClockDifferential circular buffer.">lowestPing</a> == (<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>)-1 || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a05de1f27b328bbedba18cfb7047a3e85" title="The index we are writing into the pingAndClockDifferential circular buffer.">lowestPing</a> &gt; (int) ping )</div>
<div class="line"><a name="l04395"></a><span class="lineno"> 4395</span>&#160;        remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a05de1f27b328bbedba18cfb7047a3e85" title="The index we are writing into the pingAndClockDifferential circular buffer.">lowestPing</a> = (<span class="keywordtype">unsigned</span> short) ping;</div>
<div class="line"><a name="l04396"></a><span class="lineno"> 4396</span>&#160;</div>
<div class="line"><a name="l04397"></a><span class="lineno"> 4397</span>&#160;    <span class="keywordflow">if</span> ( ++( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> ) == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>) <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7f327e4ef01ce07159269c3bb6bd98f9">PING_TIMES_ARRAY_SIZE</a> )</div>
<div class="line"><a name="l04398"></a><span class="lineno"> 4398</span>&#160;        remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a1d65a8497d15f4d1a5d417dcfa2f2971" title="last x ping times and calculated clock differentials with it">pingAndClockDifferentialWriteIndex</a> = 0;</div>
<div class="line"><a name="l04399"></a><span class="lineno"> 4399</span>&#160;}</div>
<div class="line"><a name="l04400"></a><span class="lineno"> 4400</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04401"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aed8c82143ba074c034ebf6f7ada9e06f"> 4401</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aed8c82143ba074c034ebf6f7ada9e06f">RakPeer::ClearBufferedCommands</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04402"></a><span class="lineno"> 4402</span>&#160;{</div>
<div class="line"><a name="l04403"></a><span class="lineno"> 4403</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l04404"></a><span class="lineno"> 4404</span>&#160;</div>
<div class="line"><a name="l04405"></a><span class="lineno"> 4405</span>&#160;    <span class="keywordflow">while</span> ((bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeaee4f85f6aa6870a2eb57c533ba13f5">Pop</a>())!=0)</div>
<div class="line"><a name="l04406"></a><span class="lineno"> 4406</span>&#160;    {</div>
<div class="line"><a name="l04407"></a><span class="lineno"> 4407</span>&#160;        <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>)</div>
<div class="line"><a name="l04408"></a><span class="lineno"> 4408</span>&#160;            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04409"></a><span class="lineno"> 4409</span>&#160;</div>
<div class="line"><a name="l04410"></a><span class="lineno"> 4410</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">Deallocate</a>(bcs, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04411"></a><span class="lineno"> 4411</span>&#160;    }</div>
<div class="line"><a name="l04412"></a><span class="lineno"> 4412</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a48ffb49251ed59f0fbf54d0226e374e0">Clear</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04413"></a><span class="lineno"> 4413</span>&#160;}</div>
<div class="line"><a name="l04414"></a><span class="lineno"> 4414</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04415"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a819793a837a9c7a224529fcb9261c8bf"> 4415</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a819793a837a9c7a224529fcb9261c8bf">RakPeer::ClearSocketQueryOutput</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04416"></a><span class="lineno"> 4416</span>&#160;{</div>
<div class="line"><a name="l04417"></a><span class="lineno"> 4417</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a48ffb49251ed59f0fbf54d0226e374e0">Clear</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04418"></a><span class="lineno"> 4418</span>&#160;}</div>
<div class="line"><a name="l04419"></a><span class="lineno"> 4419</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04420"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae3a210565120570bcdab5332ab16e336"> 4420</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae3a210565120570bcdab5332ab16e336">RakPeer::ClearRequestedConnectionList</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04421"></a><span class="lineno"> 4421</span>&#160;{</div>
<div class="line"><a name="l04422"></a><span class="lineno"> 4422</span>&#160;    <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue&lt;RequestedConnectionStruct*&gt;</a> freeQueue;</div>
<div class="line"><a name="l04423"></a><span class="lineno"> 4423</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04424"></a><span class="lineno"> 4424</span>&#160;    <span class="keywordflow">while</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l04425"></a><span class="lineno"> 4425</span>&#160;        freeQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>(), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04426"></a><span class="lineno"> 4426</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04427"></a><span class="lineno"> 4427</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l04428"></a><span class="lineno"> 4428</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; freeQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l04429"></a><span class="lineno"> 4429</span>&#160;    {</div>
<div class="line"><a name="l04430"></a><span class="lineno"> 4430</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04431"></a><span class="lineno"> 4431</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: In ClearRequestedConnectionList(), Deleting freeQueue index %i client_handshake %x\n&quot;</span>, i, freeQueue[i]-&gt;client_handshake);</div>
<div class="line"><a name="l04432"></a><span class="lineno"> 4432</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(freeQueue[i]-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04433"></a><span class="lineno"> 4433</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l04434"></a><span class="lineno"> 4434</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(freeQueue[i], <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l04435"></a><span class="lineno"> 4435</span>&#160;    }</div>
<div class="line"><a name="l04436"></a><span class="lineno"> 4436</span>&#160;}</div>
<div class="line"><a name="l04437"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5"> 4437</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">RakPeer::AddPacketToProducer</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *p)</div>
<div class="line"><a name="l04438"></a><span class="lineno"> 4438</span>&#160;{</div>
<div class="line"><a name="l04439"></a><span class="lineno"> 4439</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04440"></a><span class="lineno"> 4440</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b6789ef65638eb2eeeda6c5d7a91d2d">packetReturnQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(p,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04441"></a><span class="lineno"> 4441</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad1af05e00693b668a3bf18edc195f3b2">packetReturnMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04442"></a><span class="lineno"> 4442</span>&#160;}</div>
<div class="line"><a name="l04443"></a><span class="lineno"> 4443</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04444"></a><span class="lineno"> 4444</span>&#160;<span class="keyword">union </span>Buff6AndBuff8</div>
<div class="line"><a name="l04445"></a><span class="lineno"> 4445</span>&#160;{</div>
<div class="line"><a name="l04446"></a><span class="lineno"> 4446</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> buff6[6];</div>
<div class="line"><a name="l04447"></a><span class="lineno"> 4447</span>&#160;    <a class="code" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a> buff8;</div>
<div class="line"><a name="l04448"></a><span class="lineno"> 4448</span>&#160;};</div>
<div class="line"><a name="l04449"></a><span class="lineno"><a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#aaf48ba4b7fd51925799c67990dff617d"> 4449</a></span>&#160;<a class="code" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a> <a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#aaf48ba4b7fd51925799c67990dff617d" title="Get a random number (to generate a GUID)">RakPeerInterface::Get64BitUniqueRandomNumber</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04450"></a><span class="lineno"> 4450</span>&#160;{</div>
<div class="line"><a name="l04451"></a><span class="lineno"> 4451</span>&#160;    <span class="comment">// Mac address is a poor solution because you can&#39;t have multiple connections from the same system</span></div>
<div class="line"><a name="l04452"></a><span class="lineno"> 4452</span>&#160;</div>
<div class="line"><a name="l04453"></a><span class="lineno"> 4453</span>&#160;</div>
<div class="line"><a name="l04454"></a><span class="lineno"> 4454</span>&#160;</div>
<div class="line"><a name="l04455"></a><span class="lineno"> 4455</span>&#160;</div>
<div class="line"><a name="l04456"></a><span class="lineno"> 4456</span>&#160;</div>
<div class="line"><a name="l04457"></a><span class="lineno"> 4457</span>&#160;</div>
<div class="line"><a name="l04458"></a><span class="lineno"> 4458</span>&#160;</div>
<div class="line"><a name="l04459"></a><span class="lineno"> 4459</span>&#160;</div>
<div class="line"><a name="l04460"></a><span class="lineno"> 4460</span>&#160;</div>
<div class="line"><a name="l04461"></a><span class="lineno"> 4461</span>&#160;</div>
<div class="line"><a name="l04462"></a><span class="lineno"> 4462</span>&#160;</div>
<div class="line"><a name="l04463"></a><span class="lineno"> 4463</span>&#160;</div>
<div class="line"><a name="l04464"></a><span class="lineno"> 4464</span>&#160;</div>
<div class="line"><a name="l04465"></a><span class="lineno"> 4465</span>&#160;</div>
<div class="line"><a name="l04466"></a><span class="lineno"> 4466</span>&#160;</div>
<div class="line"><a name="l04467"></a><span class="lineno"> 4467</span>&#160;</div>
<div class="line"><a name="l04468"></a><span class="lineno"> 4468</span>&#160;</div>
<div class="line"><a name="l04469"></a><span class="lineno"> 4469</span>&#160;</div>
<div class="line"><a name="l04470"></a><span class="lineno"> 4470</span>&#160;</div>
<div class="line"><a name="l04471"></a><span class="lineno"> 4471</span>&#160;</div>
<div class="line"><a name="l04472"></a><span class="lineno"> 4472</span>&#160;</div>
<div class="line"><a name="l04473"></a><span class="lineno"> 4473</span>&#160;</div>
<div class="line"><a name="l04474"></a><span class="lineno"> 4474</span>&#160;</div>
<div class="line"><a name="l04475"></a><span class="lineno"> 4475</span>&#160;</div>
<div class="line"><a name="l04476"></a><span class="lineno"> 4476</span>&#160;</div>
<div class="line"><a name="l04477"></a><span class="lineno"> 4477</span>&#160;</div>
<div class="line"><a name="l04478"></a><span class="lineno"> 4478</span>&#160;</div>
<div class="line"><a name="l04479"></a><span class="lineno"> 4479</span>&#160;</div>
<div class="line"><a name="l04480"></a><span class="lineno"> 4480</span>&#160;</div>
<div class="line"><a name="l04481"></a><span class="lineno"> 4481</span>&#160;</div>
<div class="line"><a name="l04482"></a><span class="lineno"> 4482</span>&#160;<span class="preprocessor">#if   defined(_WIN32)</span></div>
<div class="line"><a name="l04483"></a><span class="lineno"> 4483</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a> g= <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>();</div>
<div class="line"><a name="l04484"></a><span class="lineno"> 4484</span>&#160;</div>
<div class="line"><a name="l04485"></a><span class="lineno"> 4485</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> lastTime, thisTime;</div>
<div class="line"><a name="l04486"></a><span class="lineno"> 4486</span>&#160;    <span class="keywordtype">int</span> j;</div>
<div class="line"><a name="l04487"></a><span class="lineno"> 4487</span>&#160;    <span class="comment">// Sleep a small random time, then use the last 4 bits as a source of randomness</span></div>
<div class="line"><a name="l04488"></a><span class="lineno"> 4488</span>&#160;    <span class="keywordflow">for</span> (j=0; j &lt; 8; j++)</div>
<div class="line"><a name="l04489"></a><span class="lineno"> 4489</span>&#160;    {</div>
<div class="line"><a name="l04490"></a><span class="lineno"> 4490</span>&#160;        lastTime = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>();</div>
<div class="line"><a name="l04491"></a><span class="lineno"> 4491</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(1);</div>
<div class="line"><a name="l04492"></a><span class="lineno"> 4492</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(0);</div>
<div class="line"><a name="l04493"></a><span class="lineno"> 4493</span>&#160;        thisTime = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>();</div>
<div class="line"><a name="l04494"></a><span class="lineno"> 4494</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> diff = thisTime-lastTime;</div>
<div class="line"><a name="l04495"></a><span class="lineno"> 4495</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> diff4Bits = (<span class="keywordtype">unsigned</span> int) (diff &amp; 15);</div>
<div class="line"><a name="l04496"></a><span class="lineno"> 4496</span>&#160;        diff4Bits &lt;&lt;= 32-4;</div>
<div class="line"><a name="l04497"></a><span class="lineno"> 4497</span>&#160;        diff4Bits &gt;&gt;= j*4;</div>
<div class="line"><a name="l04498"></a><span class="lineno"> 4498</span>&#160;        ((<span class="keywordtype">char</span>*)&amp;g)[j] ^= diff4Bits;</div>
<div class="line"><a name="l04499"></a><span class="lineno"> 4499</span>&#160;    }</div>
<div class="line"><a name="l04500"></a><span class="lineno"> 4500</span>&#160;    <span class="keywordflow">return</span> g;</div>
<div class="line"><a name="l04501"></a><span class="lineno"> 4501</span>&#160;</div>
<div class="line"><a name="l04502"></a><span class="lineno"> 4502</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l04503"></a><span class="lineno"> 4503</span>&#160;<span class="preprocessor"></span>    <span class="keyword">struct </span>timeval tv;</div>
<div class="line"><a name="l04504"></a><span class="lineno"> 4504</span>&#160;    gettimeofday(&amp;tv, NULL);</div>
<div class="line"><a name="l04505"></a><span class="lineno"> 4505</span>&#160;    <span class="keywordflow">return</span> tv.tv_usec + tv.tv_sec * 1000000;</div>
<div class="line"><a name="l04506"></a><span class="lineno"> 4506</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l04507"></a><span class="lineno"> 4507</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l04508"></a><span class="lineno"> 4508</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04509"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acc6f6a26de4ae525b04ffe22c48cc6ee"> 4509</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acc6f6a26de4ae525b04ffe22c48cc6ee">RakPeer::GenerateGUID</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l04510"></a><span class="lineno"> 4510</span>&#160;{</div>
<div class="line"><a name="l04511"></a><span class="lineno"> 4511</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>=<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#aaf48ba4b7fd51925799c67990dff617d" title="Get a random number (to generate a GUID)">Get64BitUniqueRandomNumber</a>();</div>
<div class="line"><a name="l04512"></a><span class="lineno"> 4512</span>&#160;</div>
<div class="line"><a name="l04513"></a><span class="lineno"> 4513</span>&#160;}</div>
<div class="line"><a name="l04514"></a><span class="lineno"> 4514</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04515"></a><span class="lineno"> 4515</span>&#160;<span class="comment">// void SLNet::ProcessPortUnreachable( SystemAddress systemAddress, RakPeer *rakPeer )</span></div>
<div class="line"><a name="l04516"></a><span class="lineno"> 4516</span>&#160;<span class="comment">// {</span></div>
<div class="line"><a name="l04517"></a><span class="lineno"> 4517</span>&#160;<span class="comment">//  (void) binaryAddress;</span></div>
<div class="line"><a name="l04518"></a><span class="lineno"> 4518</span>&#160;<span class="comment">//  (void) port;</span></div>
<div class="line"><a name="l04519"></a><span class="lineno"> 4519</span>&#160;<span class="comment">//  (void) rakPeer;</span></div>
<div class="line"><a name="l04520"></a><span class="lineno"> 4520</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l04521"></a><span class="lineno"> 4521</span>&#160;<span class="comment">// }</span></div>
<div class="line"><a name="l04522"></a><span class="lineno"> 4522</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l04523"></a><span class="lineno"> 4523</span>&#160;<span class="keyword">namespace </span>SLNet {</div>
<div class="line"><a name="l04524"></a><span class="lineno"><a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a8de15f71e181aa43027664a5b0980eb5"> 4524</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a8de15f71e181aa43027664a5b0980eb5">ProcessOfflineNetworkPacket</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">int</span> length, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> *rakPeer, <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a>* rakNetSocket, <span class="keywordtype">bool</span> *isOfflineMessage, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> timeRead )</div>
<div class="line"><a name="l04525"></a><span class="lineno"> 4525</span>&#160;{</div>
<div class="line"><a name="l04526"></a><span class="lineno"> 4526</span>&#160;    (void) timeRead;</div>
<div class="line"><a name="l04527"></a><span class="lineno"> 4527</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *remoteSystem;</div>
<div class="line"><a name="l04528"></a><span class="lineno"> 4528</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">SLNet::Packet</a> *packet;</div>
<div class="line"><a name="l04529"></a><span class="lineno"> 4529</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l04530"></a><span class="lineno"> 4530</span>&#160;</div>
<div class="line"><a name="l04531"></a><span class="lineno"> 4531</span>&#160;</div>
<div class="line"><a name="l04532"></a><span class="lineno"> 4532</span>&#160;    <span class="keywordtype">char</span> str1[64];</div>
<div class="line"><a name="l04533"></a><span class="lineno"> 4533</span>&#160;    systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>, str1,static_cast&lt;size_t&gt;(64));</div>
<div class="line"><a name="l04534"></a><span class="lineno"> 4534</span>&#160;    <span class="keywordflow">if</span> (rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae1ad09ea9ca5ea8bd4a00f78e22a5abc" title="Returns true or false indicating if a particular IP is banned.">IsBanned</a>( str1 ))</div>
<div class="line"><a name="l04535"></a><span class="lineno"> 4535</span>&#160;    {</div>
<div class="line"><a name="l04536"></a><span class="lineno"> 4536</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04537"></a><span class="lineno"> 4537</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketReceive(data, length*8, systemAddress);</div>
<div class="line"><a name="l04538"></a><span class="lineno"> 4538</span>&#160;</div>
<div class="line"><a name="l04539"></a><span class="lineno"> 4539</span>&#160;        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs;</div>
<div class="line"><a name="l04540"></a><span class="lineno"> 4540</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a68c1b5b947ff46814ffb7fdf4853f350" title="RakPeer - We are banned from the system we attempted to connect to.">ID_CONNECTION_BANNED</a>);</div>
<div class="line"><a name="l04541"></a><span class="lineno"> 4541</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l04542"></a><span class="lineno"> 4542</span>&#160;        bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l04543"></a><span class="lineno"> 4543</span>&#160;</div>
<div class="line"><a name="l04544"></a><span class="lineno"> 4544</span>&#160;</div>
<div class="line"><a name="l04545"></a><span class="lineno"> 4545</span>&#160;        <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l04546"></a><span class="lineno"> 4546</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l04547"></a><span class="lineno"> 4547</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l04548"></a><span class="lineno"> 4548</span>&#160;        bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l04549"></a><span class="lineno"> 4549</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04550"></a><span class="lineno"> 4550</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keywordtype">char</span>*) bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l04551"></a><span class="lineno"> 4551</span>&#160;        rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04552"></a><span class="lineno"> 4552</span>&#160;</div>
<div class="line"><a name="l04553"></a><span class="lineno"> 4553</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l04554"></a><span class="lineno"> 4554</span>&#160;<span class="comment">        unsigned i;</span></div>
<div class="line"><a name="l04555"></a><span class="lineno"> 4555</span>&#160;<span class="comment">        for (i=0; i &lt; rakPeer-&gt;pluginListNTS.Size(); i++)</span></div>
<div class="line"><a name="l04556"></a><span class="lineno"> 4556</span>&#160;<span class="comment">            rakPeer-&gt;pluginListNTS[i]-&gt;OnDirectSocketSend((char*) bs.GetData(), bs.GetNumberOfBitsUsed(), systemAddress);</span></div>
<div class="line"><a name="l04557"></a><span class="lineno"> 4557</span>&#160;<span class="comment">        SocketLayer::SendTo( rakNetSocket, (char*) bs.GetData(), bs.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l04558"></a><span class="lineno"> 4558</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l04559"></a><span class="lineno"> 4559</span>&#160;</div>
<div class="line"><a name="l04560"></a><span class="lineno"> 4560</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04561"></a><span class="lineno"> 4561</span>&#160;    }</div>
<div class="line"><a name="l04562"></a><span class="lineno"> 4562</span>&#160;</div>
<div class="line"><a name="l04563"></a><span class="lineno"> 4563</span>&#160;</div>
<div class="line"><a name="l04564"></a><span class="lineno"> 4564</span>&#160;</div>
<div class="line"><a name="l04565"></a><span class="lineno"> 4565</span>&#160;    <span class="comment">// The reason for all this is that the reliability layer has no way to tell between offline messages that arrived late for a player that is now connected,</span></div>
<div class="line"><a name="l04566"></a><span class="lineno"> 4566</span>&#160;    <span class="comment">// and a regular encoding. So I insert OFFLINE_MESSAGE_DATA_ID into the stream, the encoding of which is essentially impossible to hit by chance</span></div>
<div class="line"><a name="l04567"></a><span class="lineno"> 4567</span>&#160;    <span class="keywordflow">if</span> (length &lt;=2)</div>
<div class="line"><a name="l04568"></a><span class="lineno"> 4568</span>&#160;    {</div>
<div class="line"><a name="l04569"></a><span class="lineno"> 4569</span>&#160;        *isOfflineMessage=<span class="keyword">true</span>;</div>
<div class="line"><a name="l04570"></a><span class="lineno"> 4570</span>&#160;    }</div>
<div class="line"><a name="l04571"></a><span class="lineno"> 4571</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (</div>
<div class="line"><a name="l04572"></a><span class="lineno"> 4572</span>&#160;        ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3af8d9c3e67846d45db51a9968f478eb7b" title="Ping from an unconnected system. Reply but do not update timestamps. (internal use only)...">ID_UNCONNECTED_PING</a> ||</div>
<div class="line"><a name="l04573"></a><span class="lineno"> 4573</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ab23ee9b2a028105bfc3a04eace1489e5" title="Ping from an unconnected system. Only reply if we have open connections. Do not update timestamps...">ID_UNCONNECTED_PING_OPEN_CONNECTIONS</a>) &amp;&amp;</div>
<div class="line"><a name="l04574"></a><span class="lineno"> 4574</span>&#160;        length &gt;= <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) + <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>) + <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))</div>
<div class="line"><a name="l04575"></a><span class="lineno"> 4575</span>&#160;    {</div>
<div class="line"><a name="l04576"></a><span class="lineno"> 4576</span>&#160;        *isOfflineMessage=memcmp(data+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) + <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>), <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))==0;</div>
<div class="line"><a name="l04577"></a><span class="lineno"> 4577</span>&#160;    }</div>
<div class="line"><a name="l04578"></a><span class="lineno"> 4578</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8af0f7a44aada9fd51e33d7e61704250">ID_UNCONNECTED_PONG</a> &amp;&amp; (<span class="keywordtype">size_t</span>) length &gt;= <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) + <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>() + <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))</div>
<div class="line"><a name="l04579"></a><span class="lineno"> 4579</span>&#160;    {</div>
<div class="line"><a name="l04580"></a><span class="lineno"> 4580</span>&#160;        *isOfflineMessage=memcmp(data+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) + <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>(), <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))==0;</div>
<div class="line"><a name="l04581"></a><span class="lineno"> 4581</span>&#160;    }</div>
<div class="line"><a name="l04582"></a><span class="lineno"> 4582</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (</div>
<div class="line"><a name="l04583"></a><span class="lineno"> 4583</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ad80d31153371d37c73e89d11e8be5221">ID_OUT_OF_BAND_INTERNAL</a>   &amp;&amp;</div>
<div class="line"><a name="l04584"></a><span class="lineno"> 4584</span>&#160;        (<span class="keywordtype">size_t</span>) length &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>() + <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))</div>
<div class="line"><a name="l04585"></a><span class="lineno"> 4585</span>&#160;    {</div>
<div class="line"><a name="l04586"></a><span class="lineno"> 4586</span>&#160;        *isOfflineMessage=memcmp(data+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>(), <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))==0;</div>
<div class="line"><a name="l04587"></a><span class="lineno"> 4587</span>&#160;    }</div>
<div class="line"><a name="l04588"></a><span class="lineno"> 4588</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (</div>
<div class="line"><a name="l04589"></a><span class="lineno"> 4589</span>&#160;        (</div>
<div class="line"><a name="l04590"></a><span class="lineno"> 4590</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8e895f893338f2a3e580449626f79045">ID_OPEN_CONNECTION_REPLY_1</a> ||</div>
<div class="line"><a name="l04591"></a><span class="lineno"> 4591</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa6f4f72cba56e8738be1428fb8e19f66" title="S2C: Header(1), OfflineMesageID(16), server GUID(8), mtu(2), doSecurity(1 bit), handshakeAnswer (if d...">ID_OPEN_CONNECTION_REPLY_2</a> ||</div>
<div class="line"><a name="l04592"></a><span class="lineno"> 4592</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a6c34a3a076e83d6fd6a30983d44b83c6">ID_OPEN_CONNECTION_REQUEST_1</a> ||</div>
<div class="line"><a name="l04593"></a><span class="lineno"> 4593</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3afb3c84d29ddd82cf9e7696431f77f560">ID_OPEN_CONNECTION_REQUEST_2</a> ||</div>
<div class="line"><a name="l04594"></a><span class="lineno"> 4594</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a> ||</div>
<div class="line"><a name="l04595"></a><span class="lineno"> 4595</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d040cf221aa9a12604d0293348946c2" title="RakPeer - The system we attempted to connect to is not accepting new connections.">ID_NO_FREE_INCOMING_CONNECTIONS</a> ||</div>
<div class="line"><a name="l04596"></a><span class="lineno"> 4596</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a68c1b5b947ff46814ffb7fdf4853f350" title="RakPeer - We are banned from the system we attempted to connect to.">ID_CONNECTION_BANNED</a> ||</div>
<div class="line"><a name="l04597"></a><span class="lineno"> 4597</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d00a59a0b9f0b8a50a041f2032184b5" title="RakPeer - Sent a connect request to a system we are currently connected to.">ID_ALREADY_CONNECTED</a> ||</div>
<div class="line"><a name="l04598"></a><span class="lineno"> 4598</span>&#160;        (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a74191a2391c30daa47c0e98f44896fa5" title="RakPeer::SetLimitIPConnectionFrequency()">ID_IP_RECENTLY_CONNECTED</a>) &amp;&amp;</div>
<div class="line"><a name="l04599"></a><span class="lineno"> 4599</span>&#160;        (<span class="keywordtype">size_t</span>) length &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>() + <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))</div>
<div class="line"><a name="l04600"></a><span class="lineno"> 4600</span>&#160;    {</div>
<div class="line"><a name="l04601"></a><span class="lineno"> 4601</span>&#160;        *isOfflineMessage=memcmp(data+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>), <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))==0;</div>
<div class="line"><a name="l04602"></a><span class="lineno"> 4602</span>&#160;    }</div>
<div class="line"><a name="l04603"></a><span class="lineno"> 4603</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5762f213c6741b179d62a751ec2ef804">ID_INCOMPATIBLE_PROTOCOL_VERSION</a>&amp;&amp;</div>
<div class="line"><a name="l04604"></a><span class="lineno"> 4604</span>&#160;        (<span class="keywordtype">size_t</span>) length == <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)*2 + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>() + <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)))</div>
<div class="line"><a name="l04605"></a><span class="lineno"> 4605</span>&#160;    {</div>
<div class="line"><a name="l04606"></a><span class="lineno"> 4606</span>&#160;        *isOfflineMessage=memcmp(data+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)*2, <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>))==0;</div>
<div class="line"><a name="l04607"></a><span class="lineno"> 4607</span>&#160;    }</div>
<div class="line"><a name="l04608"></a><span class="lineno"> 4608</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04609"></a><span class="lineno"> 4609</span>&#160;    {</div>
<div class="line"><a name="l04610"></a><span class="lineno"> 4610</span>&#160;        *isOfflineMessage=<span class="keyword">false</span>;</div>
<div class="line"><a name="l04611"></a><span class="lineno"> 4611</span>&#160;    }</div>
<div class="line"><a name="l04612"></a><span class="lineno"> 4612</span>&#160;</div>
<div class="line"><a name="l04613"></a><span class="lineno"> 4613</span>&#160;    <span class="keywordflow">if</span> (*isOfflineMessage)</div>
<div class="line"><a name="l04614"></a><span class="lineno"> 4614</span>&#160;    {</div>
<div class="line"><a name="l04615"></a><span class="lineno"> 4615</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04616"></a><span class="lineno"> 4616</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketReceive(data, length*8, systemAddress);</div>
<div class="line"><a name="l04617"></a><span class="lineno"> 4617</span>&#160;</div>
<div class="line"><a name="l04618"></a><span class="lineno"> 4618</span>&#160;        <span class="comment">// These are all messages from unconnected systems.  Messages here can be any size, but are never processed from connected systems.</span></div>
<div class="line"><a name="l04619"></a><span class="lineno"> 4619</span>&#160;        <span class="keywordflow">if</span> ( ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) data[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ab23ee9b2a028105bfc3a04eace1489e5" title="Ping from an unconnected system. Only reply if we have open connections. Do not update timestamps...">ID_UNCONNECTED_PING_OPEN_CONNECTIONS</a></div>
<div class="line"><a name="l04620"></a><span class="lineno"> 4620</span>&#160;            || (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3af8d9c3e67846d45db51a9968f478eb7b" title="Ping from an unconnected system. Reply but do not update timestamps. (internal use only)...">ID_UNCONNECTED_PING</a>) &amp;&amp; length &gt;= <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>) )</div>
<div class="line"><a name="l04621"></a><span class="lineno"> 4621</span>&#160;        {</div>
<div class="line"><a name="l04622"></a><span class="lineno"> 4622</span>&#160;            <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3af8d9c3e67846d45db51a9968f478eb7b" title="Ping from an unconnected system. Reply but do not update timestamps. (internal use only)...">ID_UNCONNECTED_PING</a> ||</div>
<div class="line"><a name="l04623"></a><span class="lineno"> 4623</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a25b2da73418842f2a655199cb434a859">AllowIncomingConnections</a>() ) <span class="comment">// Open connections with players</span></div>
<div class="line"><a name="l04624"></a><span class="lineno"> 4624</span>&#160;            {</div>
<div class="line"><a name="l04625"></a><span class="lineno"> 4625</span>&#160;                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> inBitStream( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) data, length, <span class="keyword">false</span> );</div>
<div class="line"><a name="l04626"></a><span class="lineno"> 4626</span>&#160;                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9" title="Ignore data we don&#39;t intend to read.">IgnoreBits</a>(8);</div>
<div class="line"><a name="l04627"></a><span class="lineno"> 4627</span>&#160;                <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPingTime;</div>
<div class="line"><a name="l04628"></a><span class="lineno"> 4628</span>&#160;                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPingTime);</div>
<div class="line"><a name="l04629"></a><span class="lineno"> 4629</span>&#160;                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l04630"></a><span class="lineno"> 4630</span>&#160;                <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> remoteGuid=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l04631"></a><span class="lineno"> 4631</span>&#160;                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(remoteGuid);</div>
<div class="line"><a name="l04632"></a><span class="lineno"> 4632</span>&#160;</div>
<div class="line"><a name="l04633"></a><span class="lineno"> 4633</span>&#160;                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> outBitStream;</div>
<div class="line"><a name="l04634"></a><span class="lineno"> 4634</span>&#160;                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8af0f7a44aada9fd51e33d7e61704250">ID_UNCONNECTED_PONG</a>); <span class="comment">// Should be named ID_UNCONNECTED_PONG eventually</span></div>
<div class="line"><a name="l04635"></a><span class="lineno"> 4635</span>&#160;                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(sendPingTime);</div>
<div class="line"><a name="l04636"></a><span class="lineno"> 4636</span>&#160;                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>);</div>
<div class="line"><a name="l04637"></a><span class="lineno"> 4637</span>&#160;                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l04638"></a><span class="lineno"> 4638</span>&#160;</div>
<div class="line"><a name="l04639"></a><span class="lineno"> 4639</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5a66379254e38be2e78e0f91c21b2fd3">rakPeerMutexes</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adc1e5ededdda725b7576fe10877a71d1a2e5687c22683dedb14e873cc208a1146">RakPeer::offlinePingResponse_Mutex</a> ].<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04640"></a><span class="lineno"> 4640</span>&#160;                <span class="comment">// They are connected, so append offline ping data</span></div>
<div class="line"><a name="l04641"></a><span class="lineno"> 4641</span>&#160;                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>( (<span class="keywordtype">char</span>*)rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4ab41936219c8afc364f77533fccc4bb">offlinePingResponse</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4ab41936219c8afc364f77533fccc4bb">offlinePingResponse</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>() );</div>
<div class="line"><a name="l04642"></a><span class="lineno"> 4642</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5a66379254e38be2e78e0f91c21b2fd3">rakPeerMutexes</a>[ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adc1e5ededdda725b7576fe10877a71d1a2e5687c22683dedb14e873cc208a1146">RakPeer::offlinePingResponse_Mutex</a> ].<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04643"></a><span class="lineno"> 4643</span>&#160;</div>
<div class="line"><a name="l04644"></a><span class="lineno"> 4644</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04645"></a><span class="lineno"> 4645</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*)outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>(), systemAddress);</div>
<div class="line"><a name="l04646"></a><span class="lineno"> 4646</span>&#160;</div>
<div class="line"><a name="l04647"></a><span class="lineno"> 4647</span>&#160;                <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l04648"></a><span class="lineno"> 4648</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l04649"></a><span class="lineno"> 4649</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l04650"></a><span class="lineno"> 4650</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l04651"></a><span class="lineno"> 4651</span>&#160;                rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04652"></a><span class="lineno"> 4652</span>&#160;</div>
<div class="line"><a name="l04653"></a><span class="lineno"> 4653</span>&#160;                <span class="comment">// SocketLayer::SendTo( rakNetSocket, (const char*)outBitStream.GetData(), (unsigned int) outBitStream.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l04654"></a><span class="lineno"> 4654</span>&#160;</div>
<div class="line"><a name="l04655"></a><span class="lineno"> 4655</span>&#160;                packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04656"></a><span class="lineno"> 4656</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]=data[0];</div>
<div class="line"><a name="l04657"></a><span class="lineno"> 4657</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l04658"></a><span class="lineno"> 4658</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=remoteGuid;</div>
<div class="line"><a name="l04659"></a><span class="lineno"> 4659</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = ( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a> ) rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( systemAddress, <span class="keyword">true</span> );</div>
<div class="line"><a name="l04660"></a><span class="lineno"> 4660</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l04661"></a><span class="lineno"> 4661</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l04662"></a><span class="lineno"> 4662</span>&#160;            }</div>
<div class="line"><a name="l04663"></a><span class="lineno"> 4663</span>&#160;        }</div>
<div class="line"><a name="l04664"></a><span class="lineno"> 4664</span>&#160;        <span class="comment">// UNCONNECTED MESSAGE Pong with no data.</span></div>
<div class="line"><a name="l04665"></a><span class="lineno"> 4665</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) data[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8af0f7a44aada9fd51e33d7e61704250">ID_UNCONNECTED_PONG</a> &amp;&amp; (<span class="keywordtype">size_t</span>) length &gt;= <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)+<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>) &amp;&amp; (<span class="keywordtype">size_t</span>) length &lt; <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)+<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)+<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4cf9211b95bb905832531f048bb273c1">MAX_OFFLINE_DATA_LENGTH</a>)</div>
<div class="line"><a name="l04666"></a><span class="lineno"> 4666</span>&#160;        {</div>
<div class="line"><a name="l04667"></a><span class="lineno"> 4667</span>&#160;            packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) (length-<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)-<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()-<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>)), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04668"></a><span class="lineno"> 4668</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsIn((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data, length, <span class="keyword">false</span>);</div>
<div class="line"><a name="l04669"></a><span class="lineno"> 4669</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>));</div>
<div class="line"><a name="l04670"></a><span class="lineno"> 4670</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> ping;</div>
<div class="line"><a name="l04671"></a><span class="lineno"> 4671</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(ping);</div>
<div class="line"><a name="l04672"></a><span class="lineno"> 4672</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>);</div>
<div class="line"><a name="l04673"></a><span class="lineno"> 4673</span>&#160;            </div>
<div class="line"><a name="l04674"></a><span class="lineno"> 4674</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsOut((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l04675"></a><span class="lineno"> 4675</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a62b03848992c3afd7131751d8fe62b6c" title="Sets the write pointer back to the beginning of your data.">ResetWritePointer</a>();</div>
<div class="line"><a name="l04676"></a><span class="lineno"> 4676</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8af0f7a44aada9fd51e33d7e61704250">ID_UNCONNECTED_PONG</a>);</div>
<div class="line"><a name="l04677"></a><span class="lineno"> 4677</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> pingMS=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>)ping;</div>
<div class="line"><a name="l04678"></a><span class="lineno"> 4678</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(pingMS);</div>
<div class="line"><a name="l04679"></a><span class="lineno"> 4679</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>(</div>
<div class="line"><a name="l04680"></a><span class="lineno"> 4680</span>&#160;                (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*)data+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)+<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>),</div>
<div class="line"><a name="l04681"></a><span class="lineno"> 4681</span>&#160;                length-<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)-<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)-<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()-<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)</div>
<div class="line"><a name="l04682"></a><span class="lineno"> 4682</span>&#160;                );</div>
<div class="line"><a name="l04683"></a><span class="lineno"> 4683</span>&#160;</div>
<div class="line"><a name="l04684"></a><span class="lineno"> 4684</span>&#160;            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l04685"></a><span class="lineno"> 4685</span>&#160;            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = ( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a> ) rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( systemAddress, <span class="keyword">true</span> );</div>
<div class="line"><a name="l04686"></a><span class="lineno"> 4686</span>&#160;            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l04687"></a><span class="lineno"> 4687</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l04688"></a><span class="lineno"> 4688</span>&#160;        }</div>
<div class="line"><a name="l04689"></a><span class="lineno"> 4689</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) data[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ad80d31153371d37c73e89d11e8be5221">ID_OUT_OF_BAND_INTERNAL</a> &amp;&amp;</div>
<div class="line"><a name="l04690"></a><span class="lineno"> 4690</span>&#160;            (<span class="keywordtype">size_t</span>) length &gt; <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>() &amp;&amp;</div>
<div class="line"><a name="l04691"></a><span class="lineno"> 4691</span>&#160;            (<span class="keywordtype">size_t</span>) length &lt; <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4cf9211b95bb905832531f048bb273c1">MAX_OFFLINE_DATA_LENGTH</a>+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>())</div>
<div class="line"><a name="l04692"></a><span class="lineno"> 4692</span>&#160;        {</div>
<div class="line"><a name="l04693"></a><span class="lineno"> 4693</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dataLength = (<span class="keywordtype">unsigned</span> int) (length-<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)-<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()-<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l04694"></a><span class="lineno"> 4694</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(dataLength&lt;1024);</div>
<div class="line"><a name="l04695"></a><span class="lineno"> 4695</span>&#160;            packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(dataLength+1, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04696"></a><span class="lineno"> 4696</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>&lt;1024);</div>
<div class="line"><a name="l04697"></a><span class="lineno"> 4697</span>&#160;</div>
<div class="line"><a name="l04698"></a><span class="lineno"> 4698</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs2((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data, length, <span class="keyword">false</span>);</div>
<div class="line"><a name="l04699"></a><span class="lineno"> 4699</span>&#160;            bs2.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l04700"></a><span class="lineno"> 4700</span>&#160;            bs2.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>);</div>
<div class="line"><a name="l04701"></a><span class="lineno"> 4701</span>&#160;</div>
<div class="line"><a name="l04702"></a><span class="lineno"> 4702</span>&#160;            <span class="keywordflow">if</span> (data[<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>()]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3acb0b373f4c8b7a8ce6337bb8727d8daf">ID_ADVERTISE_SYSTEM</a>)</div>
<div class="line"><a name="l04703"></a><span class="lineno"> 4703</span>&#160;            {</div>
<div class="line"><a name="l04704"></a><span class="lineno"> 4704</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>--;</div>
<div class="line"><a name="l04705"></a><span class="lineno"> 4705</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>);</div>
<div class="line"><a name="l04706"></a><span class="lineno"> 4706</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]=<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3acb0b373f4c8b7a8ce6337bb8727d8daf">ID_ADVERTISE_SYSTEM</a>;</div>
<div class="line"><a name="l04707"></a><span class="lineno"> 4707</span>&#160;                memcpy(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+1, data+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)*2 + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>(), dataLength-1);</div>
<div class="line"><a name="l04708"></a><span class="lineno"> 4708</span>&#160;            }</div>
<div class="line"><a name="l04709"></a><span class="lineno"> 4709</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l04710"></a><span class="lineno"> 4710</span>&#160;            {</div>
<div class="line"><a name="l04711"></a><span class="lineno"> 4711</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]=<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ad80d31153371d37c73e89d11e8be5221">ID_OUT_OF_BAND_INTERNAL</a>;</div>
<div class="line"><a name="l04712"></a><span class="lineno"> 4712</span>&#160;                memcpy(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+1, data+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) + <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>(), dataLength);</div>
<div class="line"><a name="l04713"></a><span class="lineno"> 4713</span>&#160;            }</div>
<div class="line"><a name="l04714"></a><span class="lineno"> 4714</span>&#160;</div>
<div class="line"><a name="l04715"></a><span class="lineno"> 4715</span>&#160;            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l04716"></a><span class="lineno"> 4716</span>&#160;            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = ( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a> ) rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( systemAddress, <span class="keyword">true</span> );</div>
<div class="line"><a name="l04717"></a><span class="lineno"> 4717</span>&#160;            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l04718"></a><span class="lineno"> 4718</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l04719"></a><span class="lineno"> 4719</span>&#160;        }</div>
<div class="line"><a name="l04720"></a><span class="lineno"> 4720</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8e895f893338f2a3e580449626f79045">ID_OPEN_CONNECTION_REPLY_1</a>)</div>
<div class="line"><a name="l04721"></a><span class="lineno"> 4721</span>&#160;        {</div>
<div class="line"><a name="l04722"></a><span class="lineno"> 4722</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04723"></a><span class="lineno"> 4723</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketReceive(data, length*8, systemAddress);</div>
<div class="line"><a name="l04724"></a><span class="lineno"> 4724</span>&#160;</div>
<div class="line"><a name="l04725"></a><span class="lineno"> 4725</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsIn((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data,length,<span class="keyword">false</span>);</div>
<div class="line"><a name="l04726"></a><span class="lineno"> 4726</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l04727"></a><span class="lineno"> 4727</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l04728"></a><span class="lineno"> 4728</span>&#160;            <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> serverGuid;</div>
<div class="line"><a name="l04729"></a><span class="lineno"> 4729</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(serverGuid);</div>
<div class="line"><a name="l04730"></a><span class="lineno"> 4730</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> serverHasSecurity;</div>
<div class="line"><a name="l04731"></a><span class="lineno"> 4731</span>&#160;            <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> cookie;</div>
<div class="line"><a name="l04732"></a><span class="lineno"> 4732</span>&#160;            (void) cookie;</div>
<div class="line"><a name="l04733"></a><span class="lineno"> 4733</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(serverHasSecurity);</div>
<div class="line"><a name="l04734"></a><span class="lineno"> 4734</span>&#160;            <span class="comment">// Even if the server has security, it may not be required of us if we are in the security exception list</span></div>
<div class="line"><a name="l04735"></a><span class="lineno"> 4735</span>&#160;            <span class="keywordflow">if</span> (serverHasSecurity)</div>
<div class="line"><a name="l04736"></a><span class="lineno"> 4736</span>&#160;            {</div>
<div class="line"><a name="l04737"></a><span class="lineno"> 4737</span>&#160;                bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(cookie);</div>
<div class="line"><a name="l04738"></a><span class="lineno"> 4738</span>&#160;            }</div>
<div class="line"><a name="l04739"></a><span class="lineno"> 4739</span>&#160;</div>
<div class="line"><a name="l04740"></a><span class="lineno"> 4740</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsOut;</div>
<div class="line"><a name="l04741"></a><span class="lineno"> 4741</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3afb3c84d29ddd82cf9e7696431f77f560">ID_OPEN_CONNECTION_REQUEST_2</a>);</div>
<div class="line"><a name="l04742"></a><span class="lineno"> 4742</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l04743"></a><span class="lineno"> 4743</span>&#160;            <span class="keywordflow">if</span> (serverHasSecurity)</div>
<div class="line"><a name="l04744"></a><span class="lineno"> 4744</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cookie);</div>
<div class="line"><a name="l04745"></a><span class="lineno"> 4745</span>&#160;</div>
<div class="line"><a name="l04746"></a><span class="lineno"> 4746</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04747"></a><span class="lineno"> 4747</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt;  rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l04748"></a><span class="lineno"> 4748</span>&#160;            {</div>
<div class="line"><a name="l04749"></a><span class="lineno"> 4749</span>&#160;                <a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml">RakPeer::RequestedConnectionStruct</a> *rcs;</div>
<div class="line"><a name="l04750"></a><span class="lineno"> 4750</span>&#160;                rcs=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i];</div>
<div class="line"><a name="l04751"></a><span class="lineno"> 4751</span>&#160;                <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>==systemAddress)</div>
<div class="line"><a name="l04752"></a><span class="lineno"> 4752</span>&#160;                {</div>
<div class="line"><a name="l04753"></a><span class="lineno"> 4753</span>&#160;                    <span class="keywordflow">if</span> (serverHasSecurity)</div>
<div class="line"><a name="l04754"></a><span class="lineno"> 4754</span>&#160;                    {</div>
<div class="line"><a name="l04755"></a><span class="lineno"> 4755</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04756"></a><span class="lineno"> 4756</span>&#160;<span class="preprocessor"></span>                        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> public_key[cat::EasyHandshake::PUBLIC_KEY_BYTES];</div>
<div class="line"><a name="l04757"></a><span class="lineno"> 4757</span>&#160;                        bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>(public_key, <span class="keyword">sizeof</span>(public_key));</div>
<div class="line"><a name="l04758"></a><span class="lineno"> 4758</span>&#160;</div>
<div class="line"><a name="l04759"></a><span class="lineno"> 4759</span>&#160;                        <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abcf5a787b9a0d2a115a65675682d1c91">publicKeyMode</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa8e840dbaa6333a47a419de4690ff6dc3">PKM_ACCEPT_ANY_PUBLIC_KEY</a>)</div>
<div class="line"><a name="l04760"></a><span class="lineno"> 4760</span>&#160;                        {</div>
<div class="line"><a name="l04761"></a><span class="lineno"> 4761</span>&#160;                            memcpy(rcs-&gt;remote_public_key, public_key, cat::EasyHandshake::PUBLIC_KEY_BYTES);</div>
<div class="line"><a name="l04762"></a><span class="lineno"> 4762</span>&#160;                            <span class="keywordflow">if</span> (!rcs-&gt;client_handshake-&gt;Initialize(public_key) ||</div>
<div class="line"><a name="l04763"></a><span class="lineno"> 4763</span>&#160;                                !rcs-&gt;client_handshake-&gt;GenerateChallenge(rcs-&gt;handshakeChallenge))</div>
<div class="line"><a name="l04764"></a><span class="lineno"> 4764</span>&#160;                            {</div>
<div class="line"><a name="l04765"></a><span class="lineno"> 4765</span>&#160;                                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Server passed a bad public key with PKM_ACCEPT_ANY_PUBLIC_KEY&quot;</span>);</div>
<div class="line"><a name="l04766"></a><span class="lineno"> 4766</span>&#160;                                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04767"></a><span class="lineno"> 4767</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04768"></a><span class="lineno"> 4768</span>&#160;                            }</div>
<div class="line"><a name="l04769"></a><span class="lineno"> 4769</span>&#160;                        }</div>
<div class="line"><a name="l04770"></a><span class="lineno"> 4770</span>&#160;</div>
<div class="line"><a name="l04771"></a><span class="lineno"> 4771</span>&#160;                        <span class="keywordflow">if</span> (cat::SecureEqual(public_key,</div>
<div class="line"><a name="l04772"></a><span class="lineno"> 4772</span>&#160;                            rcs-&gt;remote_public_key,</div>
<div class="line"><a name="l04773"></a><span class="lineno"> 4773</span>&#160;                            cat::EasyHandshake::PUBLIC_KEY_BYTES)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l04774"></a><span class="lineno"> 4774</span>&#160;                        {</div>
<div class="line"><a name="l04775"></a><span class="lineno"> 4775</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04776"></a><span class="lineno"> 4776</span>&#160;                            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Expected public key does not match what was sent by server -- Reporting back ID_PUBLIC_KEY_MISMATCH to user\n&quot;</span>);</div>
<div class="line"><a name="l04777"></a><span class="lineno"> 4777</span>&#160;</div>
<div class="line"><a name="l04778"></a><span class="lineno"> 4778</span>&#160;                            packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04779"></a><span class="lineno"> 4779</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3abc74d727a1ced27473d58b3084172eb9" title="RakPeer - Wrong public key passed to RakPeerInterface::Connect()">ID_PUBLIC_KEY_MISMATCH</a>; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l04780"></a><span class="lineno"> 4780</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = ( <span class="keyword">sizeof</span>( char ) * 8);</div>
<div class="line"><a name="l04781"></a><span class="lineno"> 4781</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>;</div>
<div class="line"><a name="l04782"></a><span class="lineno"> 4782</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=serverGuid;</div>
<div class="line"><a name="l04783"></a><span class="lineno"> 4783</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l04784"></a><span class="lineno"> 4784</span>&#160;                            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04785"></a><span class="lineno"> 4785</span>&#160;                        }</div>
<div class="line"><a name="l04786"></a><span class="lineno"> 4786</span>&#160;</div>
<div class="line"><a name="l04787"></a><span class="lineno"> 4787</span>&#160;                        <span class="keywordflow">if</span> (rcs-&gt;client_handshake==0)</div>
<div class="line"><a name="l04788"></a><span class="lineno"> 4788</span>&#160;                        {</div>
<div class="line"><a name="l04789"></a><span class="lineno"> 4789</span>&#160;                            <span class="comment">// Message does not contain a challenge</span></div>
<div class="line"><a name="l04790"></a><span class="lineno"> 4790</span>&#160;                            <span class="comment">// We might still pass if we are in the security exception list</span></div>
<div class="line"><a name="l04791"></a><span class="lineno"> 4791</span>&#160;                            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)0);</div>
<div class="line"><a name="l04792"></a><span class="lineno"> 4792</span>&#160;                        }</div>
<div class="line"><a name="l04793"></a><span class="lineno"> 4793</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l04794"></a><span class="lineno"> 4794</span>&#160;                        {</div>
<div class="line"><a name="l04795"></a><span class="lineno"> 4795</span>&#160;                            <span class="comment">// Message contains a challenge</span></div>
<div class="line"><a name="l04796"></a><span class="lineno"> 4796</span>&#160;                            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)1);</div>
<div class="line"><a name="l04797"></a><span class="lineno"> 4797</span>&#160;                            <span class="comment">// challenge</span></div>
<div class="line"><a name="l04798"></a><span class="lineno"> 4798</span>&#160;                            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Sending challenge\n&quot;</span>);</div>
<div class="line"><a name="l04799"></a><span class="lineno"> 4799</span>&#160;                            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) rcs-&gt;handshakeChallenge,cat::EasyHandshake::CHALLENGE_BYTES);</div>
<div class="line"><a name="l04800"></a><span class="lineno"> 4800</span>&#160;                        }</div>
<div class="line"><a name="l04801"></a><span class="lineno"> 4801</span>&#160;<span class="preprocessor">#else // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l04802"></a><span class="lineno"> 4802</span>&#160;<span class="preprocessor"></span>                        <span class="comment">// Message does not contain a challenge</span></div>
<div class="line"><a name="l04803"></a><span class="lineno"> 4803</span>&#160;                        bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)0);</div>
<div class="line"><a name="l04804"></a><span class="lineno"> 4804</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l04805"></a><span class="lineno"> 4805</span>&#160;<span class="preprocessor"></span>                    }</div>
<div class="line"><a name="l04806"></a><span class="lineno"> 4806</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l04807"></a><span class="lineno"> 4807</span>&#160;                    {</div>
<div class="line"><a name="l04808"></a><span class="lineno"> 4808</span>&#160;                        <span class="comment">// Server does not need security</span></div>
<div class="line"><a name="l04809"></a><span class="lineno"> 4809</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04810"></a><span class="lineno"> 4810</span>&#160;<span class="preprocessor"></span>                        <span class="keywordflow">if</span> (rcs-&gt;client_handshake!=0)</div>
<div class="line"><a name="l04811"></a><span class="lineno"> 4811</span>&#160;                        {</div>
<div class="line"><a name="l04812"></a><span class="lineno"> 4812</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04813"></a><span class="lineno"> 4813</span>&#160;                            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Security disabled by server but we expected security (indicated by client_handshake not null) so failing!\n&quot;</span>);</div>
<div class="line"><a name="l04814"></a><span class="lineno"> 4814</span>&#160;</div>
<div class="line"><a name="l04815"></a><span class="lineno"> 4815</span>&#160;                            packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04816"></a><span class="lineno"> 4816</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a56d4a0816670c5c7beed7f6fbe88dced" title="RakPeer - We passed a public key to RakPeerInterface::Connect(), but the other system did not have se...">ID_OUR_SYSTEM_REQUIRES_SECURITY</a>; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l04817"></a><span class="lineno"> 4817</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = ( <span class="keyword">sizeof</span>( char ) * 8);</div>
<div class="line"><a name="l04818"></a><span class="lineno"> 4818</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>;</div>
<div class="line"><a name="l04819"></a><span class="lineno"> 4819</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=serverGuid;</div>
<div class="line"><a name="l04820"></a><span class="lineno"> 4820</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l04821"></a><span class="lineno"> 4821</span>&#160;                            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04822"></a><span class="lineno"> 4822</span>&#160;                        }</div>
<div class="line"><a name="l04823"></a><span class="lineno"> 4823</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l04824"></a><span class="lineno"> 4824</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04825"></a><span class="lineno"> 4825</span>&#160;                    }</div>
<div class="line"><a name="l04826"></a><span class="lineno"> 4826</span>&#160;</div>
<div class="line"><a name="l04827"></a><span class="lineno"> 4827</span>&#160;                    <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> mtu;</div>
<div class="line"><a name="l04828"></a><span class="lineno"> 4828</span>&#160;                    bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(mtu);</div>
<div class="line"><a name="l04829"></a><span class="lineno"> 4829</span>&#160;</div>
<div class="line"><a name="l04830"></a><span class="lineno"> 4830</span>&#160;                    <span class="comment">// Binding address</span></div>
<div class="line"><a name="l04831"></a><span class="lineno"> 4831</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>);</div>
<div class="line"><a name="l04832"></a><span class="lineno"> 4832</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04833"></a><span class="lineno"> 4833</span>&#160;                    <span class="comment">// MTU</span></div>
<div class="line"><a name="l04834"></a><span class="lineno"> 4834</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(mtu);</div>
<div class="line"><a name="l04835"></a><span class="lineno"> 4835</span>&#160;                    <span class="comment">// Our guid</span></div>
<div class="line"><a name="l04836"></a><span class="lineno"> 4836</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l04837"></a><span class="lineno"> 4837</span>&#160;</div>
<div class="line"><a name="l04838"></a><span class="lineno"> 4838</span>&#160;                    <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04839"></a><span class="lineno"> 4839</span>&#160;                        rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>);</div>
<div class="line"><a name="l04840"></a><span class="lineno"> 4840</span>&#160;</div>
<div class="line"><a name="l04841"></a><span class="lineno"> 4841</span>&#160;                    <span class="comment">// SocketLayer::SendTo( rakPeer-&gt;socketList[rcs-&gt;socketIndex], (const char*) bsOut.GetData(), bsOut.GetNumberOfBytesUsed(), rcs-&gt;systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l04842"></a><span class="lineno"> 4842</span>&#160;</div>
<div class="line"><a name="l04843"></a><span class="lineno"> 4843</span>&#160;                    <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l04844"></a><span class="lineno"> 4844</span>&#160;                    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l04845"></a><span class="lineno"> 4845</span>&#160;                    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l04846"></a><span class="lineno"> 4846</span>&#160;                    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l04847"></a><span class="lineno"> 4847</span>&#160;                    rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04848"></a><span class="lineno"> 4848</span>&#160;</div>
<div class="line"><a name="l04849"></a><span class="lineno"> 4849</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04850"></a><span class="lineno"> 4850</span>&#160;                }</div>
<div class="line"><a name="l04851"></a><span class="lineno"> 4851</span>&#160;            }</div>
<div class="line"><a name="l04852"></a><span class="lineno"> 4852</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04853"></a><span class="lineno"> 4853</span>&#160;        }</div>
<div class="line"><a name="l04854"></a><span class="lineno"> 4854</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa6f4f72cba56e8738be1428fb8e19f66" title="S2C: Header(1), OfflineMesageID(16), server GUID(8), mtu(2), doSecurity(1 bit), handshakeAnswer (if d...">ID_OPEN_CONNECTION_REPLY_2</a>)</div>
<div class="line"><a name="l04855"></a><span class="lineno"> 4855</span>&#160;        {</div>
<div class="line"><a name="l04856"></a><span class="lineno"> 4856</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l04857"></a><span class="lineno"> 4857</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketReceive(data, length*8, systemAddress);</div>
<div class="line"><a name="l04858"></a><span class="lineno"> 4858</span>&#160;</div>
<div class="line"><a name="l04859"></a><span class="lineno"> 4859</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data,length,<span class="keyword">false</span>);</div>
<div class="line"><a name="l04860"></a><span class="lineno"> 4860</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l04861"></a><span class="lineno"> 4861</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l04862"></a><span class="lineno"> 4862</span>&#160;            <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid;</div>
<div class="line"><a name="l04863"></a><span class="lineno"> 4863</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(guid);</div>
<div class="line"><a name="l04864"></a><span class="lineno"> 4864</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> bindingAddress;</div>
<div class="line"><a name="l04865"></a><span class="lineno"> 4865</span>&#160;            <span class="keywordtype">bool</span> b = bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(bindingAddress);</div>
<div class="line"><a name="l04866"></a><span class="lineno"> 4866</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(b);</div>
<div class="line"><a name="l04867"></a><span class="lineno"> 4867</span>&#160;            <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> mtu;</div>
<div class="line"><a name="l04868"></a><span class="lineno"> 4868</span>&#160;            b=bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(mtu);</div>
<div class="line"><a name="l04869"></a><span class="lineno"> 4869</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(b);</div>
<div class="line"><a name="l04870"></a><span class="lineno"> 4870</span>&#160;            <span class="keywordtype">bool</span> doSecurity=<span class="keyword">false</span>;</div>
<div class="line"><a name="l04871"></a><span class="lineno"> 4871</span>&#160;            b=bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(doSecurity);</div>
<div class="line"><a name="l04872"></a><span class="lineno"> 4872</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(b);</div>
<div class="line"><a name="l04873"></a><span class="lineno"> 4873</span>&#160;</div>
<div class="line"><a name="l04874"></a><span class="lineno"> 4874</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04875"></a><span class="lineno"> 4875</span>&#160;<span class="preprocessor"></span>            <span class="keywordtype">char</span> answer[cat::EasyHandshake::ANSWER_BYTES];</div>
<div class="line"><a name="l04876"></a><span class="lineno"> 4876</span>&#160;            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Got ID_OPEN_CONNECTION_REPLY_2 and given doSecurity=%i\n&quot;</span>, (<span class="keywordtype">int</span>)doSecurity);</div>
<div class="line"><a name="l04877"></a><span class="lineno"> 4877</span>&#160;            <span class="keywordflow">if</span> (doSecurity)</div>
<div class="line"><a name="l04878"></a><span class="lineno"> 4878</span>&#160;            {</div>
<div class="line"><a name="l04879"></a><span class="lineno"> 4879</span>&#160;                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Reading cookie and public key\n&quot;</span>);</div>
<div class="line"><a name="l04880"></a><span class="lineno"> 4880</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) answer, <span class="keyword">sizeof</span>(answer));</div>
<div class="line"><a name="l04881"></a><span class="lineno"> 4881</span>&#160;            }</div>
<div class="line"><a name="l04882"></a><span class="lineno"> 4882</span>&#160;            cat::ClientEasyHandshake *client_handshake=0;</div>
<div class="line"><a name="l04883"></a><span class="lineno"> 4883</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l04884"></a><span class="lineno"> 4884</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04885"></a><span class="lineno"> 4885</span>&#160;            <a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml">RakPeer::RequestedConnectionStruct</a> *rcs;</div>
<div class="line"><a name="l04886"></a><span class="lineno"> 4886</span>&#160;            <span class="keywordtype">bool</span> unlock=<span class="keyword">true</span>;</div>
<div class="line"><a name="l04887"></a><span class="lineno"> 4887</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l04888"></a><span class="lineno"> 4888</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt;  rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l04889"></a><span class="lineno"> 4889</span>&#160;            {</div>
<div class="line"><a name="l04890"></a><span class="lineno"> 4890</span>&#160;                rcs=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i];</div>
<div class="line"><a name="l04891"></a><span class="lineno"> 4891</span>&#160;</div>
<div class="line"><a name="l04892"></a><span class="lineno"> 4892</span>&#160;</div>
<div class="line"><a name="l04893"></a><span class="lineno"> 4893</span>&#160;                <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>==systemAddress)</div>
<div class="line"><a name="l04894"></a><span class="lineno"> 4894</span>&#160;                {</div>
<div class="line"><a name="l04895"></a><span class="lineno"> 4895</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04896"></a><span class="lineno"> 4896</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: System address matches an entry in the requestedConnectionQueue and doSecurity=%i\n&quot;</span>, (<span class="keywordtype">int</span>)doSecurity);</div>
<div class="line"><a name="l04897"></a><span class="lineno"> 4897</span>&#160;                    <span class="keywordflow">if</span> (doSecurity)</div>
<div class="line"><a name="l04898"></a><span class="lineno"> 4898</span>&#160;                    {</div>
<div class="line"><a name="l04899"></a><span class="lineno"> 4899</span>&#160;                        <span class="keywordflow">if</span> (rcs-&gt;client_handshake==0)</div>
<div class="line"><a name="l04900"></a><span class="lineno"> 4900</span>&#160;                        {</div>
<div class="line"><a name="l04901"></a><span class="lineno"> 4901</span>&#160;                            <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Server wants security but we didn&#39;t set a public key -- Reporting back ID_REMOTE_SYSTEM_REQUIRES_PUBLIC_KEY to user\n&quot;</span>);</div>
<div class="line"><a name="l04902"></a><span class="lineno"> 4902</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04903"></a><span class="lineno"> 4903</span>&#160;</div>
<div class="line"><a name="l04904"></a><span class="lineno"> 4904</span>&#160;                            packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(2, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04905"></a><span class="lineno"> 4905</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d4b064d4e8e1c0a24c9bb8d7eef82a0" title="RakPeer - Remote system requires secure connections, pass a public key to RakPeerInterface::Connect()...">ID_REMOTE_SYSTEM_REQUIRES_PUBLIC_KEY</a>; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l04906"></a><span class="lineno"> 4906</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 1 ] = 0; <span class="comment">// Indicate server public key is missing</span></div>
<div class="line"><a name="l04907"></a><span class="lineno"> 4907</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = ( <span class="keyword">sizeof</span>( char ) * 8);</div>
<div class="line"><a name="l04908"></a><span class="lineno"> 4908</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>;</div>
<div class="line"><a name="l04909"></a><span class="lineno"> 4909</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=guid;</div>
<div class="line"><a name="l04910"></a><span class="lineno"> 4910</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l04911"></a><span class="lineno"> 4911</span>&#160;                            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04912"></a><span class="lineno"> 4912</span>&#160;                        }</div>
<div class="line"><a name="l04913"></a><span class="lineno"> 4913</span>&#160;</div>
<div class="line"><a name="l04914"></a><span class="lineno"> 4914</span>&#160;                        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Looks good, preparing to send challenge to server! client_handshake = %x\n&quot;</span>, client_handshake);</div>
<div class="line"><a name="l04915"></a><span class="lineno"> 4915</span>&#160;                    }</div>
<div class="line"><a name="l04916"></a><span class="lineno"> 4916</span>&#160;</div>
<div class="line"><a name="l04917"></a><span class="lineno"> 4917</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l04918"></a><span class="lineno"> 4918</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04919"></a><span class="lineno"> 4919</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l04920"></a><span class="lineno"> 4920</span>&#160;                    unlock=<span class="keyword">false</span>;</div>
<div class="line"><a name="l04921"></a><span class="lineno"> 4921</span>&#160;</div>
<div class="line"><a name="l04922"></a><span class="lineno"> 4922</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#afeed335c2c0cb0959867454c88005883">actionToTake</a>==<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a88e713318705d54ebdc502ddde977497aacba564b90938bd259399c78aa1af3b1">RakPeer::RequestedConnectionStruct::CONNECT</a>);</div>
<div class="line"><a name="l04923"></a><span class="lineno"> 4923</span>&#160;                    <span class="comment">// You might get this when already connected because of cross-connections</span></div>
<div class="line"><a name="l04924"></a><span class="lineno"> 4924</span>&#160;                    <span class="keywordtype">bool</span> thisIPConnectedRecently=<span class="keyword">false</span>;</div>
<div class="line"><a name="l04925"></a><span class="lineno"> 4925</span>&#160;                    remoteSystem=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( systemAddress, <span class="keyword">true</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l04926"></a><span class="lineno"> 4926</span>&#160;                    <span class="keywordflow">if</span> (remoteSystem==0)</div>
<div class="line"><a name="l04927"></a><span class="lineno"> 4927</span>&#160;                    {</div>
<div class="line"><a name="l04928"></a><span class="lineno"> 4928</span>&#160;                        <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a> == 0)</div>
<div class="line"><a name="l04929"></a><span class="lineno"> 4929</span>&#160;                        {</div>
<div class="line"><a name="l04930"></a><span class="lineno"> 4930</span>&#160;                            remoteSystem=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a102510a3e5e43acdd3c2ca9ca7f1af6e" title="Get a free remote system from the list and assign our systemAddress to it.">AssignSystemAddressToRemoteSystemList</a>(systemAddress, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RakPeer::RemoteSystemStruct::UNVERIFIED_SENDER</a>, rakNetSocket, &amp;thisIPConnectedRecently, bindingAddress, mtu, guid, doSecurity);</div>
<div class="line"><a name="l04931"></a><span class="lineno"> 4931</span>&#160;                        }</div>
<div class="line"><a name="l04932"></a><span class="lineno"> 4932</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l04933"></a><span class="lineno"> 4933</span>&#160;                        {</div>
<div class="line"><a name="l04934"></a><span class="lineno"> 4934</span>&#160;                            remoteSystem=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a102510a3e5e43acdd3c2ca9ca7f1af6e" title="Get a free remote system from the list and assign our systemAddress to it.">AssignSystemAddressToRemoteSystemList</a>(systemAddress, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RakPeer::RemoteSystemStruct::UNVERIFIED_SENDER</a>, rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a>, &amp;thisIPConnectedRecently, bindingAddress, mtu, guid, doSecurity);</div>
<div class="line"><a name="l04935"></a><span class="lineno"> 4935</span>&#160;                        }</div>
<div class="line"><a name="l04936"></a><span class="lineno"> 4936</span>&#160;                    }</div>
<div class="line"><a name="l04937"></a><span class="lineno"> 4937</span>&#160;</div>
<div class="line"><a name="l04938"></a><span class="lineno"> 4938</span>&#160;                    <span class="comment">// 4/13/09 Attackers can flood ID_OPEN_CONNECTION_REQUEST and use up all available connection slots</span></div>
<div class="line"><a name="l04939"></a><span class="lineno"> 4939</span>&#160;                    <span class="comment">// Ignore connection attempts if this IP address connected within the last 100 milliseconds</span></div>
<div class="line"><a name="l04940"></a><span class="lineno"> 4940</span>&#160;                    <span class="keywordflow">if</span> (thisIPConnectedRecently==<span class="keyword">false</span>)</div>
<div class="line"><a name="l04941"></a><span class="lineno"> 4941</span>&#160;                    {</div>
<div class="line"><a name="l04942"></a><span class="lineno"> 4942</span>&#160;                        <span class="comment">// Don&#39;t check GetRemoteSystemFromGUID, server will verify</span></div>
<div class="line"><a name="l04943"></a><span class="lineno"> 4943</span>&#160;                        <span class="keywordflow">if</span> (remoteSystem)</div>
<div class="line"><a name="l04944"></a><span class="lineno"> 4944</span>&#160;                        {</div>
<div class="line"><a name="l04945"></a><span class="lineno"> 4945</span>&#160;                            <span class="comment">// Move pointer from RequestedConnectionStruct to RemoteSystemStruct</span></div>
<div class="line"><a name="l04946"></a><span class="lineno"> 4946</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04947"></a><span class="lineno"> 4947</span>&#160;<span class="preprocessor"></span>                            cat::u8 ident[cat::EasyHandshake::IDENTITY_BYTES];</div>
<div class="line"><a name="l04948"></a><span class="lineno"> 4948</span>&#160;                            <span class="keywordtype">bool</span> doIdentity = <span class="keyword">false</span>;</div>
<div class="line"><a name="l04949"></a><span class="lineno"> 4949</span>&#160;</div>
<div class="line"><a name="l04950"></a><span class="lineno"> 4950</span>&#160;                            <span class="keywordflow">if</span> (rcs-&gt;client_handshake)</div>
<div class="line"><a name="l04951"></a><span class="lineno"> 4951</span>&#160;                            {</div>
<div class="line"><a name="l04952"></a><span class="lineno"> 4952</span>&#160;                                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Processing answer\n&quot;</span>);</div>
<div class="line"><a name="l04953"></a><span class="lineno"> 4953</span>&#160;                                <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abcf5a787b9a0d2a115a65675682d1c91">publicKeyMode</a> == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aab798e0a1be74d9eca04bfa2b988cd9ff">PKM_USE_TWO_WAY_AUTHENTICATION</a>)</div>
<div class="line"><a name="l04954"></a><span class="lineno"> 4954</span>&#160;                                {</div>
<div class="line"><a name="l04955"></a><span class="lineno"> 4955</span>&#160;                                    <span class="keywordflow">if</span> (!rcs-&gt;client_handshake-&gt;ProcessAnswerWithIdentity(answer, ident, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.GetAuthenticatedEncryption()))</div>
<div class="line"><a name="l04956"></a><span class="lineno"> 4956</span>&#160;                                    {</div>
<div class="line"><a name="l04957"></a><span class="lineno"> 4957</span>&#160;                                        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Processing answer -- Invalid Answer\n&quot;</span>);</div>
<div class="line"><a name="l04958"></a><span class="lineno"> 4958</span>&#160;                                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04959"></a><span class="lineno"> 4959</span>&#160;                                    }</div>
<div class="line"><a name="l04960"></a><span class="lineno"> 4960</span>&#160;</div>
<div class="line"><a name="l04961"></a><span class="lineno"> 4961</span>&#160;                                    doIdentity = <span class="keyword">true</span>;</div>
<div class="line"><a name="l04962"></a><span class="lineno"> 4962</span>&#160;                                }</div>
<div class="line"><a name="l04963"></a><span class="lineno"> 4963</span>&#160;                                <span class="keywordflow">else</span></div>
<div class="line"><a name="l04964"></a><span class="lineno"> 4964</span>&#160;                                {</div>
<div class="line"><a name="l04965"></a><span class="lineno"> 4965</span>&#160;                                    <span class="keywordflow">if</span> (!rcs-&gt;client_handshake-&gt;ProcessAnswer(answer, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.GetAuthenticatedEncryption()))</div>
<div class="line"><a name="l04966"></a><span class="lineno"> 4966</span>&#160;                                    {</div>
<div class="line"><a name="l04967"></a><span class="lineno"> 4967</span>&#160;                                        <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Processing answer -- Invalid Answer\n&quot;</span>);</div>
<div class="line"><a name="l04968"></a><span class="lineno"> 4968</span>&#160;                                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l04969"></a><span class="lineno"> 4969</span>&#160;                                    }</div>
<div class="line"><a name="l04970"></a><span class="lineno"> 4970</span>&#160;                                }</div>
<div class="line"><a name="l04971"></a><span class="lineno"> 4971</span>&#160;                                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Success!\n&quot;</span>);</div>
<div class="line"><a name="l04972"></a><span class="lineno"> 4972</span>&#160;</div>
<div class="line"><a name="l04973"></a><span class="lineno"> 4973</span>&#160;                                <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l04974"></a><span class="lineno"> 4974</span>&#160;                                rcs-&gt;client_handshake=0;</div>
<div class="line"><a name="l04975"></a><span class="lineno"> 4975</span>&#160;                            }</div>
<div class="line"><a name="l04976"></a><span class="lineno"> 4976</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l04977"></a><span class="lineno"> 4977</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l04978"></a><span class="lineno"> 4978</span>&#160;                            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a713ed9180dc032af8ebddf8762fc6643" title="The reliability layer associated with this player.">weInitiatedTheConnection</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l04979"></a><span class="lineno"> 4979</span>&#160;                            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RakPeer::RemoteSystemStruct::REQUESTED_CONNECTION</a>;</div>
<div class="line"><a name="l04980"></a><span class="lineno"> 4980</span>&#160;                            <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a6ece6e5171327a59002ff3d4581a7032">timeoutTime</a>!=0)</div>
<div class="line"><a name="l04981"></a><span class="lineno"> 4981</span>&#160;                                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a48ebdf0f6521fca292535480c2f54906">SetTimeoutTime</a>(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a6ece6e5171327a59002ff3d4581a7032">timeoutTime</a>);</div>
<div class="line"><a name="l04982"></a><span class="lineno"> 4982</span>&#160;</div>
<div class="line"><a name="l04983"></a><span class="lineno"> 4983</span>&#160;                            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> temp;</div>
<div class="line"><a name="l04984"></a><span class="lineno"> 4984</span>&#160;                            temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>( (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a563aaf254daf19c5130640afe0849af7" title="C2S: Header(1), GUID(8), Timestamp, HasSecurity(1), Proof(32)">ID_CONNECTION_REQUEST</a>);</div>
<div class="line"><a name="l04985"></a><span class="lineno"> 4985</span>&#160;                            temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l04986"></a><span class="lineno"> 4986</span>&#160;                            temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>());</div>
<div class="line"><a name="l04987"></a><span class="lineno"> 4987</span>&#160;</div>
<div class="line"><a name="l04988"></a><span class="lineno"> 4988</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l04989"></a><span class="lineno"> 4989</span>&#160;<span class="preprocessor"></span>                            temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(doSecurity ? 1 : 0));</div>
<div class="line"><a name="l04990"></a><span class="lineno"> 4990</span>&#160;</div>
<div class="line"><a name="l04991"></a><span class="lineno"> 4991</span>&#160;                            <span class="keywordflow">if</span> (doSecurity)</div>
<div class="line"><a name="l04992"></a><span class="lineno"> 4992</span>&#160;                            {</div>
<div class="line"><a name="l04993"></a><span class="lineno"> 4993</span>&#160;                                <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> proof[32];</div>
<div class="line"><a name="l04994"></a><span class="lineno"> 4994</span>&#160;                                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.GetAuthenticatedEncryption()-&gt;GenerateProof(proof, <span class="keyword">sizeof</span>(proof));</div>
<div class="line"><a name="l04995"></a><span class="lineno"> 4995</span>&#160;                                temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>(proof, <span class="keyword">sizeof</span>(proof));</div>
<div class="line"><a name="l04996"></a><span class="lineno"> 4996</span>&#160;</div>
<div class="line"><a name="l04997"></a><span class="lineno"> 4997</span>&#160;                                temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(doIdentity ? 1 : 0));</div>
<div class="line"><a name="l04998"></a><span class="lineno"> 4998</span>&#160;</div>
<div class="line"><a name="l04999"></a><span class="lineno"> 4999</span>&#160;                                <span class="keywordflow">if</span> (doIdentity)</div>
<div class="line"><a name="l05000"></a><span class="lineno"> 5000</span>&#160;                                {</div>
<div class="line"><a name="l05001"></a><span class="lineno"> 5001</span>&#160;                                    temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>(ident, <span class="keyword">sizeof</span>(ident));</div>
<div class="line"><a name="l05002"></a><span class="lineno"> 5002</span>&#160;                                }</div>
<div class="line"><a name="l05003"></a><span class="lineno"> 5003</span>&#160;                            }</div>
<div class="line"><a name="l05004"></a><span class="lineno"> 5004</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l05005"></a><span class="lineno"> 5005</span>&#160;<span class="preprocessor"></span>                            temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)0);</div>
<div class="line"><a name="l05006"></a><span class="lineno"> 5006</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05007"></a><span class="lineno"> 5007</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05008"></a><span class="lineno"> 5008</span>&#160;                            <span class="keywordflow">if</span> ( rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a22d597496cbad49ca972d7affd4e203f">outgoingPasswordLength</a> &gt; 0 )</div>
<div class="line"><a name="l05009"></a><span class="lineno"> 5009</span>&#160;                                temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>( ( <span class="keywordtype">char</span>* ) rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#aeca8c43876bfa7e1d48c8666f670e52b">outgoingPassword</a>,  rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a22d597496cbad49ca972d7affd4e203f">outgoingPasswordLength</a> );</div>
<div class="line"><a name="l05010"></a><span class="lineno"> 5010</span>&#160;</div>
<div class="line"><a name="l05011"></a><span class="lineno"> 5011</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*)temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), temp.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eabc6ba98e9404532481e43eea39731929" title="The message is sent reliably, but not necessarily in any order. Same overhead as UNRELIABLE.">RELIABLE</a>, 0, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, timeRead, 0 );</div>
<div class="line"><a name="l05012"></a><span class="lineno"> 5012</span>&#160;                        }</div>
<div class="line"><a name="l05013"></a><span class="lineno"> 5013</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l05014"></a><span class="lineno"> 5014</span>&#160;                        {</div>
<div class="line"><a name="l05015"></a><span class="lineno"> 5015</span>&#160;                            <span class="comment">// Failed, no connections available anymore</span></div>
<div class="line"><a name="l05016"></a><span class="lineno"> 5016</span>&#160;                            packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05017"></a><span class="lineno"> 5017</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a>; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l05018"></a><span class="lineno"> 5018</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = ( <span class="keyword">sizeof</span>( char ) * 8);</div>
<div class="line"><a name="l05019"></a><span class="lineno"> 5019</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>;</div>
<div class="line"><a name="l05020"></a><span class="lineno"> 5020</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=guid;</div>
<div class="line"><a name="l05021"></a><span class="lineno"> 5021</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l05022"></a><span class="lineno"> 5022</span>&#160;                        }</div>
<div class="line"><a name="l05023"></a><span class="lineno"> 5023</span>&#160;                    }</div>
<div class="line"><a name="l05024"></a><span class="lineno"> 5024</span>&#160;</div>
<div class="line"><a name="l05025"></a><span class="lineno"> 5025</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l05026"></a><span class="lineno"> 5026</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k=0; k &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); k++)</div>
<div class="line"><a name="l05027"></a><span class="lineno"> 5027</span>&#160;                    {</div>
<div class="line"><a name="l05028"></a><span class="lineno"> 5028</span>&#160;                        <span class="keywordflow">if</span> (rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[k]-&gt;systemAddress==systemAddress)</div>
<div class="line"><a name="l05029"></a><span class="lineno"> 5029</span>&#160;                        {</div>
<div class="line"><a name="l05030"></a><span class="lineno"> 5030</span>&#160;                            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8be7c3107161bb2ad869a9a6bb60605a">RemoveAtIndex</a>(k);</div>
<div class="line"><a name="l05031"></a><span class="lineno"> 5031</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l05032"></a><span class="lineno"> 5032</span>&#160;                        }</div>
<div class="line"><a name="l05033"></a><span class="lineno"> 5033</span>&#160;                    }</div>
<div class="line"><a name="l05034"></a><span class="lineno"> 5034</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l05035"></a><span class="lineno"> 5035</span>&#160;</div>
<div class="line"><a name="l05036"></a><span class="lineno"> 5036</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05037"></a><span class="lineno"> 5037</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Deleting client_handshake object %x and rcs-&gt;client_handshake object %x\n&quot;</span>, client_handshake, rcs-&gt;client_handshake);</div>
<div class="line"><a name="l05038"></a><span class="lineno"> 5038</span>&#160;                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05039"></a><span class="lineno"> 5039</span>&#160;                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05040"></a><span class="lineno"> 5040</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05041"></a><span class="lineno"> 5041</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05042"></a><span class="lineno"> 5042</span>&#160;</div>
<div class="line"><a name="l05043"></a><span class="lineno"> 5043</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l05044"></a><span class="lineno"> 5044</span>&#160;                }</div>
<div class="line"><a name="l05045"></a><span class="lineno"> 5045</span>&#160;            }</div>
<div class="line"><a name="l05046"></a><span class="lineno"> 5046</span>&#160;</div>
<div class="line"><a name="l05047"></a><span class="lineno"> 5047</span>&#160;            <span class="keywordflow">if</span> (unlock)</div>
<div class="line"><a name="l05048"></a><span class="lineno"> 5048</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l05049"></a><span class="lineno"> 5049</span>&#160;</div>
<div class="line"><a name="l05050"></a><span class="lineno"> 5050</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05051"></a><span class="lineno"> 5051</span>&#160;</div>
<div class="line"><a name="l05052"></a><span class="lineno"> 5052</span>&#160;        }</div>
<div class="line"><a name="l05053"></a><span class="lineno"> 5053</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a> ||</div>
<div class="line"><a name="l05054"></a><span class="lineno"> 5054</span>&#160;            (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d040cf221aa9a12604d0293348946c2" title="RakPeer - The system we attempted to connect to is not accepting new connections.">ID_NO_FREE_INCOMING_CONNECTIONS</a> ||</div>
<div class="line"><a name="l05055"></a><span class="lineno"> 5055</span>&#160;            (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a68c1b5b947ff46814ffb7fdf4853f350" title="RakPeer - We are banned from the system we attempted to connect to.">ID_CONNECTION_BANNED</a> ||</div>
<div class="line"><a name="l05056"></a><span class="lineno"> 5056</span>&#160;            (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d00a59a0b9f0b8a50a041f2032184b5" title="RakPeer - Sent a connect request to a system we are currently connected to.">ID_ALREADY_CONNECTED</a> ||</div>
<div class="line"><a name="l05057"></a><span class="lineno"> 5057</span>&#160;            (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a2c69119824c8bd3faa96d9953d02a41d" title="RakPeer - The remote system is using a password and has refused our connection because we did not set...">ID_INVALID_PASSWORD</a> ||</div>
<div class="line"><a name="l05058"></a><span class="lineno"> 5058</span>&#160;            (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a74191a2391c30daa47c0e98f44896fa5" title="RakPeer::SetLimitIPConnectionFrequency()">ID_IP_RECENTLY_CONNECTED</a> ||</div>
<div class="line"><a name="l05059"></a><span class="lineno"> 5059</span>&#160;            (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5762f213c6741b179d62a751ec2ef804">ID_INCOMPATIBLE_PROTOCOL_VERSION</a>)</div>
<div class="line"><a name="l05060"></a><span class="lineno"> 5060</span>&#160;        {</div>
<div class="line"><a name="l05061"></a><span class="lineno"> 5061</span>&#160;</div>
<div class="line"><a name="l05062"></a><span class="lineno"> 5062</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data,length,<span class="keyword">false</span>);</div>
<div class="line"><a name="l05063"></a><span class="lineno"> 5063</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l05064"></a><span class="lineno"> 5064</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05065"></a><span class="lineno"> 5065</span>&#160;            <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)ID_INCOMPATIBLE_PROTOCOL_VERSION)</div>
<div class="line"><a name="l05066"></a><span class="lineno"> 5066</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>));</div>
<div class="line"><a name="l05067"></a><span class="lineno"> 5067</span>&#160;</div>
<div class="line"><a name="l05068"></a><span class="lineno"> 5068</span>&#160;            <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid;</div>
<div class="line"><a name="l05069"></a><span class="lineno"> 5069</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(guid);</div>
<div class="line"><a name="l05070"></a><span class="lineno"> 5070</span>&#160;</div>
<div class="line"><a name="l05071"></a><span class="lineno"> 5071</span>&#160;            <a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml">RakPeer::RequestedConnectionStruct</a> *rcs;</div>
<div class="line"><a name="l05072"></a><span class="lineno"> 5072</span>&#160;            <span class="keywordtype">bool</span> connectionAttemptCancelled=<span class="keyword">false</span>;</div>
<div class="line"><a name="l05073"></a><span class="lineno"> 5073</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l05074"></a><span class="lineno"> 5074</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt;  rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l05075"></a><span class="lineno"> 5075</span>&#160;            {</div>
<div class="line"><a name="l05076"></a><span class="lineno"> 5076</span>&#160;                rcs=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[i];</div>
<div class="line"><a name="l05077"></a><span class="lineno"> 5077</span>&#160;                <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#afeed335c2c0cb0959867454c88005883">actionToTake</a>==<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a88e713318705d54ebdc502ddde977497aacba564b90938bd259399c78aa1af3b1">RakPeer::RequestedConnectionStruct::CONNECT</a> &amp;&amp; rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>==systemAddress)</div>
<div class="line"><a name="l05078"></a><span class="lineno"> 5078</span>&#160;                {</div>
<div class="line"><a name="l05079"></a><span class="lineno"> 5079</span>&#160;                    connectionAttemptCancelled=<span class="keyword">true</span>;</div>
<div class="line"><a name="l05080"></a><span class="lineno"> 5080</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8be7c3107161bb2ad869a9a6bb60605a">RemoveAtIndex</a>(i);</div>
<div class="line"><a name="l05081"></a><span class="lineno"> 5081</span>&#160;</div>
<div class="line"><a name="l05082"></a><span class="lineno"> 5082</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05083"></a><span class="lineno"> 5083</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Connection attempt canceled so deleting rcs-&gt;client_handshake object %x\n&quot;</span>, rcs-&gt;client_handshake);</div>
<div class="line"><a name="l05084"></a><span class="lineno"> 5084</span>&#160;                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05085"></a><span class="lineno"> 5085</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05086"></a><span class="lineno"> 5086</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05087"></a><span class="lineno"> 5087</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l05088"></a><span class="lineno"> 5088</span>&#160;                }</div>
<div class="line"><a name="l05089"></a><span class="lineno"> 5089</span>&#160;            }</div>
<div class="line"><a name="l05090"></a><span class="lineno"> 5090</span>&#160;</div>
<div class="line"><a name="l05091"></a><span class="lineno"> 5091</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l05092"></a><span class="lineno"> 5092</span>&#160;</div>
<div class="line"><a name="l05093"></a><span class="lineno"> 5093</span>&#160;            <span class="keywordflow">if</span> (connectionAttemptCancelled)</div>
<div class="line"><a name="l05094"></a><span class="lineno"> 5094</span>&#160;            {</div>
<div class="line"><a name="l05095"></a><span class="lineno"> 5095</span>&#160;                <span class="comment">// Tell user of connection attempt failed</span></div>
<div class="line"><a name="l05096"></a><span class="lineno"> 5096</span>&#160;                packet=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05097"></a><span class="lineno"> 5097</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = data[0]; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l05098"></a><span class="lineno"> 5098</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = ( <span class="keyword">sizeof</span>( char ) * 8);</div>
<div class="line"><a name="l05099"></a><span class="lineno"> 5099</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05100"></a><span class="lineno"> 5100</span>&#160;                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=guid;</div>
<div class="line"><a name="l05101"></a><span class="lineno"> 5101</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l05102"></a><span class="lineno"> 5102</span>&#160;            }</div>
<div class="line"><a name="l05103"></a><span class="lineno"> 5103</span>&#160;        }</div>
<div class="line"><a name="l05104"></a><span class="lineno"> 5104</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a6c34a3a076e83d6fd6a30983d44b83c6">ID_OPEN_CONNECTION_REQUEST_1</a> &amp;&amp; length &gt; (<span class="keywordtype">int</span>) (1+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)))</div>
<div class="line"><a name="l05105"></a><span class="lineno"> 5105</span>&#160;        {<span class="comment">/*</span></div>
<div class="line"><a name="l05106"></a><span class="lineno"> 5106</span>&#160;<span class="comment">            static int x = 0;</span></div>
<div class="line"><a name="l05107"></a><span class="lineno"> 5107</span>&#160;<span class="comment">            ++x;</span></div>
<div class="line"><a name="l05108"></a><span class="lineno"> 5108</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l05109"></a><span class="lineno"> 5109</span>&#160;<span class="comment">            SystemAddress *addr = (SystemAddress*)&amp;systemAddress;</span></div>
<div class="line"><a name="l05110"></a><span class="lineno"> 5110</span>&#160;<span class="comment">            addr-&gt;binaryAddress += x;*/</span></div>
<div class="line"><a name="l05111"></a><span class="lineno"> 5111</span>&#160;</div>
<div class="line"><a name="l05112"></a><span class="lineno"> 5112</span>&#160;            <span class="comment">//RAKNET_DEBUG_PRINTF(&quot;%i:IOCR, &quot;, __LINE__);</span></div>
<div class="line"><a name="l05113"></a><span class="lineno"> 5113</span>&#160;            <span class="keywordtype">char</span> remoteProtocol=data[1+<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>)];</div>
<div class="line"><a name="l05114"></a><span class="lineno"> 5114</span>&#160;            <span class="keywordflow">if</span> (remoteProtocol!=<a class="code" href="../../df/dfc/version_8h.xhtml#a0a08e1212b00339c467ac917a5e473ef">RAKNET_PROTOCOL_VERSION</a>)</div>
<div class="line"><a name="l05115"></a><span class="lineno"> 5115</span>&#160;            {</div>
<div class="line"><a name="l05116"></a><span class="lineno"> 5116</span>&#160;                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs;</div>
<div class="line"><a name="l05117"></a><span class="lineno"> 5117</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)ID_INCOMPATIBLE_PROTOCOL_VERSION);</div>
<div class="line"><a name="l05118"></a><span class="lineno"> 5118</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)<a class="code" href="../../df/dfc/version_8h.xhtml#a0a08e1212b00339c467ac917a5e473ef">RAKNET_PROTOCOL_VERSION</a>);</div>
<div class="line"><a name="l05119"></a><span class="lineno"> 5119</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05120"></a><span class="lineno"> 5120</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l05121"></a><span class="lineno"> 5121</span>&#160;</div>
<div class="line"><a name="l05122"></a><span class="lineno"> 5122</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05123"></a><span class="lineno"> 5123</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keywordtype">char</span>*)bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05124"></a><span class="lineno"> 5124</span>&#160;</div>
<div class="line"><a name="l05125"></a><span class="lineno"> 5125</span>&#160;                <span class="comment">// SocketLayer::SendTo( rakNetSocket, (char*)bs.GetData(), bs.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05126"></a><span class="lineno"> 5126</span>&#160;</div>
<div class="line"><a name="l05127"></a><span class="lineno"> 5127</span>&#160;                <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05128"></a><span class="lineno"> 5128</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05129"></a><span class="lineno"> 5129</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05130"></a><span class="lineno"> 5130</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05131"></a><span class="lineno"> 5131</span>&#160;</div>
<div class="line"><a name="l05132"></a><span class="lineno"> 5132</span>&#160;                rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05133"></a><span class="lineno"> 5133</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05134"></a><span class="lineno"> 5134</span>&#160;            }</div>
<div class="line"><a name="l05135"></a><span class="lineno"> 5135</span>&#160;</div>
<div class="line"><a name="l05136"></a><span class="lineno"> 5136</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05137"></a><span class="lineno"> 5137</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketReceive(data, length*8, systemAddress);</div>
<div class="line"><a name="l05138"></a><span class="lineno"> 5138</span>&#160;</div>
<div class="line"><a name="l05139"></a><span class="lineno"> 5139</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsOut;</div>
<div class="line"><a name="l05140"></a><span class="lineno"> 5140</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)ID_OPEN_CONNECTION_REPLY_1);</div>
<div class="line"><a name="l05141"></a><span class="lineno"> 5141</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05142"></a><span class="lineno"> 5142</span>&#160;            bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l05143"></a><span class="lineno"> 5143</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05144"></a><span class="lineno"> 5144</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (rakPeer-&gt;_using_security)</div>
<div class="line"><a name="l05145"></a><span class="lineno"> 5145</span>&#160;            {</div>
<div class="line"><a name="l05146"></a><span class="lineno"> 5146</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) 1); <span class="comment">// HasCookie Yes</span></div>
<div class="line"><a name="l05147"></a><span class="lineno"> 5147</span>&#160;                <span class="comment">// Write cookie</span></div>
<div class="line"><a name="l05148"></a><span class="lineno"> 5148</span>&#160;                <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> cookie = rakPeer-&gt;_cookie_jar-&gt;Generate(&amp;systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>,<span class="keyword">sizeof</span>(systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>));</div>
<div class="line"><a name="l05149"></a><span class="lineno"> 5149</span>&#160;                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Writing cookie %i to %i:%i\n&quot;</span>, cookie, systemAddress);</div>
<div class="line"><a name="l05150"></a><span class="lineno"> 5150</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cookie);</div>
<div class="line"><a name="l05151"></a><span class="lineno"> 5151</span>&#160;                <span class="comment">// Write my public key</span></div>
<div class="line"><a name="l05152"></a><span class="lineno"> 5152</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) rakPeer-&gt;my_public_key,<span class="keyword">sizeof</span>(rakPeer-&gt;my_public_key));</div>
<div class="line"><a name="l05153"></a><span class="lineno"> 5153</span>&#160;            }</div>
<div class="line"><a name="l05154"></a><span class="lineno"> 5154</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l05155"></a><span class="lineno"> 5155</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05156"></a><span class="lineno"> 5156</span>&#160;<span class="preprocessor"></span>                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) 0);  <span class="comment">// HasCookie oN</span></div>
<div class="line"><a name="l05157"></a><span class="lineno"> 5157</span>&#160;</div>
<div class="line"><a name="l05158"></a><span class="lineno"> 5158</span>&#160;            <span class="comment">// MTU. Lower MTU if it is exceeds our own limit</span></div>
<div class="line"><a name="l05159"></a><span class="lineno"> 5159</span>&#160;            <span class="keywordflow">if</span> (length+<a class="code" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#a8a0fae83e487dc04b3cd774b3d4ee637" title="Sizeof an UDP header in byte.">UDP_HEADER_SIZE</a> &gt; <a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a>)</div>
<div class="line"><a name="l05160"></a><span class="lineno"> 5160</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a389b1cb2d6ab054a9949efe7f1748374">WriteCasted</a>&lt;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a>&gt;(<a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a>);</div>
<div class="line"><a name="l05161"></a><span class="lineno"> 5161</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l05162"></a><span class="lineno"> 5162</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a389b1cb2d6ab054a9949efe7f1748374">WriteCasted</a>&lt;<a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a>&gt;(length+<a class="code" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#a8a0fae83e487dc04b3cd774b3d4ee637" title="Sizeof an UDP header in byte.">UDP_HEADER_SIZE</a>);</div>
<div class="line"><a name="l05163"></a><span class="lineno"> 5163</span>&#160;</div>
<div class="line"><a name="l05164"></a><span class="lineno"> 5164</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05165"></a><span class="lineno"> 5165</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05166"></a><span class="lineno"> 5166</span>&#160;            <span class="comment">// SocketLayer::SendTo( rakNetSocket, (const char*) bsOut.GetData(), bsOut.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05167"></a><span class="lineno"> 5167</span>&#160;</div>
<div class="line"><a name="l05168"></a><span class="lineno"> 5168</span>&#160;            <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05169"></a><span class="lineno"> 5169</span>&#160;            bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05170"></a><span class="lineno"> 5170</span>&#160;            bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05171"></a><span class="lineno"> 5171</span>&#160;            bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05172"></a><span class="lineno"> 5172</span>&#160;            rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05173"></a><span class="lineno"> 5173</span>&#160;        }</div>
<div class="line"><a name="l05174"></a><span class="lineno"> 5174</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3afb3c84d29ddd82cf9e7696431f77f560">ID_OPEN_CONNECTION_REQUEST_2</a>)</div>
<div class="line"><a name="l05175"></a><span class="lineno"> 5175</span>&#160;        {</div>
<div class="line"><a name="l05176"></a><span class="lineno"> 5176</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> bindingAddress;</div>
<div class="line"><a name="l05177"></a><span class="lineno"> 5177</span>&#160;            <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> guid;</div>
<div class="line"><a name="l05178"></a><span class="lineno"> 5178</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsOut;</div>
<div class="line"><a name="l05179"></a><span class="lineno"> 5179</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data, length, <span class="keyword">false</span>);</div>
<div class="line"><a name="l05180"></a><span class="lineno"> 5180</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l05181"></a><span class="lineno"> 5181</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05182"></a><span class="lineno"> 5182</span>&#160;</div>
<div class="line"><a name="l05183"></a><span class="lineno"> 5183</span>&#160;            <span class="keywordtype">bool</span> requiresSecurityOfThisClient=<span class="keyword">false</span>;</div>
<div class="line"><a name="l05184"></a><span class="lineno"> 5184</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05185"></a><span class="lineno"> 5185</span>&#160;<span class="preprocessor"></span>            <span class="keywordtype">char</span> remoteHandshakeChallenge[cat::EasyHandshake::CHALLENGE_BYTES];</div>
<div class="line"><a name="l05186"></a><span class="lineno"> 5186</span>&#160;</div>
<div class="line"><a name="l05187"></a><span class="lineno"> 5187</span>&#160;            <span class="keywordflow">if</span> (rakPeer-&gt;_using_security)</div>
<div class="line"><a name="l05188"></a><span class="lineno"> 5188</span>&#160;            {</div>
<div class="line"><a name="l05189"></a><span class="lineno"> 5189</span>&#160;                systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>, str1, static_cast&lt;size_t&gt;(64));</div>
<div class="line"><a name="l05190"></a><span class="lineno"> 5190</span>&#160;                requiresSecurityOfThisClient=rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4541da876eef1161bd7460f2cbfcc3bd" title="Checks to see if a given IP is in the security exception list.">IsInSecurityExceptionList</a>(str1)==<span class="keyword">false</span>;</div>
<div class="line"><a name="l05191"></a><span class="lineno"> 5191</span>&#160;</div>
<div class="line"><a name="l05192"></a><span class="lineno"> 5192</span>&#160;                <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> cookie;</div>
<div class="line"><a name="l05193"></a><span class="lineno"> 5193</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(cookie);</div>
<div class="line"><a name="l05194"></a><span class="lineno"> 5194</span>&#160;                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Got cookie %i from %i:%i\n&quot;</span>, cookie, systemAddress);</div>
<div class="line"><a name="l05195"></a><span class="lineno"> 5195</span>&#160;                <span class="keywordflow">if</span> (rakPeer-&gt;_cookie_jar-&gt;Verify(&amp;systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>,<span class="keyword">sizeof</span>(systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>), cookie)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l05196"></a><span class="lineno"> 5196</span>&#160;                {</div>
<div class="line"><a name="l05197"></a><span class="lineno"> 5197</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05198"></a><span class="lineno"> 5198</span>&#160;                }</div>
<div class="line"><a name="l05199"></a><span class="lineno"> 5199</span>&#160;                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Cookie good!\n&quot;</span>);</div>
<div class="line"><a name="l05200"></a><span class="lineno"> 5200</span>&#160;</div>
<div class="line"><a name="l05201"></a><span class="lineno"> 5201</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> clientWroteChallenge;</div>
<div class="line"><a name="l05202"></a><span class="lineno"> 5202</span>&#160;                bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(clientWroteChallenge);</div>
<div class="line"><a name="l05203"></a><span class="lineno"> 5203</span>&#160;</div>
<div class="line"><a name="l05204"></a><span class="lineno"> 5204</span>&#160;                <span class="keywordflow">if</span> (requiresSecurityOfThisClient==<span class="keyword">true</span> &amp;&amp; clientWroteChallenge==0)</div>
<div class="line"><a name="l05205"></a><span class="lineno"> 5205</span>&#160;                {</div>
<div class="line"><a name="l05206"></a><span class="lineno"> 5206</span>&#160;                    <span class="comment">// Fail, client doesn&#39;t support security, and it is required</span></div>
<div class="line"><a name="l05207"></a><span class="lineno"> 5207</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05208"></a><span class="lineno"> 5208</span>&#160;                }</div>
<div class="line"><a name="l05209"></a><span class="lineno"> 5209</span>&#160;</div>
<div class="line"><a name="l05210"></a><span class="lineno"> 5210</span>&#160;                <span class="keywordflow">if</span> (clientWroteChallenge)</div>
<div class="line"><a name="l05211"></a><span class="lineno"> 5211</span>&#160;                {</div>
<div class="line"><a name="l05212"></a><span class="lineno"> 5212</span>&#160;                    bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) remoteHandshakeChallenge, cat::EasyHandshake::CHALLENGE_BYTES);</div>
<div class="line"><a name="l05213"></a><span class="lineno"> 5213</span>&#160;<span class="preprocessor">#ifdef CAT_AUDIT</span></div>
<div class="line"><a name="l05214"></a><span class="lineno"> 5214</span>&#160;<span class="preprocessor"></span>                    printf(<span class="stringliteral">&quot;AUDIT: RECV CHALLENGE &quot;</span>);</div>
<div class="line"><a name="l05215"></a><span class="lineno"> 5215</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> ii = 0; ii &lt; <span class="keyword">sizeof</span>(remoteHandshakeChallenge); ++ii)</div>
<div class="line"><a name="l05216"></a><span class="lineno"> 5216</span>&#160;                    {</div>
<div class="line"><a name="l05217"></a><span class="lineno"> 5217</span>&#160;                        printf(<span class="stringliteral">&quot;%02x&quot;</span>, (cat::u8)remoteHandshakeChallenge[ii]);</div>
<div class="line"><a name="l05218"></a><span class="lineno"> 5218</span>&#160;                    }</div>
<div class="line"><a name="l05219"></a><span class="lineno"> 5219</span>&#160;                    printf(<span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l05220"></a><span class="lineno"> 5220</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05221"></a><span class="lineno"> 5221</span>&#160;<span class="preprocessor"></span>                }</div>
<div class="line"><a name="l05222"></a><span class="lineno"> 5222</span>&#160;            }</div>
<div class="line"><a name="l05223"></a><span class="lineno"> 5223</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05224"></a><span class="lineno"> 5224</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05225"></a><span class="lineno"> 5225</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(bindingAddress);</div>
<div class="line"><a name="l05226"></a><span class="lineno"> 5226</span>&#160;            <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> mtu;</div>
<div class="line"><a name="l05227"></a><span class="lineno"> 5227</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(mtu);</div>
<div class="line"><a name="l05228"></a><span class="lineno"> 5228</span>&#160;            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(guid);</div>
<div class="line"><a name="l05229"></a><span class="lineno"> 5229</span>&#160;</div>
<div class="line"><a name="l05230"></a><span class="lineno"> 5230</span>&#160;            <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *rssFromSA = rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( systemAddress, <span class="keyword">true</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l05231"></a><span class="lineno"> 5231</span>&#160;            <span class="keywordtype">bool</span> IPAddrInUse = rssFromSA != 0 &amp;&amp; rssFromSA-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a>;</div>
<div class="line"><a name="l05232"></a><span class="lineno"> 5232</span>&#160;            <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *rssFromGuid = rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2259cca1a81b5b8a5cb94c26af2aa7d1">GetRemoteSystemFromGUID</a>(guid, <span class="keyword">true</span>);</div>
<div class="line"><a name="l05233"></a><span class="lineno"> 5233</span>&#160;            <span class="keywordtype">bool</span> GUIDInUse = rssFromGuid != 0 &amp;&amp; rssFromGuid-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a>;</div>
<div class="line"><a name="l05234"></a><span class="lineno"> 5234</span>&#160;</div>
<div class="line"><a name="l05235"></a><span class="lineno"> 5235</span>&#160;            <span class="comment">// IPAddrInUse, GuidInUse, outcome</span></div>
<div class="line"><a name="l05236"></a><span class="lineno"> 5236</span>&#160;            <span class="comment">// TRUE,      , TRUE     , ID_OPEN_CONNECTION_REPLY if they are the same, else ID_ALREADY_CONNECTED</span></div>
<div class="line"><a name="l05237"></a><span class="lineno"> 5237</span>&#160;            <span class="comment">// FALSE,     , TRUE     , ID_ALREADY_CONNECTED (someone else took this guid)</span></div>
<div class="line"><a name="l05238"></a><span class="lineno"> 5238</span>&#160;            <span class="comment">// TRUE,      , FALSE    , ID_ALREADY_CONNECTED (silently disconnected, restarted rakNet)</span></div>
<div class="line"><a name="l05239"></a><span class="lineno"> 5239</span>&#160;            <span class="comment">// FALSE      , FALSE    , Allow connection</span></div>
<div class="line"><a name="l05240"></a><span class="lineno"> 5240</span>&#160;</div>
<div class="line"><a name="l05241"></a><span class="lineno"> 5241</span>&#160;            <span class="keywordtype">int</span> outcome;</div>
<div class="line"><a name="l05242"></a><span class="lineno"> 5242</span>&#160;            <span class="keywordflow">if</span> (IPAddrInUse &amp; GUIDInUse)</div>
<div class="line"><a name="l05243"></a><span class="lineno"> 5243</span>&#160;            {</div>
<div class="line"><a name="l05244"></a><span class="lineno"> 5244</span>&#160;                <span class="keywordflow">if</span> (rssFromSA==rssFromGuid &amp;&amp; rssFromSA-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RakPeer::RemoteSystemStruct::UNVERIFIED_SENDER</a>)</div>
<div class="line"><a name="l05245"></a><span class="lineno"> 5245</span>&#160;                {</div>
<div class="line"><a name="l05246"></a><span class="lineno"> 5246</span>&#160;                    <span class="comment">// ID_OPEN_CONNECTION_REPLY if they are the same</span></div>
<div class="line"><a name="l05247"></a><span class="lineno"> 5247</span>&#160;                    outcome=1;</div>
<div class="line"><a name="l05248"></a><span class="lineno"> 5248</span>&#160;</div>
<div class="line"><a name="l05249"></a><span class="lineno"> 5249</span>&#160;                    <span class="comment">// Note to self: If REQUESTED_CONNECTION, this means two systems attempted to connect to each other at the same time, and one finished first.</span></div>
<div class="line"><a name="l05250"></a><span class="lineno"> 5250</span>&#160;                    <span class="comment">// Returns ID)_CONNECTION_REQUEST_ACCEPTED to one system, and ID_ALREADY_CONNECTED followed by ID_NEW_INCOMING_CONNECTION to another</span></div>
<div class="line"><a name="l05251"></a><span class="lineno"> 5251</span>&#160;                }</div>
<div class="line"><a name="l05252"></a><span class="lineno"> 5252</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l05253"></a><span class="lineno"> 5253</span>&#160;                {</div>
<div class="line"><a name="l05254"></a><span class="lineno"> 5254</span>&#160;                    <span class="comment">// ID_ALREADY_CONNECTED (restarted raknet, connected again from same ip, plus someone else took this guid)</span></div>
<div class="line"><a name="l05255"></a><span class="lineno"> 5255</span>&#160;                    outcome=2;</div>
<div class="line"><a name="l05256"></a><span class="lineno"> 5256</span>&#160;                }</div>
<div class="line"><a name="l05257"></a><span class="lineno"> 5257</span>&#160;            }</div>
<div class="line"><a name="l05258"></a><span class="lineno"> 5258</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (IPAddrInUse==<span class="keyword">false</span> &amp;&amp; GUIDInUse==<span class="keyword">true</span>)</div>
<div class="line"><a name="l05259"></a><span class="lineno"> 5259</span>&#160;            {</div>
<div class="line"><a name="l05260"></a><span class="lineno"> 5260</span>&#160;                <span class="comment">// ID_ALREADY_CONNECTED (someone else took this guid)</span></div>
<div class="line"><a name="l05261"></a><span class="lineno"> 5261</span>&#160;                outcome=3;</div>
<div class="line"><a name="l05262"></a><span class="lineno"> 5262</span>&#160;            }</div>
<div class="line"><a name="l05263"></a><span class="lineno"> 5263</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (IPAddrInUse==<span class="keyword">true</span> &amp;&amp; GUIDInUse==<span class="keyword">false</span>)</div>
<div class="line"><a name="l05264"></a><span class="lineno"> 5264</span>&#160;            {</div>
<div class="line"><a name="l05265"></a><span class="lineno"> 5265</span>&#160;                <span class="comment">// ID_ALREADY_CONNECTED (silently disconnected, restarted rakNet)</span></div>
<div class="line"><a name="l05266"></a><span class="lineno"> 5266</span>&#160;                outcome=4;</div>
<div class="line"><a name="l05267"></a><span class="lineno"> 5267</span>&#160;            }</div>
<div class="line"><a name="l05268"></a><span class="lineno"> 5268</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l05269"></a><span class="lineno"> 5269</span>&#160;            {</div>
<div class="line"><a name="l05270"></a><span class="lineno"> 5270</span>&#160;                <span class="comment">// Allow connection</span></div>
<div class="line"><a name="l05271"></a><span class="lineno"> 5271</span>&#160;                outcome=0;</div>
<div class="line"><a name="l05272"></a><span class="lineno"> 5272</span>&#160;            }</div>
<div class="line"><a name="l05273"></a><span class="lineno"> 5273</span>&#160;</div>
<div class="line"><a name="l05274"></a><span class="lineno"> 5274</span>&#160;            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bsAnswer;</div>
<div class="line"><a name="l05275"></a><span class="lineno"> 5275</span>&#160;            bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)ID_OPEN_CONNECTION_REPLY_2);</div>
<div class="line"><a name="l05276"></a><span class="lineno"> 5276</span>&#160;            bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05277"></a><span class="lineno"> 5277</span>&#160;            bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a223d75e8471d565ea4be7f6b44da6e8d" title="Given a connected system address, this method gives the unique GUID representing that instance of Rak...">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>));</div>
<div class="line"><a name="l05278"></a><span class="lineno"> 5278</span>&#160;            bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(systemAddress);</div>
<div class="line"><a name="l05279"></a><span class="lineno"> 5279</span>&#160;            bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(mtu);</div>
<div class="line"><a name="l05280"></a><span class="lineno"> 5280</span>&#160;            bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(requiresSecurityOfThisClient);</div>
<div class="line"><a name="l05281"></a><span class="lineno"> 5281</span>&#160;</div>
<div class="line"><a name="l05282"></a><span class="lineno"> 5282</span>&#160;            <span class="keywordflow">if</span> (outcome==1)</div>
<div class="line"><a name="l05283"></a><span class="lineno"> 5283</span>&#160;            {</div>
<div class="line"><a name="l05284"></a><span class="lineno"> 5284</span>&#160;                <span class="comment">// Duplicate connection request packet from packetloss</span></div>
<div class="line"><a name="l05285"></a><span class="lineno"> 5285</span>&#160;                <span class="comment">// Send back the same answer</span></div>
<div class="line"><a name="l05286"></a><span class="lineno"> 5286</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05287"></a><span class="lineno"> 5287</span>&#160;<span class="preprocessor"></span>                <span class="keywordflow">if</span> (requiresSecurityOfThisClient)</div>
<div class="line"><a name="l05288"></a><span class="lineno"> 5288</span>&#160;                {</div>
<div class="line"><a name="l05289"></a><span class="lineno"> 5289</span>&#160;                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Resending public key and answer from packetloss.  Sending ID_OPEN_CONNECTION_REPLY_2\n&quot;</span>);</div>
<div class="line"><a name="l05290"></a><span class="lineno"> 5290</span>&#160;                    bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) rssFromSA-&gt;answer,<span class="keyword">sizeof</span>(rssFromSA-&gt;answer));</div>
<div class="line"><a name="l05291"></a><span class="lineno"> 5291</span>&#160;                }</div>
<div class="line"><a name="l05292"></a><span class="lineno"> 5292</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05293"></a><span class="lineno"> 5293</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05294"></a><span class="lineno"> 5294</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05295"></a><span class="lineno"> 5295</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05296"></a><span class="lineno"> 5296</span>&#160;                <span class="comment">// SocketLayer::SendTo( rakNetSocket, (const char*) bsAnswer.GetData(), bsAnswer.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05297"></a><span class="lineno"> 5297</span>&#160;</div>
<div class="line"><a name="l05298"></a><span class="lineno"> 5298</span>&#160;                <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05299"></a><span class="lineno"> 5299</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05300"></a><span class="lineno"> 5300</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05301"></a><span class="lineno"> 5301</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05302"></a><span class="lineno"> 5302</span>&#160;                rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05303"></a><span class="lineno"> 5303</span>&#160;</div>
<div class="line"><a name="l05304"></a><span class="lineno"> 5304</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05305"></a><span class="lineno"> 5305</span>&#160;            }</div>
<div class="line"><a name="l05306"></a><span class="lineno"> 5306</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (outcome!=0)</div>
<div class="line"><a name="l05307"></a><span class="lineno"> 5307</span>&#160;            {</div>
<div class="line"><a name="l05308"></a><span class="lineno"> 5308</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d00a59a0b9f0b8a50a041f2032184b5" title="RakPeer - Sent a connect request to a system we are currently connected to.">ID_ALREADY_CONNECTED</a>);</div>
<div class="line"><a name="l05309"></a><span class="lineno"> 5309</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05310"></a><span class="lineno"> 5310</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>);</div>
<div class="line"><a name="l05311"></a><span class="lineno"> 5311</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05312"></a><span class="lineno"> 5312</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05313"></a><span class="lineno"> 5313</span>&#160;                <span class="comment">// SocketLayer::SendTo( rakNetSocket, (const char*) bsOut.GetData(), bsOut.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05314"></a><span class="lineno"> 5314</span>&#160;                <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05315"></a><span class="lineno"> 5315</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05316"></a><span class="lineno"> 5316</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05317"></a><span class="lineno"> 5317</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05318"></a><span class="lineno"> 5318</span>&#160;                rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05319"></a><span class="lineno"> 5319</span>&#160;</div>
<div class="line"><a name="l05320"></a><span class="lineno"> 5320</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05321"></a><span class="lineno"> 5321</span>&#160;            }</div>
<div class="line"><a name="l05322"></a><span class="lineno"> 5322</span>&#160;</div>
<div class="line"><a name="l05323"></a><span class="lineno"> 5323</span>&#160;            <span class="keywordflow">if</span> (rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a25b2da73418842f2a655199cb434a859">AllowIncomingConnections</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l05324"></a><span class="lineno"> 5324</span>&#160;            {</div>
<div class="line"><a name="l05325"></a><span class="lineno"> 5325</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d040cf221aa9a12604d0293348946c2" title="RakPeer - The system we attempted to connect to is not accepting new connections.">ID_NO_FREE_INCOMING_CONNECTIONS</a>);</div>
<div class="line"><a name="l05326"></a><span class="lineno"> 5326</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05327"></a><span class="lineno"> 5327</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>);</div>
<div class="line"><a name="l05328"></a><span class="lineno"> 5328</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05329"></a><span class="lineno"> 5329</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05330"></a><span class="lineno"> 5330</span>&#160;                <span class="comment">//SocketLayer::SendTo( rakNetSocket, (const char*) bsOut.GetData(), bsOut.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05331"></a><span class="lineno"> 5331</span>&#160;                <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05332"></a><span class="lineno"> 5332</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05333"></a><span class="lineno"> 5333</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05334"></a><span class="lineno"> 5334</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05335"></a><span class="lineno"> 5335</span>&#160;                rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05336"></a><span class="lineno"> 5336</span>&#160;</div>
<div class="line"><a name="l05337"></a><span class="lineno"> 5337</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05338"></a><span class="lineno"> 5338</span>&#160;            }</div>
<div class="line"><a name="l05339"></a><span class="lineno"> 5339</span>&#160;</div>
<div class="line"><a name="l05340"></a><span class="lineno"> 5340</span>&#160;            <span class="keywordtype">bool</span> thisIPConnectedRecently=<span class="keyword">false</span>;</div>
<div class="line"><a name="l05341"></a><span class="lineno"> 5341</span>&#160;            rssFromSA = rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a102510a3e5e43acdd3c2ca9ca7f1af6e" title="Get a free remote system from the list and assign our systemAddress to it.">AssignSystemAddressToRemoteSystemList</a>(systemAddress, <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RakPeer::RemoteSystemStruct::UNVERIFIED_SENDER</a>, rakNetSocket, &amp;thisIPConnectedRecently, bindingAddress, mtu, guid, requiresSecurityOfThisClient);</div>
<div class="line"><a name="l05342"></a><span class="lineno"> 5342</span>&#160;</div>
<div class="line"><a name="l05343"></a><span class="lineno"> 5343</span>&#160;            <span class="keywordflow">if</span> (thisIPConnectedRecently==<span class="keyword">true</span>)</div>
<div class="line"><a name="l05344"></a><span class="lineno"> 5344</span>&#160;            {</div>
<div class="line"><a name="l05345"></a><span class="lineno"> 5345</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a74191a2391c30daa47c0e98f44896fa5" title="RakPeer::SetLimitIPConnectionFrequency()">ID_IP_RECENTLY_CONNECTED</a>);</div>
<div class="line"><a name="l05346"></a><span class="lineno"> 5346</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05347"></a><span class="lineno"> 5347</span>&#160;                bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>);</div>
<div class="line"><a name="l05348"></a><span class="lineno"> 5348</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05349"></a><span class="lineno"> 5349</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05350"></a><span class="lineno"> 5350</span>&#160;                <span class="comment">//SocketLayer::SendTo( rakNetSocket, (const char*) bsOut.GetData(), bsOut.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05351"></a><span class="lineno"> 5351</span>&#160;</div>
<div class="line"><a name="l05352"></a><span class="lineno"> 5352</span>&#160;                <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05353"></a><span class="lineno"> 5353</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05354"></a><span class="lineno"> 5354</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05355"></a><span class="lineno"> 5355</span>&#160;                bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05356"></a><span class="lineno"> 5356</span>&#160;                rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05357"></a><span class="lineno"> 5357</span>&#160;</div>
<div class="line"><a name="l05358"></a><span class="lineno"> 5358</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05359"></a><span class="lineno"> 5359</span>&#160;            }</div>
<div class="line"><a name="l05360"></a><span class="lineno"> 5360</span>&#160;</div>
<div class="line"><a name="l05361"></a><span class="lineno"> 5361</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05362"></a><span class="lineno"> 5362</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (requiresSecurityOfThisClient)</div>
<div class="line"><a name="l05363"></a><span class="lineno"> 5363</span>&#160;            {</div>
<div class="line"><a name="l05364"></a><span class="lineno"> 5364</span>&#160;                <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Writing public key.  Sending ID_OPEN_CONNECTION_REPLY_2\n&quot;</span>);</div>
<div class="line"><a name="l05365"></a><span class="lineno"> 5365</span>&#160;                <span class="keywordflow">if</span> (rakPeer-&gt;_server_handshake-&gt;ProcessChallenge(remoteHandshakeChallenge, rssFromSA-&gt;answer, rssFromSA-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.GetAuthenticatedEncryption() ))</div>
<div class="line"><a name="l05366"></a><span class="lineno"> 5366</span>&#160;                {</div>
<div class="line"><a name="l05367"></a><span class="lineno"> 5367</span>&#160;                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Challenge good!\n&quot;</span>);</div>
<div class="line"><a name="l05368"></a><span class="lineno"> 5368</span>&#160;                    <span class="comment">// Keep going to OK block</span></div>
<div class="line"><a name="l05369"></a><span class="lineno"> 5369</span>&#160;                }</div>
<div class="line"><a name="l05370"></a><span class="lineno"> 5370</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l05371"></a><span class="lineno"> 5371</span>&#160;                {</div>
<div class="line"><a name="l05372"></a><span class="lineno"> 5372</span>&#160;                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Challenge BAD!\n&quot;</span>);</div>
<div class="line"><a name="l05373"></a><span class="lineno"> 5373</span>&#160;</div>
<div class="line"><a name="l05374"></a><span class="lineno"> 5374</span>&#160;                    <span class="comment">// Unassign this remote system</span></div>
<div class="line"><a name="l05375"></a><span class="lineno"> 5375</span>&#160;                    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa6cf24206782e09bfeb84e50b6b07121">DereferenceRemoteSystem</a>(systemAddress);</div>
<div class="line"><a name="l05376"></a><span class="lineno"> 5376</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05377"></a><span class="lineno"> 5377</span>&#160;                }</div>
<div class="line"><a name="l05378"></a><span class="lineno"> 5378</span>&#160;</div>
<div class="line"><a name="l05379"></a><span class="lineno"> 5379</span>&#160;                bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) rssFromSA-&gt;answer,<span class="keyword">sizeof</span>(rssFromSA-&gt;answer));</div>
<div class="line"><a name="l05380"></a><span class="lineno"> 5380</span>&#160;            }</div>
<div class="line"><a name="l05381"></a><span class="lineno"> 5381</span>&#160;<span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05382"></a><span class="lineno"> 5382</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05383"></a><span class="lineno"> 5383</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05384"></a><span class="lineno"> 5384</span>&#160;                rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), systemAddress);</div>
<div class="line"><a name="l05385"></a><span class="lineno"> 5385</span>&#160;            <span class="comment">// SocketLayer::SendTo( rakNetSocket, (const char*) bsAnswer.GetData(), bsAnswer.GetNumberOfBytesUsed(), systemAddress, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05386"></a><span class="lineno"> 5386</span>&#160;            <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05387"></a><span class="lineno"> 5387</span>&#160;            bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05388"></a><span class="lineno"> 5388</span>&#160;            bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bsAnswer.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05389"></a><span class="lineno"> 5389</span>&#160;            bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05390"></a><span class="lineno"> 5390</span>&#160;            rakNetSocket-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05391"></a><span class="lineno"> 5391</span>&#160;        }</div>
<div class="line"><a name="l05392"></a><span class="lineno"> 5392</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l05393"></a><span class="lineno"> 5393</span>&#160;    }</div>
<div class="line"><a name="l05394"></a><span class="lineno"> 5394</span>&#160;</div>
<div class="line"><a name="l05395"></a><span class="lineno"> 5395</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l05396"></a><span class="lineno"> 5396</span>&#160;}</div>
<div class="line"><a name="l05397"></a><span class="lineno"> 5397</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l05398"></a><span class="lineno"><a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a82c565d09a5f2e3e376029cffc434bf4"> 5398</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a82c565d09a5f2e3e376029cffc434bf4">ProcessNetworkPacket</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">int</span> length, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> *rakPeer, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> timeRead, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;updateBitStream )</div>
<div class="line"><a name="l05399"></a><span class="lineno"> 5399</span>&#160;{</div>
<div class="line"><a name="l05400"></a><span class="lineno"> 5400</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a82c565d09a5f2e3e376029cffc434bf4">ProcessNetworkPacket</a>(systemAddress,data,length,rakPeer,rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0],timeRead, updateBitStream);</div>
<div class="line"><a name="l05401"></a><span class="lineno"> 5401</span>&#160;}</div>
<div class="line"><a name="l05402"></a><span class="lineno"><a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad704dd33340fe55a53a715751f6a9d80"> 5402</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a82c565d09a5f2e3e376029cffc434bf4">ProcessNetworkPacket</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">int</span> length, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> *rakPeer, <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a>* rakNetSocket, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> timeRead, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;updateBitStream )</div>
<div class="line"><a name="l05403"></a><span class="lineno"> 5403</span>&#160;{</div>
<div class="line"><a name="l05404"></a><span class="lineno"> 5404</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05405"></a><span class="lineno"> 5405</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#ifdef CAT_AUDIT</span></div>
<div class="line"><a name="l05406"></a><span class="lineno"> 5406</span>&#160;<span class="preprocessor"></span>    printf(<span class="stringliteral">&quot;AUDIT: RECV &quot;</span>);</div>
<div class="line"><a name="l05407"></a><span class="lineno"> 5407</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> ii = 0; ii &lt; length; ++ii)</div>
<div class="line"><a name="l05408"></a><span class="lineno"> 5408</span>&#160;    {</div>
<div class="line"><a name="l05409"></a><span class="lineno"> 5409</span>&#160;        printf(<span class="stringliteral">&quot;%02x&quot;</span>, (cat::u8)data[ii]);</div>
<div class="line"><a name="l05410"></a><span class="lineno"> 5410</span>&#160;    }</div>
<div class="line"><a name="l05411"></a><span class="lineno"> 5411</span>&#160;    printf(<span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l05412"></a><span class="lineno"> 5412</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05413"></a><span class="lineno"> 5413</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif // LIBCAT_SECURITY</span></div>
<div class="line"><a name="l05414"></a><span class="lineno"> 5414</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05415"></a><span class="lineno"> 5415</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47" title="Returns the port in host order (this is what you normally use)">GetPort</a>());</div>
<div class="line"><a name="l05416"></a><span class="lineno"> 5416</span>&#160;    <span class="keywordtype">bool</span> isOfflineMessage;</div>
<div class="line"><a name="l05417"></a><span class="lineno"> 5417</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a8de15f71e181aa43027664a5b0980eb5">ProcessOfflineNetworkPacket</a>(systemAddress, data, length, rakPeer, rakNetSocket, &amp;isOfflineMessage, timeRead))</div>
<div class="line"><a name="l05418"></a><span class="lineno"> 5418</span>&#160;    {</div>
<div class="line"><a name="l05419"></a><span class="lineno"> 5419</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l05420"></a><span class="lineno"> 5420</span>&#160;    }</div>
<div class="line"><a name="l05421"></a><span class="lineno"> 5421</span>&#160;</div>
<div class="line"><a name="l05422"></a><span class="lineno"> 5422</span>&#160;<span class="comment">//  SLNet::Packet *packet;</span></div>
<div class="line"><a name="l05423"></a><span class="lineno"> 5423</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *remoteSystem;</div>
<div class="line"><a name="l05424"></a><span class="lineno"> 5424</span>&#160;</div>
<div class="line"><a name="l05425"></a><span class="lineno"> 5425</span>&#160;    <span class="comment">// See if this datagram came from a connected system</span></div>
<div class="line"><a name="l05426"></a><span class="lineno"> 5426</span>&#160;    remoteSystem = rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa776b1e542f5013f641bab7be5976531">GetRemoteSystemFromSystemAddress</a>( systemAddress, <span class="keyword">true</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l05427"></a><span class="lineno"> 5427</span>&#160;    <span class="keywordflow">if</span> ( remoteSystem )</div>
<div class="line"><a name="l05428"></a><span class="lineno"> 5428</span>&#160;    {</div>
<div class="line"><a name="l05429"></a><span class="lineno"> 5429</span>&#160;        <span class="comment">// Handle regular incoming data</span></div>
<div class="line"><a name="l05430"></a><span class="lineno"> 5430</span>&#160;        <span class="comment">// HandleSocketReceiveFromConnectedPlayer is only safe to be called from the same thread as Update, which is this thread</span></div>
<div class="line"><a name="l05431"></a><span class="lineno"> 5431</span>&#160;        <span class="keywordflow">if</span> ( isOfflineMessage==<span class="keyword">false</span>)</div>
<div class="line"><a name="l05432"></a><span class="lineno"> 5432</span>&#160;        {</div>
<div class="line"><a name="l05433"></a><span class="lineno"> 5433</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a1eae2ad1b87cabfb7e7367f0e40f1a30">HandleSocketReceiveFromConnectedPlayer</a>(</div>
<div class="line"><a name="l05434"></a><span class="lineno"> 5434</span>&#160;                data, length, systemAddress, rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>,</div>
<div class="line"><a name="l05435"></a><span class="lineno"> 5435</span>&#160;                rakNetSocket, &amp;<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">rnr</a>, timeRead, updateBitStream);</div>
<div class="line"><a name="l05436"></a><span class="lineno"> 5436</span>&#160;        }</div>
<div class="line"><a name="l05437"></a><span class="lineno"> 5437</span>&#160;    }</div>
<div class="line"><a name="l05438"></a><span class="lineno"> 5438</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l05439"></a><span class="lineno"> 5439</span>&#160;    {</div>
<div class="line"><a name="l05440"></a><span class="lineno"> 5440</span>&#160;        <span class="comment">// int a=5;</span></div>
<div class="line"><a name="l05441"></a><span class="lineno"> 5441</span>&#160;        <span class="comment">// printf(&quot;--- Packet from unknown system %s\n&quot;, systemAddress.ToString());</span></div>
<div class="line"><a name="l05442"></a><span class="lineno"> 5442</span>&#160;    }</div>
<div class="line"><a name="l05443"></a><span class="lineno"> 5443</span>&#160;}</div>
<div class="line"><a name="l05444"></a><span class="lineno"> 5444</span>&#160;</div>
<div class="line"><a name="l05445"></a><span class="lineno"> 5445</span>&#160;}</div>
<div class="line"><a name="l05446"></a><span class="lineno"> 5446</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l05447"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac13b866867f00a6f680568e27d1b53a3"> 5447</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac13b866867f00a6f680568e27d1b53a3">RakPeer::GenerateSeedFromGuid</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l05448"></a><span class="lineno"> 5448</span>&#160;{</div>
<div class="line"><a name="l05449"></a><span class="lineno"> 5449</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l05450"></a><span class="lineno"> 5450</span>&#160;<span class="comment">    // Construct a random seed based on the initial guid value, and the last digits of the difference to each subsequent number</span></div>
<div class="line"><a name="l05451"></a><span class="lineno"> 5451</span>&#160;<span class="comment">    // This assumes that only the last 3 bits of each guidId integer has a meaningful amount of randomness between it and the prior number</span></div>
<div class="line"><a name="l05452"></a><span class="lineno"> 5452</span>&#160;<span class="comment">    unsigned int t = guid.g[0];</span></div>
<div class="line"><a name="l05453"></a><span class="lineno"> 5453</span>&#160;<span class="comment">    unsigned int i;</span></div>
<div class="line"><a name="l05454"></a><span class="lineno"> 5454</span>&#160;<span class="comment">    for (i=1; i &lt; sizeof(guid.g) / sizeof(guid.g[0]); i++)</span></div>
<div class="line"><a name="l05455"></a><span class="lineno"> 5455</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l05456"></a><span class="lineno"> 5456</span>&#160;<span class="comment">        unsigned int diff = guid.g[i]-guid.g[i-1];</span></div>
<div class="line"><a name="l05457"></a><span class="lineno"> 5457</span>&#160;<span class="comment">        unsigned int diff3Bits = diff &amp; 0x0007;</span></div>
<div class="line"><a name="l05458"></a><span class="lineno"> 5458</span>&#160;<span class="comment">        diff3Bits &lt;&lt;= 29;</span></div>
<div class="line"><a name="l05459"></a><span class="lineno"> 5459</span>&#160;<span class="comment">        diff3Bits &gt;&gt;= (i-1)*3;</span></div>
<div class="line"><a name="l05460"></a><span class="lineno"> 5460</span>&#160;<span class="comment">        t ^= diff3Bits;</span></div>
<div class="line"><a name="l05461"></a><span class="lineno"> 5461</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l05462"></a><span class="lineno"> 5462</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l05463"></a><span class="lineno"> 5463</span>&#160;<span class="comment">    return t;</span></div>
<div class="line"><a name="l05464"></a><span class="lineno"> 5464</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l05465"></a><span class="lineno"> 5465</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) ((<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a> &gt;&gt; 32) ^ <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a676eb9b89ca31ee19e6e1f53819f190b">myGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>);</div>
<div class="line"><a name="l05466"></a><span class="lineno"> 5466</span>&#160;}</div>
<div class="line"><a name="l05467"></a><span class="lineno"> 5467</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l05468"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b"> 5468</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2aa966368b10cf84d4ece1313462429b">RakPeer::DerefAllSockets</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l05469"></a><span class="lineno"> 5469</span>&#160;{</div>
<div class="line"><a name="l05470"></a><span class="lineno"> 5470</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l05471"></a><span class="lineno"> 5471</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05472"></a><span class="lineno"> 5472</span>&#160;    {</div>
<div class="line"><a name="l05473"></a><span class="lineno"> 5473</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i], <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05474"></a><span class="lineno"> 5474</span>&#160;    }</div>
<div class="line"><a name="l05475"></a><span class="lineno"> 5475</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05476"></a><span class="lineno"> 5476</span>&#160;}</div>
<div class="line"><a name="l05477"></a><span class="lineno"> 5477</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l05478"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae666a545bcac66fc454c2368b7696b64"> 5478</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae666a545bcac66fc454c2368b7696b64">RakPeer::GetRakNetSocketFromUserConnectionSocketIndex</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> userIndex)<span class="keyword"> const</span></div>
<div class="line"><a name="l05479"></a><span class="lineno"> 5479</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l05480"></a><span class="lineno"> 5480</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l05481"></a><span class="lineno"> 5481</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05482"></a><span class="lineno"> 5482</span>&#160;    {</div>
<div class="line"><a name="l05483"></a><span class="lineno"> 5483</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[i]-&gt;GetUserConnectionSocketIndex()==userIndex)</div>
<div class="line"><a name="l05484"></a><span class="lineno"> 5484</span>&#160;            <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l05485"></a><span class="lineno"> 5485</span>&#160;    }</div>
<div class="line"><a name="l05486"></a><span class="lineno"> 5486</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<span class="stringliteral">&quot;GetRakNetSocketFromUserConnectionSocketIndex failed&quot;</span> &amp;&amp; 0);</div>
<div class="line"><a name="l05487"></a><span class="lineno"> 5487</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) -1;</div>
<div class="line"><a name="l05488"></a><span class="lineno"> 5488</span>&#160;}</div>
<div class="line"><a name="l05489"></a><span class="lineno"> 5489</span>&#160;</div>
<div class="line"><a name="l05490"></a><span class="lineno"> 5490</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l05491"></a><span class="lineno"> 5491</span>&#160;<span class="comment">// DS_APR</span></div>
<div class="line"><a name="l05492"></a><span class="lineno"> 5492</span>&#160;<span class="comment">void RakPeer::ProcessChromePacket(RakNetSocket2 *s, const char *buffer, int dataSize, const SystemAddress&amp; recvFromAddress, SLNet::TimeUS timeRead)</span></div>
<div class="line"><a name="l05493"></a><span class="lineno"> 5493</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l05494"></a><span class="lineno"> 5494</span>&#160;<span class="comment">    RakAssert(buffer);</span></div>
<div class="line"><a name="l05495"></a><span class="lineno"> 5495</span>&#160;<span class="comment">    RakAssert(dataSize &gt; 0);</span></div>
<div class="line"><a name="l05496"></a><span class="lineno"> 5496</span>&#160;<span class="comment">    RakAssert(recvFromAddress.GetPort());</span></div>
<div class="line"><a name="l05497"></a><span class="lineno"> 5497</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l05498"></a><span class="lineno"> 5498</span>&#160;<span class="comment">    RNS2RecvStruct *recvFromStruct;</span></div>
<div class="line"><a name="l05499"></a><span class="lineno"> 5499</span>&#160;<span class="comment">    recvFromStruct=bufferedPackets.Allocate( _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05500"></a><span class="lineno"> 5500</span>&#160;<span class="comment">    RakAssert(dataSize &lt;= (int)sizeof(recvFromStruct-&gt;data));</span></div>
<div class="line"><a name="l05501"></a><span class="lineno"> 5501</span>&#160;<span class="comment">    memcpy(recvFromStruct-&gt;data, buffer, dataSize);</span></div>
<div class="line"><a name="l05502"></a><span class="lineno"> 5502</span>&#160;<span class="comment">    recvFromStruct-&gt;bytesRead=dataSize;</span></div>
<div class="line"><a name="l05503"></a><span class="lineno"> 5503</span>&#160;<span class="comment">    recvFromStruct-&gt;systemAddress=recvFromAddress;</span></div>
<div class="line"><a name="l05504"></a><span class="lineno"> 5504</span>&#160;<span class="comment">    recvFromStruct-&gt;timeRead=timeRead;</span></div>
<div class="line"><a name="l05505"></a><span class="lineno"> 5505</span>&#160;<span class="comment">    bufferedPackets.Push(recvFromStruct);</span></div>
<div class="line"><a name="l05506"></a><span class="lineno"> 5506</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l05507"></a><span class="lineno"> 5507</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l05508"></a><span class="lineno"> 5508</span>&#160;</div>
<div class="line"><a name="l05509"></a><span class="lineno"> 5509</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l05510"></a><span class="lineno"> 5510</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l05511"></a><span class="lineno"> 5511</span>&#160;<span class="comment">bool RakPeer::RunRecvFromOnce( RakNetSocket *s )</span></div>
<div class="line"><a name="l05512"></a><span class="lineno"> 5512</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l05513"></a><span class="lineno"> 5513</span>&#160;<span class="comment">    RakPeer::RecvFromStruct *recvFromStruct;</span></div>
<div class="line"><a name="l05514"></a><span class="lineno"> 5514</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l05515"></a><span class="lineno"> 5515</span>&#160;<span class="comment">    recvFromStruct=bufferedPackets.Allocate( _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l05516"></a><span class="lineno"> 5516</span>&#160;<span class="comment">    if (recvFromStruct != NULL)</span></div>
<div class="line"><a name="l05517"></a><span class="lineno"> 5517</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l05518"></a><span class="lineno"> 5518</span>&#160;<span class="comment">        recvFromStruct-&gt;s=s;</span></div>
<div class="line"><a name="l05519"></a><span class="lineno"> 5519</span>&#160;<span class="comment">        SocketLayer::RecvFromBlocking(s, this, recvFromStruct-&gt;data, &amp;recvFromStruct-&gt;bytesRead, &amp;recvFromStruct-&gt;systemAddress, &amp;recvFromStruct-&gt;timeRead);</span></div>
<div class="line"><a name="l05520"></a><span class="lineno"> 5520</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l05521"></a><span class="lineno"> 5521</span>&#160;<span class="comment">        if (recvFromStruct-&gt;bytesRead&gt;0)</span></div>
<div class="line"><a name="l05522"></a><span class="lineno"> 5522</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l05523"></a><span class="lineno"> 5523</span>&#160;<span class="comment">            RakAssert(recvFromStruct-&gt;systemAddress.GetPort());</span></div>
<div class="line"><a name="l05524"></a><span class="lineno"> 5524</span>&#160;<span class="comment">            bufferedPackets.Push(recvFromStruct);</span></div>
<div class="line"><a name="l05525"></a><span class="lineno"> 5525</span>&#160;<span class="comment">            quitAndDataEvents.SetEvent();</span></div>
<div class="line"><a name="l05526"></a><span class="lineno"> 5526</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l05527"></a><span class="lineno"> 5527</span>&#160;<span class="comment">            // Got data</span></div>
<div class="line"><a name="l05528"></a><span class="lineno"> 5528</span>&#160;<span class="comment">            return true;</span></div>
<div class="line"><a name="l05529"></a><span class="lineno"> 5529</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l05530"></a><span class="lineno"> 5530</span>&#160;<span class="comment">        else</span></div>
<div class="line"><a name="l05531"></a><span class="lineno"> 5531</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l05532"></a><span class="lineno"> 5532</span>&#160;<span class="comment">            bufferedPackets.Deallocate(recvFromStruct, _FILE_AND_LINE_);</span></div>
<div class="line"><a name="l05533"></a><span class="lineno"> 5533</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l05534"></a><span class="lineno"> 5534</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l05535"></a><span class="lineno"> 5535</span>&#160;<span class="comment">    // No data</span></div>
<div class="line"><a name="l05536"></a><span class="lineno"> 5536</span>&#160;<span class="comment">    return false;</span></div>
<div class="line"><a name="l05537"></a><span class="lineno"> 5537</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l05538"></a><span class="lineno"> 5538</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l05539"></a><span class="lineno"> 5539</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l05540"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a601d36de413c7b94fb689e205921df9e"> 5540</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a601d36de413c7b94fb689e205921df9e">RakPeer::RunUpdateCycle</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> &amp;updateBitStream )</div>
<div class="line"><a name="l05541"></a><span class="lineno"> 5541</span>&#160;{</div>
<div class="line"><a name="l05542"></a><span class="lineno"> 5542</span>&#160;    <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> * remoteSystem;</div>
<div class="line"><a name="l05543"></a><span class="lineno"> 5543</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> activeSystemListIndex;</div>
<div class="line"><a name="l05544"></a><span class="lineno"> 5544</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet;</div>
<div class="line"><a name="l05545"></a><span class="lineno"> 5545</span>&#160;    <span class="comment">// int currentSentBytes,currentReceivedBytes;</span></div>
<div class="line"><a name="l05546"></a><span class="lineno"> 5546</span>&#160;<span class="comment">//  unsigned numberOfBytesUsed;</span></div>
<div class="line"><a name="l05547"></a><span class="lineno"> 5547</span>&#160;<span class="comment">//  BitSize_t numberOfBitsUsed;</span></div>
<div class="line"><a name="l05548"></a><span class="lineno"> 5548</span>&#160;    <span class="comment">//SystemAddress authoritativeClientSystemAddress;</span></div>
<div class="line"><a name="l05549"></a><span class="lineno"> 5549</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitSize;</div>
<div class="line"><a name="l05550"></a><span class="lineno"> 5550</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> byteSize;</div>
<div class="line"><a name="l05551"></a><span class="lineno"> 5551</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *data;</div>
<div class="line"><a name="l05552"></a><span class="lineno"> 5552</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress;</div>
<div class="line"><a name="l05553"></a><span class="lineno"> 5553</span>&#160;    <a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml">BufferedCommandStruct</a> *bcs;</div>
<div class="line"><a name="l05554"></a><span class="lineno"> 5554</span>&#160;    <span class="keywordtype">bool</span> callerDataAllocationUsed;</div>
<div class="line"><a name="l05555"></a><span class="lineno"> 5555</span>&#160;    <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> *rnss;</div>
<div class="line"><a name="l05556"></a><span class="lineno"> 5556</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> timeNS=0;</div>
<div class="line"><a name="l05557"></a><span class="lineno"> 5557</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> timeMS=0;</div>
<div class="line"><a name="l05558"></a><span class="lineno"> 5558</span>&#160;</div>
<div class="line"><a name="l05559"></a><span class="lineno"> 5559</span>&#160;    <span class="comment">// This is here so RecvFromBlocking actually gets data from the same thread</span></div>
<div class="line"><a name="l05560"></a><span class="lineno"> 5560</span>&#160;</div>
<div class="line"><a name="l05561"></a><span class="lineno"> 5561</span>&#160;<span class="preprocessor">    #if   defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l05562"></a><span class="lineno"> 5562</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #elif defined(_WIN32)</span></div>
<div class="line"><a name="l05563"></a><span class="lineno"> 5563</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0]-&gt;GetSocketType()==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7f7d67284e896de8dedea795f82b072fa1d338e1385f1c47bbc57dd815f7fff9a">RNS2T_WINDOWS</a> &amp;&amp; ((RNS2_Windows*)<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0])-&gt;GetSocketLayerOverride())</div>
<div class="line"><a name="l05564"></a><span class="lineno"> 5564</span>&#160;        {</div>
<div class="line"><a name="l05565"></a><span class="lineno"> 5565</span>&#160;            <span class="keywordtype">int</span> len;</div>
<div class="line"><a name="l05566"></a><span class="lineno"> 5566</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> sender;</div>
<div class="line"><a name="l05567"></a><span class="lineno"> 5567</span>&#160;            <span class="keywordtype">char</span> dataOut[ <a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a> ];</div>
<div class="line"><a name="l05568"></a><span class="lineno"> 5568</span>&#160;            <span class="keywordflow">do</span> {</div>
<div class="line"><a name="l05569"></a><span class="lineno"> 5569</span>&#160;                len = ((RNS2_Windows*)<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0])-&gt;GetSocketLayerOverride()-&gt;RakNetRecvFrom(dataOut,&amp;sender,<span class="keyword">true</span>);</div>
<div class="line"><a name="l05570"></a><span class="lineno"> 5570</span>&#160;                <span class="keywordflow">if</span> (len&gt;0)</div>
<div class="line"><a name="l05571"></a><span class="lineno"> 5571</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af17f4afef06bf2479d27eb6c3fb9e994">ProcessNetworkPacket</a>( sender, dataOut, len, <span class="keyword">this</span>, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[0], <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), updateBitStream );</div>
<div class="line"><a name="l05572"></a><span class="lineno"> 5572</span>&#160;            } <span class="keywordflow">while</span> (len&gt;0);</div>
<div class="line"><a name="l05573"></a><span class="lineno"> 5573</span>&#160;        }</div>
<div class="line"><a name="l05574"></a><span class="lineno"> 5574</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l05575"></a><span class="lineno"> 5575</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05576"></a><span class="lineno"> 5576</span>&#160;<span class="comment">//  unsigned int socketListIndex;</span></div>
<div class="line"><a name="l05577"></a><span class="lineno"> 5577</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *recvFromStruct;</div>
<div class="line"><a name="l05578"></a><span class="lineno"> 5578</span>&#160;    <span class="keywordflow">while</span> ((recvFromStruct=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a5ba127831e551667e78a3a997bb675c5">PopBufferedPacket</a>())!=0)</div>
<div class="line"><a name="l05579"></a><span class="lineno"> 5579</span>&#160;    {</div>
<div class="line"><a name="l05580"></a><span class="lineno"> 5580</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l05581"></a><span class="lineno"> 5581</span>&#160;<span class="comment">        for (socketListIndex=0; socketListIndex &lt; socketList.Size(); socketListIndex++)</span></div>
<div class="line"><a name="l05582"></a><span class="lineno"> 5582</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l05583"></a><span class="lineno"> 5583</span>&#160;<span class="comment">            if ((RakNetSocket*) socketList[socketListIndex]==recvFromStruct-&gt;s)</span></div>
<div class="line"><a name="l05584"></a><span class="lineno"> 5584</span>&#160;<span class="comment">                break;</span></div>
<div class="line"><a name="l05585"></a><span class="lineno"> 5585</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l05586"></a><span class="lineno"> 5586</span>&#160;<span class="comment">        if (socketListIndex!=socketList.Size())</span></div>
<div class="line"><a name="l05587"></a><span class="lineno"> 5587</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l05588"></a><span class="lineno"> 5588</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af17f4afef06bf2479d27eb6c3fb9e994">ProcessNetworkPacket</a>(recvFromStruct-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a0dbd87aef0ad8a228e17ce82d5ea57b6">systemAddress</a>, recvFromStruct-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acbf1ce399511b9ee17cadcce0456e7e0">data</a>, recvFromStruct-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a198885d66bfad6fcef6fdd0bee7d1424">bytesRead</a>, <span class="keyword">this</span>, recvFromStruct-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a1a90bd1a4876ce9bdefe25169344a172">socket</a>, recvFromStruct-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7d38cf68a9e376b210bd02c79208ffc6">timeRead</a>, updateBitStream);</div>
<div class="line"><a name="l05589"></a><span class="lineno"> 5589</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#af8274d9273cee687274854660b37a3be">DeallocRNS2RecvStruct</a>(recvFromStruct, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05590"></a><span class="lineno"> 5590</span>&#160;    }</div>
<div class="line"><a name="l05591"></a><span class="lineno"> 5591</span>&#160;</div>
<div class="line"><a name="l05592"></a><span class="lineno"> 5592</span>&#160;    <span class="keywordflow">while</span> ((bcs=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aad86452e470ac42bbfe656aed0b192a2">PopInaccurate</a>())!=0)</div>
<div class="line"><a name="l05593"></a><span class="lineno"> 5593</span>&#160;    {</div>
<div class="line"><a name="l05594"></a><span class="lineno"> 5594</span>&#160;        <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>==<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852eac93dd4e021b9f56191ecbcaf7b94c591">BufferedCommandStruct::BCS_SEND</a>)</div>
<div class="line"><a name="l05595"></a><span class="lineno"> 5595</span>&#160;        {</div>
<div class="line"><a name="l05596"></a><span class="lineno"> 5596</span>&#160;            <span class="comment">// GetTime is a very slow call so do it once and as late as possible</span></div>
<div class="line"><a name="l05597"></a><span class="lineno"> 5597</span>&#160;            <span class="keywordflow">if</span> (timeNS==0)</div>
<div class="line"><a name="l05598"></a><span class="lineno"> 5598</span>&#160;            {</div>
<div class="line"><a name="l05599"></a><span class="lineno"> 5599</span>&#160;                timeNS = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>();</div>
<div class="line"><a name="l05600"></a><span class="lineno"> 5600</span>&#160;                timeMS = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>)(timeNS/(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a>)1000);</div>
<div class="line"><a name="l05601"></a><span class="lineno"> 5601</span>&#160;            }</div>
<div class="line"><a name="l05602"></a><span class="lineno"> 5602</span>&#160;</div>
<div class="line"><a name="l05603"></a><span class="lineno"> 5603</span>&#160;            callerDataAllocationUsed=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>((<span class="keywordtype">char</span>*)bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a4d3c89e3ffdf2d0e1a41465f578b8b6a">numberOfBitsToSend</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a3106756bf73ed3923a1662265933e3bb">priority</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0507fba98e8fdac29bc45213948b1a9f">reliability</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a27ee0f572a3dac31652e24e0e3085b12">orderingChannel</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a4b6cb86fd055cb9b596b47bc21f2329a">broadcast</a>, <span class="keyword">true</span>, timeNS, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a018b0d4fa80c4d90f09e6d4e31886fe5">receipt</a>);</div>
<div class="line"><a name="l05604"></a><span class="lineno"> 5604</span>&#160;            <span class="keywordflow">if</span> ( callerDataAllocationUsed==<span class="keyword">false</span> )</div>
<div class="line"><a name="l05605"></a><span class="lineno"> 5605</span>&#160;                <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05606"></a><span class="lineno"> 5606</span>&#160;</div>
<div class="line"><a name="l05607"></a><span class="lineno"> 5607</span>&#160;            <span class="comment">// Set the new connection state AFTER we call sendImmediate in case we are setting it to a disconnection state, which does not allow further sends</span></div>
<div class="line"><a name="l05608"></a><span class="lineno"> 5608</span>&#160;            <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#ac2713256cf8b9e89ac17865ac86b8242">connectionMode</a>!=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04add7d915412fa7735321ece871eb30380">RemoteSystemStruct::NO_ACTION</a> )</div>
<div class="line"><a name="l05609"></a><span class="lineno"> 5609</span>&#160;            {</div>
<div class="line"><a name="l05610"></a><span class="lineno"> 5610</span>&#160;                remoteSystem=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>( bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>, <span class="keyword">true</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l05611"></a><span class="lineno"> 5611</span>&#160;                <span class="keywordflow">if</span> (remoteSystem)</div>
<div class="line"><a name="l05612"></a><span class="lineno"> 5612</span>&#160;                    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#ac2713256cf8b9e89ac17865ac86b8242">connectionMode</a>;</div>
<div class="line"><a name="l05613"></a><span class="lineno"> 5613</span>&#160;            }</div>
<div class="line"><a name="l05614"></a><span class="lineno"> 5614</span>&#160;        }</div>
<div class="line"><a name="l05615"></a><span class="lineno"> 5615</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>==<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852eae900fb365ae37ee2984c6f5d53eb0f9f">BufferedCommandStruct::BCS_CLOSE_CONNECTION</a>)</div>
<div class="line"><a name="l05616"></a><span class="lineno"> 5616</span>&#160;        {</div>
<div class="line"><a name="l05617"></a><span class="lineno"> 5617</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac2555dbfa33331201626527858f7a8f9">CloseConnectionInternal</a>(bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>, <span class="keyword">false</span>, <span class="keyword">true</span>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a27ee0f572a3dac31652e24e0e3085b12">orderingChannel</a>, bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a3106756bf73ed3923a1662265933e3bb">priority</a>);</div>
<div class="line"><a name="l05618"></a><span class="lineno"> 5618</span>&#160;        }</div>
<div class="line"><a name="l05619"></a><span class="lineno"> 5619</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>==<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852ead4295f17e0b333221079add6bfea828d">BufferedCommandStruct::BCS_CHANGE_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l05620"></a><span class="lineno"> 5620</span>&#160;        {</div>
<div class="line"><a name="l05621"></a><span class="lineno"> 5621</span>&#160;            <span class="comment">// Reroute</span></div>
<div class="line"><a name="l05622"></a><span class="lineno"> 5622</span>&#160;            <a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml">RakPeer::RemoteSystemStruct</a> *rssFromGuid = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>(bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>,<span class="keyword">true</span>,<span class="keyword">true</span>);</div>
<div class="line"><a name="l05623"></a><span class="lineno"> 5623</span>&#160;            <span class="keywordflow">if</span> (rssFromGuid!=0)</div>
<div class="line"><a name="l05624"></a><span class="lineno"> 5624</span>&#160;            {</div>
<div class="line"><a name="l05625"></a><span class="lineno"> 5625</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> existingSystemIndex = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3680092c528de9ba50b1a57a2134fd95">GetRemoteSystemIndex</a>(rssFromGuid-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>);</div>
<div class="line"><a name="l05626"></a><span class="lineno"> 5626</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa7a78cc11c83e82a231bf39c1f0dd420">ReferenceRemoteSystem</a>(bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>, existingSystemIndex);</div>
<div class="line"><a name="l05627"></a><span class="lineno"> 5627</span>&#160;            }</div>
<div class="line"><a name="l05628"></a><span class="lineno"> 5628</span>&#160;        }</div>
<div class="line"><a name="l05629"></a><span class="lineno"> 5629</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a5c867dcbd928f75e72ddada7a39715fc">command</a>==<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a102b47758aa2eece91a657036067852ead3e133a9de49f4e1768f405d37e9b0c1">BufferedCommandStruct::BCS_GET_SOCKET</a>)</div>
<div class="line"><a name="l05630"></a><span class="lineno"> 5630</span>&#160;        {</div>
<div class="line"><a name="l05631"></a><span class="lineno"> 5631</span>&#160;            <a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml">SocketQueryOutput</a> *sqo;</div>
<div class="line"><a name="l05632"></a><span class="lineno"> 5632</span>&#160;            <span class="keywordflow">if</span> (bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a61d231c237e3eaea84445c47b4003ddc">IsUndefined</a>())</div>
<div class="line"><a name="l05633"></a><span class="lineno"> 5633</span>&#160;            {</div>
<div class="line"><a name="l05634"></a><span class="lineno"> 5634</span>&#160;                sqo = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05635"></a><span class="lineno"> 5635</span>&#160;                sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>;</div>
<div class="line"><a name="l05636"></a><span class="lineno"> 5636</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(sqo);</div>
<div class="line"><a name="l05637"></a><span class="lineno"> 5637</span>&#160;            }</div>
<div class="line"><a name="l05638"></a><span class="lineno"> 5638</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l05639"></a><span class="lineno"> 5639</span>&#160;            {</div>
<div class="line"><a name="l05640"></a><span class="lineno"> 5640</span>&#160;                remoteSystem=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a521c87e3d5530deac6f23c4b05e907f0">GetRemoteSystem</a>( bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a124df2ca6248bba9c1127d18b0b6d080">systemIdentifier</a>, <span class="keyword">true</span>, <span class="keyword">true</span> );</div>
<div class="line"><a name="l05641"></a><span class="lineno"> 5641</span>&#160;                sqo = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">Allocate</a>( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05642"></a><span class="lineno"> 5642</span>&#160;</div>
<div class="line"><a name="l05643"></a><span class="lineno"> 5643</span>&#160;                sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a34219a5ce92981102d06fb1da7842a6b" title="Clear the list.">Clear</a>(<span class="keyword">false</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05644"></a><span class="lineno"> 5644</span>&#160;                <span class="keywordflow">if</span> (remoteSystem)</div>
<div class="line"><a name="l05645"></a><span class="lineno"> 5645</span>&#160;                {</div>
<div class="line"><a name="l05646"></a><span class="lineno"> 5646</span>&#160;                    sqo-&gt;<a class="code" href="../../de/d8f/struct_s_l_net_1_1_rak_peer_1_1_socket_query_output.xhtml#ae2cb090cb775aad3579d0073d9f2b1c5">sockets</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a771fc63e3b0d892fbb605a379a78bacb" title="Push an element at the end of the stack.">Push</a>(remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5a5790ea4c270243539880c1f3bfe683">rakNetSocket</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05647"></a><span class="lineno"> 5647</span>&#160;                }</div>
<div class="line"><a name="l05648"></a><span class="lineno"> 5648</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l05649"></a><span class="lineno"> 5649</span>&#160;                {</div>
<div class="line"><a name="l05650"></a><span class="lineno"> 5650</span>&#160;                    <span class="comment">// Leave empty smart pointer</span></div>
<div class="line"><a name="l05651"></a><span class="lineno"> 5651</span>&#160;                }</div>
<div class="line"><a name="l05652"></a><span class="lineno"> 5652</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a2d2dca20a6429d6ed77a3d9712f82d86">socketQueryOutput</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">Push</a>(sqo);</div>
<div class="line"><a name="l05653"></a><span class="lineno"> 5653</span>&#160;            }</div>
<div class="line"><a name="l05654"></a><span class="lineno"> 5654</span>&#160;</div>
<div class="line"><a name="l05655"></a><span class="lineno"> 5655</span>&#160;        }</div>
<div class="line"><a name="l05656"></a><span class="lineno"> 5656</span>&#160;</div>
<div class="line"><a name="l05657"></a><span class="lineno"> 5657</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l05658"></a><span class="lineno"> 5658</span>&#160;<span class="preprocessor"></span>        bcs-&gt;<a class="code" href="../../d3/da7/struct_s_l_net_1_1_rak_peer_1_1_buffered_command_struct.xhtml#a0c3d9d91c7616ab74697e8076ccaf978">data</a>=0;</div>
<div class="line"><a name="l05659"></a><span class="lineno"> 5659</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05660"></a><span class="lineno"> 5660</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05661"></a><span class="lineno"> 5661</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aee9e74b6ddcdc0c0bb3f69f529b47370">bufferedCommands</a>.<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">Deallocate</a>(bcs, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05662"></a><span class="lineno"> 5662</span>&#160;    }</div>
<div class="line"><a name="l05663"></a><span class="lineno"> 5663</span>&#160;</div>
<div class="line"><a name="l05664"></a><span class="lineno"> 5664</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l05665"></a><span class="lineno"> 5665</span>&#160;    {</div>
<div class="line"><a name="l05666"></a><span class="lineno"> 5666</span>&#160;        <span class="keywordflow">if</span> (timeNS==0)</div>
<div class="line"><a name="l05667"></a><span class="lineno"> 5667</span>&#160;        {</div>
<div class="line"><a name="l05668"></a><span class="lineno"> 5668</span>&#160;            timeNS = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>();</div>
<div class="line"><a name="l05669"></a><span class="lineno"> 5669</span>&#160;            timeMS = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>)(timeNS/(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a>)1000);</div>
<div class="line"><a name="l05670"></a><span class="lineno"> 5670</span>&#160;        }</div>
<div class="line"><a name="l05671"></a><span class="lineno"> 5671</span>&#160;</div>
<div class="line"><a name="l05672"></a><span class="lineno"> 5672</span>&#160;        <span class="keywordtype">bool</span> condition1, condition2;</div>
<div class="line"><a name="l05673"></a><span class="lineno"> 5673</span>&#160;        <span class="keywordtype">unsigned</span> requestedConnectionQueueIndex=0;</div>
<div class="line"><a name="l05674"></a><span class="lineno"> 5674</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l05675"></a><span class="lineno"> 5675</span>&#160;        <span class="keywordflow">while</span> (requestedConnectionQueueIndex &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l05676"></a><span class="lineno"> 5676</span>&#160;        {</div>
<div class="line"><a name="l05677"></a><span class="lineno"> 5677</span>&#160;            <a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml">RequestedConnectionStruct</a> *rcs;</div>
<div class="line"><a name="l05678"></a><span class="lineno"> 5678</span>&#160;            rcs = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[requestedConnectionQueueIndex];</div>
<div class="line"><a name="l05679"></a><span class="lineno"> 5679</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l05680"></a><span class="lineno"> 5680</span>&#160;            <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a69c920b5c29fd47be2983c7085f7ae97">nextRequestTime</a> &lt; timeMS)</div>
<div class="line"><a name="l05681"></a><span class="lineno"> 5681</span>&#160;            {</div>
<div class="line"><a name="l05682"></a><span class="lineno"> 5682</span>&#160;                condition1=rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a>==rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>+1;</div>
<div class="line"><a name="l05683"></a><span class="lineno"> 5683</span>&#160;                condition2=(bool)((rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)==1);</div>
<div class="line"><a name="l05684"></a><span class="lineno"> 5684</span>&#160;                <span class="comment">// If too many requests made or a hole then remove this if possible, otherwise invalidate it</span></div>
<div class="line"><a name="l05685"></a><span class="lineno"> 5685</span>&#160;                <span class="keywordflow">if</span> (condition1 || condition2)</div>
<div class="line"><a name="l05686"></a><span class="lineno"> 5686</span>&#160;                {</div>
<div class="line"><a name="l05687"></a><span class="lineno"> 5687</span>&#160;                    <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abc09ef34c18e8392435b765918719f88">data</a>)</div>
<div class="line"><a name="l05688"></a><span class="lineno"> 5688</span>&#160;                    {</div>
<div class="line"><a name="l05689"></a><span class="lineno"> 5689</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abc09ef34c18e8392435b765918719f88">data</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05690"></a><span class="lineno"> 5690</span>&#160;                        rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#abc09ef34c18e8392435b765918719f88">data</a>=0;</div>
<div class="line"><a name="l05691"></a><span class="lineno"> 5691</span>&#160;                    }</div>
<div class="line"><a name="l05692"></a><span class="lineno"> 5692</span>&#160;</div>
<div class="line"><a name="l05693"></a><span class="lineno"> 5693</span>&#160;                    <span class="keywordflow">if</span> (condition1 &amp;&amp; !condition2 &amp;&amp; rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#afeed335c2c0cb0959867454c88005883">actionToTake</a>==<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a88e713318705d54ebdc502ddde977497aacba564b90938bd259399c78aa1af3b1">RequestedConnectionStruct::CONNECT</a>)</div>
<div class="line"><a name="l05694"></a><span class="lineno"> 5694</span>&#160;                    {</div>
<div class="line"><a name="l05695"></a><span class="lineno"> 5695</span>&#160;                        <span class="comment">// Tell user of connection attempt failed</span></div>
<div class="line"><a name="l05696"></a><span class="lineno"> 5696</span>&#160;                        packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05697"></a><span class="lineno"> 5697</span>&#160;                        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a>; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l05698"></a><span class="lineno"> 5698</span>&#160;                        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = ( <span class="keyword">sizeof</span>(  char ) * 8);</div>
<div class="line"><a name="l05699"></a><span class="lineno"> 5699</span>&#160;                        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>;</div>
<div class="line"><a name="l05700"></a><span class="lineno"> 5700</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l05701"></a><span class="lineno"> 5701</span>&#160;                    }</div>
<div class="line"><a name="l05702"></a><span class="lineno"> 5702</span>&#160;</div>
<div class="line"><a name="l05703"></a><span class="lineno"> 5703</span>&#160;<span class="preprocessor">#if LIBCAT_SECURITY==1</span></div>
<div class="line"><a name="l05704"></a><span class="lineno"> 5704</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a1b35ec96d42ac37e001c4dd0c96b78d4">CAT_AUDIT_PRINTF</a>(<span class="stringliteral">&quot;AUDIT: Connection attempt FAILED so deleting rcs-&gt;client_handshake object %x\n&quot;</span>, rcs-&gt;client_handshake);</div>
<div class="line"><a name="l05705"></a><span class="lineno"> 5705</span>&#160;                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs-&gt;client_handshake,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05706"></a><span class="lineno"> 5706</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05707"></a><span class="lineno"> 5707</span>&#160;<span class="preprocessor"></span>                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(rcs,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05708"></a><span class="lineno"> 5708</span>&#160;</div>
<div class="line"><a name="l05709"></a><span class="lineno"> 5709</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l05710"></a><span class="lineno"> 5710</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k=0; k &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); k++)</div>
<div class="line"><a name="l05711"></a><span class="lineno"> 5711</span>&#160;                    {</div>
<div class="line"><a name="l05712"></a><span class="lineno"> 5712</span>&#160;                        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>[k]==rcs)</div>
<div class="line"><a name="l05713"></a><span class="lineno"> 5713</span>&#160;                        {</div>
<div class="line"><a name="l05714"></a><span class="lineno"> 5714</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac7e96f878d2f2252b357542b75a1a96e">requestedConnectionQueue</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8be7c3107161bb2ad869a9a6bb60605a">RemoveAtIndex</a>(k);</div>
<div class="line"><a name="l05715"></a><span class="lineno"> 5715</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l05716"></a><span class="lineno"> 5716</span>&#160;                        }</div>
<div class="line"><a name="l05717"></a><span class="lineno"> 5717</span>&#160;                    }</div>
<div class="line"><a name="l05718"></a><span class="lineno"> 5718</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l05719"></a><span class="lineno"> 5719</span>&#160;                }</div>
<div class="line"><a name="l05720"></a><span class="lineno"> 5720</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l05721"></a><span class="lineno"> 5721</span>&#160;                {</div>
<div class="line"><a name="l05722"></a><span class="lineno"> 5722</span>&#160;</div>
<div class="line"><a name="l05723"></a><span class="lineno"> 5723</span>&#160;                    <span class="keywordtype">int</span> MTUSizeIndex = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a> / (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>/<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>);</div>
<div class="line"><a name="l05724"></a><span class="lineno"> 5724</span>&#160;                    <span class="keywordflow">if</span> (MTUSizeIndex&gt;=<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>)</div>
<div class="line"><a name="l05725"></a><span class="lineno"> 5725</span>&#160;                        MTUSizeIndex=<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>-1;</div>
<div class="line"><a name="l05726"></a><span class="lineno"> 5726</span>&#160;                    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a>++;</div>
<div class="line"><a name="l05727"></a><span class="lineno"> 5727</span>&#160;                    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a69c920b5c29fd47be2983c7085f7ae97">nextRequestTime</a>=timeMS+rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a3bd6cadad9dc734293ceb8544a83b00c">timeBetweenSendConnectionAttemptsMS</a>;</div>
<div class="line"><a name="l05728"></a><span class="lineno"> 5728</span>&#160;</div>
<div class="line"><a name="l05729"></a><span class="lineno"> 5729</span>&#160;                    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bitStream;</div>
<div class="line"><a name="l05730"></a><span class="lineno"> 5730</span>&#160;                    <span class="comment">//WriteOutOfBandHeader(&amp;bitStream, ID_USER_PACKET_ENUM);</span></div>
<div class="line"><a name="l05731"></a><span class="lineno"> 5731</span>&#160;                    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a6c34a3a076e83d6fd6a30983d44b83c6">ID_OPEN_CONNECTION_REQUEST_1</a>);</div>
<div class="line"><a name="l05732"></a><span class="lineno"> 5732</span>&#160;                    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05733"></a><span class="lineno"> 5733</span>&#160;                    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../df/dfc/version_8h.xhtml#a0a08e1212b00339c467ac917a5e473ef">RAKNET_PROTOCOL_VERSION</a>);</div>
<div class="line"><a name="l05734"></a><span class="lineno"> 5734</span>&#160;                    bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a76ea2ef937a428e9d907a7367fd92b12" title="Write zeros until the bitstream is filled up to bytes.">PadWithZeroToByteLength</a>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a015aab2264db77f793cc6ef1b81da9bb">mtuSizes</a>[MTUSizeIndex]-<a class="code" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml#a8a0fae83e487dc04b3cd774b3d4ee637" title="Sizeof an UDP header in byte.">UDP_HEADER_SIZE</a>);</div>
<div class="line"><a name="l05735"></a><span class="lineno"> 5735</span>&#160;</div>
<div class="line"><a name="l05736"></a><span class="lineno"> 5736</span>&#160;                    <span class="keywordtype">char</span> str[256];</div>
<div class="line"><a name="l05737"></a><span class="lineno"> 5737</span>&#160;                    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">true</span>,str,static_cast&lt;size_t&gt;(256));</div>
<div class="line"><a name="l05738"></a><span class="lineno"> 5738</span>&#160;</div>
<div class="line"><a name="l05739"></a><span class="lineno"> 5739</span>&#160;                    <span class="comment">//RAKNET_DEBUG_PRINTF(&quot;%i:IOCR, &quot;, __LINE__);</span></div>
<div class="line"><a name="l05740"></a><span class="lineno"> 5740</span>&#160;</div>
<div class="line"><a name="l05741"></a><span class="lineno"> 5741</span>&#160;                    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l05742"></a><span class="lineno"> 5742</span>&#160;                    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l05743"></a><span class="lineno"> 5743</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>[i]-&gt;OnDirectSocketSend((<span class="keyword">const</span> <span class="keywordtype">char</span>*) bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>);</div>
<div class="line"><a name="l05744"></a><span class="lineno"> 5744</span>&#160;</div>
<div class="line"><a name="l05745"></a><span class="lineno"> 5745</span>&#160;                    <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml">RakNetSocket2</a> *socketToUse;</div>
<div class="line"><a name="l05746"></a><span class="lineno"> 5746</span>&#160;                    <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a> == 0)</div>
<div class="line"><a name="l05747"></a><span class="lineno"> 5747</span>&#160;                        socketToUse = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6b259e14ae3bf3ebdf93c59ede553d2c">socketList</a>[rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a289662f5011cad7efab244af18fecb60">socketIndex</a>];</div>
<div class="line"><a name="l05748"></a><span class="lineno"> 5748</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l05749"></a><span class="lineno"> 5749</span>&#160;                        socketToUse = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a1495dfc950d0819fddf1aed148e7cb2d">socket</a>;</div>
<div class="line"><a name="l05750"></a><span class="lineno"> 5750</span>&#160;</div>
<div class="line"><a name="l05751"></a><span class="lineno"> 5751</span>&#160;                    rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">FixForIPVersion</a>(socketToUse-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a58ced3513884d5224dfa50c46fe5a64a">GetBoundAddress</a>());</div>
<div class="line"><a name="l05752"></a><span class="lineno"> 5752</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l05753"></a><span class="lineno"> 5753</span>&#160;<span class="preprocessor"></span>                    <span class="keywordflow">if</span> (socketToUse-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#af605c577c5300b0599fcd6396203d685">IsBerkleySocket</a>())</div>
<div class="line"><a name="l05754"></a><span class="lineno"> 5754</span>&#160;                        ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a>*)socketToUse)-&gt;SetDoNotFragment(1);</div>
<div class="line"><a name="l05755"></a><span class="lineno"> 5755</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05756"></a><span class="lineno"> 5756</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05757"></a><span class="lineno"> 5757</span>&#160;<span class="comment">//                  SocketLayer::SetDoNotFragment(socketToUse, 1);</span></div>
<div class="line"><a name="l05758"></a><span class="lineno"> 5758</span>&#160;                    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendToStart= <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>();</div>
<div class="line"><a name="l05759"></a><span class="lineno"> 5759</span>&#160;</div>
<div class="line"><a name="l05760"></a><span class="lineno"> 5760</span>&#160;                    <a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml">RNS2_SendParameters</a> bsp;</div>
<div class="line"><a name="l05761"></a><span class="lineno"> 5761</span>&#160;                    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a223cad191bf08d288c46750e75c5f959">data</a> = (<span class="keywordtype">char</span>*) bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>();</div>
<div class="line"><a name="l05762"></a><span class="lineno"> 5762</span>&#160;                    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a23d46d4d1bf564a8873f477af6a29bd9">length</a> = bitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l05763"></a><span class="lineno"> 5763</span>&#160;                    bsp.<a class="code" href="../../df/dc3/struct_s_l_net_1_1_r_n_s2___send_parameters.xhtml#a7e9bd3e902cda195cdeff08db0ddfd8c">systemAddress</a> = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#ab5c97b9bd57ef8afdf44be5658d56c9f">systemAddress</a>;</div>
<div class="line"><a name="l05764"></a><span class="lineno"> 5764</span>&#160;                    <span class="keywordflow">if</span> (socketToUse-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a2b88e6864d8b42a494475deae58044a6">Send</a>(&amp;bsp, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>) == 10040)</div>
<div class="line"><a name="l05765"></a><span class="lineno"> 5765</span>&#160;                    <span class="comment">// if (SocketLayer::SendTo( socketToUse, (const char*) bitStream.GetData(), bitStream.GetNumberOfBytesUsed(), rcs-&gt;systemAddress, _FILE_AND_LINE_ )==-10040)</span></div>
<div class="line"><a name="l05766"></a><span class="lineno"> 5766</span>&#160;                    {</div>
<div class="line"><a name="l05767"></a><span class="lineno"> 5767</span>&#160;                        <span class="comment">// Don&#39;t use this MTU size again</span></div>
<div class="line"><a name="l05768"></a><span class="lineno"> 5768</span>&#160;                        rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a> = (<span class="keywordtype">unsigned</span> char) ((MTUSizeIndex + 1) * (rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>/<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a>));</div>
<div class="line"><a name="l05769"></a><span class="lineno"> 5769</span>&#160;                        rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a69c920b5c29fd47be2983c7085f7ae97">nextRequestTime</a>=timeMS;</div>
<div class="line"><a name="l05770"></a><span class="lineno"> 5770</span>&#160;                    }</div>
<div class="line"><a name="l05771"></a><span class="lineno"> 5771</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l05772"></a><span class="lineno"> 5772</span>&#160;                    {</div>
<div class="line"><a name="l05773"></a><span class="lineno"> 5773</span>&#160;                        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendToEnd= <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>();</div>
<div class="line"><a name="l05774"></a><span class="lineno"> 5774</span>&#160;                        <span class="keywordflow">if</span> (sendToEnd-sendToStart&gt;100)</div>
<div class="line"><a name="l05775"></a><span class="lineno"> 5775</span>&#160;                        {</div>
<div class="line"><a name="l05776"></a><span class="lineno"> 5776</span>&#160;                            <span class="comment">// Drop to lowest MTU</span></div>
<div class="line"><a name="l05777"></a><span class="lineno"> 5777</span>&#160;                            <span class="keywordtype">int</span> lowestMtuIndex = rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>/<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a> * (<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad5be5ae65417dc46d5db977b8812bf69">NUM_MTU_SIZES</a> - 1);</div>
<div class="line"><a name="l05778"></a><span class="lineno"> 5778</span>&#160;                            <span class="keywordflow">if</span> (lowestMtuIndex &gt; rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a>)</div>
<div class="line"><a name="l05779"></a><span class="lineno"> 5779</span>&#160;                            {</div>
<div class="line"><a name="l05780"></a><span class="lineno"> 5780</span>&#160;                                rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a> = (<span class="keywordtype">unsigned</span> char) lowestMtuIndex;</div>
<div class="line"><a name="l05781"></a><span class="lineno"> 5781</span>&#160;                                rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a69c920b5c29fd47be2983c7085f7ae97">nextRequestTime</a>=timeMS;</div>
<div class="line"><a name="l05782"></a><span class="lineno"> 5782</span>&#160;                            }</div>
<div class="line"><a name="l05783"></a><span class="lineno"> 5783</span>&#160;                            <span class="keywordflow">else</span></div>
<div class="line"><a name="l05784"></a><span class="lineno"> 5784</span>&#160;                                rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a634986f20b72ca702d488f1e52c99cd2">requestsMade</a>=(<span class="keywordtype">unsigned</span> char)(rcs-&gt;<a class="code" href="../../dd/d9f/struct_s_l_net_1_1_rak_peer_1_1_requested_connection_struct.xhtml#a7fbe571c0153e6ab6672f4f83fa6fc86">sendConnectionAttemptCount</a>+1);</div>
<div class="line"><a name="l05785"></a><span class="lineno"> 5785</span>&#160;                        }</div>
<div class="line"><a name="l05786"></a><span class="lineno"> 5786</span>&#160;                    }</div>
<div class="line"><a name="l05787"></a><span class="lineno"> 5787</span>&#160;                    <span class="comment">// SocketLayer::SetDoNotFragment(socketToUse, 0);</span></div>
<div class="line"><a name="l05788"></a><span class="lineno"> 5788</span>&#160;<span class="preprocessor">#if !defined(__native_client__) &amp;&amp; !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l05789"></a><span class="lineno"> 5789</span>&#160;<span class="preprocessor"></span>                    <span class="keywordflow">if</span> (socketToUse-&gt;<a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#af605c577c5300b0599fcd6396203d685">IsBerkleySocket</a>())</div>
<div class="line"><a name="l05790"></a><span class="lineno"> 5790</span>&#160;                        ((<a class="code" href="../../d1/d4f/class_s_l_net_1_1_r_n_s2___berkley.xhtml">RNS2_Berkley</a>*)socketToUse)-&gt;SetDoNotFragment(0);</div>
<div class="line"><a name="l05791"></a><span class="lineno"> 5791</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05792"></a><span class="lineno"> 5792</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05793"></a><span class="lineno"> 5793</span>&#160;                    requestedConnectionQueueIndex++;</div>
<div class="line"><a name="l05794"></a><span class="lineno"> 5794</span>&#160;                }</div>
<div class="line"><a name="l05795"></a><span class="lineno"> 5795</span>&#160;            }</div>
<div class="line"><a name="l05796"></a><span class="lineno"> 5796</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l05797"></a><span class="lineno"> 5797</span>&#160;                requestedConnectionQueueIndex++;</div>
<div class="line"><a name="l05798"></a><span class="lineno"> 5798</span>&#160;</div>
<div class="line"><a name="l05799"></a><span class="lineno"> 5799</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a7858bc7bc53efe7d0957ebe9d775e144">Lock</a>();</div>
<div class="line"><a name="l05800"></a><span class="lineno"> 5800</span>&#160;        }</div>
<div class="line"><a name="l05801"></a><span class="lineno"> 5801</span>&#160;        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4fe71c115f1c02adb6ce05e9ca76e5ea">requestedConnectionQueueMutex</a>.<a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml#a3b5dc22cc92f6e08e4326f65be5c5e82">Unlock</a>();</div>
<div class="line"><a name="l05802"></a><span class="lineno"> 5802</span>&#160;    }</div>
<div class="line"><a name="l05803"></a><span class="lineno"> 5803</span>&#160;</div>
<div class="line"><a name="l05804"></a><span class="lineno"> 5804</span>&#160;    <span class="comment">// remoteSystemList in network thread</span></div>
<div class="line"><a name="l05805"></a><span class="lineno"> 5805</span>&#160;    <span class="keywordflow">for</span> ( activeSystemListIndex = 0; activeSystemListIndex &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a3d64adb5812fb891bb03b9fd9c331f97">activeSystemListSize</a>; ++activeSystemListIndex )</div>
<div class="line"><a name="l05806"></a><span class="lineno"> 5806</span>&#160;    <span class="comment">//for ( remoteSystemIndex = 0; remoteSystemIndex &lt; remoteSystemListSize; ++remoteSystemIndex )</span></div>
<div class="line"><a name="l05807"></a><span class="lineno"> 5807</span>&#160;    {</div>
<div class="line"><a name="l05808"></a><span class="lineno"> 5808</span>&#160;        <span class="comment">// I&#39;m using systemAddress from remoteSystemList but am not locking it because this loop is called very frequently and it doesn&#39;t</span></div>
<div class="line"><a name="l05809"></a><span class="lineno"> 5809</span>&#160;        <span class="comment">// matter if we miss or do an extra update.  The reliability layers themselves never care which player they are associated with</span></div>
<div class="line"><a name="l05810"></a><span class="lineno"> 5810</span>&#160;        <span class="comment">//systemAddress = remoteSystemList[ remoteSystemIndex ].systemAddress;</span></div>
<div class="line"><a name="l05811"></a><span class="lineno"> 5811</span>&#160;        <span class="comment">// Allow the systemAddress for this remote system list to change.  We don&#39;t care if it changes now.</span></div>
<div class="line"><a name="l05812"></a><span class="lineno"> 5812</span>&#160;    <span class="comment">//  remoteSystemList[ remoteSystemIndex ].allowSystemAddressAssigment=true;</span></div>
<div class="line"><a name="l05813"></a><span class="lineno"> 5813</span>&#160;</div>
<div class="line"><a name="l05814"></a><span class="lineno"> 5814</span>&#160;</div>
<div class="line"><a name="l05815"></a><span class="lineno"> 5815</span>&#160;            <span class="comment">// Found an active remote system</span></div>
<div class="line"><a name="l05816"></a><span class="lineno"> 5816</span>&#160;            remoteSystem = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a225c7557ae7df7dcd64bf3da2b405795">activeSystemList</a>[ activeSystemListIndex ];</div>
<div class="line"><a name="l05817"></a><span class="lineno"> 5817</span>&#160;            systemAddress = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a7387adeea6b44abb93e391ff1e599527">systemAddress</a>;</div>
<div class="line"><a name="l05818"></a><span class="lineno"> 5818</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(systemAddress!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>);</div>
<div class="line"><a name="l05819"></a><span class="lineno"> 5819</span>&#160;            <span class="comment">// Update is only safe to call from the same thread that calls HandleSocketReceiveFromConnectedPlayer,</span></div>
<div class="line"><a name="l05820"></a><span class="lineno"> 5820</span>&#160;            <span class="comment">// which is this thread</span></div>
<div class="line"><a name="l05821"></a><span class="lineno"> 5821</span>&#160;</div>
<div class="line"><a name="l05822"></a><span class="lineno"> 5822</span>&#160;            <span class="keywordflow">if</span> (timeNS==0)</div>
<div class="line"><a name="l05823"></a><span class="lineno"> 5823</span>&#160;            {</div>
<div class="line"><a name="l05824"></a><span class="lineno"> 5824</span>&#160;                timeNS = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>();</div>
<div class="line"><a name="l05825"></a><span class="lineno"> 5825</span>&#160;                timeMS = (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a>)(timeNS/(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a>)1000);</div>
<div class="line"><a name="l05826"></a><span class="lineno"> 5826</span>&#160;                <span class="comment">//RAKNET_DEBUG_PRINTF(&quot;timeNS = %I64i timeMS=%i\n&quot;, timeNS, timeMS);</span></div>
<div class="line"><a name="l05827"></a><span class="lineno"> 5827</span>&#160;            }</div>
<div class="line"><a name="l05828"></a><span class="lineno"> 5828</span>&#160;</div>
<div class="line"><a name="l05829"></a><span class="lineno"> 5829</span>&#160;</div>
<div class="line"><a name="l05830"></a><span class="lineno"> 5830</span>&#160;            <span class="keywordflow">if</span> (timeMS &gt; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a2834ea8e57e593e19af4746aaff6a041" title="When to next ping this player.">lastReliableSend</a> &amp;&amp; timeMS-remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a2834ea8e57e593e19af4746aaff6a041" title="When to next ping this player.">lastReliableSend</a> &gt; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ad7ae8c962a75dee167d2ba844bf571e1">GetTimeoutTime</a>()/2 &amp;&amp; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a>)</div>
<div class="line"><a name="l05831"></a><span class="lineno"> 5831</span>&#160;            {</div>
<div class="line"><a name="l05832"></a><span class="lineno"> 5832</span>&#160;                <span class="comment">// If no reliable packets are waiting for an ack, do a one byte reliable send so that disconnections are noticed</span></div>
<div class="line"><a name="l05833"></a><span class="lineno"> 5833</span>&#160;                <a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml" title="Network Statisics Usage.">RakNetStatistics</a> rakNetStatistics;</div>
<div class="line"><a name="l05834"></a><span class="lineno"> 5834</span>&#160;                rnss=remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3c332dc52b07cebd36c18788634e2132">GetStatistics</a>(&amp;rakNetStatistics);</div>
<div class="line"><a name="l05835"></a><span class="lineno"> 5835</span>&#160;                <span class="keywordflow">if</span> (rnss-&gt;<a class="code" href="../../df/df9/struct_s_l_net_1_1_rak_net_statistics.xhtml#a841c90947e8fc8803c394cafe662f6a3">messagesInResendBuffer</a>==0)</div>
<div class="line"><a name="l05836"></a><span class="lineno"> 5836</span>&#160;                {</div>
<div class="line"><a name="l05837"></a><span class="lineno"> 5837</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4">PingInternal</a>( systemAddress, <span class="keyword">true</span>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eabc6ba98e9404532481e43eea39731929" title="The message is sent reliably, but not necessarily in any order. Same overhead as UNRELIABLE.">RELIABLE</a> );</div>
<div class="line"><a name="l05838"></a><span class="lineno"> 5838</span>&#160;</div>
<div class="line"><a name="l05839"></a><span class="lineno"> 5839</span>&#160;                    <span class="comment">//remoteSystem-&gt;lastReliableSend=timeMS+remoteSystem-&gt;reliabilityLayer.GetTimeoutTime();</span></div>
<div class="line"><a name="l05840"></a><span class="lineno"> 5840</span>&#160;                    remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a2834ea8e57e593e19af4746aaff6a041" title="When to next ping this player.">lastReliableSend</a>=timeMS;</div>
<div class="line"><a name="l05841"></a><span class="lineno"> 5841</span>&#160;                }</div>
<div class="line"><a name="l05842"></a><span class="lineno"> 5842</span>&#160;            }</div>
<div class="line"><a name="l05843"></a><span class="lineno"> 5843</span>&#160;</div>
<div class="line"><a name="l05844"></a><span class="lineno"> 5844</span>&#160;            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a787ea286c82a0855ce28f82e7a8a904e">Update</a>( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5a5790ea4c270243539880c1f3bfe683">rakNetSocket</a>, systemAddress, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aee2c0345090a37167d38e4df60541ba3">MTUSize</a>, timeNS, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae60f35f804bc9d7bb3d5472d94b58d89">maxOutgoingBPS</a>, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a229049c7a658a2740ec30d774838d33b">pluginListNTS</a>, &amp;<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#ad813a0f3eb2b1e317d9307dde627778a">rnr</a>, updateBitStream ); <span class="comment">// systemAddress only used for the internet simulator test</span></div>
<div class="line"><a name="l05845"></a><span class="lineno"> 5845</span>&#160;</div>
<div class="line"><a name="l05846"></a><span class="lineno"> 5846</span>&#160;            <span class="comment">// Check for failure conditions</span></div>
<div class="line"><a name="l05847"></a><span class="lineno"> 5847</span>&#160;            <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a3fea229521eaf34263e99efcad9fcb33">IsDeadConnection</a>() ||</div>
<div class="line"><a name="l05848"></a><span class="lineno"> 5848</span>&#160;                ((remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04aea755206e361e47b9640808a977dc0d6">RemoteSystemStruct::DISCONNECT_ASAP</a> || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>) &amp;&amp; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#a365a2fdfb29b707746a826dfe1224615" title="Are we waiting for any data to be sent out or be processed by the player?">IsOutgoingDataWaiting</a>()==<span class="keyword">false</span>) ||</div>
<div class="line"><a name="l05849"></a><span class="lineno"> 5849</span>&#160;                (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a84516385fdb35a2d6cb7602af2d6ccf4">RemoteSystemStruct::DISCONNECT_ON_NO_ACK</a> &amp;&amp; (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#af0042a197372fb3bdd26a9514855dc2e">AreAcksWaiting</a>()==<span class="keyword">false</span> || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ae840a6ab13db97e28e07f498f12c5d89" title="Has a lot of time passed since the last ack.">AckTimeout</a>(timeMS)==<span class="keyword">true</span>)) ||</div>
<div class="line"><a name="l05850"></a><span class="lineno"> 5850</span>&#160;                ((</div>
<div class="line"><a name="l05851"></a><span class="lineno"> 5851</span>&#160;                (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a> ||</div>
<div class="line"><a name="l05852"></a><span class="lineno"> 5852</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a3655df1b4cee55eb3556bce5bc170584">RemoteSystemStruct::HANDLING_CONNECTION_REQUEST</a> ||</div>
<div class="line"><a name="l05853"></a><span class="lineno"> 5853</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RemoteSystemStruct::UNVERIFIED_SENDER</a>)</div>
<div class="line"><a name="l05854"></a><span class="lineno"> 5854</span>&#160;                &amp;&amp; timeMS &gt; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ad646eb8a83b16c21d36ec3e4cd534674" title="When did the last reliable send occur. Reliable sends must occur at least once every timeoutTime/2 un...">connectionTime</a> &amp;&amp; timeMS - remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ad646eb8a83b16c21d36ec3e4cd534674" title="When did the last reliable send occur. Reliable sends must occur at least once every timeoutTime/2 un...">connectionTime</a> &gt; 10000))</div>
<div class="line"><a name="l05855"></a><span class="lineno"> 5855</span>&#160;                )</div>
<div class="line"><a name="l05856"></a><span class="lineno"> 5856</span>&#160;            {</div>
<div class="line"><a name="l05857"></a><span class="lineno"> 5857</span>&#160;            <span class="comment">//  RAKNET_DEBUG_PRINTF(&quot;timeMS=%i remoteSystem-&gt;connectionTime=%i\n&quot;, timeMS, remoteSystem-&gt;connectionTime );</span></div>
<div class="line"><a name="l05858"></a><span class="lineno"> 5858</span>&#160;</div>
<div class="line"><a name="l05859"></a><span class="lineno"> 5859</span>&#160;                <span class="comment">// Failed.  Inform the user?</span></div>
<div class="line"><a name="l05860"></a><span class="lineno"> 5860</span>&#160;                <span class="comment">// TODO - RakNet 4.0 - Return a different message identifier for DISCONNECT_ASAP_SILENTLY and DISCONNECT_ASAP than for DISCONNECT_ON_NO_ACK</span></div>
<div class="line"><a name="l05861"></a><span class="lineno"> 5861</span>&#160;                <span class="comment">// The first two mean we called CloseConnection(), the last means the other system sent us ID_DISCONNECTION_NOTIFICATION</span></div>
<div class="line"><a name="l05862"></a><span class="lineno"> 5862</span>&#160;                <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a> || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a></div>
<div class="line"><a name="l05863"></a><span class="lineno"> 5863</span>&#160;                    || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04aea755206e361e47b9640808a977dc0d6">RemoteSystemStruct::DISCONNECT_ASAP</a> || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a84516385fdb35a2d6cb7602af2d6ccf4">RemoteSystemStruct::DISCONNECT_ON_NO_ACK</a>)</div>
<div class="line"><a name="l05864"></a><span class="lineno"> 5864</span>&#160;                {</div>
<div class="line"><a name="l05865"></a><span class="lineno"> 5865</span>&#160;</div>
<div class="line"><a name="l05866"></a><span class="lineno"> 5866</span>&#160;<span class="comment">//                  SLNet::BitStream undeliveredMessages;</span></div>
<div class="line"><a name="l05867"></a><span class="lineno"> 5867</span>&#160;<span class="comment">//                  remoteSystem-&gt;reliabilityLayer.GetUndeliveredMessages(&amp;undeliveredMessages,remoteSystem-&gt;MTUSize);</span></div>
<div class="line"><a name="l05868"></a><span class="lineno"> 5868</span>&#160;</div>
<div class="line"><a name="l05869"></a><span class="lineno"> 5869</span>&#160;<span class="comment">//                  packet=AllocPacket(sizeof( char ) + undeliveredMessages.GetNumberOfBytesUsed());</span></div>
<div class="line"><a name="l05870"></a><span class="lineno"> 5870</span>&#160;                    packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(<span class="keyword">sizeof</span>( <span class="keywordtype">char</span> ), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l05871"></a><span class="lineno"> 5871</span>&#160;                    <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a>)</div>
<div class="line"><a name="l05872"></a><span class="lineno"> 5872</span>&#160;                        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a>; <span class="comment">// Attempted a connection and couldn&#39;t</span></div>
<div class="line"><a name="l05873"></a><span class="lineno"> 5873</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a>)</div>
<div class="line"><a name="l05874"></a><span class="lineno"> 5874</span>&#160;                        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a28dffd6d158f4003cb58fbe9b483a9a9">ID_CONNECTION_LOST</a>; <span class="comment">// DeadConnection</span></div>
<div class="line"><a name="l05875"></a><span class="lineno"> 5875</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l05876"></a><span class="lineno"> 5876</span>&#160;                        packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[ 0 ] = <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa3c9ab42767af4b738cceb5a5b3600ae">ID_DISCONNECTION_NOTIFICATION</a>; <span class="comment">// DeadConnection</span></div>
<div class="line"><a name="l05877"></a><span class="lineno"> 5877</span>&#160;</div>
<div class="line"><a name="l05878"></a><span class="lineno"> 5878</span>&#160;<span class="comment">//                  memcpy(packet-&gt;data+1, undeliveredMessages.GetData(), undeliveredMessages.GetNumberOfBytesUsed());</span></div>
<div class="line"><a name="l05879"></a><span class="lineno"> 5879</span>&#160;</div>
<div class="line"><a name="l05880"></a><span class="lineno"> 5880</span>&#160;                    packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l05881"></a><span class="lineno"> 5881</span>&#160;                    packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l05882"></a><span class="lineno"> 5882</span>&#160;                    packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a397b41f1f82b716399a756b1e881c5f0">remoteSystemIndex</a>;</div>
<div class="line"><a name="l05883"></a><span class="lineno"> 5883</span>&#160;                    packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l05884"></a><span class="lineno"> 5884</span>&#160;</div>
<div class="line"><a name="l05885"></a><span class="lineno"> 5885</span>&#160;                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l05886"></a><span class="lineno"> 5886</span>&#160;                }</div>
<div class="line"><a name="l05887"></a><span class="lineno"> 5887</span>&#160;                <span class="comment">// else connection shutting down, don&#39;t bother telling the user</span></div>
<div class="line"><a name="l05888"></a><span class="lineno"> 5888</span>&#160;</div>
<div class="line"><a name="l05889"></a><span class="lineno"> 5889</span>&#160;<span class="preprocessor">#ifdef _DO_PRINTF</span></div>
<div class="line"><a name="l05890"></a><span class="lineno"> 5890</span>&#160;<span class="preprocessor"></span>                <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;Connection dropped for player %i:%i\n&quot;</span>, systemAddress);</div>
<div class="line"><a name="l05891"></a><span class="lineno"> 5891</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05892"></a><span class="lineno"> 5892</span>&#160;<span class="preprocessor"></span>                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac2555dbfa33331201626527858f7a8f9">CloseConnectionInternal</a>( systemAddress, <span class="keyword">false</span>, <span class="keyword">true</span>, 0, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705cadb8ee22a232a2787f32ba28da55c43c1">LOW_PRIORITY</a> );</div>
<div class="line"><a name="l05893"></a><span class="lineno"> 5893</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l05894"></a><span class="lineno"> 5894</span>&#160;            }</div>
<div class="line"><a name="l05895"></a><span class="lineno"> 5895</span>&#160;</div>
<div class="line"><a name="l05896"></a><span class="lineno"> 5896</span>&#160;            <span class="comment">// Ping this guy if it is time to do so</span></div>
<div class="line"><a name="l05897"></a><span class="lineno"> 5897</span>&#160;            <span class="keywordflow">if</span> ( remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a> &amp;&amp; timeMS &gt; remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa39014879cfdaf3efb54fccdbabcc865" title="The lowest ping value encountered.">nextPingTime</a> &amp;&amp; ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a9227638ba973ad04c4ca82db116f245e">occasionalPing</a> || remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a05de1f27b328bbedba18cfb7047a3e85" title="The index we are writing into the pingAndClockDifferential circular buffer.">lowestPing</a> == (<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>)-1 ) )</div>
<div class="line"><a name="l05898"></a><span class="lineno"> 5898</span>&#160;            {</div>
<div class="line"><a name="l05899"></a><span class="lineno"> 5899</span>&#160;                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa39014879cfdaf3efb54fccdbabcc865" title="The lowest ping value encountered.">nextPingTime</a> = timeMS + 5000;</div>
<div class="line"><a name="l05900"></a><span class="lineno"> 5900</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4">PingInternal</a>( systemAddress, <span class="keyword">true</span>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaeb409c363ddaeb3201fd95e9bee56696" title="Same as regular UDP, except that it will also discard duplicate datagrams. RakNet adds (6 to 17) + 21...">UNRELIABLE</a> );</div>
<div class="line"><a name="l05901"></a><span class="lineno"> 5901</span>&#160;</div>
<div class="line"><a name="l05902"></a><span class="lineno"> 5902</span>&#160;                <span class="comment">// Update again immediately after this tick so the ping goes out right away</span></div>
<div class="line"><a name="l05903"></a><span class="lineno"> 5903</span>&#160;                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l05904"></a><span class="lineno"> 5904</span>&#160;            }</div>
<div class="line"><a name="l05905"></a><span class="lineno"> 5905</span>&#160;</div>
<div class="line"><a name="l05906"></a><span class="lineno"> 5906</span>&#160;            <span class="comment">// Find whoever has the lowest player ID</span></div>
<div class="line"><a name="l05907"></a><span class="lineno"> 5907</span>&#160;            <span class="comment">//if (systemAddress &lt; authoritativeClientSystemAddress)</span></div>
<div class="line"><a name="l05908"></a><span class="lineno"> 5908</span>&#160;            <span class="comment">// authoritativeClientSystemAddress=systemAddress;</span></div>
<div class="line"><a name="l05909"></a><span class="lineno"> 5909</span>&#160;</div>
<div class="line"><a name="l05910"></a><span class="lineno"> 5910</span>&#160;            <span class="comment">// Does the reliability layer have any packets waiting for us?</span></div>
<div class="line"><a name="l05911"></a><span class="lineno"> 5911</span>&#160;            <span class="comment">// To be thread safe, this has to be called in the same thread as HandleSocketReceiveFromConnectedPlayer</span></div>
<div class="line"><a name="l05912"></a><span class="lineno"> 5912</span>&#160;            bitSize = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#abcc7d50f16310d422dcdb3eaee55c7db">Receive</a>( &amp;data );</div>
<div class="line"><a name="l05913"></a><span class="lineno"> 5913</span>&#160;</div>
<div class="line"><a name="l05914"></a><span class="lineno"> 5914</span>&#160;            <span class="keywordflow">while</span> ( bitSize &gt; 0 )</div>
<div class="line"><a name="l05915"></a><span class="lineno"> 5915</span>&#160;            {</div>
<div class="line"><a name="l05916"></a><span class="lineno"> 5916</span>&#160;                <span class="comment">// These types are for internal use and should never arrive from a network packet</span></div>
<div class="line"><a name="l05917"></a><span class="lineno"> 5917</span>&#160;                <span class="keywordflow">if</span> (data[0]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a>)</div>
<div class="line"><a name="l05918"></a><span class="lineno"> 5918</span>&#160;                {</div>
<div class="line"><a name="l05919"></a><span class="lineno"> 5919</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(0);</div>
<div class="line"><a name="l05920"></a><span class="lineno"> 5920</span>&#160;                    bitSize=0;</div>
<div class="line"><a name="l05921"></a><span class="lineno"> 5921</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l05922"></a><span class="lineno"> 5922</span>&#160;                }</div>
<div class="line"><a name="l05923"></a><span class="lineno"> 5923</span>&#160;</div>
<div class="line"><a name="l05924"></a><span class="lineno"> 5924</span>&#160;                <span class="comment">// Fast and easy - just use the data that was returned</span></div>
<div class="line"><a name="l05925"></a><span class="lineno"> 5925</span>&#160;                byteSize = (<span class="keywordtype">unsigned</span> int) <a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>( bitSize );</div>
<div class="line"><a name="l05926"></a><span class="lineno"> 5926</span>&#160;</div>
<div class="line"><a name="l05927"></a><span class="lineno"> 5927</span>&#160;                <span class="comment">// For unknown senders we only accept a few specific packets</span></div>
<div class="line"><a name="l05928"></a><span class="lineno"> 5928</span>&#160;                <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a4f11209f208285822a66f0078f261e23">RemoteSystemStruct::UNVERIFIED_SENDER</a>)</div>
<div class="line"><a name="l05929"></a><span class="lineno"> 5929</span>&#160;                {</div>
<div class="line"><a name="l05930"></a><span class="lineno"> 5930</span>&#160;                    <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a563aaf254daf19c5130640afe0849af7" title="C2S: Header(1), GUID(8), Timestamp, HasSecurity(1), Proof(32)">ID_CONNECTION_REQUEST</a> )</div>
<div class="line"><a name="l05931"></a><span class="lineno"> 5931</span>&#160;                    {</div>
<div class="line"><a name="l05932"></a><span class="lineno"> 5932</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa5bcdfc861e18f76e3baf317eb998cfc" title="Parse out a connection request packet.">ParseConnectionRequestPacket</a>(remoteSystem, systemAddress, (<span class="keyword">const</span> <span class="keywordtype">char</span>*)data, byteSize);</div>
<div class="line"><a name="l05933"></a><span class="lineno"> 5933</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05934"></a><span class="lineno"> 5934</span>&#160;                    }</div>
<div class="line"><a name="l05935"></a><span class="lineno"> 5935</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l05936"></a><span class="lineno"> 5936</span>&#160;                    {</div>
<div class="line"><a name="l05937"></a><span class="lineno"> 5937</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ac2555dbfa33331201626527858f7a8f9">CloseConnectionInternal</a>( systemAddress, <span class="keyword">false</span>, <span class="keyword">true</span>, 0, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705cadb8ee22a232a2787f32ba28da55c43c1">LOW_PRIORITY</a> );</div>
<div class="line"><a name="l05938"></a><span class="lineno"> 5938</span>&#160;<span class="preprocessor">#ifdef _DO_PRINTF</span></div>
<div class="line"><a name="l05939"></a><span class="lineno"> 5939</span>&#160;<span class="preprocessor"></span>                        <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;Temporarily banning %i:%i for sending nonsense data\n&quot;</span>, systemAddress);</div>
<div class="line"><a name="l05940"></a><span class="lineno"> 5940</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l05941"></a><span class="lineno"> 5941</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l05942"></a><span class="lineno"> 5942</span>&#160;                        <span class="keywordtype">char</span> str1[64];</div>
<div class="line"><a name="l05943"></a><span class="lineno"> 5943</span>&#160;                        systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>, str1, static_cast&lt;size_t&gt;(64));</div>
<div class="line"><a name="l05944"></a><span class="lineno"> 5944</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa0df3df6ab4e04ae2ef0696670d7f776" title="Bans an IP from connecting.">AddToBanList</a>(str1, remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#ad7ae8c962a75dee167d2ba844bf571e1">GetTimeoutTime</a>());</div>
<div class="line"><a name="l05945"></a><span class="lineno"> 5945</span>&#160;</div>
<div class="line"><a name="l05946"></a><span class="lineno"> 5946</span>&#160;</div>
<div class="line"><a name="l05947"></a><span class="lineno"> 5947</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05948"></a><span class="lineno"> 5948</span>&#160;                    }</div>
<div class="line"><a name="l05949"></a><span class="lineno"> 5949</span>&#160;                }</div>
<div class="line"><a name="l05950"></a><span class="lineno"> 5950</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l05951"></a><span class="lineno"> 5951</span>&#160;                {</div>
<div class="line"><a name="l05952"></a><span class="lineno"> 5952</span>&#160;                    <span class="comment">// However, if we are connected we still take a connection request in case both systems are trying to connect to each other</span></div>
<div class="line"><a name="l05953"></a><span class="lineno"> 5953</span>&#160;                    <span class="comment">// at the same time</span></div>
<div class="line"><a name="l05954"></a><span class="lineno"> 5954</span>&#160;                    <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a563aaf254daf19c5130640afe0849af7" title="C2S: Header(1), GUID(8), Timestamp, HasSecurity(1), Proof(32)">ID_CONNECTION_REQUEST</a> )</div>
<div class="line"><a name="l05955"></a><span class="lineno"> 5955</span>&#160;                    {</div>
<div class="line"><a name="l05956"></a><span class="lineno"> 5956</span>&#160;                        <span class="comment">// 04/27/06 This is wrong.  With cross connections, we can both have initiated the connection are in state REQUESTED_CONNECTION</span></div>
<div class="line"><a name="l05957"></a><span class="lineno"> 5957</span>&#160;                        <span class="comment">// 04/28/06 Downgrading connections from connected will close the connection due to security at ((remoteSystem-&gt;connectMode!=RemoteSystemStruct::CONNECTED &amp;&amp; time &gt; remoteSystem-&gt;connectionTime &amp;&amp; time - remoteSystem-&gt;connectionTime &gt; 10000))</span></div>
<div class="line"><a name="l05958"></a><span class="lineno"> 5958</span>&#160;                        <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a>)</div>
<div class="line"><a name="l05959"></a><span class="lineno"> 5959</span>&#160;                        {</div>
<div class="line"><a name="l05960"></a><span class="lineno"> 5960</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aa5bcdfc861e18f76e3baf317eb998cfc" title="Parse out a connection request packet.">ParseConnectionRequestPacket</a>(remoteSystem, systemAddress, (<span class="keyword">const</span> <span class="keywordtype">char</span>*)data, byteSize);</div>
<div class="line"><a name="l05961"></a><span class="lineno"> 5961</span>&#160;                        }</div>
<div class="line"><a name="l05962"></a><span class="lineno"> 5962</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l05963"></a><span class="lineno"> 5963</span>&#160;                        {</div>
<div class="line"><a name="l05964"></a><span class="lineno"> 5964</span>&#160;</div>
<div class="line"><a name="l05965"></a><span class="lineno"> 5965</span>&#160;                            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> bs((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) data,byteSize,<span class="keyword">false</span>);</div>
<div class="line"><a name="l05966"></a><span class="lineno"> 5966</span>&#160;                            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>));</div>
<div class="line"><a name="l05967"></a><span class="lineno"> 5967</span>&#160;                            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#aef8cd502004ab8b01f9588447fa366db">OFFLINE_MESSAGE_DATA_ID</a>));</div>
<div class="line"><a name="l05968"></a><span class="lineno"> 5968</span>&#160;                            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89b340505c7f78ffe59c414f2e761df5" title="Ignore data we don&#39;t intend to read.">IgnoreBytes</a>(<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a351179e56b40938ff5b81961e8603da5">RakNetGUID::size</a>());</div>
<div class="line"><a name="l05969"></a><span class="lineno"> 5969</span>&#160;                            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> incomingTimestamp;</div>
<div class="line"><a name="l05970"></a><span class="lineno"> 5970</span>&#160;                            bs.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(incomingTimestamp);</div>
<div class="line"><a name="l05971"></a><span class="lineno"> 5971</span>&#160;</div>
<div class="line"><a name="l05972"></a><span class="lineno"> 5972</span>&#160;                            <span class="comment">// Got a connection request message from someone we are already connected to. Just reply normally.</span></div>
<div class="line"><a name="l05973"></a><span class="lineno"> 5973</span>&#160;                            <span class="comment">// This can happen due to race conditions with the fully connected mesh</span></div>
<div class="line"><a name="l05974"></a><span class="lineno"> 5974</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aaaca9ace501fd07ed499f9611feac31b">OnConnectionRequest</a>( remoteSystem, incomingTimestamp );</div>
<div class="line"><a name="l05975"></a><span class="lineno"> 5975</span>&#160;                        }</div>
<div class="line"><a name="l05976"></a><span class="lineno"> 5976</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l05977"></a><span class="lineno"> 5977</span>&#160;                    }</div>
<div class="line"><a name="l05978"></a><span class="lineno"> 5978</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) data[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a884712d974b7a5747131dcce61538180" title="RakPeer - A remote system has successfully connected.">ID_NEW_INCOMING_CONNECTION</a> &amp;&amp; byteSize &gt; <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)*2 )</div>
<div class="line"><a name="l05979"></a><span class="lineno"> 5979</span>&#160;                    {</div>
<div class="line"><a name="l05980"></a><span class="lineno"> 5980</span>&#160;                        <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a3655df1b4cee55eb3556bce5bc170584">RemoteSystemStruct::HANDLING_CONNECTION_REQUEST</a>)</div>
<div class="line"><a name="l05981"></a><span class="lineno"> 5981</span>&#160;                        {</div>
<div class="line"><a name="l05982"></a><span class="lineno"> 5982</span>&#160;                            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a>;</div>
<div class="line"><a name="l05983"></a><span class="lineno"> 5983</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4">PingInternal</a>( systemAddress, <span class="keyword">true</span>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaeb409c363ddaeb3201fd95e9bee56696" title="Same as regular UDP, except that it will also discard duplicate datagrams. RakNet adds (6 to 17) + 21...">UNRELIABLE</a> );</div>
<div class="line"><a name="l05984"></a><span class="lineno"> 5984</span>&#160;</div>
<div class="line"><a name="l05985"></a><span class="lineno"> 5985</span>&#160;                            <span class="comment">// Update again immediately after this tick so the ping goes out right away</span></div>
<div class="line"><a name="l05986"></a><span class="lineno"> 5986</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l05987"></a><span class="lineno"> 5987</span>&#160;</div>
<div class="line"><a name="l05988"></a><span class="lineno"> 5988</span>&#160;                            <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> inBitStream((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) data, byteSize, <span class="keyword">false</span>);</div>
<div class="line"><a name="l05989"></a><span class="lineno"> 5989</span>&#160;                            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> bsSystemAddress;</div>
<div class="line"><a name="l05990"></a><span class="lineno"> 5990</span>&#160;</div>
<div class="line"><a name="l05991"></a><span class="lineno"> 5991</span>&#160;                            inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9" title="Ignore data we don&#39;t intend to read.">IgnoreBits</a>(8);</div>
<div class="line"><a name="l05992"></a><span class="lineno"> 5992</span>&#160;                            inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(bsSystemAddress);</div>
<div class="line"><a name="l05993"></a><span class="lineno"> 5993</span>&#160;                            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; i++)</div>
<div class="line"><a name="l05994"></a><span class="lineno"> 5994</span>&#160;                                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#af3530552a11b91df0229023fe7f28974" title="Your external IP on the internet, from their perspective.">theirInternalSystemAddress</a>[i]);</div>
<div class="line"><a name="l05995"></a><span class="lineno"> 5995</span>&#160;</div>
<div class="line"><a name="l05996"></a><span class="lineno"> 5996</span>&#160;                            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPingTime, sendPongTime;</div>
<div class="line"><a name="l05997"></a><span class="lineno"> 5997</span>&#160;                            inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPingTime);</div>
<div class="line"><a name="l05998"></a><span class="lineno"> 5998</span>&#160;                            inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPongTime);</div>
<div class="line"><a name="l05999"></a><span class="lineno"> 5999</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a331b4c503549cc0de052c81f895fac9e">OnConnectedPong</a>(sendPingTime,sendPongTime,remoteSystem);</div>
<div class="line"><a name="l06000"></a><span class="lineno"> 6000</span>&#160;</div>
<div class="line"><a name="l06001"></a><span class="lineno"> 6001</span>&#160;                            <span class="comment">// Overwrite the data in the packet</span></div>
<div class="line"><a name="l06002"></a><span class="lineno"> 6002</span>&#160;                            <span class="comment">//                  NewIncomingConnectionStruct newIncomingConnectionStruct;</span></div>
<div class="line"><a name="l06003"></a><span class="lineno"> 6003</span>&#160;                            <span class="comment">//                  SLNet::BitStream nICS_BS( data, NewIncomingConnectionStruct_Size, false );</span></div>
<div class="line"><a name="l06004"></a><span class="lineno"> 6004</span>&#160;                            <span class="comment">//                  newIncomingConnectionStruct.Deserialize( nICS_BS );</span></div>
<div class="line"><a name="l06005"></a><span class="lineno"> 6005</span>&#160;</div>
<div class="line"><a name="l06006"></a><span class="lineno"> 6006</span>&#160;                            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a8907915e3ad157baf1609efc43801ba7" title="Their external IP on the internet.">myExternalSystemAddress</a> = bsSystemAddress;</div>
<div class="line"><a name="l06007"></a><span class="lineno"> 6007</span>&#160;</div>
<div class="line"><a name="l06008"></a><span class="lineno"> 6008</span>&#160;                            <span class="comment">// Bug: If A connects to B through R, A&#39;s firstExternalID is set to R. If A tries to send to R, sends to loopback because R==firstExternalID</span></div>
<div class="line"><a name="l06009"></a><span class="lineno"> 6009</span>&#160;                            <span class="comment">// Correct fix is to specify in Connect() if target is through a proxy.</span></div>
<div class="line"><a name="l06010"></a><span class="lineno"> 6010</span>&#160;                            <span class="comment">// However, in practice you have to connect to something else first anyway to know about the proxy. So setting once only is good enough</span></div>
<div class="line"><a name="l06011"></a><span class="lineno"> 6011</span>&#160;                            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l06012"></a><span class="lineno"> 6012</span>&#160;                            {</div>
<div class="line"><a name="l06013"></a><span class="lineno"> 6013</span>&#160;                                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>=bsSystemAddress;</div>
<div class="line"><a name="l06014"></a><span class="lineno"> 6014</span>&#160;                                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l06015"></a><span class="lineno"> 6015</span>&#160;                            }</div>
<div class="line"><a name="l06016"></a><span class="lineno"> 6016</span>&#160;</div>
<div class="line"><a name="l06017"></a><span class="lineno"> 6017</span>&#160;                            <span class="comment">// Send this info down to the game</span></div>
<div class="line"><a name="l06018"></a><span class="lineno"> 6018</span>&#160;                            packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(byteSize, data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l06019"></a><span class="lineno"> 6019</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = bitSize;</div>
<div class="line"><a name="l06020"></a><span class="lineno"> 6020</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l06021"></a><span class="lineno"> 6021</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a397b41f1f82b716399a756b1e881c5f0">remoteSystemIndex</a>;</div>
<div class="line"><a name="l06022"></a><span class="lineno"> 6022</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l06023"></a><span class="lineno"> 6023</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l06024"></a><span class="lineno"> 6024</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l06025"></a><span class="lineno"> 6025</span>&#160;                        }</div>
<div class="line"><a name="l06026"></a><span class="lineno"> 6026</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l06027"></a><span class="lineno"> 6027</span>&#160;                        {</div>
<div class="line"><a name="l06028"></a><span class="lineno"> 6028</span>&#160;                            <span class="comment">// Send to game even if already connected. This could happen when connecting to 127.0.0.1</span></div>
<div class="line"><a name="l06029"></a><span class="lineno"> 6029</span>&#160;                            <span class="comment">// Ignore, already connected</span></div>
<div class="line"><a name="l06030"></a><span class="lineno"> 6030</span>&#160;                        <span class="comment">//  rakFree_Ex(data, _FILE_AND_LINE_ );</span></div>
<div class="line"><a name="l06031"></a><span class="lineno"> 6031</span>&#160;                        }</div>
<div class="line"><a name="l06032"></a><span class="lineno"> 6032</span>&#160;                    }</div>
<div class="line"><a name="l06033"></a><span class="lineno"> 6033</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) data[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a6e56f5bd0712a6201d26d67de1ec58b8" title="Pong from a connected system. Update timestamps (internal use only)">ID_CONNECTED_PONG</a> &amp;&amp; byteSize == <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)*2 )</div>
<div class="line"><a name="l06034"></a><span class="lineno"> 6034</span>&#160;                    {</div>
<div class="line"><a name="l06035"></a><span class="lineno"> 6035</span>&#160;                        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPingTime, sendPongTime;</div>
<div class="line"><a name="l06036"></a><span class="lineno"> 6036</span>&#160;</div>
<div class="line"><a name="l06037"></a><span class="lineno"> 6037</span>&#160;                        <span class="comment">// Copy into the ping times array the current time - the value returned</span></div>
<div class="line"><a name="l06038"></a><span class="lineno"> 6038</span>&#160;                        <span class="comment">// First extract the sent ping</span></div>
<div class="line"><a name="l06039"></a><span class="lineno"> 6039</span>&#160;                        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> inBitStream( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) data, byteSize, <span class="keyword">false</span> );</div>
<div class="line"><a name="l06040"></a><span class="lineno"> 6040</span>&#160;                        <span class="comment">//PingStruct ps;</span></div>
<div class="line"><a name="l06041"></a><span class="lineno"> 6041</span>&#160;                        <span class="comment">//ps.Deserialize(psBS);</span></div>
<div class="line"><a name="l06042"></a><span class="lineno"> 6042</span>&#160;                        inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9" title="Ignore data we don&#39;t intend to read.">IgnoreBits</a>(8);</div>
<div class="line"><a name="l06043"></a><span class="lineno"> 6043</span>&#160;                        inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPingTime);</div>
<div class="line"><a name="l06044"></a><span class="lineno"> 6044</span>&#160;                        inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPongTime);</div>
<div class="line"><a name="l06045"></a><span class="lineno"> 6045</span>&#160;</div>
<div class="line"><a name="l06046"></a><span class="lineno"> 6046</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a331b4c503549cc0de052c81f895fac9e">OnConnectedPong</a>(sendPingTime,sendPongTime,remoteSystem);</div>
<div class="line"><a name="l06047"></a><span class="lineno"> 6047</span>&#160;</div>
<div class="line"><a name="l06048"></a><span class="lineno"> 6048</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06049"></a><span class="lineno"> 6049</span>&#160;                    }</div>
<div class="line"><a name="l06050"></a><span class="lineno"> 6050</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)data[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa5943bb3e478a4862d612f9bd1a87fb8">ID_CONNECTED_PING</a> &amp;&amp; byteSize == <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>) )</div>
<div class="line"><a name="l06051"></a><span class="lineno"> 6051</span>&#160;                    {</div>
<div class="line"><a name="l06052"></a><span class="lineno"> 6052</span>&#160;                        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> inBitStream( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) data, byteSize, <span class="keyword">false</span> );</div>
<div class="line"><a name="l06053"></a><span class="lineno"> 6053</span>&#160;                        inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9" title="Ignore data we don&#39;t intend to read.">IgnoreBits</a>(8);</div>
<div class="line"><a name="l06054"></a><span class="lineno"> 6054</span>&#160;                        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPingTime;</div>
<div class="line"><a name="l06055"></a><span class="lineno"> 6055</span>&#160;                        inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPingTime);</div>
<div class="line"><a name="l06056"></a><span class="lineno"> 6056</span>&#160;</div>
<div class="line"><a name="l06057"></a><span class="lineno"> 6057</span>&#160;                        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> outBitStream;</div>
<div class="line"><a name="l06058"></a><span class="lineno"> 6058</span>&#160;                        outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a6e56f5bd0712a6201d26d67de1ec58b8" title="Pong from a connected system. Update timestamps (internal use only)">ID_CONNECTED_PONG</a>);</div>
<div class="line"><a name="l06059"></a><span class="lineno"> 6059</span>&#160;                        outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(sendPingTime);</div>
<div class="line"><a name="l06060"></a><span class="lineno"> 6060</span>&#160;                        outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>());</div>
<div class="line"><a name="l06061"></a><span class="lineno"> 6061</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>( (<span class="keywordtype">char</span>*)outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaeb409c363ddaeb3201fd95e9bee56696" title="Same as regular UDP, except that it will also discard duplicate datagrams. RakNet adds (6 to 17) + 21...">UNRELIABLE</a>, 0, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0 );</div>
<div class="line"><a name="l06062"></a><span class="lineno"> 6062</span>&#160;</div>
<div class="line"><a name="l06063"></a><span class="lineno"> 6063</span>&#160;                        <span class="comment">// Update again immediately after this tick so the ping goes out right away</span></div>
<div class="line"><a name="l06064"></a><span class="lineno"> 6064</span>&#160;                        <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l06065"></a><span class="lineno"> 6065</span>&#160;</div>
<div class="line"><a name="l06066"></a><span class="lineno"> 6066</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06067"></a><span class="lineno"> 6067</span>&#160;                    }</div>
<div class="line"><a name="l06068"></a><span class="lineno"> 6068</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) data[ 0 ] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa3c9ab42767af4b738cceb5a5b3600ae">ID_DISCONNECTION_NOTIFICATION</a> )</div>
<div class="line"><a name="l06069"></a><span class="lineno"> 6069</span>&#160;                    {</div>
<div class="line"><a name="l06070"></a><span class="lineno"> 6070</span>&#160;                        <span class="comment">// We shouldn&#39;t close the connection immediately because we need to ack the ID_DISCONNECTION_NOTIFICATION</span></div>
<div class="line"><a name="l06071"></a><span class="lineno"> 6071</span>&#160;                        remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a84516385fdb35a2d6cb7602af2d6ccf4">RemoteSystemStruct::DISCONNECT_ON_NO_ACK</a>;</div>
<div class="line"><a name="l06072"></a><span class="lineno"> 6072</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06073"></a><span class="lineno"> 6073</span>&#160;</div>
<div class="line"><a name="l06074"></a><span class="lineno"> 6074</span>&#160;                    <span class="comment">//  AddPacketToProducer(packet);</span></div>
<div class="line"><a name="l06075"></a><span class="lineno"> 6075</span>&#160;                    }</div>
<div class="line"><a name="l06076"></a><span class="lineno"> 6076</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5456ebbdba4186249b39a2d25311134f" title="A reliable packet to detect lost connections (internal use only)">ID_DETECT_LOST_CONNECTIONS</a> &amp;&amp; byteSize == <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) )</div>
<div class="line"><a name="l06077"></a><span class="lineno"> 6077</span>&#160;                    {</div>
<div class="line"><a name="l06078"></a><span class="lineno"> 6078</span>&#160;                        <span class="comment">// Do nothing</span></div>
<div class="line"><a name="l06079"></a><span class="lineno"> 6079</span>&#160;                        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06080"></a><span class="lineno"> 6080</span>&#160;                    }</div>
<div class="line"><a name="l06081"></a><span class="lineno"> 6081</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a2c69119824c8bd3faa96d9953d02a41d" title="RakPeer - The remote system is using a password and has refused our connection because we did not set...">ID_INVALID_PASSWORD</a> )</div>
<div class="line"><a name="l06082"></a><span class="lineno"> 6082</span>&#160;                    {</div>
<div class="line"><a name="l06083"></a><span class="lineno"> 6083</span>&#160;                        <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a>)</div>
<div class="line"><a name="l06084"></a><span class="lineno"> 6084</span>&#160;                        {</div>
<div class="line"><a name="l06085"></a><span class="lineno"> 6085</span>&#160;                            packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(byteSize, data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l06086"></a><span class="lineno"> 6086</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = bitSize;</div>
<div class="line"><a name="l06087"></a><span class="lineno"> 6087</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l06088"></a><span class="lineno"> 6088</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a397b41f1f82b716399a756b1e881c5f0">remoteSystemIndex</a>;</div>
<div class="line"><a name="l06089"></a><span class="lineno"> 6089</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l06090"></a><span class="lineno"> 6090</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l06091"></a><span class="lineno"> 6091</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l06092"></a><span class="lineno"> 6092</span>&#160;</div>
<div class="line"><a name="l06093"></a><span class="lineno"> 6093</span>&#160;                            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a6898ca57318251763711a4693046b954">RemoteSystemStruct::DISCONNECT_ASAP_SILENTLY</a>;</div>
<div class="line"><a name="l06094"></a><span class="lineno"> 6094</span>&#160;                        }</div>
<div class="line"><a name="l06095"></a><span class="lineno"> 6095</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l06096"></a><span class="lineno"> 6096</span>&#160;                        {</div>
<div class="line"><a name="l06097"></a><span class="lineno"> 6097</span>&#160;                            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06098"></a><span class="lineno"> 6098</span>&#160;                        }</div>
<div class="line"><a name="l06099"></a><span class="lineno"> 6099</span>&#160;                    }</div>
<div class="line"><a name="l06100"></a><span class="lineno"> 6100</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)(data)[0] == <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8e1677131f83c52ed49001d6401fd2e7" title="RakPeer - In a client/server environment, our connection request to the server has been accepted...">ID_CONNECTION_REQUEST_ACCEPTED</a> )</div>
<div class="line"><a name="l06101"></a><span class="lineno"> 6101</span>&#160;                    {</div>
<div class="line"><a name="l06102"></a><span class="lineno"> 6102</span>&#160;                        <span class="keywordflow">if</span> (byteSize &gt; <span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a>)*2)</div>
<div class="line"><a name="l06103"></a><span class="lineno"> 6103</span>&#160;                        {</div>
<div class="line"><a name="l06104"></a><span class="lineno"> 6104</span>&#160;                            <span class="comment">// Make sure this connection accept is from someone we wanted to connect to</span></div>
<div class="line"><a name="l06105"></a><span class="lineno"> 6105</span>&#160;                            <span class="keywordtype">bool</span> allowConnection, alreadyConnected;</div>
<div class="line"><a name="l06106"></a><span class="lineno"> 6106</span>&#160;</div>
<div class="line"><a name="l06107"></a><span class="lineno"> 6107</span>&#160;                            <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a3655df1b4cee55eb3556bce5bc170584">RemoteSystemStruct::HANDLING_CONNECTION_REQUEST</a> ||</div>
<div class="line"><a name="l06108"></a><span class="lineno"> 6108</span>&#160;                                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ab6ed731db128be22916998c7105e8281">RemoteSystemStruct::REQUESTED_CONNECTION</a> ||</div>
<div class="line"><a name="l06109"></a><span class="lineno"> 6109</span>&#160;                                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a4d813d6705c6e3e225a7558d7cd07fc3" title="How long it has been since things were updated by a call to receiveUpdate thread uses this to determi...">allowConnectionResponseIPMigration</a>)</div>
<div class="line"><a name="l06110"></a><span class="lineno"> 6110</span>&#160;                                allowConnection=<span class="keyword">true</span>;</div>
<div class="line"><a name="l06111"></a><span class="lineno"> 6111</span>&#160;                            <span class="keywordflow">else</span></div>
<div class="line"><a name="l06112"></a><span class="lineno"> 6112</span>&#160;                                allowConnection=<span class="keyword">false</span>;</div>
<div class="line"><a name="l06113"></a><span class="lineno"> 6113</span>&#160;</div>
<div class="line"><a name="l06114"></a><span class="lineno"> 6114</span>&#160;                            <span class="keywordflow">if</span> (remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>==<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04a3655df1b4cee55eb3556bce5bc170584">RemoteSystemStruct::HANDLING_CONNECTION_REQUEST</a>)</div>
<div class="line"><a name="l06115"></a><span class="lineno"> 6115</span>&#160;                                alreadyConnected=<span class="keyword">true</span>;</div>
<div class="line"><a name="l06116"></a><span class="lineno"> 6116</span>&#160;                            <span class="keywordflow">else</span></div>
<div class="line"><a name="l06117"></a><span class="lineno"> 6117</span>&#160;                                alreadyConnected=<span class="keyword">false</span>;</div>
<div class="line"><a name="l06118"></a><span class="lineno"> 6118</span>&#160;</div>
<div class="line"><a name="l06119"></a><span class="lineno"> 6119</span>&#160;                            <span class="keywordflow">if</span> ( allowConnection )</div>
<div class="line"><a name="l06120"></a><span class="lineno"> 6120</span>&#160;                            {</div>
<div class="line"><a name="l06121"></a><span class="lineno"> 6121</span>&#160;                                <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> externalID;</div>
<div class="line"><a name="l06122"></a><span class="lineno"> 6122</span>&#160;                                <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a> systemIndex;</div>
<div class="line"><a name="l06123"></a><span class="lineno"> 6123</span>&#160;<span class="comment">//                              SystemAddress internalID;</span></div>
<div class="line"><a name="l06124"></a><span class="lineno"> 6124</span>&#160;</div>
<div class="line"><a name="l06125"></a><span class="lineno"> 6125</span>&#160;                                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> inBitStream((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) data, byteSize, <span class="keyword">false</span>);</div>
<div class="line"><a name="l06126"></a><span class="lineno"> 6126</span>&#160;                                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9" title="Ignore data we don&#39;t intend to read.">IgnoreBits</a>(8);</div>
<div class="line"><a name="l06127"></a><span class="lineno"> 6127</span>&#160;                                <span class="comment">//  inBitStream.Read(remotePort);</span></div>
<div class="line"><a name="l06128"></a><span class="lineno"> 6128</span>&#160;                                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(externalID);</div>
<div class="line"><a name="l06129"></a><span class="lineno"> 6129</span>&#160;                                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(systemIndex);</div>
<div class="line"><a name="l06130"></a><span class="lineno"> 6130</span>&#160;                                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; i++)</div>
<div class="line"><a name="l06131"></a><span class="lineno"> 6131</span>&#160;                                    inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#af3530552a11b91df0229023fe7f28974" title="Your external IP on the internet, from their perspective.">theirInternalSystemAddress</a>[i]);</div>
<div class="line"><a name="l06132"></a><span class="lineno"> 6132</span>&#160;</div>
<div class="line"><a name="l06133"></a><span class="lineno"> 6133</span>&#160;                                <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a7223b62c1b67121db1d975f2ab9b74c7">SLNet::Time</a> sendPingTime, sendPongTime;</div>
<div class="line"><a name="l06134"></a><span class="lineno"> 6134</span>&#160;                                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPingTime);</div>
<div class="line"><a name="l06135"></a><span class="lineno"> 6135</span>&#160;                                inBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(sendPongTime);</div>
<div class="line"><a name="l06136"></a><span class="lineno"> 6136</span>&#160;                                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a331b4c503549cc0de052c81f895fac9e">OnConnectedPong</a>(sendPingTime, sendPongTime, remoteSystem);</div>
<div class="line"><a name="l06137"></a><span class="lineno"> 6137</span>&#160;</div>
<div class="line"><a name="l06138"></a><span class="lineno"> 6138</span>&#160;                                <span class="comment">// Find a free remote system struct to use</span></div>
<div class="line"><a name="l06139"></a><span class="lineno"> 6139</span>&#160;                                <span class="comment">//                      SLNet::BitStream casBitS(data, byteSize, false);</span></div>
<div class="line"><a name="l06140"></a><span class="lineno"> 6140</span>&#160;                                <span class="comment">//                      ConnectionAcceptStruct cas;</span></div>
<div class="line"><a name="l06141"></a><span class="lineno"> 6141</span>&#160;                                <span class="comment">//                      cas.Deserialize(casBitS);</span></div>
<div class="line"><a name="l06142"></a><span class="lineno"> 6142</span>&#160;                                <span class="comment">//  systemAddress.GetPort() = remotePort;</span></div>
<div class="line"><a name="l06143"></a><span class="lineno"> 6143</span>&#160;</div>
<div class="line"><a name="l06144"></a><span class="lineno"> 6144</span>&#160;                                <span class="comment">// The remote system told us our external IP, so save it</span></div>
<div class="line"><a name="l06145"></a><span class="lineno"> 6145</span>&#160;                                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a8907915e3ad157baf1609efc43801ba7" title="Their external IP on the internet.">myExternalSystemAddress</a> = externalID;</div>
<div class="line"><a name="l06146"></a><span class="lineno"> 6146</span>&#160;                                remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a5cdfc599eba769a9050ff0976da68dad">connectMode</a>=<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#aa6f6f3d72cfcfb38505f8b97fb56eb04ac6785dcef179589a725853b8033cc2b8">RemoteSystemStruct::CONNECTED</a>;</div>
<div class="line"><a name="l06147"></a><span class="lineno"> 6147</span>&#160;</div>
<div class="line"><a name="l06148"></a><span class="lineno"> 6148</span>&#160;                                <span class="comment">// Bug: If A connects to B through R, A&#39;s firstExternalID is set to R. If A tries to send to R, sends to loopback because R==firstExternalID</span></div>
<div class="line"><a name="l06149"></a><span class="lineno"> 6149</span>&#160;                                <span class="comment">// Correct fix is to specify in Connect() if target is through a proxy.</span></div>
<div class="line"><a name="l06150"></a><span class="lineno"> 6150</span>&#160;                                <span class="comment">// However, in practice you have to connect to something else first anyway to know about the proxy. So setting once only is good enough</span></div>
<div class="line"><a name="l06151"></a><span class="lineno"> 6151</span>&#160;                                <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l06152"></a><span class="lineno"> 6152</span>&#160;                                {</div>
<div class="line"><a name="l06153"></a><span class="lineno"> 6153</span>&#160;                                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>=externalID;</div>
<div class="line"><a name="l06154"></a><span class="lineno"> 6154</span>&#160;                                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a260c39feb9c4117c8e7b471856e25ded">firstExternalID</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l06155"></a><span class="lineno"> 6155</span>&#160;                                }</div>
<div class="line"><a name="l06156"></a><span class="lineno"> 6156</span>&#160;</div>
<div class="line"><a name="l06157"></a><span class="lineno"> 6157</span>&#160;                                <span class="comment">// Send the connection request complete to the game</span></div>
<div class="line"><a name="l06158"></a><span class="lineno"> 6158</span>&#160;                                packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(byteSize, data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l06159"></a><span class="lineno"> 6159</span>&#160;                                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = byteSize * 8;</div>
<div class="line"><a name="l06160"></a><span class="lineno"> 6160</span>&#160;                                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l06161"></a><span class="lineno"> 6161</span>&#160;                                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = ( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a> ) <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ad3cd736fca1b11b8e652f630f9045c06" title="Given systemAddress, returns its index into remoteSystemList.">GetIndexFromSystemAddress</a>( systemAddress, <span class="keyword">true</span> );</div>
<div class="line"><a name="l06162"></a><span class="lineno"> 6162</span>&#160;                                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l06163"></a><span class="lineno"> 6163</span>&#160;                                packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l06164"></a><span class="lineno"> 6164</span>&#160;                                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l06165"></a><span class="lineno"> 6165</span>&#160;</div>
<div class="line"><a name="l06166"></a><span class="lineno"> 6166</span>&#160;                                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> outBitStream;</div>
<div class="line"><a name="l06167"></a><span class="lineno"> 6167</span>&#160;                                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a884712d974b7a5747131dcce61538180" title="RakPeer - A remote system has successfully connected.">ID_NEW_INCOMING_CONNECTION</a>);</div>
<div class="line"><a name="l06168"></a><span class="lineno"> 6168</span>&#160;                                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(systemAddress);</div>
<div class="line"><a name="l06169"></a><span class="lineno"> 6169</span>&#160;                                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; i++)</div>
<div class="line"><a name="l06170"></a><span class="lineno"> 6170</span>&#160;                                    outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[i]);</div>
<div class="line"><a name="l06171"></a><span class="lineno"> 6171</span>&#160;                                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(sendPongTime);</div>
<div class="line"><a name="l06172"></a><span class="lineno"> 6172</span>&#160;                                outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime</a>());</div>
<div class="line"><a name="l06173"></a><span class="lineno"> 6173</span>&#160;</div>
<div class="line"><a name="l06174"></a><span class="lineno"> 6174</span>&#160;                                <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a011ef2f7f56b13ecd8a8ef41ba4a4993">SendImmediate</a>( (<span class="keywordtype">char</span>*)outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(), outBitStream.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>(), <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>, 0, systemAddress, <span class="keyword">false</span>, <span class="keyword">false</span>, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaf7a5da6c601ae66963471d55a476dff">SLNet::GetTimeUS</a>(), 0 );</div>
<div class="line"><a name="l06175"></a><span class="lineno"> 6175</span>&#160;</div>
<div class="line"><a name="l06176"></a><span class="lineno"> 6176</span>&#160;                                <span class="keywordflow">if</span> (alreadyConnected==<span class="keyword">false</span>)</div>
<div class="line"><a name="l06177"></a><span class="lineno"> 6177</span>&#160;                                {</div>
<div class="line"><a name="l06178"></a><span class="lineno"> 6178</span>&#160;                                    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#afacf0a9f565d39384b07a7a5512037c4">PingInternal</a>( systemAddress, <span class="keyword">true</span>, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaeb409c363ddaeb3201fd95e9bee56696" title="Same as regular UDP, except that it will also discard duplicate datagrams. RakNet adds (6 to 17) + 21...">UNRELIABLE</a> );</div>
<div class="line"><a name="l06179"></a><span class="lineno"> 6179</span>&#160;                                }</div>
<div class="line"><a name="l06180"></a><span class="lineno"> 6180</span>&#160;                            }</div>
<div class="line"><a name="l06181"></a><span class="lineno"> 6181</span>&#160;                            <span class="keywordflow">else</span></div>
<div class="line"><a name="l06182"></a><span class="lineno"> 6182</span>&#160;                            {</div>
<div class="line"><a name="l06183"></a><span class="lineno"> 6183</span>&#160;                                <span class="comment">// Ignore, already connected</span></div>
<div class="line"><a name="l06184"></a><span class="lineno"> 6184</span>&#160;                                <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06185"></a><span class="lineno"> 6185</span>&#160;                            }</div>
<div class="line"><a name="l06186"></a><span class="lineno"> 6186</span>&#160;                        }</div>
<div class="line"><a name="l06187"></a><span class="lineno"> 6187</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l06188"></a><span class="lineno"> 6188</span>&#160;                        {</div>
<div class="line"><a name="l06189"></a><span class="lineno"> 6189</span>&#160;                            <span class="comment">// Version mismatch error?</span></div>
<div class="line"><a name="l06190"></a><span class="lineno"> 6190</span>&#160;                            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(0);</div>
<div class="line"><a name="l06191"></a><span class="lineno"> 6191</span>&#160;                            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06192"></a><span class="lineno"> 6192</span>&#160;                        }</div>
<div class="line"><a name="l06193"></a><span class="lineno"> 6193</span>&#160;                    }</div>
<div class="line"><a name="l06194"></a><span class="lineno"> 6194</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l06195"></a><span class="lineno"> 6195</span>&#160;                    {</div>
<div class="line"><a name="l06196"></a><span class="lineno"> 6196</span>&#160;                        <span class="comment">// What do I do if I get a message from a system, before I am fully connected?</span></div>
<div class="line"><a name="l06197"></a><span class="lineno"> 6197</span>&#160;                        <span class="comment">// I can either ignore it or give it to the user</span></div>
<div class="line"><a name="l06198"></a><span class="lineno"> 6198</span>&#160;                        <span class="comment">// It seems like giving it to the user is a better option</span></div>
<div class="line"><a name="l06199"></a><span class="lineno"> 6199</span>&#160;                        <span class="keywordflow">if</span> ((data[0]&gt;=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a23b9fbbce91cff0da25035ed8fc0c0de">ID_TIMESTAMP</a> || data[0]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aea254aecc756b8f68b9b0b75ebefa246">ID_SND_RECEIPT_ACKED</a> || data[0]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aad5680905e97e2219ee27b671c6a7fb0">ID_SND_RECEIPT_LOSS</a>) &amp;&amp;</div>
<div class="line"><a name="l06200"></a><span class="lineno"> 6200</span>&#160;                            remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#ae8d595517ba6acb95ffd4d3f54b30cdd">isActive</a></div>
<div class="line"><a name="l06201"></a><span class="lineno"> 6201</span>&#160;                            )</div>
<div class="line"><a name="l06202"></a><span class="lineno"> 6202</span>&#160;                        {</div>
<div class="line"><a name="l06203"></a><span class="lineno"> 6203</span>&#160;                            packet=<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae201eebe7aa4f06c77cab7721a1fb5e8">AllocPacket</a>(byteSize, data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l06204"></a><span class="lineno"> 6204</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a> = bitSize;</div>
<div class="line"><a name="l06205"></a><span class="lineno"> 6205</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> = systemAddress;</div>
<div class="line"><a name="l06206"></a><span class="lineno"> 6206</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a397b41f1f82b716399a756b1e881c5f0">remoteSystemIndex</a>;</div>
<div class="line"><a name="l06207"></a><span class="lineno"> 6207</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a> = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a27eb8ff50f11c30c40391023f786359d" title="connection time, if active.">guid</a>;</div>
<div class="line"><a name="l06208"></a><span class="lineno"> 6208</span>&#160;                            packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l06209"></a><span class="lineno"> 6209</span>&#160;                            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a639f3b189e42460761c9f413871852f5">AddPacketToProducer</a>(packet);</div>
<div class="line"><a name="l06210"></a><span class="lineno"> 6210</span>&#160;                        }</div>
<div class="line"><a name="l06211"></a><span class="lineno"> 6211</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l06212"></a><span class="lineno"> 6212</span>&#160;                        {</div>
<div class="line"><a name="l06213"></a><span class="lineno"> 6213</span>&#160;                            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(data, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l06214"></a><span class="lineno"> 6214</span>&#160;                        }</div>
<div class="line"><a name="l06215"></a><span class="lineno"> 6215</span>&#160;                    }</div>
<div class="line"><a name="l06216"></a><span class="lineno"> 6216</span>&#160;                }</div>
<div class="line"><a name="l06217"></a><span class="lineno"> 6217</span>&#160;</div>
<div class="line"><a name="l06218"></a><span class="lineno"> 6218</span>&#160;                <span class="comment">// Does the reliability layer have any more packets waiting for us?</span></div>
<div class="line"><a name="l06219"></a><span class="lineno"> 6219</span>&#160;                <span class="comment">// To be thread safe, this has to be called in the same thread as HandleSocketReceiveFromConnectedPlayer</span></div>
<div class="line"><a name="l06220"></a><span class="lineno"> 6220</span>&#160;                bitSize = remoteSystem-&gt;<a class="code" href="../../df/dab/struct_s_l_net_1_1_rak_peer_1_1_remote_system_struct.xhtml#a71bc3dc9a3abcf6a0dda287f190a8e2a" title="Their internal IP, behind the LAN.">reliabilityLayer</a>.<a class="code" href="../../d2/d55/class_s_l_net_1_1_reliability_layer.xhtml#abcc7d50f16310d422dcdb3eaee55c7db">Receive</a>( &amp;data );</div>
<div class="line"><a name="l06221"></a><span class="lineno"> 6221</span>&#160;            }</div>
<div class="line"><a name="l06222"></a><span class="lineno"> 6222</span>&#160;        </div>
<div class="line"><a name="l06223"></a><span class="lineno"> 6223</span>&#160;    }</div>
<div class="line"><a name="l06224"></a><span class="lineno"> 6224</span>&#160;</div>
<div class="line"><a name="l06225"></a><span class="lineno"> 6225</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l06226"></a><span class="lineno"> 6226</span>&#160;}</div>
<div class="line"><a name="l06227"></a><span class="lineno"> 6227</span>&#160;</div>
<div class="line"><a name="l06228"></a><span class="lineno"> 6228</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l06229"></a><span class="lineno"> 6229</span>&#160;</div>
<div class="line"><a name="l06230"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6958fbc2fdb1193f7de0d790ca291dae"> 6230</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a6958fbc2fdb1193f7de0d790ca291dae">RakPeer::OnRNS2Recv</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d2/ddc/struct_s_l_net_1_1_r_n_s2_recv_struct">RNS2RecvStruct</a> *recvStruct)</div>
<div class="line"><a name="l06231"></a><span class="lineno"> 6231</span>&#160;{</div>
<div class="line"><a name="l06232"></a><span class="lineno"> 6232</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acd6e96da11f40c506d6dfaa9460f9eb8">incomingDatagramEventHandler</a>)</div>
<div class="line"><a name="l06233"></a><span class="lineno"> 6233</span>&#160;    {</div>
<div class="line"><a name="l06234"></a><span class="lineno"> 6234</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#acd6e96da11f40c506d6dfaa9460f9eb8">incomingDatagramEventHandler</a>(recvStruct)!=<span class="keyword">true</span>)</div>
<div class="line"><a name="l06235"></a><span class="lineno"> 6235</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l06236"></a><span class="lineno"> 6236</span>&#160;    }</div>
<div class="line"><a name="l06237"></a><span class="lineno"> 6237</span>&#160;</div>
<div class="line"><a name="l06238"></a><span class="lineno"> 6238</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a872edaaa63da89c051fd40965edcafcd">PushBufferedPacket</a>(recvStruct);</div>
<div class="line"><a name="l06239"></a><span class="lineno"> 6239</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a31c7d09f76fc2f9042905c68ff1a5491">SetEvent</a>();</div>
<div class="line"><a name="l06240"></a><span class="lineno"> 6240</span>&#160;}</div>
<div class="line"><a name="l06241"></a><span class="lineno"> 6241</span>&#160;</div>
<div class="line"><a name="l06242"></a><span class="lineno"> 6242</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l06243"></a><span class="lineno"> 6243</span>&#160;</div>
<div class="line"><a name="l06244"></a><span class="lineno"> 6244</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l06245"></a><span class="lineno"> 6245</span>&#160;<span class="comment">RAK_THREAD_DECLARATION(SLNet::RecvFromLoop)</span></div>
<div class="line"><a name="l06246"></a><span class="lineno"> 6246</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l06247"></a><span class="lineno"> 6247</span>&#160;<span class="comment">#if defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l06248"></a><span class="lineno"> 6248</span>&#160;<span class="comment">    RakPeerAndIndex *rpai = ( RakPeerAndIndex * ) RakThread::GetRealThreadArgument(callGetRealThreadArgument);</span></div>
<div class="line"><a name="l06249"></a><span class="lineno"> 6249</span>&#160;<span class="comment">#else</span></div>
<div class="line"><a name="l06250"></a><span class="lineno"> 6250</span>&#160;<span class="comment">    RakPeerAndIndex *rpai = ( RakPeerAndIndex * ) arguments;</span></div>
<div class="line"><a name="l06251"></a><span class="lineno"> 6251</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06252"></a><span class="lineno"> 6252</span>&#160;<span class="comment">    RakPeer * rakPeer = rpai-&gt;rakPeer;</span></div>
<div class="line"><a name="l06253"></a><span class="lineno"> 6253</span>&#160;<span class="comment">    RakNetSocket *s = rpai-&gt;s;</span></div>
<div class="line"><a name="l06254"></a><span class="lineno"> 6254</span>&#160;<span class="comment">    SLNet::OP_DELETE(rpai,_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l06255"></a><span class="lineno"> 6255</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06256"></a><span class="lineno"> 6256</span>&#160;<span class="comment">    rakPeer-&gt;isRecvFromLoopThreadActive.Increment();</span></div>
<div class="line"><a name="l06257"></a><span class="lineno"> 6257</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06258"></a><span class="lineno"> 6258</span>&#160;<span class="comment">    while ( rakPeer-&gt;endThreads == false )</span></div>
<div class="line"><a name="l06259"></a><span class="lineno"> 6259</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l06260"></a><span class="lineno"> 6260</span>&#160;<span class="comment">        if (rakPeer-&gt;RunRecvFromOnce(s)==false &amp;&amp;</span></div>
<div class="line"><a name="l06261"></a><span class="lineno"> 6261</span>&#160;<span class="comment">            s-&gt;GetBlockingSocket()==false)</span></div>
<div class="line"><a name="l06262"></a><span class="lineno"> 6262</span>&#160;<span class="comment">            RakSleep(0);</span></div>
<div class="line"><a name="l06263"></a><span class="lineno"> 6263</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l06264"></a><span class="lineno"> 6264</span>&#160;<span class="comment">    rakPeer-&gt;isRecvFromLoopThreadActive.Decrement();</span></div>
<div class="line"><a name="l06265"></a><span class="lineno"> 6265</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06266"></a><span class="lineno"> 6266</span>&#160;<span class="comment">#if defined(SN_TARGET_PSP2)</span></div>
<div class="line"><a name="l06267"></a><span class="lineno"> 6267</span>&#160;<span class="comment">    return sceKernelExitDeleteThread(0);</span></div>
<div class="line"><a name="l06268"></a><span class="lineno"> 6268</span>&#160;<span class="comment">#else</span></div>
<div class="line"><a name="l06269"></a><span class="lineno"> 6269</span>&#160;<span class="comment">    return 0;</span></div>
<div class="line"><a name="l06270"></a><span class="lineno"> 6270</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06271"></a><span class="lineno"> 6271</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l06272"></a><span class="lineno"> 6272</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l06273"></a><span class="lineno"> 6273</span>&#160;</div>
<div class="line"><a name="l06274"></a><span class="lineno"> 6274</span>&#160;<span class="comment">// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l06275"></a><span class="lineno"><a class="code" href="../../d5/d55/_rak_peer_8cpp.xhtml#a4b2848ad36fcdbbe46a4d676356ea667"> 6275</a></span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aec04e53f7181b168399706743cbf7e7a">RAK_THREAD_DECLARATION</a>(SLNet::UpdateNetworkLoop)</div>
<div class="line"><a name="l06276"></a><span class="lineno"> 6276</span>&#160;{</div>
<div class="line"><a name="l06277"></a><span class="lineno"> 6277</span>&#160;</div>
<div class="line"><a name="l06278"></a><span class="lineno"> 6278</span>&#160;</div>
<div class="line"><a name="l06279"></a><span class="lineno"> 6279</span>&#160;</div>
<div class="line"><a name="l06280"></a><span class="lineno"> 6280</span>&#160;    <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> * rakPeer = ( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> * ) arguments;</div>
<div class="line"><a name="l06281"></a><span class="lineno"> 6281</span>&#160;</div>
<div class="line"><a name="l06282"></a><span class="lineno"> 6282</span>&#160;</div>
<div class="line"><a name="l06283"></a><span class="lineno"> 6283</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l06284"></a><span class="lineno"> 6284</span>&#160;<span class="comment">    // 11/15/05 - this is slower than Sleep()</span></div>
<div class="line"><a name="l06285"></a><span class="lineno"> 6285</span>&#160;<span class="comment">#ifdef _WIN32</span></div>
<div class="line"><a name="l06286"></a><span class="lineno"> 6286</span>&#160;<span class="comment">#if (_WIN32_WINNT &gt;= 0x0400) || (_WIN32_WINDOWS &gt; 0x0400)</span></div>
<div class="line"><a name="l06287"></a><span class="lineno"> 6287</span>&#160;<span class="comment">    // Lets see if these timers give better performance than Sleep</span></div>
<div class="line"><a name="l06288"></a><span class="lineno"> 6288</span>&#160;<span class="comment">    HANDLE timerHandle;</span></div>
<div class="line"><a name="l06289"></a><span class="lineno"> 6289</span>&#160;<span class="comment">    LARGE_INTEGER dueTime;</span></div>
<div class="line"><a name="l06290"></a><span class="lineno"> 6290</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06291"></a><span class="lineno"> 6291</span>&#160;<span class="comment">    if ( rakPeer-&gt;threadSleepTimer &lt;= 0 )</span></div>
<div class="line"><a name="l06292"></a><span class="lineno"> 6292</span>&#160;<span class="comment">        rakPeer-&gt;threadSleepTimer = 1;</span></div>
<div class="line"><a name="l06293"></a><span class="lineno"> 6293</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06294"></a><span class="lineno"> 6294</span>&#160;<span class="comment">    // 2nd parameter of false means synchronization timer instead of manual-reset timer</span></div>
<div class="line"><a name="l06295"></a><span class="lineno"> 6295</span>&#160;<span class="comment">    timerHandle = CreateWaitableTimer( NULL, FALSE, 0 );</span></div>
<div class="line"><a name="l06296"></a><span class="lineno"> 6296</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06297"></a><span class="lineno"> 6297</span>&#160;<span class="comment">    RakAssert( timerHandle );</span></div>
<div class="line"><a name="l06298"></a><span class="lineno"> 6298</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06299"></a><span class="lineno"> 6299</span>&#160;<span class="comment">    dueTime.QuadPart = -10000 * rakPeer-&gt;threadSleepTimer; // 10000 is 1 ms?</span></div>
<div class="line"><a name="l06300"></a><span class="lineno"> 6300</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06301"></a><span class="lineno"> 6301</span>&#160;<span class="comment">    BOOL success = SetWaitableTimer( timerHandle, &amp;dueTime, rakPeer-&gt;threadSleepTimer, NULL, NULL, FALSE );</span></div>
<div class="line"><a name="l06302"></a><span class="lineno"> 6302</span>&#160;<span class="comment">    (void) success;</span></div>
<div class="line"><a name="l06303"></a><span class="lineno"> 6303</span>&#160;<span class="comment">    RakAssert( success );</span></div>
<div class="line"><a name="l06304"></a><span class="lineno"> 6304</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06305"></a><span class="lineno"> 6305</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06306"></a><span class="lineno"> 6306</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06307"></a><span class="lineno"> 6307</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l06308"></a><span class="lineno"> 6308</span>&#160;</div>
<div class="line"><a name="l06309"></a><span class="lineno"> 6309</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> updateBitStream( <a class="code" href="../../d2/d24/_m_t_u_size_8h.xhtml#a39d9da73f39bf9acabfc9e0ad2ae97c5">MAXIMUM_MTU_SIZE</a></div>
<div class="line"><a name="l06310"></a><span class="lineno"> 6310</span>&#160;#<span class="keywordflow">if</span> <a class="code" href="../../de/ddb/_native_feature_includes_8h.xhtml#ab832d1fd9128d4b94cdb5fcb6ed17bbb">LIBCAT_SECURITY</a>==1</div>
<div class="line"><a name="l06311"></a><span class="lineno"> 6311</span>&#160;        + cat::AuthenticatedEncryption::OVERHEAD_BYTES</div>
<div class="line"><a name="l06312"></a><span class="lineno"> 6312</span>&#160;#endif</div>
<div class="line"><a name="l06313"></a><span class="lineno"> 6313</span>&#160;        );</div>
<div class="line"><a name="l06314"></a><span class="lineno"> 6314</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l06315"></a><span class="lineno"> 6315</span>&#160;    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l06316"></a><span class="lineno"> 6316</span>&#160;</div>
<div class="line"><a name="l06317"></a><span class="lineno"> 6317</span>&#160;    <span class="keywordtype">bool</span> running = <span class="keyword">true</span>;</div>
<div class="line"><a name="l06318"></a><span class="lineno"> 6318</span>&#160;    <span class="keywordflow">while</span> ( running )</div>
<div class="line"><a name="l06319"></a><span class="lineno"> 6319</span>&#160;    {</div>
<div class="line"><a name="l06320"></a><span class="lineno"> 6320</span>&#160;        <span class="keywordflow">if</span> (rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#ae362305e23379edf573a4cbff2df19ef" title="Set this to true to terminate the Peer thread execution.">endThreads</a>) {</div>
<div class="line"><a name="l06321"></a><span class="lineno"> 6321</span>&#160;            <span class="comment">// allow just one more final update-run prior to shutting down this thread to make sure that outstanding acks are still sent and the peers don&#39;t unnecessary wait for already retrieved packets</span></div>
<div class="line"><a name="l06322"></a><span class="lineno"> 6322</span>&#160;            <span class="comment">// note: this fixes part of SLNET-123</span></div>
<div class="line"><a name="l06323"></a><span class="lineno"> 6323</span>&#160;            running = <span class="keyword">false</span>;</div>
<div class="line"><a name="l06324"></a><span class="lineno"> 6324</span>&#160;        }</div>
<div class="line"><a name="l06325"></a><span class="lineno"> 6325</span>&#160;<span class="comment">// #ifdef _DEBUG</span></div>
<div class="line"><a name="l06326"></a><span class="lineno"> 6326</span>&#160;<span class="comment">//      // Sanity check, make sure RunUpdateCycle does not block or not otherwise get called for a long time</span></div>
<div class="line"><a name="l06327"></a><span class="lineno"> 6327</span>&#160;<span class="comment">//      RakNetTime thisCall=SLNet::GetTime();</span></div>
<div class="line"><a name="l06328"></a><span class="lineno"> 6328</span>&#160;<span class="comment">//      RakAssert(thisCall-lastCall&lt;250);</span></div>
<div class="line"><a name="l06329"></a><span class="lineno"> 6329</span>&#160;<span class="comment">//      lastCall=thisCall;</span></div>
<div class="line"><a name="l06330"></a><span class="lineno"> 6330</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l06331"></a><span class="lineno"> 6331</span>&#160;        <span class="keywordflow">if</span> (rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a20fcdb099d34697499fac5cc66c3cc3a">userUpdateThreadPtr</a>)</div>
<div class="line"><a name="l06332"></a><span class="lineno"> 6332</span>&#160;            rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a20fcdb099d34697499fac5cc66c3cc3a">userUpdateThreadPtr</a>(rakPeer, rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a28a260ba6e476355e67a7c794f4f54d2">userUpdateThreadData</a>);</div>
<div class="line"><a name="l06333"></a><span class="lineno"> 6333</span>&#160;</div>
<div class="line"><a name="l06334"></a><span class="lineno"> 6334</span>&#160;        rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a601d36de413c7b94fb689e205921df9e">RunUpdateCycle</a>(updateBitStream);</div>
<div class="line"><a name="l06335"></a><span class="lineno"> 6335</span>&#160;</div>
<div class="line"><a name="l06336"></a><span class="lineno"> 6336</span>&#160;        <span class="comment">// Pending sends go out this often, unless quitAndDataEvents is set</span></div>
<div class="line"><a name="l06337"></a><span class="lineno"> 6337</span>&#160;        rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a15b5ee1db6ab9f6620954e2ed07e2093">quitAndDataEvents</a>.<a class="code" href="../../df/d28/class_s_l_net_1_1_signaled_event.xhtml#a2fd996cd5b65eaac7aec7e57a47a4609">WaitOnEvent</a>(10);</div>
<div class="line"><a name="l06338"></a><span class="lineno"> 6338</span>&#160;</div>
<div class="line"><a name="l06339"></a><span class="lineno"> 6339</span>&#160;        <span class="comment">/*</span></div>
<div class="line"><a name="l06340"></a><span class="lineno"> 6340</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06341"></a><span class="lineno"> 6341</span>&#160;<span class="comment">// #if ((_WIN32_WINNT &gt;= 0x0400) || (_WIN32_WINDOWS &gt; 0x0400)) &amp;&amp;</span></div>
<div class="line"><a name="l06342"></a><span class="lineno"> 6342</span>&#160;<span class="comment">#if defined(USE_WAIT_FOR_MULTIPLE_EVENTS) &amp;&amp; defined(_WIN32)</span></div>
<div class="line"><a name="l06343"></a><span class="lineno"> 6343</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06344"></a><span class="lineno"> 6344</span>&#160;<span class="comment">        if (rakPeer-&gt;threadSleepTimer&gt;0)</span></div>
<div class="line"><a name="l06345"></a><span class="lineno"> 6345</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l06346"></a><span class="lineno"> 6346</span>&#160;<span class="comment">            WSAEVENT eventArray[256];</span></div>
<div class="line"><a name="l06347"></a><span class="lineno"> 6347</span>&#160;<span class="comment">            unsigned int i, eventArrayIndex;</span></div>
<div class="line"><a name="l06348"></a><span class="lineno"> 6348</span>&#160;<span class="comment">            for (i=0,eventArrayIndex=0; i &lt; rakPeer-&gt;socketList.Size(); i++)</span></div>
<div class="line"><a name="l06349"></a><span class="lineno"> 6349</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l06350"></a><span class="lineno"> 6350</span>&#160;<span class="comment">                if (rakPeer-&gt;socketList[i]-&gt;recvEvent!=INVALID_HANDLE_VALUE)</span></div>
<div class="line"><a name="l06351"></a><span class="lineno"> 6351</span>&#160;<span class="comment">                {</span></div>
<div class="line"><a name="l06352"></a><span class="lineno"> 6352</span>&#160;<span class="comment">                    eventArray[eventArrayIndex]=rakPeer-&gt;socketList[i]-&gt;recvEvent;</span></div>
<div class="line"><a name="l06353"></a><span class="lineno"> 6353</span>&#160;<span class="comment">                    eventArrayIndex++;</span></div>
<div class="line"><a name="l06354"></a><span class="lineno"> 6354</span>&#160;<span class="comment">                    if (eventArrayIndex==256)</span></div>
<div class="line"><a name="l06355"></a><span class="lineno"> 6355</span>&#160;<span class="comment">                        break;</span></div>
<div class="line"><a name="l06356"></a><span class="lineno"> 6356</span>&#160;<span class="comment">                }</span></div>
<div class="line"><a name="l06357"></a><span class="lineno"> 6357</span>&#160;<span class="comment">            }</span></div>
<div class="line"><a name="l06358"></a><span class="lineno"> 6358</span>&#160;<span class="comment">            WSAWaitForMultipleEvents(eventArrayIndex,(const HANDLE*) &amp;eventArray,FALSE,rakPeer-&gt;threadSleepTimer,FALSE);</span></div>
<div class="line"><a name="l06359"></a><span class="lineno"> 6359</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l06360"></a><span class="lineno"> 6360</span>&#160;<span class="comment">        else</span></div>
<div class="line"><a name="l06361"></a><span class="lineno"> 6361</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l06362"></a><span class="lineno"> 6362</span>&#160;<span class="comment">            RakSleep(0);</span></div>
<div class="line"><a name="l06363"></a><span class="lineno"> 6363</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l06364"></a><span class="lineno"> 6364</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06365"></a><span class="lineno"> 6365</span>&#160;<span class="comment">#else // ((_WIN32_WINNT &gt;= 0x0400) || (_WIN32_WINDOWS &gt; 0x0400)) &amp;&amp; defined(USE_WAIT_FOR_MULTIPLE_EVENTS)</span></div>
<div class="line"><a name="l06366"></a><span class="lineno"> 6366</span>&#160;<span class="comment">        #pragma message(&quot;-- RakNet: Using Sleep(). Uncomment USE_WAIT_FOR_MULTIPLE_EVENTS in defines.h if you want to use WaitForSingleObject instead. --&quot;)</span></div>
<div class="line"><a name="l06367"></a><span class="lineno"> 6367</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l06368"></a><span class="lineno"> 6368</span>&#160;<span class="comment">        RakSleep( rakPeer-&gt;threadSleepTimer );</span></div>
<div class="line"><a name="l06369"></a><span class="lineno"> 6369</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06370"></a><span class="lineno"> 6370</span>&#160;<span class="comment">        */</span></div>
<div class="line"><a name="l06371"></a><span class="lineno"> 6371</span>&#160;    }</div>
<div class="line"><a name="l06372"></a><span class="lineno"> 6372</span>&#160;</div>
<div class="line"><a name="l06373"></a><span class="lineno"> 6373</span>&#160;    rakPeer-&gt;<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#aeaa8130143d14b02ed37c51ebd4e0031" title="true if the peer thread is active.">isMainLoopThreadActive</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l06374"></a><span class="lineno"> 6374</span>&#160;</div>
<div class="line"><a name="l06375"></a><span class="lineno"> 6375</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l06376"></a><span class="lineno"> 6376</span>&#160;<span class="comment">#ifdef _WIN32</span></div>
<div class="line"><a name="l06377"></a><span class="lineno"> 6377</span>&#160;<span class="comment">#if (_WIN32_WINNT &gt;= 0x0400) || (_WIN32_WINDOWS &gt; 0x0400)</span></div>
<div class="line"><a name="l06378"></a><span class="lineno"> 6378</span>&#160;<span class="comment">    CloseHandle(timerHandle);</span></div>
<div class="line"><a name="l06379"></a><span class="lineno"> 6379</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06380"></a><span class="lineno"> 6380</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l06381"></a><span class="lineno"> 6381</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l06382"></a><span class="lineno"> 6382</span>&#160;</div>
<div class="line"><a name="l06383"></a><span class="lineno"> 6383</span>&#160;</div>
<div class="line"><a name="l06384"></a><span class="lineno"> 6384</span>&#160;</div>
<div class="line"><a name="l06385"></a><span class="lineno"> 6385</span>&#160;</div>
<div class="line"><a name="l06386"></a><span class="lineno"> 6386</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l06387"></a><span class="lineno"> 6387</span>&#160;</div>
<div class="line"><a name="l06388"></a><span class="lineno"> 6388</span>&#160;}</div>
<div class="line"><a name="l06389"></a><span class="lineno"> 6389</span>&#160;</div>
<div class="line"><a name="l06390"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78343590e47d7f2ffddcd81cb72dcf0a"> 6390</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a78343590e47d7f2ffddcd81cb72dcf0a">RakPeer::CallPluginCallbacks</a>(<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;PluginInterface2*&gt;</a> &amp;pluginList, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet)</div>
<div class="line"><a name="l06391"></a><span class="lineno"> 6391</span>&#160;{</div>
<div class="line"><a name="l06392"></a><span class="lineno"> 6392</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; pluginList.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l06393"></a><span class="lineno"> 6393</span>&#160;    {</div>
<div class="line"><a name="l06394"></a><span class="lineno"> 6394</span>&#160;        <span class="keywordflow">switch</span> (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0])</div>
<div class="line"><a name="l06395"></a><span class="lineno"> 6395</span>&#160;        {</div>
<div class="line"><a name="l06396"></a><span class="lineno"> 6396</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa3c9ab42767af4b738cceb5a5b3600ae">ID_DISCONNECTION_NOTIFICATION</a>:</div>
<div class="line"><a name="l06397"></a><span class="lineno"> 6397</span>&#160;            pluginList[i]-&gt;OnClosedConnection(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga4d3ac5ca8821fadad6d22d0267e06803a01e30ee7b1590feeaf2e6171580f1c05" title="Got ID_DISCONNECTION_NOTIFICATION.">LCR_DISCONNECTION_NOTIFICATION</a>);</div>
<div class="line"><a name="l06398"></a><span class="lineno"> 6398</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06399"></a><span class="lineno"> 6399</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a28dffd6d158f4003cb58fbe9b483a9a9">ID_CONNECTION_LOST</a>:</div>
<div class="line"><a name="l06400"></a><span class="lineno"> 6400</span>&#160;            pluginList[i]-&gt;OnClosedConnection(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga4d3ac5ca8821fadad6d22d0267e06803a5c693a8b52ee37ff6bd413e732260914" title="GOT ID_CONNECTION_LOST.">LCR_CONNECTION_LOST</a>);</div>
<div class="line"><a name="l06401"></a><span class="lineno"> 6401</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06402"></a><span class="lineno"> 6402</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a884712d974b7a5747131dcce61538180" title="RakPeer - A remote system has successfully connected.">ID_NEW_INCOMING_CONNECTION</a>:</div>
<div class="line"><a name="l06403"></a><span class="lineno"> 6403</span>&#160;            pluginList[i]-&gt;OnNewConnection(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l06404"></a><span class="lineno"> 6404</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06405"></a><span class="lineno"> 6405</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a8e1677131f83c52ed49001d6401fd2e7" title="RakPeer - In a client/server environment, our connection request to the server has been accepted...">ID_CONNECTION_REQUEST_ACCEPTED</a>:</div>
<div class="line"><a name="l06406"></a><span class="lineno"> 6406</span>&#160;            pluginList[i]-&gt;OnNewConnection(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l06407"></a><span class="lineno"> 6407</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06408"></a><span class="lineno"> 6408</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d4e094a2d30cd58511ebe6934a34c0e" title="RakPeer - Sent to the player when a connection request cannot be completed due to inability to connec...">ID_CONNECTION_ATTEMPT_FAILED</a>:</div>
<div class="line"><a name="l06409"></a><span class="lineno"> 6409</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca8b987e31c1a50418295eebc8a32d7bd9">FCAR_CONNECTION_ATTEMPT_FAILED</a>);</div>
<div class="line"><a name="l06410"></a><span class="lineno"> 6410</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06411"></a><span class="lineno"> 6411</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d4b064d4e8e1c0a24c9bb8d7eef82a0" title="RakPeer - Remote system requires secure connections, pass a public key to RakPeerInterface::Connect()...">ID_REMOTE_SYSTEM_REQUIRES_PUBLIC_KEY</a>:</div>
<div class="line"><a name="l06412"></a><span class="lineno"> 6412</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca477a883f833f0cf823b8de018af68b44">FCAR_REMOTE_SYSTEM_REQUIRES_PUBLIC_KEY</a>);</div>
<div class="line"><a name="l06413"></a><span class="lineno"> 6413</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06414"></a><span class="lineno"> 6414</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a56d4a0816670c5c7beed7f6fbe88dced" title="RakPeer - We passed a public key to RakPeerInterface::Connect(), but the other system did not have se...">ID_OUR_SYSTEM_REQUIRES_SECURITY</a>:</div>
<div class="line"><a name="l06415"></a><span class="lineno"> 6415</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca544a956633e3805a45a7c34a053a924f">FCAR_OUR_SYSTEM_REQUIRES_SECURITY</a>);</div>
<div class="line"><a name="l06416"></a><span class="lineno"> 6416</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06417"></a><span class="lineno"> 6417</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3abc74d727a1ced27473d58b3084172eb9" title="RakPeer - Wrong public key passed to RakPeerInterface::Connect()">ID_PUBLIC_KEY_MISMATCH</a>:</div>
<div class="line"><a name="l06418"></a><span class="lineno"> 6418</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca6728016c187c2e0c09093ea93aa6b859">FCAR_PUBLIC_KEY_MISMATCH</a>);</div>
<div class="line"><a name="l06419"></a><span class="lineno"> 6419</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06420"></a><span class="lineno"> 6420</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5d00a59a0b9f0b8a50a041f2032184b5" title="RakPeer - Sent a connect request to a system we are currently connected to.">ID_ALREADY_CONNECTED</a>:</div>
<div class="line"><a name="l06421"></a><span class="lineno"> 6421</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca3c351b48407e1209326942227afa181d">FCAR_ALREADY_CONNECTED</a>);</div>
<div class="line"><a name="l06422"></a><span class="lineno"> 6422</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06423"></a><span class="lineno"> 6423</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a7d040cf221aa9a12604d0293348946c2" title="RakPeer - The system we attempted to connect to is not accepting new connections.">ID_NO_FREE_INCOMING_CONNECTIONS</a>:</div>
<div class="line"><a name="l06424"></a><span class="lineno"> 6424</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26caac6fb767a3055a217b885a369ecb1a42">FCAR_NO_FREE_INCOMING_CONNECTIONS</a>);</div>
<div class="line"><a name="l06425"></a><span class="lineno"> 6425</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06426"></a><span class="lineno"> 6426</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a68c1b5b947ff46814ffb7fdf4853f350" title="RakPeer - We are banned from the system we attempted to connect to.">ID_CONNECTION_BANNED</a>:</div>
<div class="line"><a name="l06427"></a><span class="lineno"> 6427</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca56b69510bdfa6387034db12755fb77b6">FCAR_CONNECTION_BANNED</a>);</div>
<div class="line"><a name="l06428"></a><span class="lineno"> 6428</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06429"></a><span class="lineno"> 6429</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a2c69119824c8bd3faa96d9953d02a41d" title="RakPeer - The remote system is using a password and has refused our connection because we did not set...">ID_INVALID_PASSWORD</a>:</div>
<div class="line"><a name="l06430"></a><span class="lineno"> 6430</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca39b3cb106c029534bc8e335381df704c">FCAR_INVALID_PASSWORD</a>);</div>
<div class="line"><a name="l06431"></a><span class="lineno"> 6431</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06432"></a><span class="lineno"> 6432</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a5762f213c6741b179d62a751ec2ef804">ID_INCOMPATIBLE_PROTOCOL_VERSION</a>:</div>
<div class="line"><a name="l06433"></a><span class="lineno"> 6433</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca18fe8bb7d6c06b9011b25a02d2b5145a">FCAR_INCOMPATIBLE_PROTOCOL</a>);</div>
<div class="line"><a name="l06434"></a><span class="lineno"> 6434</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06435"></a><span class="lineno"> 6435</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a74191a2391c30daa47c0e98f44896fa5" title="RakPeer::SetLimitIPConnectionFrequency()">ID_IP_RECENTLY_CONNECTED</a>:</div>
<div class="line"><a name="l06436"></a><span class="lineno"> 6436</span>&#160;            pluginList[i]-&gt;OnFailedConnectionAttempt(packet, <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga111ccf3400cb3830cc7ef8c042c9b26ca5363f84c5a008eed4ba59c38e4c6cecb">FCAR_IP_RECENTLY_CONNECTED</a>);</div>
<div class="line"><a name="l06437"></a><span class="lineno"> 6437</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l06438"></a><span class="lineno"> 6438</span>&#160;        }</div>
<div class="line"><a name="l06439"></a><span class="lineno"> 6439</span>&#160;    }</div>
<div class="line"><a name="l06440"></a><span class="lineno"> 6440</span>&#160;}</div>
<div class="line"><a name="l06441"></a><span class="lineno"> 6441</span>&#160;</div>
<div class="line"><a name="l06442"></a><span class="lineno"><a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8285f205b3b5df5dd74ca7676710376c"> 6442</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a8285f205b3b5df5dd74ca7676710376c">RakPeer::FillIPList</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l06443"></a><span class="lineno"> 6443</span>&#160;{</div>
<div class="line"><a name="l06444"></a><span class="lineno"> 6444</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[0]!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l06445"></a><span class="lineno"> 6445</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l06446"></a><span class="lineno"> 6446</span>&#160;</div>
<div class="line"><a name="l06447"></a><span class="lineno"> 6447</span>&#160;    <span class="comment">// Fill out ipList structure</span></div>
<div class="line"><a name="l06448"></a><span class="lineno"> 6448</span>&#160;<span class="preprocessor">#if  !defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l06449"></a><span class="lineno"> 6449</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a608c0a4dead80c0f5d77504cc20d5450">RakNetSocket2::GetMyIP</a>( <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a> );</div>
<div class="line"><a name="l06450"></a><span class="lineno"> 6450</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l06451"></a><span class="lineno"> 6451</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l06452"></a><span class="lineno"> 6452</span>&#160;    <span class="comment">// Sort the addresses from lowest to highest</span></div>
<div class="line"><a name="l06453"></a><span class="lineno"> 6453</span>&#160;    <span class="keywordtype">int</span> startingIdx = 0;</div>
<div class="line"><a name="l06454"></a><span class="lineno"> 6454</span>&#160;    <span class="keywordflow">while</span> (startingIdx &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>-1 &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[startingIdx] != <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l06455"></a><span class="lineno"> 6455</span>&#160;    {</div>
<div class="line"><a name="l06456"></a><span class="lineno"> 6456</span>&#160;        <span class="keywordtype">int</span> lowestIdx = startingIdx;</div>
<div class="line"><a name="l06457"></a><span class="lineno"> 6457</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> curIdx = startingIdx + 1; curIdx &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>-1 &amp;&amp; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[curIdx] != <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>; curIdx++ )</div>
<div class="line"><a name="l06458"></a><span class="lineno"> 6458</span>&#160;        {</div>
<div class="line"><a name="l06459"></a><span class="lineno"> 6459</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[curIdx] &lt; <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[startingIdx])</div>
<div class="line"><a name="l06460"></a><span class="lineno"> 6460</span>&#160;            {</div>
<div class="line"><a name="l06461"></a><span class="lineno"> 6461</span>&#160;                lowestIdx = curIdx;</div>
<div class="line"><a name="l06462"></a><span class="lineno"> 6462</span>&#160;            }</div>
<div class="line"><a name="l06463"></a><span class="lineno"> 6463</span>&#160;        }</div>
<div class="line"><a name="l06464"></a><span class="lineno"> 6464</span>&#160;        <span class="keywordflow">if</span> (startingIdx != lowestIdx)</div>
<div class="line"><a name="l06465"></a><span class="lineno"> 6465</span>&#160;        {</div>
<div class="line"><a name="l06466"></a><span class="lineno"> 6466</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> temp = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[startingIdx];</div>
<div class="line"><a name="l06467"></a><span class="lineno"> 6467</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[startingIdx] = <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[lowestIdx];</div>
<div class="line"><a name="l06468"></a><span class="lineno"> 6468</span>&#160;            <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a0b340485a6df5ba285ab315ad62216a4">ipList</a>[lowestIdx] = temp;</div>
<div class="line"><a name="l06469"></a><span class="lineno"> 6469</span>&#160;        }</div>
<div class="line"><a name="l06470"></a><span class="lineno"> 6470</span>&#160;        ++startingIdx;</div>
<div class="line"><a name="l06471"></a><span class="lineno"> 6471</span>&#160;    }</div>
<div class="line"><a name="l06472"></a><span class="lineno"> 6472</span>&#160;}</div>
<div class="line"><a name="l06473"></a><span class="lineno"> 6473</span>&#160;</div>
<div class="line"><a name="l06474"></a><span class="lineno"> 6474</span>&#160;</div>
<div class="line"><a name="l06475"></a><span class="lineno"> 6475</span>&#160;<span class="comment">// #if defined(RMO_NEW_UNDEF_ALLOCATING_QUEUE)</span></div>
<div class="line"><a name="l06476"></a><span class="lineno"> 6476</span>&#160;<span class="comment">// #pragma pop_macro(&quot;new&quot;)</span></div>
<div class="line"><a name="l06477"></a><span class="lineno"> 6477</span>&#160;<span class="comment">// #undef RMO_NEW_UNDEF_ALLOCATING_QUEUE</span></div>
<div class="line"><a name="l06478"></a><span class="lineno"> 6478</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l06479"></a><span class="lineno"> 6479</span>&#160;</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d5/d55/_rak_peer_8cpp.xhtml">RakPeer.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

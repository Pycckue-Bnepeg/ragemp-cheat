<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::TransportInterface Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/d4e/class_s_l_net_1_1_transport_interface.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../da/d6b/class_s_l_net_1_1_transport_interface-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::TransportInterface Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Defines an interface that is used to send and receive null-terminated strings.  
 <a href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml">slikenet/TransportInterface.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::TransportInterface:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d1/db5/class_s_l_net_1_1_transport_interface__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa302a36aa88964dcac5c97f764266111"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#aa302a36aa88964dcac5c97f764266111">TransportInterface</a> ()</td></tr>
<tr class="separator:aa302a36aa88964dcac5c97f764266111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27900663b1a6669a598455cd55f791a"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ac27900663b1a6669a598455cd55f791a">~TransportInterface</a> ()</td></tr>
<tr class="separator:ac27900663b1a6669a598455cd55f791a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d2bf6c9022750469a81ecca2c3ac0f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a72d2bf6c9022750469a81ecca2c3ac0f">Start</a> (unsigned short port, bool serverMode)=0</td></tr>
<tr class="separator:a72d2bf6c9022750469a81ecca2c3ac0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a01052fbdf7b72289ef15650e7a99ae"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a0a01052fbdf7b72289ef15650e7a99ae">Stop</a> (void)=0</td></tr>
<tr class="memdesc:a0a01052fbdf7b72289ef15650e7a99ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the transport provider. You can clear memory and shutdown threads here.  <a href="#a0a01052fbdf7b72289ef15650e7a99ae"></a><br/></td></tr>
<tr class="separator:a0a01052fbdf7b72289ef15650e7a99ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6f5d46268e400149496babd9df74125"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress, const char *data,...)=0</td></tr>
<tr class="separator:ab6f5d46268e400149496babd9df74125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24b59b7cc57b2c48ab48129183f52b16"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a24b59b7cc57b2c48ab48129183f52b16">CloseConnection</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> systemAddress)=0</td></tr>
<tr class="separator:a24b59b7cc57b2c48ab48129183f52b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b64c016a27989829eff553a90388847"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a0b64c016a27989829eff553a90388847">Receive</a> (void)=0</td></tr>
<tr class="separator:a0b64c016a27989829eff553a90388847"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac524b4621730e0e4a6240c5e2f956f7b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ac524b4621730e0e4a6240c5e2f956f7b">DeallocatePacket</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)=0</td></tr>
<tr class="separator:ac524b4621730e0e4a6240c5e2f956f7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff45e15ac6c7127a6ca5bf5a39f0dfff"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#aff45e15ac6c7127a6ca5bf5a39f0dfff">HasNewIncomingConnection</a> (void)=0</td></tr>
<tr class="separator:aff45e15ac6c7127a6ca5bf5a39f0dfff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3412b037133e175a066c217df3306230"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a3412b037133e175a066c217df3306230">HasLostConnection</a> (void)=0</td></tr>
<tr class="separator:a3412b037133e175a066c217df3306230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c695705c824192b6a536b0afcbe4443"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml">CommandParserInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a3c695705c824192b6a536b0afcbe4443">GetCommandParser</a> (void)=0</td></tr>
<tr class="separator:a3c695705c824192b6a536b0afcbe4443"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines an interface that is used to send and receive null-terminated strings. </p>
<p>In practice this is only used by the CommandParser system for for servers. </p>

<p>Definition at line <a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml#l00039">39</a> of file <a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml">TransportInterface.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa302a36aa88964dcac5c97f764266111"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::TransportInterface::TransportInterface </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml#l00042">42</a> of file <a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml">TransportInterface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac27900663b1a6669a598455cd55f791a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::TransportInterface::~TransportInterface </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml#l00043">43</a> of file <a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml">TransportInterface.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a24b59b7cc57b2c48ab48129183f52b16"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TransportInterface::CloseConnection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Disconnect <em>systemAddress</em> . The binary address and port defines the <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> structure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The player/address to disconnect </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a3535bc6ab2ddedc5522b58730da09a1b">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#abdec5d7dc88749445e48375f9f761590">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="ac524b4621730e0e4a6240c5e2f956f7b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TransportInterface::DeallocatePacket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Deallocate the <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> structure returned by Receive </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">The</td><td>packet to deallocate </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a2ceef61250766571ff659f30dd86d58b">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#aa9dee1694314f3eff915068f9529add5">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="a3c695705c824192b6a536b0afcbe4443"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml">CommandParserInterface</a>* SLNet::TransportInterface::GetCommandParser </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Your transport provider can itself have command parsers if the transport layer has user-modifiable features For example, your transport layer may have a password which you want remote users to be able to set or you may want to allow remote users to turn on or off command echo </p>
<dl class="section return"><dt>Returns</dt><dd>0 if you do not need a command parser - otherwise the desired derivation of <a class="el" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml" title="The interface used by command parsers.">CommandParserInterface</a> </dd></dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a5bb289238f3e3e4566da7f3de8226fb0">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#a739c1c7c0f6d85a1dfa10299c7415360">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="a3412b037133e175a066c217df3306230"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TransportInterface::HasLostConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If a system loses the connection, you should queue that event and return the systemAddress/address of that player in this function. </p>
<dl class="section return"><dt>Returns</dt><dd>The SystemAddress/address of the system </dd></dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a39f4114722d81b1162a3fc2d08a1ccbf">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#acdc02108c314da804ba6620b006876b3">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="aff45e15ac6c7127a6ca5bf5a39f0dfff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> SLNet::TransportInterface::HasNewIncomingConnection </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If a new system connects to you, you should queue that event and return the systemAddress/address of that player in this function. </p>
<dl class="section return"><dt>Returns</dt><dd>The SystemAddress/address of the system </dd></dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a299dd196b30788d8dd8d2c841bf380c7">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#a704544df87913b1fa417f5dab4994070">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="a0b64c016a27989829eff553a90388847"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a>* SLNet::TransportInterface::Receive </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Return a string. The string should be allocated and written to <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">Packet::data</a> . The byte length should be written to <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">Packet::length</a> . The player/address should be written to <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">Packet::systemAddress</a> If your transport protocol adds special formatting to the data stream you should parse it out before returning it in the packet and thus only return a string in <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">Packet::data</a> </p>
<dl class="section return"><dt>Returns</dt><dd>The packet structure containing the result of Receive, or 0 if no data is available </dd></dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a7d3516e3ef5018f49501d7d821a90d89">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#add3374a1a5b8981966e5e916638b75cd">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="ab6f5d46268e400149496babd9df74125"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TransportInterface::Send </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Send a null-terminated string to <em>systemAddress</em> If your transport method requires particular formatting of the outgoing data (e.g. you don't just send strings) you can do it here and parse it out in <a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#a0b64c016a27989829eff553a90388847">Receive()</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The player to send the string to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>format specifier - same as RAKNET_DEBUG_PRINTF </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">...</td><td>format specification arguments - same as RAKNET_DEBUG_PRINTF </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a2f9481c1e9a92936b040c773ae06b409">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#a9cf8630e394c75a4abe8b007e40f9a15">SLNet::TelnetTransport</a>.</p>

<p>Referenced by <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00142">SLNet::CommandParserInterface::ReturnResult()</a>, and <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00095">SLNet::CommandParserInterface::SendCommandList()</a>.</p>

</div>
</div>
<a class="anchor" id="a72d2bf6c9022750469a81ecca2c3ac0f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool SLNet::TransportInterface::Start </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>serverMode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Start the transport provider on the indicated port. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">port</td><td>The port to start the transport provider on </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">serverMode</td><td>If true, you should allow incoming connections (I don't actually use this anywhere) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Return true on success, false on failure. </dd></dl>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a0824fb85a07d2e0145fcce50f30d1864">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#a9e7481ac9939be8da6c5e705901aeb36">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<a class="anchor" id="a0a01052fbdf7b72289ef15650e7a99ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::TransportInterface::Stop </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop the transport provider. You can clear memory and shutdown threads here. </p>

<p>Implemented in <a class="el" href="../../df/dc4/group___r_a_k_n_e_t___t_r_a_n_s_p_o_r_t___g_r_o_u_p.xhtml#a1c121e9bbb3499f549629f25e742f76b">SLNet::RakNetTransport2</a>, and <a class="el" href="../../d3/d41/class_s_l_net_1_1_telnet_transport.xhtml#ab197460de6af032c5ec2591f4bacccd0">SLNet::TelnetTransport</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../de/d05/_transport_interface_8h_source.xhtml">TransportInterface.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml">TransportInterface</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

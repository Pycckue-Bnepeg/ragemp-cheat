<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/PacketizedTCP.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/d75/_packetized_t_c_p_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PacketizedTCP.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/d75/_packetized_t_c_p_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2018, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/ddb/_native_feature_includes_8h.xhtml">slikenet/NativeFeatureIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_PacketizedTCP==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span> <span class="comment">// used for std::min</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d2/dd1/_packetized_t_c_p_8h.xhtml" title="A simple TCP based server allowing sends and receives. Can be connected by any TCP client...">slikenet/PacketizedTCP.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/df2/_native_types_8h.xhtml">slikenet/NativeTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/dc3/_bit_stream_8h.xhtml" title="This class allows you to write and read native types as a string of bits.">slikenet/BitStream.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml" title="All the message identifiers used by RakNet. Message identifiers comprise the first byte of any messag...">slikenet/MessageIdentifiers.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d42/alloca_8h.xhtml">slikenet/alloca.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">typedef</span> <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> PTCPHeader;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<a class="code" href="../../db/dbd/_export_8h.xhtml#aa00165c970bdb25e1c757b432509533b">STATIC_FACTORY_DEFINITIONS</a>(<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml">PacketizedTCP</a>,<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml">PacketizedTCP</a>);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a507976a59210042b078d1e6d981d5988">PacketizedTCP::PacketizedTCP</a>()</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a4a795d38df243d5c9e30e1cabe673132">PacketizedTCP::~PacketizedTCP</a>()</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a7e8a03b38394522903c96b50ba9f9dff">ClearAllConnections</a>();</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a24dc509b4245936f3cd11eac686824f3" title="Stops the TCP server.">PacketizedTCP::Stop</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab8e38a1a18cac128a2bb22ed5374cb04" title="Stops the TCP server.">TCPInterface::Stop</a>();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>(); i++)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27" title="Deallocates a packet returned by Receive.">DeallocatePacket</a>(<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>[i]);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a7e8a03b38394522903c96b50ba9f9dff">ClearAllConnections</a>();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a2e0359f51b82619ffce5c7b60ad11c8f" title="Sends a byte stream.">PacketizedTCP::Send</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keywordtype">unsigned</span> length, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress, <span class="keywordtype">bool</span> broadcast )</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    PTCPHeader dataLength;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    dataLength=length;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#ifndef __BITSTREAM_NATIVE_END</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adc5a85144836608947830e902cca005f" title="-‚Äî Member function template specialization declarations -‚Äî">SLNet::BitStream::DoEndianSwap</a>())</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#add30bae01b699057803b6d04f4af9a01">SLNet::BitStream::ReverseBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) &amp;length,(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) &amp;dataLength,<span class="keyword">sizeof</span>(dataLength));</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor"></span>        dataLength=length;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lengthsArray[2];</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *dataArray[2];</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    dataArray[0]=(<span class="keywordtype">char</span>*) &amp;dataLength;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    dataArray[1]=data;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    lengthsArray[0]=<span class="keyword">sizeof</span>(dataLength);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    lengthsArray[1]=length;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab9a18b30172fe1723a2ecaf91025642e">TCPInterface::SendList</a>(dataArray,lengthsArray,2,systemAddress,broadcast);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a845cf1394e5f38b6ca122c5c53b413b9">PacketizedTCP::SendList</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> **data, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *lengths, <span class="keyword">const</span> <span class="keywordtype">int</span> numParameters, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress, <span class="keywordtype">bool</span> broadcast )</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a61577774b1da1580e0682483b1137325">isStarted</a>.<a class="code" href="../../d2/d84/class_s_l_net_1_1_lockless_uint32__t.xhtml#a86baed56154945eff4217fcc99e3eb1f">GetValue</a>()==0)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (data==0)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">if</span> (systemAddress==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> &amp;&amp; broadcast==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    PTCPHeader totalLengthOfUserData=0;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; numParameters; i++)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">if</span> (lengths[i]&gt;0)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            totalLengthOfUserData+=lengths[i];</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">if</span> (totalLengthOfUserData==0)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    PTCPHeader dataLength;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#ifndef __BITSTREAM_NATIVE_END</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adc5a85144836608947830e902cca005f" title="-‚Äî Member function template specialization declarations -‚Äî">SLNet::BitStream::DoEndianSwap</a>())</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#add30bae01b699057803b6d04f4af9a01">SLNet::BitStream::ReverseBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) &amp;totalLengthOfUserData,(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) &amp;dataLength,<span class="keyword">sizeof</span>(dataLength));</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span>    dataLength=totalLengthOfUserData;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lengthsArray[513];</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *dataArray[513];</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    dataArray[0]=(<span class="keywordtype">char</span>*) &amp;dataLength;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    lengthsArray[0]=<span class="keyword">sizeof</span>(dataLength);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; 512 &amp;&amp; i &lt; numParameters; i++)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        dataArray[i+1]=data[i];</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        lengthsArray[i+1]=lengths[i];</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }   </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ab9a18b30172fe1723a2ecaf91025642e">TCPInterface::SendList</a>(dataArray,lengthsArray,std::min(numParameters, 511)+1,systemAddress,broadcast);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a448f16c8da3861951c9a8ea4a4f9710a">PacketizedTCP::PushNotificationsToQueues</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> sa;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    sa = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#ad45c6e1c80948f916bf946896c3ba84f" title="Queued events of new incoming connections.">TCPInterface::HasNewIncomingConnection</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a8c5100e8cf1d08acb9c5ad44d3ed7d48">_newIncomingConnections</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(sa, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a3a6b864f72a9ba6447d7a292089b147a">AddToConnectionList</a>(sa);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    sa = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a58fe702e887f58dbe6ea6e12210e55d2">TCPInterface::HasFailedConnectionAttempt</a>();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a54b1f5b77a9a2a586cda9a0b97c7ae2a">_failedConnectionAttempts</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(sa, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    sa = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0eb90925c3a0ae42d00019214446fb97" title="Queued events of lost connections.">TCPInterface::HasLostConnection</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a47f9e955cae94554377644973ee1b58c">_lostConnections</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(sa, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a81b5523bff04a41224e17df3f08aace1">RemoveFromConnectionList</a>(sa);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    sa = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aebac46cfccd64e29214d3410722df872">TCPInterface::HasCompletedConnectionAttempt</a>();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">if</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#aed53e6a168e97069e34d1b777d97ee2b">_completedConnectionAttempts</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(sa, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a3a6b864f72a9ba6447d7a292089b147a">AddToConnectionList</a>(sa);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a>* <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#afa93398c49e197bfd5ff28da5f01255f" title="Returns data received.">PacketizedTCP::Receive</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a448f16c8da3861951c9a8ea4a4f9710a">PushNotificationsToQueues</a>();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a22c75a502613e56f09bfa234e91b78e5">messageHandlerList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a22c75a502613e56f09bfa234e91b78e5">messageHandlerList</a>[i]-&gt;Update();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *outgoingPacket=<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a95a065fbee5d0979547776bc65e69967">ReturnOutgoingPacket</a>();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> (outgoingPacket)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> outgoingPacket;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *incomingPacket;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    incomingPacket = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4a5a3d26cc99076cc90503926f7d1109">TCPInterface::ReceiveInt</a>();</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">while</span> (incomingPacket)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac4620bb554cace55c0f093abafad01d9">Has</a>(incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>))</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            index = <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aacb6191d7d678267acc8bf6286033b21">GetIndexAtKey</a>(incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            index=(<span class="keywordtype">unsigned</span> int) -1;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">if</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)index==(<span class="keywordtype">unsigned</span> int)-1)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27" title="Deallocates a packet returned by Receive.">DeallocatePacket</a>(incomingPacket);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            incomingPacket = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4a5a3d26cc99076cc90503926f7d1109">TCPInterface::ReceiveInt</a>();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">if</span> (incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af25d74f363b4fead30fbafc9ca21354a">deleteData</a>==<span class="keyword">true</span>)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="comment">// Came from network</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddressFromPacket;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">if</span> (index &lt; <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ad33475fbf642a7df45a48d9f453c3566">Size</a>())</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml">DataStructures::ByteQueue</a> *bq = <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>[index];</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="comment">// Buffer data</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#a0db56ed238c4a8e1dcbf1a9112a4c159">WriteBytes</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*) incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>,incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                systemAddressFromPacket=incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                PTCPHeader dataLength;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="comment">// Peek the header to see if a full message is waiting</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#ac0c658c8f766e2c6dbb02c610d31f582">ReadBytes</a>((<span class="keywordtype">char</span>*) &amp;dataLength,<span class="keyword">sizeof</span>(PTCPHeader),<span class="keyword">true</span>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adc5a85144836608947830e902cca005f" title="-‚Äî Member function template specialization declarations -‚Äî">SLNet::BitStream::DoEndianSwap</a>())</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3ba4c1a60776e63dcf17396b536d3fe8">SLNet::BitStream::ReverseBytesInPlace</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) &amp;dataLength,<span class="keyword">sizeof</span>(dataLength));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="comment">// Header indicates packet length. If enough data is available, read out and return one packet</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keywordflow">if</span> (bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#a27afa634c492ddbe9f53104fbe6cf273">GetBytesWritten</a>()&gt;=dataLength+<span class="keyword">sizeof</span>(PTCPHeader))</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    <span class="keywordflow">do</span> </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                        bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#ac24da4177978aa25555221945bbd2c9c">IncrementReadOffset</a>(<span class="keyword">sizeof</span>(PTCPHeader));</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                        outgoingPacket = SLNet::OP_NEW&lt;Packet&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>=dataLength;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(dataLength);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>=systemAddressFromPacket;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af25d74f363b4fead30fbafc9ca21354a">deleteData</a>=<span class="keyword">false</span>; <span class="comment">// Did not come from the network</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>=(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(dataLength, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                        <span class="keywordflow">if</span> (outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>==0)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                        {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(outgoingPacket,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                        }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                        bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#ac0c658c8f766e2c6dbb02c610d31f582">ReadBytes</a>((<span class="keywordtype">char</span>*) outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>,dataLength,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(outgoingPacket, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        <span class="comment">// Peek the header to see if a full message is waiting</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        <span class="keywordflow">if</span> (bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#ac0c658c8f766e2c6dbb02c610d31f582">ReadBytes</a>((<span class="keywordtype">char</span>*) &amp;dataLength,<span class="keyword">sizeof</span>(PTCPHeader),<span class="keyword">true</span>))</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                            <span class="keywordflow">if</span> (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#adc5a85144836608947830e902cca005f" title="-‚Äî Member function template specialization declarations -‚Äî">SLNet::BitStream::DoEndianSwap</a>())</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a3ba4c1a60776e63dcf17396b536d3fe8">SLNet::BitStream::ReverseBytesInPlace</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) &amp;dataLength,<span class="keyword">sizeof</span>(dataLength));</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    } <span class="keywordflow">while</span> (bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#a27afa634c492ddbe9f53104fbe6cf273">GetBytesWritten</a>()&gt;=dataLength+<span class="keyword">sizeof</span>(PTCPHeader));</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> oldWritten = bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#a27afa634c492ddbe9f53104fbe6cf273">GetBytesWritten</a>()-incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> newWritten = bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#a27afa634c492ddbe9f53104fbe6cf273">GetBytesWritten</a>();</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="comment">// Return ID_DOWNLOAD_PROGRESS</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    <span class="keywordflow">if</span> (newWritten/65536!=oldWritten/65536)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                        outgoingPacket = SLNet::OP_NEW&lt;Packet&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>=<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) +</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                            <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)*2 +</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                            <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> int) +</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                            65536;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>=incomingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#af25d74f363b4fead30fbafc9ca21354a">deleteData</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>=(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        <span class="keywordflow">if</span> (outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>==0)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                        {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(outgoingPacket,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                        }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                        outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a2a5c6d1fc237792f3c6972041d971684">ID_DOWNLOAD_PROGRESS</a>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> totalParts=dataLength/65536;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> partIndex=newWritten/65536;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> oneChunkSize=65536;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                        memcpy(outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>), &amp;partIndex, <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>));</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                        memcpy(outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)*1, &amp;totalParts, <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>));</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                        memcpy(outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)*2, &amp;oneChunkSize, <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>));</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                        bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#ac24da4177978aa25555221945bbd2c9c">IncrementReadOffset</a>(<span class="keyword">sizeof</span>(PTCPHeader));</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                        bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#ac0c658c8f766e2c6dbb02c610d31f582">ReadBytes</a>((<span class="keywordtype">char</span>*) outgoingPacket-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)*3,oneChunkSize,<span class="keyword">true</span>);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                        bq-&gt;<a class="code" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml#a08a5b33591cbc886c03151f66ce76c56">DecrementReadOffset</a>(<span class="keyword">sizeof</span>(PTCPHeader));</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(outgoingPacket, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                }</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27" title="Deallocates a packet returned by Receive.">DeallocatePacket</a>(incomingPacket);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            incomingPacket=0;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(incomingPacket, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        incomingPacket = <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4a5a3d26cc99076cc90503926f7d1109">TCPInterface::ReceiveInt</a>();</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a95a065fbee5d0979547776bc65e69967">ReturnOutgoingPacket</a>();</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a95a065fbee5d0979547776bc65e69967">PacketizedTCP::ReturnOutgoingPacket</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;{</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *outgoingPacket=0;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">while</span> (outgoingPacket==0 &amp;&amp; <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        outgoingPacket=<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a9cbed8e96309966ec16f141ce4b1bf26">waitingPackets</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> pluginResult;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a22c75a502613e56f09bfa234e91b78e5">messageHandlerList</a>.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            pluginResult=<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a22c75a502613e56f09bfa234e91b78e5">messageHandlerList</a>[i]-&gt;OnReceive(outgoingPacket);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span> (pluginResult==<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a9f27ed7ccb7513dceb7ed4da3d99a1bf" title="The plugin used this message and it shouldn&#39;t be given to the user.">RR_STOP_PROCESSING_AND_DEALLOCATE</a>)</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a7800dc1ce89b0127884503b6168ceb27" title="Deallocates a packet returned by Receive.">DeallocatePacket</a>( outgoingPacket );</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                outgoingPacket=0; <span class="comment">// Will do the loop again and get another packet</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <span class="keywordflow">break</span>; <span class="comment">// break out of the enclosing for</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pluginResult==<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a5d14ff7b19cc1a48c87f0d91ef3c8a56" title="The plugin is going to hold on to this message. Do not deallocate it but do not pass it to other plug...">RR_STOP_PROCESSING</a>)</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            {</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                outgoingPacket=0;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">return</span> outgoingPacket;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a3e0db659159d423e35ac1e6e519c16a1" title="Disconnects a player/address.">PacketizedTCP::CloseConnection</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress )</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;{</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a81b5523bff04a41224e17df3f08aace1">RemoveFromConnectionList</a>(systemAddress);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a51fa9556886efb6772ecb0c3bd4857b4" title="Disconnects a player/address.">TCPInterface::CloseConnection</a>(systemAddress);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;}</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a81b5523bff04a41224e17df3f08aace1">PacketizedTCP::RemoveFromConnectionList</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;{</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">if</span> (sa==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ac4620bb554cace55c0f093abafad01d9">Has</a>(sa))</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index = <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#aacb6191d7d678267acc8bf6286033b21">GetIndexAtKey</a>(sa);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">if</span> (index!=(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)-1)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>[index],<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ab746756b18b120eed088420d9e289c0e">RemoveAtIndex</a>(index);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;}</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a3a6b864f72a9ba6447d7a292089b147a">PacketizedTCP::AddToConnectionList</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">if</span> (sa==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a101bf20cd6e9a46ed582618a48a1cfb4">SetNew</a>(sa, SLNet::OP_NEW&lt;DataStructures::ByteQueue&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>));</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a7e8a03b38394522903c96b50ba9f9dff">PacketizedTCP::ClearAllConnections</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;{</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#ad33475fbf642a7df45a48d9f453c3566">Size</a>(); i++)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>[i],<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#ae703976a762de38353ff1e2530b85b1d">connections</a>.<a class="code" href="../../dc/da9/class_data_structures_1_1_map.xhtml#a2d01e7c2be0ebd431ada0da5f3ebe98f">Clear</a>();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#add11822eb7fd9add9cce96b4da037551">PacketizedTCP::HasCompletedConnectionAttempt</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;{</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a448f16c8da3861951c9a8ea4a4f9710a">PushNotificationsToQueues</a>();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#aed53e6a168e97069e34d1b777d97ee2b">_completedConnectionAttempts</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#aed53e6a168e97069e34d1b777d97ee2b">_completedConnectionAttempts</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a24b79eef8b19127811081a06f563b201">PacketizedTCP::HasFailedConnectionAttempt</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;{</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a448f16c8da3861951c9a8ea4a4f9710a">PushNotificationsToQueues</a>();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a54b1f5b77a9a2a586cda9a0b97c7ae2a">_failedConnectionAttempts</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a54b1f5b77a9a2a586cda9a0b97c7ae2a">_failedConnectionAttempts</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a77e22ce6702c24d0f2f21bcbeff64376" title="Queued events of new incoming connections.">PacketizedTCP::HasNewIncomingConnection</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a448f16c8da3861951c9a8ea4a4f9710a">PushNotificationsToQueues</a>();</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a8c5100e8cf1d08acb9c5ad44d3ed7d48">_newIncomingConnections</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a8c5100e8cf1d08acb9c5ad44d3ed7d48">_newIncomingConnections</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a05acdd6d69e568e2dc56b1ca947ad661" title="Queued events of lost connections.">PacketizedTCP::HasLostConnection</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;{</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a448f16c8da3861951c9a8ea4a4f9710a">PushNotificationsToQueues</a>();</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a47f9e955cae94554377644973ee1b58c">_lostConnections</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d6/d05/class_s_l_net_1_1_packetized_t_c_p.xhtml#a47f9e955cae94554377644973ee1b58c">_lostConnections</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;}</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="preprocessor">#endif // _RAKNET_SUPPORT_*</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d0/d75/_packetized_t_c_p_8cpp.xhtml">PacketizedTCP.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

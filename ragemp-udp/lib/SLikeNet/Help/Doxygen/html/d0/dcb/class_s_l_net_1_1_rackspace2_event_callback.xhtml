<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::Rackspace2EventCallback Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d5/dab/class_s_l_net_1_1_rackspace2_event_callback-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::Rackspace2EventCallback Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Callback interface to receive the results of operations.  
 <a href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">slikenet/Rackspace.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::Rackspace2EventCallback:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/dad/class_s_l_net_1_1_rackspace2_event_callback__inherit__graph.svg" width="252" height="551"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af4ff215d4425fd1d0c2a934bbe401f92"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#af4ff215d4425fd1d0c2a934bbe401f92">Rackspace2EventCallback</a> ()</td></tr>
<tr class="separator:af4ff215d4425fd1d0c2a934bbe401f92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3ff4e28189da4ca112b2c494eac793d"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ab3ff4e28189da4ca112b2c494eac793d">~Rackspace2EventCallback</a> ()</td></tr>
<tr class="separator:ab3ff4e28189da4ca112b2c494eac793d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91f058319f1400467f840838964412f5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a91f058319f1400467f840838964412f5">OnAuthenticationResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a91f058319f1400467f840838964412f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eaa8c4f1e6ca21228e670d367b534f5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a7eaa8c4f1e6ca21228e670d367b534f5">OnListServersResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a7eaa8c4f1e6ca21228e670d367b534f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e4dfb5df6505607a32eaedc8b64c259"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a4e4dfb5df6505607a32eaedc8b64c259">OnListServersWithDetailsResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a4e4dfb5df6505607a32eaedc8b64c259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e28c83cdfd9ae5e72825f9525f8d6bb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a4e28c83cdfd9ae5e72825f9525f8d6bb">OnCreateServerResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a4e28c83cdfd9ae5e72825f9525f8d6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1f9905f9d19561a08f7e3d508216938"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ab1f9905f9d19561a08f7e3d508216938">OnGetServerDetails</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:ab1f9905f9d19561a08f7e3d508216938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba75488fcb650e622bbcab92bc9f4971"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#aba75488fcb650e622bbcab92bc9f4971">OnUpdateServerNameOrPassword</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:aba75488fcb650e622bbcab92bc9f4971"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd3012e9776c1ae71b7efe29283bcc9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#aebd3012e9776c1ae71b7efe29283bcc9">OnDeleteServer</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:aebd3012e9776c1ae71b7efe29283bcc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a648268795d7a1e090f08e2f2ea501b77"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a648268795d7a1e090f08e2f2ea501b77">OnListServerAddresses</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a648268795d7a1e090f08e2f2ea501b77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d9eb1f3d6464a020726cac44c340b44"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a2d9eb1f3d6464a020726cac44c340b44">OnShareServerAddress</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a2d9eb1f3d6464a020726cac44c340b44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee9a11142d02037dda73778be308982"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#aeee9a11142d02037dda73778be308982">OnDeleteServerAddress</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:aeee9a11142d02037dda73778be308982"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb61e7a0bac8f0db45f6902448ca0de6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#acb61e7a0bac8f0db45f6902448ca0de6">OnRebootServer</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:acb61e7a0bac8f0db45f6902448ca0de6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f01069b00c8272dc907b2f9d84fbdb0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a5f01069b00c8272dc907b2f9d84fbdb0">OnRebuildServer</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a5f01069b00c8272dc907b2f9d84fbdb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9c107b43d33465230b3f306525acb06"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ac9c107b43d33465230b3f306525acb06">OnResizeServer</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:ac9c107b43d33465230b3f306525acb06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5ef1a8951821c04a9e6e83bab0ff61b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ab5ef1a8951821c04a9e6e83bab0ff61b">OnConfirmResizedServer</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:ab5ef1a8951821c04a9e6e83bab0ff61b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06ceea2c46c834c06aeee2af030e5c82"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a06ceea2c46c834c06aeee2af030e5c82">OnRevertResizedServer</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a06ceea2c46c834c06aeee2af030e5c82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91eb6d46dddda37560cc85cae2250375"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a91eb6d46dddda37560cc85cae2250375">OnListFlavorsResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a91eb6d46dddda37560cc85cae2250375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f33abeaf9291fc8d3aa164038d2c1ec"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a3f33abeaf9291fc8d3aa164038d2c1ec">OnGetFlavorDetailsResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a3f33abeaf9291fc8d3aa164038d2c1ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4b9be5d435dd8dd32d7eb2c8d5b966"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a5d4b9be5d435dd8dd32d7eb2c8d5b966">OnListImagesResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a5d4b9be5d435dd8dd32d7eb2c8d5b966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade0ef1f8b4b1bfe8c26d5af621f274fb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ade0ef1f8b4b1bfe8c26d5af621f274fb">OnCreateImageResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:ade0ef1f8b4b1bfe8c26d5af621f274fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01b99d9583b9ec1e398231288edd5f61"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a01b99d9583b9ec1e398231288edd5f61">OnGetImageDetailsResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a01b99d9583b9ec1e398231288edd5f61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaed28ac86709e52d0b5399af89adfc75"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#aaed28ac86709e52d0b5399af89adfc75">OnDeleteImageResult</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:aaed28ac86709e52d0b5399af89adfc75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af970885299bff1aa1f756813b86fb737"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#af970885299bff1aa1f756813b86fb737">OnListSharedIPGroups</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:af970885299bff1aa1f756813b86fb737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa54b197fee075b6da3e0c6fc526a7d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a9aa54b197fee075b6da3e0c6fc526a7d">OnListSharedIPGroupsWithDetails</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a9aa54b197fee075b6da3e0c6fc526a7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceeff9eaa1ce61b632629e07bd7b218e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#aceeff9eaa1ce61b632629e07bd7b218e">OnCreateSharedIPGroup</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:aceeff9eaa1ce61b632629e07bd7b218e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5122dfb6b3568225b14679c8cbe6c25"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ae5122dfb6b3568225b14679c8cbe6c25">OnGetSharedIPGroupDetails</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:ae5122dfb6b3568225b14679c8cbe6c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e1dce8acab1d3eacc22ab5ccd216475"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#a1e1dce8acab1d3eacc22ab5ccd216475">OnDeleteSharedIPGroup</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a> eventType, const char *htmlAdditionalInfo)=0</td></tr>
<tr class="separator:a1e1dce8acab1d3eacc22ab5ccd216475"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6eed49bce4b1a2aa80f92720de0096b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml#ae6eed49bce4b1a2aa80f92720de0096b">OnConnectionAttemptFailure</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a> operationType, const char *url)=0</td></tr>
<tr class="separator:ae6eed49bce4b1a2aa80f92720de0096b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Callback interface to receive the results of operations. </p>

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00096">96</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af4ff215d4425fd1d0c2a934bbe401f92"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::Rackspace2EventCallback::Rackspace2EventCallback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00099">99</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab3ff4e28189da4ca112b2c494eac793d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::Rackspace2EventCallback::~Rackspace2EventCallback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml#l00100">100</a> of file <a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a91f058319f1400467f840838964412f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnAuthenticationResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#af18be4c0ad29f53fbb9c71e33f7fcfd3">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="ab5ef1a8951821c04a9e6e83bab0ff61b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnConfirmResizedServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a618b14cdcdec648475b7604fbd4540a1">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="ae6eed49bce4b1a2aa80f92720de0096b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnConnectionAttemptFailure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a320ff923e99b7e3fc90edd602b4aecc1">RackspaceOperationType</a>&#160;</td>
          <td class="paramname"><em>operationType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>url</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a5510853f8df84e4e25c4bfcd8ae87f4d">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="ade0ef1f8b4b1bfe8c26d5af621f274fb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnCreateImageResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a0b840d5cd26a33699d0ed282c7040970">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a4e28c83cdfd9ae5e72825f9525f8d6bb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnCreateServerResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#ac075e79240095c557a540d6d51d97ec8">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="aceeff9eaa1ce61b632629e07bd7b218e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnCreateSharedIPGroup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a51974ce90a72e3c2aa8309e4438a968f">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="aaed28ac86709e52d0b5399af89adfc75"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnDeleteImageResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a0727dcb5a9e4cfda50ad9992d142837f">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="aebd3012e9776c1ae71b7efe29283bcc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnDeleteServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#ac147ef3d2a57f294a1505e3abd7a90fa">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="aeee9a11142d02037dda73778be308982"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnDeleteServerAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a0f6b1e6712e11c44baec98040d277c06">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a1e1dce8acab1d3eacc22ab5ccd216475"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnDeleteSharedIPGroup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a2e271e1fe0b9631a11caeeefe1230ca5">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a3f33abeaf9291fc8d3aa164038d2c1ec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnGetFlavorDetailsResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#ab9b34e2d6bc8934b2bc826d20e3d860c">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a01b99d9583b9ec1e398231288edd5f61"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnGetImageDetailsResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a53fea4b214170c3df4001affe2b83526">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="ab1f9905f9d19561a08f7e3d508216938"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnGetServerDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a3dcb891cef759013347ac9b39b3dc78b">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="ae5122dfb6b3568225b14679c8cbe6c25"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnGetSharedIPGroupDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a056a8c11ee113c361c09241db68cfd25">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a91eb6d46dddda37560cc85cae2250375"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListFlavorsResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a18cc4d3461ee0d2db78f8cf211ef81d3">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a5d4b9be5d435dd8dd32d7eb2c8d5b966"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListImagesResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a15bbad7b4c366b9d8dfcffb8971beb1f">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a648268795d7a1e090f08e2f2ea501b77"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListServerAddresses </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#aefdfecd2a949b33a3c557c8c2472d5a3">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a7eaa8c4f1e6ca21228e670d367b534f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListServersResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a55567072887b669cf8c9c97b00bff9a8">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a4e4dfb5df6505607a32eaedc8b64c259"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListServersWithDetailsResult </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a835cf471a99344517a856645399efbe7">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="af970885299bff1aa1f756813b86fb737"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListSharedIPGroups </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a5382d6ed559423111eb8a7297e6347e1">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a9aa54b197fee075b6da3e0c6fc526a7d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnListSharedIPGroupsWithDetails </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a8f87996e78af93f4c0675d95084becb4">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="acb61e7a0bac8f0db45f6902448ca0de6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnRebootServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a921433381fb8c7e05008ca9c507bee90">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a5f01069b00c8272dc907b2f9d84fbdb0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnRebuildServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#afbd59ed1ce666a977e969d3d35b515d8">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="ac9c107b43d33465230b3f306525acb06"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnResizeServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a6b30072bf8fdd295ab21debd63d83f81">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a06ceea2c46c834c06aeee2af030e5c82"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnRevertResizedServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a1d8e405de3ba157eea7eec688f8b206a">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="a2d9eb1f3d6464a020726cac44c340b44"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnShareServerAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#a70b6d023e270dce8d0e9eb0fbeeb6c54">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<a class="anchor" id="aba75488fcb650e622bbcab92bc9f4971"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::Rackspace2EventCallback::OnUpdateServerNameOrPassword </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac63aeb5a0c76eb1e9423646aef1fb460">RackspaceEventType</a>&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>htmlAdditionalInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../db/d6c/class_s_l_net_1_1_rackspace_event_callback___default.xhtml#ad0c21e450b01fe76532a385f41a1d1df">SLNet::RackspaceEventCallback_Default</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../dd/dcb/_rackspace_8h_source.xhtml">Rackspace.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../d0/dcb/class_s_l_net_1_1_rackspace2_event_callback.xhtml">Rackspace2EventCallback</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:50 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

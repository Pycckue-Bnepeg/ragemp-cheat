<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/RakWString.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/dea/_rak_w_string_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">RakWString.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/dea/_rak_w_string_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2018, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/dc1/wstring_8h.xhtml">slikenet/wstring.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/dc3/_bit_stream_8h.xhtml" title="This class allows you to write and read native types as a string of bits.">slikenet/BitStream.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;wchar.h&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/db2/linux__adapter_8h.xhtml">slikenet/linux_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/dff/osx__adapter_8h.xhtml">slikenet/osx_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">// From http://www.joelonsoftware.com/articles/Unicode.html</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">// Only code points 128 and above are stored using 2, 3, in fact, up to 6 bytes.</span></div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">   28</a></span>&#160;<span class="preprocessor">#define MAX_BYTES_PER_UNICODE_CHAR sizeof(wchar_t)</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af3ea419504d42441fd1e9a31aaf68929">   30</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af3ea419504d42441fd1e9a31aaf68929">RakWString::RakWString</a>()</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>=0;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a242ce52b151f3fbcaf1679428e170cd0">   35</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af3ea419504d42441fd1e9a31aaf68929">RakWString::RakWString</a>( <span class="keyword">const</span> <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a> &amp;right )</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>=0;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    *<span class="keyword">this</span>=right;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a59726060b4b49bc7188acaaa342d4469">   41</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af3ea419504d42441fd1e9a31aaf68929">RakWString::RakWString</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *input )</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>=0;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    *<span class="keyword">this</span> = input;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6c04c0f3a7a1cc6716503501a51b8049">   47</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af3ea419504d42441fd1e9a31aaf68929">RakWString::RakWString</a>( <span class="keyword">const</span> <span class="keywordtype">wchar_t</span> *input )</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>=0;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    *<span class="keyword">this</span> = input;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a0c4838c7d5097317141b7fab3e18f513">   53</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af3ea419504d42441fd1e9a31aaf68929">RakWString::RakWString</a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a> &amp; right)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>=0;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    *<span class="keyword">this</span> = right;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a5041bc59d6453c722deb1c97445c3999">   59</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a5041bc59d6453c722deb1c97445c3999">RakWString::~RakWString</a>()</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7">   63</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7" title="Assignment operators.">RakWString::operator = </a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; right )</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4" title="Clear the string.">Clear</a>();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">if</span> (right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a865ea0548bf5e6e00b4c9589e8da0f8f" title="Returns if the string is empty. Also, C_String() would return &quot;&quot;.">IsEmpty</a>())</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>() + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> = right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    memcpy(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>,right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),(right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>() + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af7c561c6ce544f38e5ee55cbd058afd9">   80</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7" title="Assignment operators.">RakWString::operator = </a>( <span class="keyword">const</span> <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a>&amp; right )</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span> = right.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab9fab8a6b53870f0d3b98679c37e74f3">   84</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7" title="Assignment operators.">RakWString::operator = </a>( <span class="keyword">const</span> <span class="keywordtype">wchar_t</span> * <span class="keyword">const</span> str )</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4" title="Clear the string.">Clear</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span> (str==0)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> = wcslen(str);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>==0)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    wcscpy_s(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>,<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>+1,str);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a55704a9ca5e625727b9780e0e1caeb63">  103</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7" title="Assignment operators.">RakWString::operator = </a>( <span class="keywordtype">wchar_t</span> *str )</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    *<span class="keyword">this</span> = ( <span class="keyword">const</span> <span class="keywordtype">wchar_t</span> * <span class="keyword">const</span>) str;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad8e778577d016ff7771fdbfabca3cb40">  108</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7" title="Assignment operators.">RakWString::operator = </a>( <span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span> str )</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4" title="Clear the string.">Clear</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">// Not supported on android</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#if !defined(ANDROID)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (str==0)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">if</span> (str[0]==0)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    mbstowcs_s(&amp;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>, NULL, 0, str, 0);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    mbstowcs_s(&amp;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>, <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>, <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> + 1, str, <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> == (<span class="keywordtype">size_t</span>) (-1))</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;Couldn&#39;t convert string--invalid multibyte character.\n&quot;</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4" title="Clear the string.">Clear</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor"></span>    <span class="comment">// mbstowcs not supported on android</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<span class="stringliteral">&quot;mbstowcs not supported on Android&quot;</span> &amp;&amp; 0);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">#endif // defined(ANDROID)</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ac68224a1d0f5463c530173f547e0be17">  142</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1e7091b76f9c6d1e1f01f6b0ebc7c8e7" title="Assignment operators.">RakWString::operator = </a>( <span class="keywordtype">char</span> *str )</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    *<span class="keyword">this</span> = ( <span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span>) str;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a758289e39da06ed271297c14c38fe911">  147</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a758289e39da06ed271297c14c38fe911" title="Concatenation.">RakWString::operator +=</a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; right)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a865ea0548bf5e6e00b4c9589e8da0f8f" title="Returns if the string is empty. Also, C_String() would return &quot;&quot;.">IsEmpty</a>())</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">size_t</span> newCharLength = <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> + right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>();</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">wchar_t</span> *newCStr;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">bool</span> isEmpty = <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a865ea0548bf5e6e00b4c9589e8da0f8f" title="Returns if the string is empty. Also, C_String() would return &quot;&quot;.">IsEmpty</a>();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> (isEmpty)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        newCStr = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (newCharLength + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        newCStr = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#a6dca7c6bae7fe47d4e94611ba1478c0c">rakRealloc_Ex</a>( <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>, (newCharLength + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">if</span> (!newCStr)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = newCStr;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> = newCharLength;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">if</span> (isEmpty)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        memcpy(newCStr,right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),(right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>() + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        wcscat_s(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>, newCharLength + 1, right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6af301c518a01b25adf427a128d76892">  176</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a758289e39da06ed271297c14c38fe911" title="Concatenation.">RakWString::operator += </a>( <span class="keyword">const</span> <span class="keywordtype">wchar_t</span> * <span class="keyword">const</span> right )</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">if</span> (right==0)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">size_t</span> rightLength = wcslen(right);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">size_t</span> newCharLength = <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> + rightLength;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">wchar_t</span> *newCStr;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">bool</span> isEmpty = <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a865ea0548bf5e6e00b4c9589e8da0f8f" title="Returns if the string is empty. Also, C_String() would return &quot;&quot;.">IsEmpty</a>();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span> (isEmpty)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        newCStr = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (newCharLength + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        newCStr = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#a6dca7c6bae7fe47d4e94611ba1478c0c">rakRealloc_Ex</a>( <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>, (newCharLength + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (!newCStr)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aa4ec18d5e86e162b63d9b2ded4df5596">notifyOutOfMemory</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = newCStr;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> = newCharLength;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">if</span> (isEmpty)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        memcpy(newCStr,right,(rightLength + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        wcscat_s(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>, newCharLength + 1, right);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a87014ff1fc9d77f4efd502049b7f4a8c">  206</a></span>&#160;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a758289e39da06ed271297c14c38fe911" title="Concatenation.">RakWString::operator += </a>( <span class="keywordtype">wchar_t</span> *right )</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span> += (<span class="keyword">const</span> <span class="keywordtype">wchar_t</span> * <span class="keyword">const</span>) right;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#afebab26f22e4662b256ae6248c1bf958">  210</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#afebab26f22e4662b256ae6248c1bf958" title="Equality.">RakWString::operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a> &amp;right)<span class="keyword"> const</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>()!=right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>())</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>())==0;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a219b7ddfa7136b6f9b6e059b168eee53">  216</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a219b7ddfa7136b6f9b6e059b168eee53">RakWString::operator &lt; </a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>())&lt;0;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#aec4b280efd82c25d1595aaef1a041b79">  220</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#aec4b280efd82c25d1595aaef1a041b79">RakWString::operator &lt;= </a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>())&lt;=0;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af8e472fbdadae9d11ebbb1086e1f16ed">  224</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#af8e472fbdadae9d11ebbb1086e1f16ed">RakWString::operator &gt; </a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>())&gt;0;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a2cb392ad198da878e04415deaaf77909">  228</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a2cb392ad198da878e04415deaaf77909">RakWString::operator &gt;= </a>( <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>())&gt;=0;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a4f6638f94fb3d8210fbd81273c245db9">  232</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a4f6638f94fb3d8210fbd81273c245db9" title="Inequality.">RakWString::operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a> &amp;right)<span class="keyword"> const</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>()!=right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>())</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(),right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>())!=0;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1aecbceec3fd6698d3b3fce6ad0da890">  238</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1aecbceec3fd6698d3b3fce6ad0da890" title="Set the value of the string.">RakWString::Set</a>( <span class="keywordtype">wchar_t</span> *str )</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;{</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    *<span class="keyword">this</span> = str;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a865ea0548bf5e6e00b4c9589e8da0f8f">  242</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a865ea0548bf5e6e00b4c9589e8da0f8f" title="Returns if the string is empty. Also, C_String() would return &quot;&quot;.">RakWString::IsEmpty</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>()==0;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7">  246</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">RakWString::GetLength</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a24a63ad30c1233f1b281e812ed4e8e6d">  250</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a24a63ad30c1233f1b281e812ed4e8e6d" title="Has the string into an unsigned int.">RakWString::ToInteger</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a> &amp;rs)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> hash = 0;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordtype">int</span> c;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *str = (<span class="keyword">const</span> <span class="keywordtype">char</span> *)rs.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">size_t</span> i;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; rs.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a3c763f42c872e6b92523327cf3e28fc7" title="Returns the length of the string.">GetLength</a>()*<a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>*<span class="keyword">sizeof</span>(wchar_t); i++)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        c = *str++;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        hash = c + (hash &lt;&lt; 6) + (hash &lt;&lt; 16) - hash;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">return</span> hash;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;}</div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab4e1aa5497c75dd218210a0c8e18f3bd">  265</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab4e1aa5497c75dd218210a0c8e18f3bd" title="Compare strings (case sensitive)">RakWString::StrCmp</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a> &amp;right)<span class="keyword"> const</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(), right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="line"><a name="l00269"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a0b11e2b71d1280b7d17b585b07d6a75a">  269</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a0b11e2b71d1280b7d17b585b07d6a75a" title="Compare strings (not case sensitive)">RakWString::StrICmp</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">RakWString</a> &amp;right)<span class="keyword"> const</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> _wcsicmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(), right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor"></span>    <span class="comment">// Not supported</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">return</span> wcscmp(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(), right.<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4">  278</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4" title="Clear the string.">RakWString::Clear</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;{</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>=0;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>=0;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a57881a26d7f747960dac76115abc9911">  284</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a57881a26d7f747960dac76115abc9911" title="Print the string to the screen.">RakWString::Printf</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;{</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    printf(<span class="stringliteral">&quot;%ls&quot;</span>, <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div>
<div class="line"><a name="l00288"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a9325f748fd6fa6807dbd8e386d7bf94e">  288</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a9325f748fd6fa6807dbd8e386d7bf94e" title="Print the string to a file.">RakWString::FPrintf</a>(FILE *fp)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;{</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    fprintf(fp,<span class="stringliteral">&quot;%ls&quot;</span>, <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div>
<div class="line"><a name="l00292"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a8ddb3a0e537ec5c67a39f2e8d1984efc">  292</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a8ddb3a0e537ec5c67a39f2e8d1984efc">RakWString::Serialize</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a8ddb3a0e537ec5c67a39f2e8d1984efc">Serialize</a>(<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#acacfb3945c4f1ddb38b441f5f458a3db" title="Same as std::string::c_str.">C_String</a>(), bs);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a7c87ce2ae8dcc4d7ce048ffcc5c8e083">  296</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a8ddb3a0e537ec5c67a39f2e8d1984efc">RakWString::Serialize</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span> * <span class="keyword">const</span> str, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">char</span> *multiByteBuffer;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordtype">size_t</span> allocated = wcslen(str)*<a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    multiByteBuffer = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(allocated, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordtype">size_t</span> used = wcstombs(multiByteBuffer, str, allocated);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a389b1cb2d6ab054a9949efe7f1748374">WriteCasted</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&gt;(used);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) multiByteBuffer,(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) used);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">size_t</span> mbByteLength = wcslen(str);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a389b1cb2d6ab054a9949efe7f1748374">WriteCasted</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&gt;(mbByteLength);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; mbByteLength; i++)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> t;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        t = (<a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a>) str[i];</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="comment">// Force endian swapping, and write to 16 bits</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(t);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1ee57c7ac7e350d2a0402cca38ff9e5f">  318</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1ee57c7ac7e350d2a0402cca38ff9e5f">RakWString::Deserialize</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6fd4f33f8676fb877c83e3c42a56f3b4" title="Clear the string.">Clear</a>();</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordtype">size_t</span> mbByteLength;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a544430a7ba9f9dd8b7f49ece417dbc68">ReadCasted</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&gt;(mbByteLength);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">if</span> (mbByteLength&gt;0)</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">char</span> *multiByteBuffer;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        multiByteBuffer = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(mbByteLength+1, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordtype">bool</span> result = bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) multiByteBuffer,(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) mbByteLength);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">if</span> (result==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        }</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        multiByteBuffer[mbByteLength]=0;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = (<span class="keywordtype">wchar_t</span> *) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>( (mbByteLength + 1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        mbstowcs_s(&amp;<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>, <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>, mbByteLength + 1, multiByteBuffer, mbByteLength);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>[<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>]=0;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a> = (<span class="keywordtype">wchar_t</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>((mbByteLength+1) * <a class="code" href="../../d0/dea/_rak_w_string_8cpp.xhtml#a34937c47db27f8429e17f0f218052b0f">MAX_BYTES_PER_UNICODE_CHAR</a>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a> = mbByteLength;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; mbByteLength; i++)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> t;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="comment">// Force endian swapping, and read 16 bits</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(t);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>[i]=t;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ad503fb6bfdf970e3bc646d863461e493">c_str</a>[mbByteLength]=0;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div>
<div class="line"><a name="l00359"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#aae56491cbeb74e93620d3c2f834724c4">  359</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1ee57c7ac7e350d2a0402cca38ff9e5f">RakWString::Deserialize</a>(<span class="keywordtype">wchar_t</span> *str, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;{</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordtype">size_t</span> mbByteLength;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a544430a7ba9f9dd8b7f49ece417dbc68">ReadCasted</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&gt;(mbByteLength);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span> (mbByteLength &gt; 0)</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">char</span> *multiByteBuffer;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        multiByteBuffer = (<span class="keywordtype">char</span>*)<a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(mbByteLength + 1, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordtype">bool</span> result = bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*)multiByteBuffer, (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)mbByteLength);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordflow">if</span> (result == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        multiByteBuffer[mbByteLength] = 0;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        mbstowcs(&amp;c_strCharLength, str, multiByteBuffer, mbByteLength);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        str[<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>] = 0;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; mbByteLength; i++)</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> t;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="comment">// Force endian swapping, and read 16 bits</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(t);</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            str[i] = t;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        }</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        str[mbByteLength] = 0;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    {</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor"></span>        wcscpy(str, L<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;}</div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a6f4b48c7b7b36a060246f69d1efbd199">  400</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#a1ee57c7ac7e350d2a0402cca38ff9e5f">RakWString::Deserialize</a>(<span class="keywordtype">wchar_t</span> *str, <span class="keywordtype">size_t</span> strLength, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> *bs)</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordtype">size_t</span> mbByteLength;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a544430a7ba9f9dd8b7f49ece417dbc68">ReadCasted</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>&gt;(mbByteLength);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordflow">if</span> (mbByteLength&gt;0)</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">char</span> *multiByteBuffer;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        multiByteBuffer = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(mbByteLength+1, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <span class="keywordtype">bool</span> result = bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a8770a882b3b97c3ce51d5b0b1a0315e0" title="Read bits, starting at the next aligned bits.">ReadAlignedBytes</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) multiByteBuffer,(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) mbByteLength);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">if</span> (result==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        multiByteBuffer[mbByteLength]=0;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        mbstowcs_s(&amp;c_strCharLength, str, strLength, multiByteBuffer, mbByteLength);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#ab91fbe0570bf501cd97a53c6cffcef8f">rakFree_Ex</a>(multiByteBuffer, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        str[<a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml#ab961508b79f1e13ba78293244ab2f121">c_strCharLength</a>]=0;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; mbByteLength; i++)</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <a class="code" href="../../df/df2/_native_types_8h.xhtml#a273cf69d639a59973b6019625df33e30">uint16_t</a> t;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <span class="comment">// Force endian swapping, and read 16 bits</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            bs-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(t);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            str[i]=t;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        str[mbByteLength]=0;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        wcscpy_s(str,strLength,L<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;}</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno"><a class="code" href="../../d5/dc1/wstring_8h.xhtml#a54c059087d9c04622dfb9f78d441affa">  439</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">SLNet::RakWString</a> <a class="code" href="../../dd/d5f/_rak_string_8cpp.xhtml#a625af79cc78a3921cfa6a7116754bd6c">operator+</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">SLNet::RakWString</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">SLNet::RakWString</a> &amp;rhs)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;{</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="../../d8/d91/class_s_l_net_1_1_rak_w_string.xhtml" title="String class for Unicode.">SLNet::RakWString</a> returnvalue(lhs);</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    returnvalue += rhs;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">return</span> returnvalue;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;}</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">SLNet::BitStream bsTest;</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">SLNet::RakWString testString(&quot;cat&quot;), testString2;</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">testString = &quot;Hllo&quot;;</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">testString = L&quot;Hello&quot;;</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">testString += L&quot; world&quot;;</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">testString2 += testString2;</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">SLNet::RakWString ts3(L&quot; from here&quot;);</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">testString2+=ts3;</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">SLNet::RakWString ts4(L&quot; 222&quot;);</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">testString2=ts4;</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">SLNet::RakString rs(&quot;rakstring&quot;);</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">testString2+=rs;</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">testString2=rs;</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">bsTest.Write(L&quot;one&quot;);</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">bsTest.Write(testString2);</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">bsTest.SetReadOffset(0);</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">SLNet::RakWString ts5, ts6;</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">wchar_t buff[99];</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">wchar_t *wptr = (wchar_t*)buff;</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">bsTest.Read(wptr);</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">bsTest.Read(ts5);</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">*/</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d0/dea/_rak_w_string_8cpp.xhtml">RakWString.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

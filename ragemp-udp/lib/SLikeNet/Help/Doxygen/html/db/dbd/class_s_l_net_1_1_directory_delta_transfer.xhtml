<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::DirectoryDeltaTransfer Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../de/d36/class_s_l_net_1_1_directory_delta_transfer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::DirectoryDeltaTransfer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">slikenet/DirectoryDeltaTransfer.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::DirectoryDeltaTransfer:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../de/dda/class_s_l_net_1_1_directory_delta_transfer__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adea90eeefe545ce9e49ff790224e2e37"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#adea90eeefe545ce9e49ff790224e2e37">DirectoryDeltaTransfer</a> ()</td></tr>
<tr class="separator:adea90eeefe545ce9e49ff790224e2e37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa05659db1aba1f75df1e719a50b6d270"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#aa05659db1aba1f75df1e719a50b6d270">~DirectoryDeltaTransfer</a> ()</td></tr>
<tr class="separator:aa05659db1aba1f75df1e719a50b6d270"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5172ed024c88675c730f5887561a97b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#af5172ed024c88675c730f5887561a97b">SetFileListTransferPlugin</a> (<a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer">FileListTransfer</a> *flt)</td></tr>
<tr class="memdesc:af5172ed024c88675c730f5887561a97b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This plugin has a dependency on the <a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer" title="A plugin to provide a simple way to compress and incrementally send the files in the FileList structu...">FileListTransfer</a> plugin, which it uses to actually send the files.  <a href="#af5172ed024c88675c730f5887561a97b"></a><br/></td></tr>
<tr class="separator:af5172ed024c88675c730f5887561a97b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf6296214a48d2e13371b39b72217929"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#aaf6296214a48d2e13371b39b72217929">SetApplicationDirectory</a> (const char *pathToApplication)</td></tr>
<tr class="memdesc:aaf6296214a48d2e13371b39b72217929"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the local root directory to base all file uploads and downloads off of.  <a href="#aaf6296214a48d2e13371b39b72217929"></a><br/></td></tr>
<tr class="separator:aaf6296214a48d2e13371b39b72217929"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c633779cf173407ce3d04e2a648c56b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a0c633779cf173407ce3d04e2a648c56b">SetUploadSendParameters</a> (<a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> _priority, char _orderingChannel)</td></tr>
<tr class="memdesc:a0c633779cf173407ce3d04e2a648c56b"><td class="mdescLeft">&#160;</td><td class="mdescRight">What parameters to use for the <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> call when uploading files.  <a href="#a0c633779cf173407ce3d04e2a648c56b"></a><br/></td></tr>
<tr class="separator:a0c633779cf173407ce3d04e2a648c56b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab364d0bb374107459dc7de575da35cff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#ab364d0bb374107459dc7de575da35cff">AddUploadsFromSubdirectory</a> (const char *subdir)</td></tr>
<tr class="memdesc:ab364d0bb374107459dc7de575da35cff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add all files in the specified subdirectory recursively.  <a href="#ab364d0bb374107459dc7de575da35cff"></a><br/></td></tr>
<tr class="separator:ab364d0bb374107459dc7de575da35cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ee36d0e619583a773268e7a8cf68be7"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a1ee36d0e619583a773268e7a8cf68be7">DownloadFromSubdirectory</a> (const char *subdir, const char *outputSubdir, bool prependAppDirToOutputSubdir, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> host, <a class="el" href="../../d9/d93/class_s_l_net_1_1_file_list_transfer_c_b_interface.xhtml">FileListTransferCBInterface</a> *onFileCallback, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> _priority, char _orderingChannel, <a class="el" href="../../d5/d7b/class_s_l_net_1_1_file_list_progress.xhtml">FileListProgress</a> *cb)</td></tr>
<tr class="memdesc:a1ee36d0e619583a773268e7a8cf68be7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Downloads files from the matching parameter <em>subdir</em> in AddUploadsFromSubdirectory.  <a href="#a1ee36d0e619583a773268e7a8cf68be7"></a><br/></td></tr>
<tr class="separator:a1ee36d0e619583a773268e7a8cf68be7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f0792eb4284d67df774dd91006dad3"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a42f0792eb4284d67df774dd91006dad3">DownloadFromSubdirectory</a> (<a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> &amp;localFiles, const char *subdir, const char *outputSubdir, bool prependAppDirToOutputSubdir, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> host, <a class="el" href="../../d9/d93/class_s_l_net_1_1_file_list_transfer_c_b_interface.xhtml">FileListTransferCBInterface</a> *onFileCallback, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> _priority, char _orderingChannel, <a class="el" href="../../d5/d7b/class_s_l_net_1_1_file_list_progress.xhtml">FileListProgress</a> *cb)</td></tr>
<tr class="memdesc:a42f0792eb4284d67df774dd91006dad3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Downloads files from the matching parameter <em>subdir</em> in AddUploadsFromSubdirectory.  <a href="#a42f0792eb4284d67df774dd91006dad3"></a><br/></td></tr>
<tr class="separator:a42f0792eb4284d67df774dd91006dad3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a350d3c5d78e5d2d4136c4cb58fecdf00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a350d3c5d78e5d2d4136c4cb58fecdf00">GenerateHashes</a> (<a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> &amp;localFiles, const char *outputSubdir, bool prependAppDirToOutputSubdir)</td></tr>
<tr class="separator:a350d3c5d78e5d2d4136c4cb58fecdf00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84bd9f4c07ec5c9110926066d6962928"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a84bd9f4c07ec5c9110926066d6962928">ClearUploads</a> (void)</td></tr>
<tr class="memdesc:a84bd9f4c07ec5c9110926066d6962928"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear all allowed uploads previously set with AddUploadsFromSubdirectory.  <a href="#a84bd9f4c07ec5c9110926066d6962928"></a><br/></td></tr>
<tr class="separator:a84bd9f4c07ec5c9110926066d6962928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7099bbc08734af0761c4bf75b4c35e"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#aea7099bbc08734af0761c4bf75b4c35e">GetNumberOfFilesForUpload</a> (void) const </td></tr>
<tr class="memdesc:aea7099bbc08734af0761c4bf75b4c35e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how many files are available for upload.  <a href="#aea7099bbc08734af0761c4bf75b4c35e"></a><br/></td></tr>
<tr class="separator:aea7099bbc08734af0761c4bf75b4c35e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82e9683fa5eb6d2bac2894c56e8fd70b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a82e9683fa5eb6d2bac2894c56e8fd70b">SetDownloadRequestIncrementalReadInterface</a> (<a class="el" href="../../df/d02/class_s_l_net_1_1_incremental_read_interface.xhtml">IncrementalReadInterface</a> *_incrementalReadInterface, unsigned int _chunkSize)</td></tr>
<tr class="memdesc:a82e9683fa5eb6d2bac2894c56e8fd70b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normally, if a remote system requests files, those files are all loaded into memory and sent immediately.  <a href="#a82e9683fa5eb6d2bac2894c56e8fd70b"></a><br/></td></tr>
<tr class="separator:a82e9683fa5eb6d2bac2894c56e8fd70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a300d41b6b02b5c28383da2038b247a4e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a300d41b6b02b5c28383da2038b247a4e">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a300d41b6b02b5c28383da2038b247a4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">OnAttach</a> (void)</td></tr>
<tr class="memdesc:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#afe33b32b1729289a809ada304227cbd8"></a><br/></td></tr>
<tr class="separator:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">Update</a> (void)</td></tr>
<tr class="memdesc:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#aa181a0ff58765c3d7878ac6dfd5e5a10"></a><br/></td></tr>
<tr class="separator:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#aea8a90c4078ecc0db77545e44531b1de"></a><br/></td></tr>
<tr class="separator:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95cb6fb37ada42840dafdbf6ffe078e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:a95cb6fb37ada42840dafdbf6ffe078e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225b5a285e1cf2b0f9b03f6133c409e8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:a225b5a285e1cf2b0f9b03f6133c409e8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:aa95d4714e97480ac51a87b6b34161db7 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8c76a46b6970596f91ae28532a79a73e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a8c76a46b6970596f91ae28532a79a73e">OnDownloadRequest</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a8c76a46b6970596f91ae28532a79a73e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aa91fb2c0fbaf8d6bc31388241a20fc1d"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#aa91fb2c0fbaf8d6bc31388241a20fc1d">applicationDirectory</a> [512]</td></tr>
<tr class="separator:aa91fb2c0fbaf8d6bc31388241a20fc1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46c3304020605a2a92c432ef782d749a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer">FileListTransfer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a46c3304020605a2a92c432ef782d749a">fileListTransfer</a></td></tr>
<tr class="separator:a46c3304020605a2a92c432ef782d749a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946731d48baa464deed19977c31a3727"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a946731d48baa464deed19977c31a3727">availableUploads</a></td></tr>
<tr class="separator:a946731d48baa464deed19977c31a3727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0582c5cf3d9d68f92501c9f74ae23fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#af0582c5cf3d9d68f92501c9f74ae23fd">priority</a></td></tr>
<tr class="separator:af0582c5cf3d9d68f92501c9f74ae23fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47cd97e00e6b7693320b740b501efad5"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a47cd97e00e6b7693320b740b501efad5">orderingChannel</a></td></tr>
<tr class="separator:a47cd97e00e6b7693320b740b501efad5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f38d90980592abd262c4ce8d83c9af0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d02/class_s_l_net_1_1_incremental_read_interface.xhtml">IncrementalReadInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a3f38d90980592abd262c4ce8d83c9af0">incrementalReadInterface</a></td></tr>
<tr class="separator:a3f38d90980592abd262c4ce8d83c9af0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a92e424ef19ef0dc4d3f26c2ab6bd7c"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a6a92e424ef19ef0dc4d3f26c2ab6bd7c">chunkSize</a></td></tr>
<tr class="separator:a6a92e424ef19ef0dc4d3f26c2ab6bd7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00069">69</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="adea90eeefe545ce9e49ff790224e2e37"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::DirectoryDeltaTransfer::DirectoryDeltaTransfer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa05659db1aba1f75df1e719a50b6d270"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::DirectoryDeltaTransfer::~DirectoryDeltaTransfer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab364d0bb374107459dc7de575da35cff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::AddUploadsFromSubdirectory </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>subdir</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add all files in the specified subdirectory recursively. </p>
<p><em>subdir</em> is appended to <em>pathToApplication</em> in <a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#aaf6296214a48d2e13371b39b72217929" title="Set the local root directory to base all file uploads and downloads off of.">SetApplicationDirectory()</a>. All files in the resultant directory and subdirectories are then hashed so that users can download them. </p>
<dl class="section pre"><dt>Precondition</dt><dd>You must call SetFileListTransferPlugin with a valid <a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer" title="A plugin to provide a simple way to compress and incrementally send the files in the FileList structu...">FileListTransfer</a> plugin </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">subdir</td><td>Concatenated with pathToApplication to form the final path from which to allow uploads. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a84bd9f4c07ec5c9110926066d6962928"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::ClearUploads </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear all allowed uploads previously set with AddUploadsFromSubdirectory. </p>

</div>
</div>
<a class="anchor" id="a1ee36d0e619583a773268e7a8cf68be7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short SLNet::DirectoryDeltaTransfer::DownloadFromSubdirectory </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>subdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>outputSubdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>prependAppDirToOutputSubdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d93/class_s_l_net_1_1_file_list_transfer_c_b_interface.xhtml">FileListTransferCBInterface</a> *&#160;</td>
          <td class="paramname"><em>onFileCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>_priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>_orderingChannel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d5/d7b/class_s_l_net_1_1_file_list_progress.xhtml">FileListProgress</a> *&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Downloads files from the matching parameter <em>subdir</em> in AddUploadsFromSubdirectory. </p>
<p><em>subdir</em> must contain all starting characters in <em>subdir</em> in AddUploadsFromSubdirectory Therefore, AddUploadsFromSubdirectory("Levels/Level1/"); would allow you to download using DownloadFromSubdirectory("Levels/Level1/Textures/"... but it would NOT allow you to download from DownloadFromSubdirectory("Levels/"... or DownloadFromSubdirectory("Levels/Level2/"... </p>
<dl class="section pre"><dt>Precondition</dt><dd>You must call SetFileListTransferPlugin with a valid <a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer" title="A plugin to provide a simple way to compress and incrementally send the files in the FileList structu...">FileListTransfer</a> plugin </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Blocking. Will block while hashes of the local files are generated </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">subdir</td><td>A directory passed to AddUploadsFromSubdirectory on the remote system. The passed dir can be more specific than the remote dir. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">outputSubdir</td><td>The directory to write the output to. Usually this will match <em>subdir</em> but it can be different if you want. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prependAppDirToOutputSubdir</td><td>True to prepend outputSubdir with pathToApplication when determining the final output path. Usually you want this to be true. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">host</td><td>The address of the remote system to send the message to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">onFileCallback</td><td>Callback to call per-file (optional). When fileIndex+1==setCount in the callback then the download is done </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_priority</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_orderingChannel</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cb</td><td>Callback to get progress updates. Pass 0 to not use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A set ID, identifying this download set. Returns 65535 on host unreachable. </dd></dl>

</div>
</div>
<a class="anchor" id="a42f0792eb4284d67df774dd91006dad3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short SLNet::DirectoryDeltaTransfer::DownloadFromSubdirectory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> &amp;&#160;</td>
          <td class="paramname"><em>localFiles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>subdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>outputSubdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>prependAppDirToOutputSubdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d93/class_s_l_net_1_1_file_list_transfer_c_b_interface.xhtml">FileListTransferCBInterface</a> *&#160;</td>
          <td class="paramname"><em>onFileCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>_priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>_orderingChannel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d5/d7b/class_s_l_net_1_1_file_list_progress.xhtml">FileListProgress</a> *&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Downloads files from the matching parameter <em>subdir</em> in AddUploadsFromSubdirectory. </p>
<p><em>subdir</em> must contain all starting characters in <em>subdir</em> in AddUploadsFromSubdirectory Therefore, AddUploadsFromSubdirectory("Levels/Level1/"); would allow you to download using DownloadFromSubdirectory("Levels/Level1/Textures/"... but it would NOT allow you to download from DownloadFromSubdirectory("Levels/"... or DownloadFromSubdirectory("Levels/Level2/"... </p>
<dl class="section pre"><dt>Precondition</dt><dd>You must call SetFileListTransferPlugin with a valid <a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer" title="A plugin to provide a simple way to compress and incrementally send the files in the FileList structu...">FileListTransfer</a> plugin </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Nonblocking, but requires call to <a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a350d3c5d78e5d2d4136c4cb58fecdf00">GenerateHashes()</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">localFiles</td><td>Hashes of local files already on the harddrive. Populate with <a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a350d3c5d78e5d2d4136c4cb58fecdf00">GenerateHashes()</a>, which you may wish to call from a thread </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">subdir</td><td>A directory passed to AddUploadsFromSubdirectory on the remote system. The passed dir can be more specific than the remote dir. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">outputSubdir</td><td>The directory to write the output to. Usually this will match <em>subdir</em> but it can be different if you want. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prependAppDirToOutputSubdir</td><td>True to prepend outputSubdir with pathToApplication when determining the final output path. Usually you want this to be true. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">host</td><td>The address of the remote system to send the message to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">onFileCallback</td><td>Callback to call per-file (optional). When fileIndex+1==setCount in the callback then the download is done </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_priority</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_orderingChannel</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cb</td><td>Callback to get progress updates. Pass 0 to not use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A set ID, identifying this download set. Returns 65535 on host unreachable. </dd></dl>

</div>
</div>
<a class="anchor" id="a350d3c5d78e5d2d4136c4cb58fecdf00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::GenerateHashes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a> &amp;&#160;</td>
          <td class="paramname"><em>localFiles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>outputSubdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>prependAppDirToOutputSubdir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Hash files already on the harddrive, in preparation for a call to <a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a1ee36d0e619583a773268e7a8cf68be7" title="Downloads files from the matching parameter subdir in AddUploadsFromSubdirectory.">DownloadFromSubdirectory()</a>. Passed to second version of <a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a1ee36d0e619583a773268e7a8cf68be7" title="Downloads files from the matching parameter subdir in AddUploadsFromSubdirectory.">DownloadFromSubdirectory()</a> This is slow, and it is exposed so you can call it from a thread before calling <a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml#a1ee36d0e619583a773268e7a8cf68be7" title="Downloads files from the matching parameter subdir in AddUploadsFromSubdirectory.">DownloadFromSubdirectory()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">localFiles</td><td>List of hashed files populated from <em>outputSubdir</em> and <em>prependAppDirToOutputSubdir</em> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">outputSubdir</td><td>The directory to write the output to. Usually this will match <em>subdir</em> but it can be different if you want. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prependAppDirToOutputSubdir</td><td>True to prepend outputSubdir with pathToApplication when determining the final output path. Usually you want this to be true. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aea7099bbc08734af0761c4bf75b4c35e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned SLNet::DirectoryDeltaTransfer::GetNumberOfFilesForUpload </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns how many files are available for upload. </p>
<dl class="section return"><dt>Returns</dt><dd>How many files are available for upload </dd></dl>

</div>
</div>
<a class="anchor" id="a8c76a46b6970596f91ae28532a79a73e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::OnDownloadRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a300d41b6b02b5c28383da2038b247a4e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::DirectoryDeltaTransfer::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>OnReceive is called for every packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td>the packet that is being returned to the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to allow the game and other plugins to get this message, false to absorb it </dd></dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="aaf6296214a48d2e13371b39b72217929"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::SetApplicationDirectory </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pathToApplication</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the local root directory to base all file uploads and downloads off of. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pathToApplication</td><td>This path will be prepended to <em>applicationSubdirectory</em> in AddUploadsFromSubdirectory to find the actual path on disk. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a82e9683fa5eb6d2bac2894c56e8fd70b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::SetDownloadRequestIncrementalReadInterface </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d02/class_s_l_net_1_1_incremental_read_interface.xhtml">IncrementalReadInterface</a> *&#160;</td>
          <td class="paramname"><em>_incrementalReadInterface</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>_chunkSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Normally, if a remote system requests files, those files are all loaded into memory and sent immediately. </p>
<p>This function allows the files to be read in incremental chunks, saving memory </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">_incrementalReadInterface</td><td>If a file in <em>fileList</em> has no data, filePullInterface will be used to read the file in chunks of size <em>chunkSize</em> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_chunkSize</td><td>How large of a block of a file to send at once </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af5172ed024c88675c730f5887561a97b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::SetFileListTransferPlugin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer">FileListTransfer</a> *&#160;</td>
          <td class="paramname"><em>flt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This plugin has a dependency on the <a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer" title="A plugin to provide a simple way to compress and incrementally send the files in the FileList structu...">FileListTransfer</a> plugin, which it uses to actually send the files. </p>
<p>So you need an instance of that plugin registered with <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml" title="The main interface for network communications.">RakPeerInterface</a>, and a pointer to that interface should be passed here. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flt</td><td>A pointer to a registered instance of <a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer" title="A plugin to provide a simple way to compress and incrementally send the files in the FileList structu...">FileListTransfer</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0c633779cf173407ce3d04e2a648c56b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::DirectoryDeltaTransfer::SetUploadSendParameters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a>&#160;</td>
          <td class="paramname"><em>_priority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>_orderingChannel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>What parameters to use for the <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> call when uploading files. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">_priority</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">_orderingChannel</td><td>See <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ab817d74d4aa4ff1edf593543bbf7b8fb">RakPeerInterface::Send()</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aa91fb2c0fbaf8d6bc31388241a20fc1d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char SLNet::DirectoryDeltaTransfer::applicationDirectory[512]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00164">164</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a946731d48baa464deed19977c31a3727"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d7/d87/class_s_l_net_1_1_file_list.xhtml">FileList</a>* SLNet::DirectoryDeltaTransfer::availableUploads</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00166">166</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6a92e424ef19ef0dc4d3f26c2ab6bd7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int SLNet::DirectoryDeltaTransfer::chunkSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00170">170</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a46c3304020605a2a92c432ef782d749a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/dae/group___f_i_l_e___l_i_s_t___t_r_a_n_s_f_e_r___g_r_o_u_p.xhtml#dd/df6/class_s_l_net_1_1_file_list_transfer">FileListTransfer</a>* SLNet::DirectoryDeltaTransfer::fileListTransfer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00165">165</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3f38d90980592abd262c4ce8d83c9af0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d02/class_s_l_net_1_1_incremental_read_interface.xhtml">IncrementalReadInterface</a>* SLNet::DirectoryDeltaTransfer::incrementalReadInterface</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00169">169</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a47cd97e00e6b7693320b740b501efad5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char SLNet::DirectoryDeltaTransfer::orderingChannel</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00168">168</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<a class="anchor" id="af0582c5cf3d9d68f92501c9f74ae23fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> SLNet::DirectoryDeltaTransfer::priority</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml#l00167">167</a> of file <a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../d9/da3/_directory_delta_transfer_8h_source.xhtml">DirectoryDeltaTransfer.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../db/dbd/class_s_l_net_1_1_directory_delta_transfer.xhtml">DirectoryDeltaTransfer</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

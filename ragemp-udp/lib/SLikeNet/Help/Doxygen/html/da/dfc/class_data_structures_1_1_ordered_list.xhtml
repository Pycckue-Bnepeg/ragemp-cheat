<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('da/dfc/class_data_structures_1_1_ordered_list.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d2/d29/class_data_structures_1_1_ordered_list-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">slikenet/DS_OrderedList.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d5/d3e/class_data_structures_1_1_ordered_list__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae1f66689234c8a884517632575a4f13c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ae1f66689234c8a884517632575a4f13c">OrderedList</a> ()</td></tr>
<tr class="separator:ae1f66689234c8a884517632575a4f13c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afded705b8ce3775c3d5494b1b52aff76"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#afded705b8ce3775c3d5494b1b52aff76">~OrderedList</a> ()</td></tr>
<tr class="separator:afded705b8ce3775c3d5494b1b52aff76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a951c23d62ae43b7955d1f04cd7be19dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a951c23d62ae43b7955d1f04cd7be19dc">OrderedList</a> (const <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a> &amp;original_copy)</td></tr>
<tr class="separator:a951c23d62ae43b7955d1f04cd7be19dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c02e1629599ee604763a55cd8d81a31"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a3c02e1629599ee604763a55cd8d81a31">operator=</a> (const <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a> &amp;original_copy)</td></tr>
<tr class="separator:a3c02e1629599ee604763a55cd8d81a31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecaf8370213fb9ebdd99bc6262a930e6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#aecaf8370213fb9ebdd99bc6262a930e6">HasData</a> (const key_type &amp;key, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function) const </td></tr>
<tr class="separator:aecaf8370213fb9ebdd99bc6262a930e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b7abdd81f650f9d1755a4fd56b1aaa"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a> (const key_type &amp;key, bool *objectExists, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function) const </td></tr>
<tr class="separator:a54b7abdd81f650f9d1755a4fd56b1aaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9667d272bf826dc1d200f77112f90993"><td class="memItemLeft" align="right" valign="top">data_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a9667d272bf826dc1d200f77112f90993">GetElementFromKey</a> (const key_type &amp;key, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function) const </td></tr>
<tr class="separator:a9667d272bf826dc1d200f77112f90993"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae16343544f15259dad97977b439b7383"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ae16343544f15259dad97977b439b7383">GetElementFromKey</a> (const key_type &amp;key, data_type &amp;element, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function) const </td></tr>
<tr class="separator:ae16343544f15259dad97977b439b7383"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30d44cd52bdb782478472a95cc5a4b0a"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a30d44cd52bdb782478472a95cc5a4b0a">Insert</a> (const key_type &amp;key, const data_type &amp;data, bool assertOnDuplicate, const char *file, unsigned int line, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function)</td></tr>
<tr class="separator:a30d44cd52bdb782478472a95cc5a4b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668f026293db98ed4e68301077fb585a"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a668f026293db98ed4e68301077fb585a">Remove</a> (const key_type &amp;key, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function)</td></tr>
<tr class="separator:a668f026293db98ed4e68301077fb585a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c05db993081fec4efcd3fd6f3eb34e2"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a5c05db993081fec4efcd3fd6f3eb34e2">RemoveIfExists</a> (const key_type &amp;key, int(*cf)(const key_type &amp;, const data_type &amp;)=default_comparison_function)</td></tr>
<tr class="separator:a5c05db993081fec4efcd3fd6f3eb34e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59527cb330c873e4aadcae82acbb067a"><td class="memItemLeft" align="right" valign="top">data_type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a59527cb330c873e4aadcae82acbb067a">operator[]</a> (const unsigned int position) const </td></tr>
<tr class="separator:a59527cb330c873e4aadcae82acbb067a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65ef0eca14deb8698004b1cd074b6f0a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a65ef0eca14deb8698004b1cd074b6f0a">RemoveAtIndex</a> (const unsigned index)</td></tr>
<tr class="separator:a65ef0eca14deb8698004b1cd074b6f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed08b2c35b20d08ebfab17927f5c4a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a9ed08b2c35b20d08ebfab17927f5c4a2">InsertAtIndex</a> (const data_type &amp;data, const unsigned index, const char *file, unsigned int line)</td></tr>
<tr class="separator:a9ed08b2c35b20d08ebfab17927f5c4a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4285dfc63d32eeb9126b97b67a8ce3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ac4285dfc63d32eeb9126b97b67a8ce3a">InsertAtEnd</a> (const data_type &amp;data, const char *file, unsigned int line)</td></tr>
<tr class="separator:ac4285dfc63d32eeb9126b97b67a8ce3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a198f57b525220448d3a1dd2276c01192"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a198f57b525220448d3a1dd2276c01192">RemoveFromEnd</a> (const unsigned num=1)</td></tr>
<tr class="separator:a198f57b525220448d3a1dd2276c01192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3d85528ada636cae37a5474cb64b69c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ac3d85528ada636cae37a5474cb64b69c">Clear</a> (bool doNotDeallocate, const char *file, unsigned int line)</td></tr>
<tr class="separator:ac3d85528ada636cae37a5474cb64b69c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad64cf6af46df6a5e68747740ee2c1fec"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ad64cf6af46df6a5e68747740ee2c1fec">Size</a> (void) const </td></tr>
<tr class="separator:ad64cf6af46df6a5e68747740ee2c1fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3c38c2e0a64e1ddcf86feb6903303d06"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a3c38c2e0a64e1ddcf86feb6903303d06">IMPLEMENT_DEFAULT_COMPARISON</a> (void)</td></tr>
<tr class="separator:a3c38c2e0a64e1ddcf86feb6903303d06"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:abccd21c52351b495680c3a4fbfbf5207"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; data_type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#abccd21c52351b495680c3a4fbfbf5207">orderedList</a></td></tr>
<tr class="separator:abccd21c52351b495680c3a4fbfbf5207"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function = defaultOrderedListComparison&lt;key_type, data_type&gt;&gt;<br/>
class DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;</h3>

<dl class="section note"><dt>Note</dt><dd>IMPORTANT! If you use defaultOrderedListComparison then call IMPLEMENT_DEFAULT_COMPARISON or you will get an unresolved external linker error. </dd></dl>

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00040">40</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ae1f66689234c8a884517632575a4f13c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::<a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00073">73</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="afded705b8ce3775c3d5494b1b52aff76"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::~<a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00078">78</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>.</p>

</div>
</div>
<a class="anchor" id="a951c23d62ae43b7955d1f04cd7be19dc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::<a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt; &amp;&#160;</td>
          <td class="paramname"><em>original_copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00084">84</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00069">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::orderedList</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ac3d85528ada636cae37a5474cb64b69c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::Clear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>doNotDeallocate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00262">262</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9667d272bf826dc1d200f77112f90993"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">data_type <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::GetElementFromKey </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00105">105</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="ae16343544f15259dad97977b439b7383"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::GetElementFromKey </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">data_type &amp;&#160;</td>
          <td class="paramname"><em>element</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00114">114</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a54b7abdd81f650f9d1755a4fd56b1aaa"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::GetIndexFromKey </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>objectExists</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00124">124</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">SLNet::VariableDeltaSerializer::DirtyAndFreeVarsAssociatedWithReceipt()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00097">SLNet::StringTable::EncodeString()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">SLNet::VariableDeltaSerializer::FreeVarsAssociatedWithReceipt()</a>, and <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00119">SLNet::CommandParserInterface::GetRegisteredCommand()</a>.</p>

</div>
</div>
<a class="anchor" id="aecaf8370213fb9ebdd99bc6262a930e6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::HasData </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>comparisonFunction must take a key_type and a data_type and return &lt;0, ==0, or &gt;0 If the data type has comparison operators already defined then you can just use defaultComparison </p>

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00097">97</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3c38c2e0a64e1ddcf86feb6903303d06"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function = defaultOrderedListComparison&lt;key_type, data_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::IMPLEMENT_DEFAULT_COMPARISON </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00043">43</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>Referenced by <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00030">GridSectorizer::Init()</a>.</p>

</div>
</div>
<a class="anchor" id="a30d44cd52bdb782478472a95cc5a4b0a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::Insert </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>assertOnDuplicate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00176">176</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00076">SLNet::StringTable::AddString()</a>, <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00111">SLNet::CommandParserInterface::RegisterCommand()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">DataStructures::Table::SortTable()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00248">SLNet::VariableDeltaSerializer::StoreChangedVariablesList()</a>.</p>

</div>
</div>
<a class="anchor" id="ac4285dfc63d32eeb9126b97b67a8ce3a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::InsertAtEnd </td>
          <td>(</td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00250">250</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9ed08b2c35b20d08ebfab17927f5c4a2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::InsertAtIndex </td>
          <td>(</td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00244">244</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3c02e1629599ee604763a55cd8d81a31"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt; &amp; <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt; &amp;&#160;</td>
          <td class="paramname"><em>original_copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00090">90</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00069">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::orderedList</a>.</p>

</div>
</div>
<a class="anchor" id="a59527cb330c873e4aadcae82acbb067a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">data_type &amp; <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00268">268</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a668f026293db98ed4e68301077fb585a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::Remove </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00204">204</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="a65ef0eca14deb8698004b1cd074b6f0a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::RemoveAtIndex </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00238">238</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>Referenced by <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00186">SLNet::VariableDeltaSerializer::DirtyAndFreeVarsAssociatedWithReceipt()</a>, and <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00168">SLNet::VariableDeltaSerializer::FreeVarsAssociatedWithReceipt()</a>.</p>

</div>
</div>
<a class="anchor" id="a198f57b525220448d3a1dd2276c01192"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::RemoveFromEnd </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>num</em> = <code>1</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00256">256</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5c05db993081fec4efcd3fd6f3eb34e2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::RemoveIfExists </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const key_type &amp;, const data_type &amp;)&#160;</td>
          <td class="paramname"><em>cf</em> = <code>default_comparison_function</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00223">223</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad64cf6af46df6a5e68747740ee2c1fec"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type , int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::Size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00274">274</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00076">SLNet::StringTable::AddString()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00116">SLNet::StringTable::DecodeString()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00095">SLNet::CommandParserInterface::SendCommandList()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">DataStructures::Table::SortTable()</a>, and <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00040">SLNet::StringTable::~StringTable()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="abccd21c52351b495680c3a4fbfbf5207"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type, class data_type, int(*)(const key_type &amp;, const data_type &amp;) default_comparison_function = defaultOrderedListComparison&lt;key_type, data_type&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;data_type&gt; <a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">DataStructures::OrderedList</a>&lt; key_type, data_type, default_comparison_function &gt;::orderedList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00069">69</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

<p>Referenced by <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00090">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::operator=()</a>, and <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00084">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::OrderedList()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a></li><li class="navelem"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/TableSerializer.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('da/df7/_table_serializer_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TableSerializer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../da/df7/_table_serializer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/d94/_table_serializer_8h.xhtml">slikenet/TableSerializer.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/d5d/_d_s___table_8h.xhtml">slikenet/DS_Table.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/dc3/_bit_stream_8h.xhtml" title="This class allows you to write and read native types as a string of bits.">slikenet/BitStream.h</a>&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/d78/_string_compressor_8h.xhtml" title="Compresses/Decompresses ASCII strings and writes/reads them to BitStream class instances. You can use this to easily serialize and deserialize your own strings.">slikenet/StringCompressor.h</a>&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a0b596e0124e6ee953750d6a09a3108f9">   24</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a0b596e0124e6ee953750d6a09a3108f9">TableSerializer::SerializeTable</a>(<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *in, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page&lt;unsigned, DataStructures::Table::Row*, _TABLE_BPLUS_TREE_ORDER&gt;</a> *cur = in-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a9e64c5424930e8ca30081e3d997871d7" title="Direct access to make things easier.">GetRows</a>().<a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ab3794a44684972dd5e2d45f7ad895ef5">GetListHead</a>();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;</a> &amp;columns=in-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad91aa7d4f82573bbd2ab0033397e4d8c" title="Direct access to make things easier.">GetColumns</a>();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a936f21820749c94a0d2b739bc0f05495">SerializeColumns</a>(in, out);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span>)in-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a9e64c5424930e8ca30081e3d997871d7" title="Direct access to make things easier.">GetRows</a>().<a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a350138159df5e5f885a30270ef1409dc">Size</a>());</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordtype">unsigned</span> rowIndex;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">while</span> (cur)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">for</span> (rowIndex=0; rowIndex &lt; (unsigned)cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; rowIndex++)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a43c24cf41b4bc929ec44827a8b4d0ac2">SerializeRow</a>(cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[rowIndex], cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[rowIndex], columns, out);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        cur=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a936f21820749c94a0d2b739bc0f05495">   40</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a936f21820749c94a0d2b739bc0f05495">TableSerializer::SerializeColumns</a>(<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *in, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;</a> &amp;columns=in-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad91aa7d4f82573bbd2ab0033397e4d8c" title="Direct access to make things easier.">GetColumns</a>();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span>)columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>());</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">for</span> (i=0; i&lt;columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a44be8cc8a469a28085a7502650040459">EncodeString</a>(columns[i].columnName, <a class="code" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>, out);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)columns[i].columnType);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#aaa6608c82794b036432aaa550e8c89a1">   51</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a936f21820749c94a0d2b739bc0f05495">TableSerializer::SerializeColumns</a>(<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *in, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out, <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;int&gt;</a> &amp;skipColumnIndices)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;</a> &amp;columns=in-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad91aa7d4f82573bbd2ab0033397e4d8c" title="Direct access to make things easier.">GetColumns</a>();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span>)columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>()-skipColumnIndices.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>());</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">for</span> (i=0; i&lt;columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); i++)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">if</span> (skipColumnIndices.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(i)==(unsigned)-1)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a44be8cc8a469a28085a7502650040459">EncodeString</a>(columns[i].columnName, <a class="code" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>, out);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)columns[i].columnType);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }       </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abb255db1aae58c937c1f0cfece0079ec">   65</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abb255db1aae58c937c1f0cfece0079ec">TableSerializer::DeserializeTable</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *serializedTable, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dataLength, <a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *out)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> in((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) serializedTable, dataLength, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abb255db1aae58c937c1f0cfece0079ec">DeserializeTable</a>(&amp;in, out);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#ac8e8f5369b0cf3ae294fda049df69e43">   70</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abb255db1aae58c937c1f0cfece0079ec">TableSerializer::DeserializeTable</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *in, <a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *out)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">unsigned</span> rowSize;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a80c40c91b3fbdc1456610874f79ce02a">DeserializeColumns</a>(in,out);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(rowSize)==<span class="keyword">false</span> || rowSize&gt;100000)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(0);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// Hacker crash prevention</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">unsigned</span> rowIndex;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">for</span> (rowIndex=0; rowIndex &lt; rowSize; rowIndex++)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#aea84f237ae3a279dd936853b3bb239fe">DeserializeRow</a>(in, out)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a80c40c91b3fbdc1456610874f79ce02a">   88</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a80c40c91b3fbdc1456610874f79ce02a">TableSerializer::DeserializeColumns</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *in, <a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *out)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">unsigned</span> columnSize;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> columnType;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">char</span> columnName[<a class="code" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>];</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(columnSize)==<span class="keyword">false</span> || columnSize &gt; 10000)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// Hacker crash prevention</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    out-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a6deddcab925ca223177ecf9caf611e08" title="Frees all memory in the table.">Clear</a>();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">for</span> (i=0; i&lt;columnSize; i++)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a5ff01d168653fbd47d917e7ffd3675cd">DecodeString</a>(columnName, 32, in);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(columnType);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        out-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a3c2015a75baeec5db76f56cd60f16059" title="Adds a column to the table.">AddColumn</a>(columnName, (<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">DataStructures::Table::ColumnType</a>)columnType);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a43c24cf41b4bc929ec44827a8b4d0ac2">  106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a43c24cf41b4bc929ec44827a8b4d0ac2">TableSerializer::SerializeRow</a>(<a class="code" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml" title="Stores the list of cells for this row, and a special flag used for internal sorting.">DataStructures::Table::Row</a> *in, <span class="keywordtype">unsigned</span> keyIn, <span class="keyword">const</span> <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;</a> &amp;columns, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">unsigned</span> cellIndex;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(keyIn);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> columnsSize = columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(columnsSize);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">for</span> (cellIndex=0; cellIndex&lt;columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); cellIndex++)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cellIndex);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#ae68674bc2efd7c7c86882a8df4c4f585">SerializeCell</a>(out, in-&gt;<a class="code" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml#adf9117523954e44aca862cdfaf19a2b8">cells</a>[cellIndex], columns[cellIndex].columnType);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#afe03b60eab1b91621dc85126aeeb3934">  118</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a43c24cf41b4bc929ec44827a8b4d0ac2">TableSerializer::SerializeRow</a>(<a class="code" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml" title="Stores the list of cells for this row, and a special flag used for internal sorting.">DataStructures::Table::Row</a> *in, <span class="keywordtype">unsigned</span> keyIn, <span class="keyword">const</span> <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;</a> &amp;columns, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out, <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;int&gt;</a> &amp;skipColumnIndices)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">unsigned</span> cellIndex;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(keyIn);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numEntries=0;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">for</span> (cellIndex=0; cellIndex&lt;columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); cellIndex++)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">if</span> (skipColumnIndices.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(cellIndex)==(unsigned)-1)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            numEntries++;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(numEntries);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">for</span> (cellIndex=0; cellIndex&lt;columns.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); cellIndex++)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">if</span> (skipColumnIndices.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#aae4e608a6f4cc3560ee3b3b20eda67fe" title="Returns the index of the specified item or MAX_UNSIGNED_LONG if not found.">GetIndexOf</a>(cellIndex)==(unsigned)-1)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cellIndex);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#ae68674bc2efd7c7c86882a8df4c4f585">SerializeCell</a>(out, in-&gt;<a class="code" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml#adf9117523954e44aca862cdfaf19a2b8">cells</a>[cellIndex], columns[cellIndex].columnType);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#aea84f237ae3a279dd936853b3bb239fe">  141</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#aea84f237ae3a279dd936853b3bb239fe">TableSerializer::DeserializeRow</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *in, <a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml" title="Holds a set of columns, a set of rows, and rows times columns cells.">DataStructures::Table</a> *out)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;</a> &amp;columns=out-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#ad91aa7d4f82573bbd2ab0033397e4d8c" title="Direct access to make things easier.">GetColumns</a>();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordtype">unsigned</span> numEntries;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml" title="Stores the list of cells for this row, and a special flag used for internal sorting.">DataStructures::Table::Row</a> *row;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">unsigned</span> key;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(key)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    row=out-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a2692e5348c98bcf1328ed40f72fcae60" title="Adds a row to the table.">AddRow</a>(key);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cnt;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(numEntries);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">for</span> (cnt=0; cnt&lt;numEntries; cnt++)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordtype">unsigned</span> cellIndex;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(cellIndex);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abd983da99870b8869bab6bded6c205e6">DeserializeCell</a>(in, row-&gt;<a class="code" href="../../d6/dd3/struct_data_structures_1_1_table_1_1_row.xhtml#adf9117523954e44aca862cdfaf19a2b8">cells</a>[cellIndex], columns[cellIndex].columnType)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            out-&gt;<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#afe51f45747401157b45ec7d5a74f1a41" title="Removes a row specified by rowId.">RemoveRow</a>(key);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#ae68674bc2efd7c7c86882a8df4c4f585">  164</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#ae68674bc2efd7c7c86882a8df4c4f585">TableSerializer::SerializeCell</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out, <a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml" title="Holds the actual data in the table.">DataStructures::Table::Cell</a> *cell, <a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">DataStructures::Table::ColumnType</a> columnType)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a604bc863f25f833f352d4064ed003677">isEmpty</a>);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">if</span> (cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a604bc863f25f833f352d4064ed003677">isEmpty</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">if</span> (columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda3c22480145b2a7c8818f3c3baf7c8692">DataStructures::Table::NUMERIC</a>)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abedaf2b7a2432e2c786ff02052286df310af">DataStructures::Table::STRING</a>)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a44be8cc8a469a28085a7502650040459">EncodeString</a>(cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#ab732aa0d33409753f93aeccffb4dc08c">c</a>, 65535, out);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda5f31a94399b1ed3b469c71b3c55cace1">DataStructures::Table::POINTER</a>)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#aa9c09a4660110db5161be819515e19f0">ptr</a>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="comment">// Binary</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda2550a73a55b0ab443d0bd782927f7acd">DataStructures::Table::BINARY</a>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>&gt;0);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordtype">unsigned</span> binaryLength;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            binaryLength=(unsigned)cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(binaryLength);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af777083a659116082f109ccd9c8639f5" title="Align the bitstream to the byte boundary and then write the specified number of bits.">WriteAlignedBytes</a>((<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#ab732aa0d33409753f93aeccffb4dc08c">c</a>, (<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abd983da99870b8869bab6bded6c205e6">  193</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#abd983da99870b8869bab6bded6c205e6">TableSerializer::DeserializeCell</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *in, <a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml" title="Holds the actual data in the table.">DataStructures::Table::Cell</a> *cell, <a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abed">DataStructures::Table::ColumnType</a> columnType)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordtype">bool</span> isEmpty=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordtype">double</span> value;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordtype">void</span> *ptr;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">char</span> tempString[65535];</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a606a5ea9272ac1ffbc8dc9a3d1fd8ef0">Clear</a>();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(isEmpty)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">if</span> (isEmpty==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span> (columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda3c22480145b2a7c8818f3c3baf7c8692">DataStructures::Table::NUMERIC</a>)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(value)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a68e3910b644c6e478365ace539b70bab" title="Numeric.">Set</a>(value);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abedaf2b7a2432e2c786ff02052286df310af">DataStructures::Table::STRING</a>)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;DecodeString(tempString, 65535, in)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a68e3910b644c6e478365ace539b70bab" title="Numeric.">Set</a>(tempString);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda5f31a94399b1ed3b469c71b3c55cace1">DataStructures::Table::POINTER</a>)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(ptr)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a2edb7a4e719cbf5d1a9f05c8b158d833" title="Pointer.">SetPtr</a>(ptr);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordtype">unsigned</span> binaryLength;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="comment">// Binary</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(columnType==<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#af24fe2724b507f329c7754ea6985abeda2550a73a55b0ab443d0bd782927f7acd">DataStructures::Table::BINARY</a>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">if</span> (in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(binaryLength)==<span class="keyword">false</span> || binaryLength &gt; 10000000)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// Sanity check to max binary cell of 10 megabytes</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e" title="Align the next write and/or read to a byte boundary.">AlignReadToByteBoundary</a>();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>(in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a89838c39f170290405c95d78b0553e51" title="Returns the number of bits left in the stream that haven&#39;t been read.">GetNumberOfUnreadBits</a>())&lt;(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a>)binaryLength)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            cell-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a68e3910b644c6e478365ace539b70bab" title="Numeric.">Set</a>((<span class="keywordtype">char</span>*) in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>()+<a class="code" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff" title="Given a number of bits, return how many bytes are needed to represent that.">BITS_TO_BYTES</a>(in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1bbe42adf8f779256b04d5becdafe342" title="Returns the number of bits into the stream that we have read.">GetReadOffset</a>()), (<span class="keywordtype">int</span>) binaryLength);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ab527c7971fb48bd480842166736e1fa9" title="Ignore data we don&#39;t intend to read.">IgnoreBits</a>(<a class="code" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>((<span class="keywordtype">int</span>) binaryLength));</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a38407cbaacf8ad21c454ee46e80fd15c">  239</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a38407cbaacf8ad21c454ee46e80fd15c">TableSerializer::SerializeFilterQuery</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *in, <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a> *query)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a44be8cc8a469a28085a7502650040459">EncodeString</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#acb1fc87ccc2e5beb7f0702bd216c845d">columnName</a>,<a class="code" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>,in,0);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b" title="Write any integral type to a bitstream.">WriteCompressed</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#a751a903835cd6d13d817e624b42a2bfd">columnIndex</a>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#acef81569cbccb0b56d21418360632551">operation</a>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a604bc863f25f833f352d4064ed003677">isEmpty</a>);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">if</span> (query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a604bc863f25f833f352d4064ed003677">isEmpty</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a04d3ec5e1e1cccf01a4b058f80d41c9b" title="Aligns the bitstream, writes inputLength, and writes input. Won&#39;t write beyond maxBytesToWrite.">WriteAlignedBytesSafe</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#ab732aa0d33409753f93aeccffb4dc08c">c</a>,(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>,10000000); <span class="comment">// Sanity check to max binary cell of 10 megabytes</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#aa9c09a4660110db5161be819515e19f0">ptr</a>);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#adc6b2a83463731c9cf2bc4f41907dc0e">  253</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#adc6b2a83463731c9cf2bc4f41907dc0e">TableSerializer::DeserializeFilterQuery</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out, <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a> *query)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;{</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordtype">bool</span> b;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#acbd6add1c51c15fbbb616ce17b527aab">StringCompressor::Instance</a>()-&gt;<a class="code" href="../../de/d3d/class_s_l_net_1_1_string_compressor.xhtml#a5ff01d168653fbd47d917e7ffd3675cd">DecodeString</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#acb1fc87ccc2e5beb7f0702bd216c845d">columnName</a>,<a class="code" href="../../d3/d5d/_d_s___table_8h.xhtml#a191b70b2ee9ef9fcf914d90674d8bdb3">_TABLE_MAX_COLUMN_NAME_LENGTH</a>,out,0);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac7fcbda7a05b5c7bd7018205cb1bb7b0" title="Read any integral type from a bitstream.">ReadCompressed</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#a751a903835cd6d13d817e624b42a2bfd">columnIndex</a>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> op;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(op);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#acef81569cbccb0b56d21418360632551">operation</a>=(<a class="code" href="../../d4/de5/class_data_structures_1_1_table.xhtml#a64a115f6653bf7b0b7fddfcbc769ef74">DataStructures::Table::FilterQueryType</a>) op;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a606a5ea9272ac1ffbc8dc9a3d1fd8ef0">Clear</a>();</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    b=out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a604bc863f25f833f352d4064ed003677">isEmpty</a>);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">if</span> (query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a604bc863f25f833f352d4064ed003677">isEmpty</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">// HACK - cellValue-&gt;i is used for integer, character, and binary data. However, for character and binary c will be 0. So use that to determine if the data was integer or not.</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputLength;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac0de4d120c23b53f15b786d2b86d202d" title="Same as ReadAlignedBytesSafe() but allocates the memory for you using new, rather than assuming it is...">ReadAlignedBytesSafeAlloc</a>(&amp;query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#ab732aa0d33409753f93aeccffb4dc08c">c</a>,inputLength,10000000); <span class="comment">// Sanity check to max binary cell of 10 megabytes</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">if</span> (query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#ab732aa0d33409753f93aeccffb4dc08c">c</a>)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#a6e0e9d8de5d3ea687af23e5b0c357723">i</a>=inputLength;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        b=out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(query-&gt;<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>-&gt;<a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml#aa9c09a4660110db5161be819515e19f0">ptr</a>);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    }</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">return</span> b;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a8ffbb19436b8c93f1e036a1c7ee5269d">  276</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a8ffbb19436b8c93f1e036a1c7ee5269d">TableSerializer::SerializeFilterQueryList</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *in, <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a> *query, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numQueries, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> maxQueries)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;{</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    (void) maxQueries;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">bool</span>)(query &amp;&amp; numQueries&gt;0));</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">if</span> (query==0 || numQueries&lt;=0)</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(numQueries&lt;=maxQueries);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    in-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b" title="Write any integral type to a bitstream.">WriteCompressed</a>(numQueries);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; numQueries; i++)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a38407cbaacf8ad21c454ee46e80fd15c">SerializeFilterQuery</a>(in, query);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a491acea9531dced0634512f8ae337502">  291</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#a491acea9531dced0634512f8ae337502">TableSerializer::DeserializeFilterQueryList</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *out, <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a> **query, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *numQueries, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> maxQueries, <span class="keywordtype">int</span> allocateExtraQueries)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordtype">bool</span> b, anyQueries=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(anyQueries);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">if</span> (anyQueries==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">if</span> (allocateExtraQueries&lt;=0)</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            *query=0;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            *query=<span class="keyword">new</span> <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a>[allocateExtraQueries];</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        *numQueries=0;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    b=out-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac7fcbda7a05b5c7bd7018205cb1bb7b0" title="Read any integral type from a bitstream.">ReadCompressed</a>(*numQueries);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">if</span> (*numQueries&gt;maxQueries)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(0);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        *numQueries=maxQueries;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span> (*numQueries==0)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">return</span> b;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    *query=<span class="keyword">new</span> <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a>[*numQueries+allocateExtraQueries];</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a> *queryPtr = *query;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; *numQueries; i++)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        queryPtr[i].<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml#ab9f39f1bb6ee7863a2f3d419bc24ca85">cellValue</a>=<span class="keyword">new</span> <a class="code" href="../../dc/d80/struct_data_structures_1_1_table_1_1_cell.xhtml" title="Holds the actual data in the table.">DataStructures::Table::Cell</a>;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        b=<a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#adc6b2a83463731c9cf2bc4f41907dc0e">DeserializeFilterQuery</a>(out, queryPtr+i);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">return</span> b;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;}</div>
<div class="line"><a name="l00326"></a><span class="lineno"><a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#aa5e44ba48454f0ee2672becbb5bd98dc">  326</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d89/class_s_l_net_1_1_table_serializer.xhtml#aa5e44ba48454f0ee2672becbb5bd98dc">TableSerializer::DeallocateQueryList</a>(<a class="code" href="../../dd/db4/struct_data_structures_1_1_table_1_1_filter_query.xhtml">DataStructures::Table::FilterQuery</a> *query, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numQueries)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">if</span> (query==0 || numQueries==0)</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; numQueries; i++)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(query[i].cellValue, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acd53258ab2c0b731df325c91b2e85c9b">SLNet::OP_DELETE_ARRAY</a>(query, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../da/df7/_table_serializer_8cpp.xhtml">TableSerializer.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:48 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

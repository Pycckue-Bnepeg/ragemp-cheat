<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: DataStructures Namespace Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="../../namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('da/d80/namespace_data_structures.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DataStructures Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d19/class_data_structures_1_1_binary_search_tree.xhtml">BinarySearchTree</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A binary search tree and an AVL balanced binary search tree.  <a href="../../db/d19/class_data_structures_1_1_binary_search_tree.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d07/class_data_structures_1_1_a_v_l_balanced_binary_search_tree.xhtml">AVLBalancedBinarySearchTree</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">An <a class="el" href="../../dd/d07/class_data_structures_1_1_a_v_l_balanced_binary_search_tree.xhtml" title="An AVLBalancedBinarySearchTree is a binary tree that is always balanced.">AVLBalancedBinarySearchTree</a> is a binary tree that is always balanced.  <a href="../../dd/d07/class_data_structures_1_1_a_v_l_balanced_binary_search_tree.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:da/da1/struct_data_structures_1_1_page"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page</a></td></tr>
<tr class="separator:da/da1/struct_data_structures_1_1_page"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">BPlusTree</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dca/class_data_structures_1_1_byte_pool.xhtml">BytePool</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dbb/class_data_structures_1_1_byte_queue.xhtml">ByteQueue</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">HashIndex</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d83/class_data_structures_1_1_hash.xhtml">Hash</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Using a string as a identifier for a node, store an allocated pointer to that node.  <a href="../../d6/d83/class_data_structures_1_1_hash.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">Heap</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dbe/class_data_structures_1_1_circular_linked_list.xhtml">CircularLinkedList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">(Circular) Linked <a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">List</a> ADT (Doubly Linked Pointer to Node Style) -  <a href="../../d3/dbe/class_data_structures_1_1_circular_linked_list.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d55/class_data_structures_1_1_linked_list.xhtml">LinkedList</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">List</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Array based implementation of a list.  <a href="../../d4/d78/class_data_structures_1_1_list.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/da9/class_data_structures_1_1_map.xhtml">Map</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml">MemoryPool</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d76/class_data_structures_1_1_m_l_key_ref.xhtml">MLKeyRef</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d89/class_data_structures_1_1_multilist.xhtml">Multilist</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The multilist, representing an abstract data type that generally holds lists.  <a href="../../de/d89/class_data_structures_1_1_multilist.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d25/class_data_structures_1_1_ordered_channel_heap.xhtml">OrderedChannelHeap</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml">OrderedList</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">Queue</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A queue implemented as an array with a read and write index.  <a href="../../d3/d87/class_data_structures_1_1_queue.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d6e/class_data_structures_1_1_queue_linked_list.xhtml">QueueLinkedList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A queue implemented using a linked list. Rarely used.  <a href="../../da/d6e/class_data_structures_1_1_queue_linked_list.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d2b/struct_data_structures_1_1_range_node.xhtml">RangeNode</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/df2/class_data_structures_1_1_range_list.xhtml">RangeList</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de5/class_data_structures_1_1_table.xhtml">Table</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds a set of columns, a set of rows, and rows times columns cells.  <a href="../../d4/de5/class_data_structures_1_1_table.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">ThreadsafeAllocatingQueue</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d2c/class_data_structures_1_1_tree.xhtml">Tree</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d9f/class_data_structures_1_1_weighted_graph.xhtml">WeightedGraph</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d72/class_data_structures_1_1_single_producer_consumer.xhtml">SingleProducerConsumer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A single producer consumer implementation without critical sections.  <a href="../../d0/d72/class_data_structures_1_1_single_producer_consumer.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a976ed408bf7e723e5d6fefb59cf40125"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#a976ed408bf7e723e5d6fefb59cf40125">DefaultIndexType</a></td></tr>
<tr class="separator:a976ed408bf7e723e5d6fefb59cf40125"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a141573e51ef42434451188a050e9a577"><td class="memTemplParams" colspan="2">template&lt;class key_type &gt; </td></tr>
<tr class="memitem:a141573e51ef42434451188a050e9a577"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#a141573e51ef42434451188a050e9a577">defaultMapKeyComparison</a> (const key_type &amp;a, const key_type &amp;b)</td></tr>
<tr class="separator:a141573e51ef42434451188a050e9a577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4122fd2c409644863e7cb884c2f95bc4"><td class="memTemplParams" colspan="2">template&lt;class templateType &gt; </td></tr>
<tr class="memitem:a4122fd2c409644863e7cb884c2f95bc4"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#a4122fd2c409644863e7cb884c2f95bc4">DeletePtr_RakNet</a> (templateType &amp;ptr, const char *file, unsigned int line)</td></tr>
<tr class="separator:a4122fd2c409644863e7cb884c2f95bc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac554257c583d96878931af2bd10bbe2f"><td class="memTemplParams" colspan="2">template&lt;class templateType &gt; </td></tr>
<tr class="memitem:ac554257c583d96878931af2bd10bbe2f"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#ac554257c583d96878931af2bd10bbe2f">DeletePtr</a> (templateType &amp;ptr)</td></tr>
<tr class="separator:ac554257c583d96878931af2bd10bbe2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7121bfdce3827886832c6966eb3fbf64"><td class="memTemplParams" colspan="2">template&lt;class key_type , class data_type &gt; </td></tr>
<tr class="memitem:a7121bfdce3827886832c6966eb3fbf64"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#a7121bfdce3827886832c6966eb3fbf64">defaultOrderedListComparison</a> (const key_type &amp;a, const data_type &amp;b)</td></tr>
<tr class="separator:a7121bfdce3827886832c6966eb3fbf64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc5f5975263bc574b36bd99c3720dc83"><td class="memTemplParams" colspan="2">template&lt;class range_type &gt; </td></tr>
<tr class="memitem:afc5f5975263bc574b36bd99c3720dc83"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#afc5f5975263bc574b36bd99c3720dc83">RangeNodeComp</a> (const range_type &amp;a, const <a class="el" href="../../dd/d2b/struct_data_structures_1_1_range_node.xhtml">RangeNode</a>&lt; range_type &gt; &amp;b)</td></tr>
<tr class="separator:afc5f5975263bc574b36bd99c3720dc83"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a2f6832c889cf38a2f1132838dfd1044f"><td class="memTemplParams" colspan="2">template&lt;class LinkedListType &gt; </td></tr>
<tr class="memitem:a2f6832c889cf38a2f1132838dfd1044f"><td class="memTemplItemLeft" align="right" valign="top">class <a class="el" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../da/d80/namespace_data_structures.xhtml#a2f6832c889cf38a2f1132838dfd1044f">LinkedList</a></td></tr>
<tr class="separator:a2f6832c889cf38a2f1132838dfd1044f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The namespace <a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a> was only added to avoid compiler errors for commonly named data structures As these data structures are stand-alone, you can use them outside of RakNet for your own projects if you wish. </p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="da/da1/struct_data_structures_1_1_page" id="da/da1/struct_data_structures_1_1_page"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct DataStructures::Page</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><h3>template&lt;class KeyType, class DataType, int order&gt;<br/>
struct DataStructures::Page&lt; KeyType, DataType, order &gt;</h3>

<p>Used in the <a class="el" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">BPlusTree</a>. Used for both leaf and index nodes. Don't use a constructor or destructor, due to the memory pool I am using </p>

<p>Definition at line <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00050">50</a> of file <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml">DS_BPlusTree.h</a>.</p>
</div><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for DataStructures::Page&lt; KeyType, DataType, order &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d75/struct_data_structures_1_1_page__inherit__graph.svg" width="215" height="463"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a2c786de0cb834c236c6b47923f1c6010"></a><a class="el" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page</a> *</td>
<td class="fieldname">
children</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a75e91d62d50b35588a4ec213b455ad73"></a>DataType</td>
<td class="fieldname">
data</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a9b2b5cb1fdd5ef355032162e6da67fb8"></a>bool</td>
<td class="fieldname">
isLeaf</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a2e61c5f5aaa2f2093e9ea66ba91ab0f4"></a>KeyType</td>
<td class="fieldname">
keys</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="af356c65ea5891e42e1eacd3e79eae304"></a><a class="el" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page</a>&lt; KeyType, DataType, order &gt; *</td>
<td class="fieldname">
next</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a89e79b7e9bae6c2320349677f460250d"></a><a class="el" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page</a>&lt; KeyType, DataType, order &gt; *</td>
<td class="fieldname">
previous</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a4440cd3ce0db1898fe3511b6e675e04c"></a>int</td>
<td class="fieldname">
size</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a976ed408bf7e723e5d6fefb59cf40125"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> <a class="el" href="../../da/d80/namespace_data_structures.xhtml#a976ed408bf7e723e5d6fefb59cf40125">DataStructures::DefaultIndexType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00091">91</a> of file <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml">DS_Multilist.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a141573e51ef42434451188a050e9a577"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int DataStructures::defaultMapKeyComparison </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The default comparison has to be first so it can be called as a default parameter. It then is followed by MapNode, followed by NodeComparisonFunc </p>

<p>Definition at line <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00040">40</a> of file <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml">DS_Map.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7121bfdce3827886832c6966eb3fbf64"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class key_type , class data_type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int DataStructures::defaultOrderedListComparison </td>
          <td>(</td>
          <td class="paramtype">const key_type &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00033">33</a> of file <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml">DS_OrderedList.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac554257c583d96878931af2bd10bbe2f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class templateType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void DataStructures::DeletePtr </td>
          <td>(</td>
          <td class="paramtype">templateType &amp;&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Can be used with <a class="el" href="../../de/d89/class_data_structures_1_1_multilist.xhtml#a4e49b2800f3cfebdc4fa22e3ded43689" title="Iterate over the list, calling the function pointer on each element.">Multilist::ForEach</a> Assuming the <a class="el" href="../../de/d89/class_data_structures_1_1_multilist.xhtml" title="The multilist, representing an abstract data type that generally holds lists.">Multilist</a> holds pointers, will delete those pointers </p>

<p>Definition at line <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00058">58</a> of file <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml">DS_Multilist.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4122fd2c409644863e7cb884c2f95bc4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class templateType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void DataStructures::DeletePtr_RakNet </td>
          <td>(</td>
          <td class="paramtype">templateType &amp;&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Can be used with <a class="el" href="../../de/d89/class_data_structures_1_1_multilist.xhtml#a4e49b2800f3cfebdc4fa22e3ded43689" title="Iterate over the list, calling the function pointer on each element.">Multilist::ForEach</a> Assuming the <a class="el" href="../../de/d89/class_data_structures_1_1_multilist.xhtml" title="The multilist, representing an abstract data type that generally holds lists.">Multilist</a> holds pointers, will delete those pointers </p>

<p>Definition at line <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00053">53</a> of file <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml">DS_Multilist.h</a>.</p>

<p>References <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>.</p>

</div>
</div>
<a class="anchor" id="afc5f5975263bc574b36bd99c3720dc83"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class range_type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int DataStructures::RangeNodeComp </td>
          <td>(</td>
          <td class="paramtype">const range_type &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const RangeNode&lt; range_type &gt; &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00044">44</a> of file <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml">DS_RangeList.h</a>.</p>

<p>References <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00039">DataStructures::RangeNode&lt; range_type &gt;::maxIndex</a>, and <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00038">DataStructures::RangeNode&lt; range_type &gt;::minIndex</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a2f6832c889cf38a2f1132838dfd1044f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class LinkedListType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">class <a class="el" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a> <a class="el" href="../../dd/d55/class_data_structures_1_1_linked_list.xhtml">DataStructures::LinkedList</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00034">34</a> of file <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml">DS_LinkedList.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/include/slikenet/types.h File Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d9/d49/types_8h.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">types.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Types used by RakNet, most of which involve user code.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="../../df/df2/_native_types_8h_source.xhtml">NativeTypes.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="../../de/df7/time_8h_source.xhtml">time.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="../../db/dbd/_export_8h_source.xhtml">Export.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="../../db/d43/_windows_includes_8h_source.xhtml">WindowsIncludes.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="../../db/d92/_x_box360_includes_8h_source.xhtml">XBox360Includes.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="../../d4/dc5/_socket_includes_8h_source.xhtml">SocketIncludes.h</a>&quot;</code><br/>
</div>
<p><a href="../../d9/d49/types_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:d0/dc8/struct_s_l_net_1_1_public_key"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key">SLNet::PublicKey</a></td></tr>
<tr class="memdesc:d0/dc8/struct_s_l_net_1_1_public_key"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passed to <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a2f75a0ccc500acaa25ab8fdf63572227" title="Connect to the specified host (ip or domain name) and server port. Calling Connect and not calling Se...">RakPeerInterface::Connect()</a>  <a href="../../dd/d30/namespace_s_l_net.xhtml#d0/dc8/struct_s_l_net_1_1_public_key">More...</a><br/></td></tr>
<tr class="separator:d0/dc8/struct_s_l_net_1_1_public_key"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml">SLNet::SocketDescriptor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes the local socket to use for <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#a14b965efa7972eade5cf3ddf9cd743b2" title="Starts the network threads and opens the listen port.">RakPeer::Startup</a>.  <a href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SLNet::SystemAddress</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Network address for a system.  <a href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">SLNet::RakNetGUID</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">SLNet::AddressOrGUID</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:d8/d23/struct_s_l_net_1_1_packet"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">SLNet::Packet</a></td></tr>
<tr class="memdesc:d8/d23/struct_s_l_net_1_1_packet"><td class="mdescLeft">&#160;</td><td class="mdescRight">This represents a user message from another system.  <a href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">More...</a><br/></td></tr>
<tr class="separator:d8/d23/struct_s_l_net_1_1_packet"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d6a/struct_s_l_net_1_1uint24__t.xhtml">SLNet::uint24_t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:dd/d30/namespace_s_l_net"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></td></tr>
<tr class="memdesc:dd/d30/namespace_s_l_net"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple class to send changes between directories. In essence, a simple autopatcher that can be used for transmitting levels, skins, etc. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ac5eb6b4755b74c50cb76155d08b6e2ff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d49/types_8h.xhtml#ac5eb6b4755b74c50cb76155d08b6e2ff">BITS_TO_BYTES</a>(x)&#160;&#160;&#160;(((x)+7)&gt;&gt;3)</td></tr>
<tr class="memdesc:ac5eb6b4755b74c50cb76155d08b6e2ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given a number of bits, return how many bytes are needed to represent that.  <a href="#ac5eb6b4755b74c50cb76155d08b6e2ff"></a><br/></td></tr>
<tr class="separator:ac5eb6b4755b74c50cb76155d08b6e2ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c1e0708f6f9b121ca602cd8ceddd670"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d49/types_8h.xhtml#a4c1e0708f6f9b121ca602cd8ceddd670">BYTES_TO_BITS</a>(x)&#160;&#160;&#160;((x)&lt;&lt;3)</td></tr>
<tr class="separator:a4c1e0708f6f9b121ca602cd8ceddd670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123f55e39d7666a55ea7bae5b2beaf7c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d49/types_8h.xhtml#a123f55e39d7666a55ea7bae5b2beaf7c">PRINTF_64_BIT_MODIFIER</a>&#160;&#160;&#160;&quot;ll&quot;</td></tr>
<tr class="separator:a123f55e39d7666a55ea7bae5b2beaf7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac9f24b440715202698f97e8b4162433e"><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ac9f24b440715202698f97e8b4162433e">SLNet::UniqueIDType</a></td></tr>
<tr class="separator:ac9f24b440715202698f97e8b4162433e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaebbed028894590d770e7fcf8518c441"><td class="memItemLeft" align="right" valign="top">typedef unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SLNet::SystemIndex</a></td></tr>
<tr class="separator:aaebbed028894590d770e7fcf8518c441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57e6f6a7c19ada7a9db1b828fdf686cb"><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a57e6f6a7c19ada7a9db1b828fdf686cb">SLNet::RPCIndex</a></td></tr>
<tr class="separator:a57e6f6a7c19ada7a9db1b828fdf686cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b5b9eb3be9ad636af02da44b718a75f"><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f">SLNet::MessageID</a></td></tr>
<tr class="memdesc:a5b5b9eb3be9ad636af02da44b718a75f"><td class="mdescLeft">&#160;</td><td class="mdescRight">First byte of a network message.  <a href="#a5b5b9eb3be9ad636af02da44b718a75f"></a><br/></td></tr>
<tr class="separator:a5b5b9eb3be9ad636af02da44b718a75f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a227d2a5f9683a34d9d1e70772fd556ec"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">SLNet::BitSize_t</a></td></tr>
<tr class="separator:a227d2a5f9683a34d9d1e70772fd556ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa616a13e58b2ffd2c3161609610b256d"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aa616a13e58b2ffd2c3161609610b256d">SLNet::NetworkID</a></td></tr>
<tr class="separator:aa616a13e58b2ffd2c3161609610b256d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:aced2e22b5f3b0b55dfadd3d9c6d578b9"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9">SLNet::StartupResult</a> { <br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a348d24f0661e4499defbdb591b68a659">SLNet::RAKNET_STARTED</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9ae31d6e77c65c7342dcc9ecef7127b50d">SLNet::RAKNET_ALREADY_STARTED</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a924cb860def47afef13688ce677545c0">SLNet::INVALID_SOCKET_DESCRIPTORS</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a1aa8582b37b10bce60d4142d9c730e52">SLNet::INVALID_MAX_CONNECTIONS</a>, 
<br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a3b1cb5fef92a0ed529ece10fd7e1eb0a">SLNet::SOCKET_FAMILY_NOT_SUPPORTED</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a7940d7782daf9f7868256646679c4938">SLNet::SOCKET_PORT_ALREADY_IN_USE</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9aa2fb93f14a75c99a052479828875bc2f">SLNet::SOCKET_FAILED_TO_BIND</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a5ca4a2c3d90a2cffdea1b6791fb54242">SLNet::SOCKET_FAILED_TEST_SEND</a>, 
<br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a14727bdbc90466ec6890cdee02b83883">SLNet::PORT_CANNOT_BE_ZERO</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9a683cf64d9c1ecea8ad13363e8f350dcd">SLNet::FAILED_TO_CREATE_NETWORK_THREAD</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9ae733e0bd48f4a2dfa47539342672c0a7">SLNet::COULD_NOT_GENERATE_GUID</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aced2e22b5f3b0b55dfadd3d9c6d578b9aa6ce1a83e053d594c87c76e5c4e309da">SLNet::STARTUP_OTHER_FAILURE</a>
<br/>
 }</td></tr>
<tr class="separator:aced2e22b5f3b0b55dfadd3d9c6d578b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad85150b9d0728bb436c26e00b4ba7c3a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3a">SLNet::ConnectionAttemptResult</a> { <br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa0a136aa63c90c79379ed3958e4935560">SLNet::CONNECTION_ATTEMPT_STARTED</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa0f512c9019e7fb6d665a4f5dd332d436">SLNet::INVALID_PARAMETER</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa63f0a3de6ad4181844f6de2d07bc2273">SLNet::CANNOT_RESOLVE_DOMAIN_NAME</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa05a8300a2a0b64b7007e2c98f7030b57">SLNet::ALREADY_CONNECTED_TO_ENDPOINT</a>, 
<br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aa141986ebfa53cd8c24553aa56ff7b06b">SLNet::CONNECTION_ATTEMPT_ALREADY_IN_PROGRESS</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad85150b9d0728bb436c26e00b4ba7c3aac9ed35a31823a92338932b90daad030d">SLNet::SECURITY_INITIALIZATION_FAILED</a>
<br/>
 }</td></tr>
<tr class="separator:ad85150b9d0728bb436c26e00b4ba7c3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3fc8b60e351dfe5eb05cdba41d8c7a3"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3">SLNet::ConnectionState</a> { <br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3ade1ebe4c73ad9f6fc83600fe0770f631">SLNet::IS_PENDING</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a0c73f37cdda88582ce33e77cffe05cfe">SLNet::IS_CONNECTING</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a042290df226826435b62d02f647281ff">SLNet::IS_CONNECTED</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3af725910bbaabc055cdd1e80eedaa083b">SLNet::IS_DISCONNECTING</a>, 
<br/>
&#160;&#160;<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3ab6bf0613f2209d5458122392d75475e2">SLNet::IS_SILENTLY_DISCONNECTING</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3ac574671c0e5fdb7722616611bcfa818d">SLNet::IS_DISCONNECTED</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a859a36a07d28a19da799faf5a9fc9009">SLNet::IS_NOT_CONNECTED</a>
<br/>
 }</td></tr>
<tr class="memdesc:ad3fc8b60e351dfe5eb05cdba41d8c7a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returned from RakPeerInterface::GetConnectionState()  <a href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3">More...</a><br/></td></tr>
<tr class="separator:ad3fc8b60e351dfe5eb05cdba41d8c7a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa9b6b66fe9c879734011fe8abade6a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6a">SLNet::PublicKeyMode</a> { <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa0c9aeda7f6a0bc71b0f19d35835ac2d2">SLNet::PKM_INSECURE_CONNECTION</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa8e840dbaa6333a47a419de4690ff6dc3">SLNet::PKM_ACCEPT_ANY_PUBLIC_KEY</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aa3f4f835881b1bda20ee59755f5f5e6de">SLNet::PKM_USE_KNOWN_PUBLIC_KEY</a>, 
<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6aab798e0a1be74d9eca04bfa2b988cd9ff">SLNet::PKM_USE_TWO_WAY_AUTHENTICATION</a>
 }</td></tr>
<tr class="memdesc:aafa9b6b66fe9c879734011fe8abade6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used with the PublicKey structure.  <a href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6a">More...</a><br/></td></tr>
<tr class="separator:aafa9b6b66fe9c879734011fe8abade6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9a4f2de1c5f39778584c24da13b18180"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a9a4f2de1c5f39778584c24da13b18180">SLNet::NonNumericHostString</a> (const char *host)</td></tr>
<tr class="separator:a9a4f2de1c5f39778584c24da13b18180"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a242c86300509ec068e5e2ea534bbba51"><td class="memItemLeft" align="right" valign="top">const RakNetGUID&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">SLNet::UNASSIGNED_RAKNET_GUID</a> ((<a class="el" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a>)-1)</td></tr>
<tr class="separator:a242c86300509ec068e5e2ea534bbba51"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ab52e7312fb2120908e67de63b268636f"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ab52e7312fb2120908e67de63b268636f">SLNet::MAX_RPC_MAP_SIZE</a> =((RPCIndex)-1)-1</td></tr>
<tr class="separator:ab52e7312fb2120908e67de63b268636f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a144df1a322b9e5af45316734ced0e255"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a144df1a322b9e5af45316734ced0e255">SLNet::UNDEFINED_RPC_INDEX</a> =((RPCIndex)-1)</td></tr>
<tr class="separator:a144df1a322b9e5af45316734ced0e255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea7714c995aae0e1feaf79c9e7f073d"><td class="memItemLeft" align="right" valign="top">const SystemAddress&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d">SLNet::UNASSIGNED_SYSTEM_ADDRESS</a></td></tr>
<tr class="memdesc:acea7714c995aae0e1feaf79c9e7f073d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index of an invalid <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>.  <a href="#acea7714c995aae0e1feaf79c9e7f073d"></a><br/></td></tr>
<tr class="separator:acea7714c995aae0e1feaf79c9e7f073d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab54f3f4f82be8b0bc4fc3a3e702aa7c9"><td class="memItemLeft" align="right" valign="top">const SystemIndex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#ab54f3f4f82be8b0bc4fc3a3e702aa7c9">SLNet::UNASSIGNED_PLAYER_INDEX</a> = 65535</td></tr>
<tr class="memdesc:ab54f3f4f82be8b0bc4fc3a3e702aa7c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index of an unassigned player.  <a href="#ab54f3f4f82be8b0bc4fc3a3e702aa7c9"></a><br/></td></tr>
<tr class="separator:ab54f3f4f82be8b0bc4fc3a3e702aa7c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af98532b9c66c8c09aea8cd4f97499962"><td class="memItemLeft" align="right" valign="top">const NetworkID&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#af98532b9c66c8c09aea8cd4f97499962">SLNet::UNASSIGNED_NETWORK_ID</a> = (<a class="el" href="../../df/df2/_native_types_8h.xhtml#ad27ed092432b64ff558d2254c278720f">uint64_t</a>) -1</td></tr>
<tr class="memdesc:af98532b9c66c8c09aea8cd4f97499962"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unassigned object ID.  <a href="#af98532b9c66c8c09aea8cd4f97499962"></a><br/></td></tr>
<tr class="separator:af98532b9c66c8c09aea8cd4f97499962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f327e4ef01ce07159269c3bb6bd98f9"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a7f327e4ef01ce07159269c3bb6bd98f9">SLNet::PING_TIMES_ARRAY_SIZE</a> = 5</td></tr>
<tr class="separator:a7f327e4ef01ce07159269c3bb6bd98f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Types used by RakNet, most of which involve user code. </p>

<p>Definition in file <a class="el" href="../../d9/d49/types_8h_source.xhtml">types.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d0/dc8/struct_s_l_net_1_1_public_key" id="d0/dc8/struct_s_l_net_1_1_public_key"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::PublicKey</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>Passed to <a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a2f75a0ccc500acaa25ab8fdf63572227" title="Connect to the specified host (ip or domain name) and server port. Calling Connect and not calling Se...">RakPeerInterface::Connect()</a> </p>

<p>Definition at line <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00133">133</a> of file <a class="el" href="../../d9/d49/types_8h_source.xhtml">types.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aa5442f44e03891100d46096b3fec0f09"></a>char *</td>
<td class="fieldname">
myPrivateKey</td>
<td class="fielddoc">
(Optional) Pointer to a private key of length cat::EasyHandshake::PRIVATE_KEY_BYTES </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a552d1c8d7770e08266c9b06b98801c8b"></a>char *</td>
<td class="fieldname">
myPublicKey</td>
<td class="fielddoc">
(Optional) Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a9b1c0db35385c0f808c1cd7ebce22057"></a><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aafa9b6b66fe9c879734011fe8abade6a">PublicKeyMode</a></td>
<td class="fieldname">
publicKeyMode</td>
<td class="fielddoc">
How to interpret the public key, see above. </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a301ed1ea938e5bec9d5c9dd2d82f93df"></a>char *</td>
<td class="fieldname">
remoteServerPublicKey</td>
<td class="fielddoc">
Pointer to a public key of length cat::EasyHandshake::PUBLIC_KEY_BYTES. See the Encryption sample. </td></tr>
</table>

</div>
</div>
<a name="d8/d23/struct_s_l_net_1_1_packet" id="d8/d23/struct_s_l_net_1_1_packet"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::Packet</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock"><p>This represents a user message from another system. </p>

<p>Definition at line <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00434">434</a> of file <a class="el" href="../../d9/d49/types_8h_source.xhtml">types.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a77b617c6ae559765f8ad26d1f460f082"></a><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a></td>
<td class="fieldname">
bitSize</td>
<td class="fielddoc">
The length of the data in bits. </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aff6d115daef2787d582f9a20efd64fc0"></a>unsigned char *</td>
<td class="fieldname">
data</td>
<td class="fielddoc">
The data from the sender. </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="af25d74f363b4fead30fbafc9ca21354a"></a>bool</td>
<td class="fieldname">
deleteData</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a4f42e82893aff6aade8a45c79d1b8fd3"></a><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a></td>
<td class="fieldname">
guid</td>
<td class="fielddoc">
A unique identifier for the system that sent this packet, regardless of IP address (internal / external / remote system) Only valid once a connection has been established (ID_CONNECTION_REQUEST_ACCEPTED, or ID_NEW_INCOMING_CONNECTION) Until that time, will be UNASSIGNED_RAKNET_GUID </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a75dfd0a23cc4c14dd338caedabe19341"></a>unsigned int</td>
<td class="fieldname">
length</td>
<td class="fielddoc">
The length of the data in bytes. </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a5c9d18515892239712a5d8fcb46c4245"></a><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a></td>
<td class="fieldname">
systemAddress</td>
<td class="fielddoc">
The system that send this packet. </td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a4a736945115119681c77e168346988c4"></a>bool</td>
<td class="fieldname">
wasGeneratedLocally</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ac5eb6b4755b74c50cb76155d08b6e2ff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BITS_TO_BYTES</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(((x)+7)&gt;&gt;3)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Given a number of bits, return how many bytes are needed to represent that. </p>

<p>Definition at line <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00093">93</a> of file <a class="el" href="../../d9/d49/types_8h_source.xhtml">types.h</a>.</p>

<p>Referenced by <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00697">SLNet::BitStream::AddBitsAndReallocate()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01032">SLNet::BitStream::AssertCopyData()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00959">SLNet::BitStream::CopyData()</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00233">SLNet::HuffmanEncodingTree::DecodeArray()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00193">SLNet::TableSerializer::DeserializeCell()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00525">SLNet::BitStream::GetNumberOfBytesUsed()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00748">SLNet::BitStream::PadWithZeroToByteLength()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03431">SLNet::RakPeer::ParseConnectionRequestPacket()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00846">SLNet::BitStream::PrintBits()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00555">SLNet::BitStream::ReadBits()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01555">SLNet::ReliabilityLayer::Send()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04173">SLNet::RakPeer::SendBuffered()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01703">SLNet::ReliabilityLayer::Update()</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00168">SLNet::BitStream::Write()</a>.</p>

</div>
</div>
<a class="anchor" id="a4c1e0708f6f9b121ca602cd8ceddd670"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BYTES_TO_BITS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;((x)&lt;&lt;3)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00094">94</a> of file <a class="el" href="../../d9/d49/types_8h_source.xhtml">types.h</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00103">SLNet::PluginInterface2::AllocatePacketUnified()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00143">SLNet::RakPeer::AllocPacket()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00193">SLNet::TableSerializer::DeserializeCell()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00976">SLNet::BitStream::IgnoreBytes()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00748">SLNet::BitStream::PadWithZeroToByteLength()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04524">SLNet::ProcessOfflineNetworkPacket()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01714">SLNet::BitStream::ReadBitsFromIntegerRange()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01555">SLNet::ReliabilityLayer::Send()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04209">SLNet::RakPeer::SendBufferedList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02981">SLNet::RakPeer::SendOutOfBand()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02715">SLNet::RakPeer::SendTTL()</a>, <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00069">SLNet::PluginInterface2::SendUnified()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00855">SLNet::BitStream::SerializeBitsFromIntegerRange()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01703">SLNet::ReliabilityLayer::Update()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00168">SLNet::BitStream::Write()</a>, and <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01592">SLNet::BitStream::WriteBitsFromIntegerRange()</a>.</p>

</div>
</div>
<a class="anchor" id="a123f55e39d7666a55ea7bae5b2beaf7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PRINTF_64_BIT_MODIFIER&#160;&#160;&#160;&quot;ll&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00108">108</a> of file <a class="el" href="../../d9/d49/types_8h_source.xhtml">types.h</a>.</p>

<p>Referenced by <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, <a class="el" href="../../d9/d5f/_rak_net_statistics_8cpp_source.xhtml#l00032">SLNet::StatisticsToString()</a>, and <a class="el" href="../../d3/d93/_rak_net_types_8cpp_source.xhtml#l00775">SLNet::RakNetGUID::ToString()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_bbb90e3ef9167a594ae33323139a2595.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_88467e66686deb9d3756fe4fc298e321.xhtml">slikenet</a></li><li class="navelem"><a class="el" href="../../d9/d49/types_8h.xhtml">types.h</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:48 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/Base64Encoder.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d9/d9b/_base64_encoder_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Base64Encoder.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d9/d9b/_base64_encoder_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/d4c/_base64_encoder_8h.xhtml">slikenet/Base64Encoder.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/dc5/memoryoverride_8h.xhtml" title="If _USE_RAK_MEMORY_OVERRIDE is defined, memory allocations go through rakMalloc, rakRealloc, and rakFree.">slikenet/memoryoverride.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="code" href="../../d4/d4c/_base64_encoder_8h.xhtml#a60674731c56f7ab8cfab678ee5511998">   19</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a60674731c56f7ab8cfab678ee5511998">Base64Map</a>(<span class="keywordtype">void</span>) {<span class="keywordflow">return</span> <span class="stringliteral">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;}</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">   20</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a> = <span class="stringliteral">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">// 3/17/2013 must be unsigned char or else it will use negative indices</span></div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="code" href="../../d4/d4c/_base64_encoder_8h.xhtml#a8139edc5f6d1b0e1716c4ce4b830ef53">   23</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a8139edc5f6d1b0e1716c4ce4b830ef53" title="Returns how many bytes were written.">Base64Encoding</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1097e0bdb0a7bbac499269e69f867d16">inputData</a>, <span class="keywordtype">int</span> dataLength, <span class="keywordtype">char</span> *outputData)</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="comment">// http://en.wikipedia.org/wiki/Base64</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordtype">int</span> outputOffset, charCount;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordtype">int</span> write3Count;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    outputOffset=0;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    charCount=0;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">int</span> j;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    write3Count=dataLength/3;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">for</span> (j=0; j &lt; write3Count; j++)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="comment">// 6 leftmost bits from first byte, shifted to bits 7,8 are 0</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[inputData[j*3+0] &gt;&gt; 2];</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="comment">// Remaining 2 bits from first byte, placed in position, and 4 high bits from the second byte, masked to ignore bits 7,8</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[((inputData[j*3+0] &lt;&lt; 4) | (inputData[j*3+1] &gt;&gt; 4)) &amp; 63];</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment">// 4 low bits from the second byte and the two high bits from the third byte, masked to ignore bits 7,8</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[((inputData[j*3+1] &lt;&lt; 2) | (inputData[j*3+2] &gt;&gt; 6)) &amp; 63]; <span class="comment">// Third 6 bits</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="comment">// Last 6 bits from the third byte, masked to ignore bits 7,8</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[inputData[j*3+2] &amp; 63];</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span> (dataLength % 3==1)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="comment">// One input byte remaining</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[inputData[j*3+0] &gt;&gt; 2];</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment">// Remaining 2 bits from first byte, placed in position, and 4 high bits from the second byte, masked to ignore bits 7,8</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[((inputData[j*3+0] &lt;&lt; 4) | (inputData[j*3+1] &gt;&gt; 4)) &amp; 63];</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Pad with two equals</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        outputData[outputOffset++]=<span class="charliteral">&#39;=&#39;</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        outputData[outputOffset++]=<span class="charliteral">&#39;=&#39;</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (dataLength % 3==2)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="comment">// Two input bytes remaining</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">// 6 leftmost bits from first byte, shifted to bits 7,8 are 0</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[inputData[j*3+0] &gt;&gt; 2];</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// Remaining 2 bits from first byte, placed in position, and 4 high bits from the second byte, masked to ignore bits 7,8</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[((inputData[j*3+0] &lt;&lt; 4) | (inputData[j*3+1] &gt;&gt; 4)) &amp; 63];</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="comment">// 4 low bits from the second byte, followed by 00</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        outputData[outputOffset++]=<a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a3f5f3dda120948754cdbb29f570cc5b2">base64Map</a>[(inputData[j*3+1] &lt;&lt; 2) &amp; 63]; <span class="comment">// Third 6 bits</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">if</span> ((++charCount % 76)==0) {outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>; outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>; charCount=0;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment">// Pad with one equal</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        outputData[outputOffset++]=<span class="charliteral">&#39;=&#39;</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="comment">//outputData[outputOffset++]=&#39;=&#39;;</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// Append \r\n</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    outputData[outputOffset++]=<span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    outputData[outputOffset++]=<span class="charliteral">&#39;\n&#39;</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    outputData[outputOffset]=0;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> outputOffset;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a25c79934240066535dc3eb4f08551742">   96</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a8139edc5f6d1b0e1716c4ce4b830ef53" title="Returns how many bytes were written.">Base64Encoding</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a1097e0bdb0a7bbac499269e69f867d16">inputData</a>, <span class="keywordtype">int</span> dataLength, <span class="keywordtype">char</span> **outputData)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    *outputData = (<span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(dataLength * 2 + 6, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d9/d9b/_base64_encoder_8cpp.xhtml#a8139edc5f6d1b0e1716c4ce4b830ef53" title="Returns how many bytes were written.">Base64Encoding</a>(inputData, dataLength, *outputData);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d9/d9b/_base64_encoder_8cpp.xhtml">Base64Encoder.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

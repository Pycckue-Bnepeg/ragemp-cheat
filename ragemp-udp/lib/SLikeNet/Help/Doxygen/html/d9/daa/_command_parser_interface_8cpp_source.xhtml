<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/CommandParserInterface.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d9/daa/_command_parser_interface_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CommandParserInterface.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d9/daa/_command_parser_interface_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2018, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/d3b/_command_parser_interface_8h.xhtml" title="Contains CommandParserInterface , from which you derive custom command parsers.">slikenet/CommandParserInterface.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d05/_transport_interface_8h.xhtml" title="Contains TransportInterface from which you can derive custom transport providers for ConsoleServer...">slikenet/TransportInterface.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#if   defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#elif defined(_WIN32)</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"></span><span class="comment">// IP_DONTFRAGMENT is different between winsock 1 and winsock 2.  Therefore, Winsock2.h must be linked againt Ws2_32.lib</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">// winsock.h must be linked against WSock32.lib.  If these two are mixed up the flag won&#39;t work correctly</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;winsock2.h&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;sys/socket.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;netinet/in.h&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;arpa/inet.h&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/dff/_linux_strings_8h.xhtml">slikenet/LinuxStrings.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#af22a712a9db931075f8ea8f6a6c5e930">CommandParserInterface::VARIABLE_NUMBER_OF_PARAMETERS</a>=255;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a809564daeb0384197f70247776af8f9f">   41</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a809564daeb0384197f70247776af8f9f" title="List of commands registered with RegisterCommand()">SLNet::RegisteredCommandComp</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> &amp; key, <span class="keyword">const</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#db/db7/struct_s_l_net_1_1_registered_command">RegisteredCommand</a> &amp;data )</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> _stricmp(key,data.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aa2335c7c9fdc8ce5e79a1f3dd4ef5879">command</a>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a7ba9f06e187e9ddab5ae7c029ea79622">   46</a></span>&#160;<a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a7ba9f06e187e9ddab5ae7c029ea79622">CommandParserInterface::CommandParserInterface</a>() {}</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ed8b0c6f394233b23c09ab24af22475">   47</a></span>&#160;<a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ed8b0c6f394233b23c09ab24af22475">CommandParserInterface::~CommandParserInterface</a>() {}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a5f24234afcc66d0591109ef74b4d1239">   49</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a5f24234afcc66d0591109ef74b4d1239">CommandParserInterface::ParseConsoleString</a>(<span class="keywordtype">char</span> *str, <span class="keyword">const</span> <span class="keywordtype">char</span> delineator, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> delineatorToggle, <span class="keywordtype">unsigned</span> *numParameters, <span class="keywordtype">char</span> **parameterList, <span class="keywordtype">unsigned</span> parameterListLength)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">unsigned</span> strIndex, parameterListIndex;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">unsigned</span> strLen;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">bool</span> replaceDelineator=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    strLen = (unsigned) strlen(str);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// Replace every instance of delineator, \n, \r with 0</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">for</span> (strIndex=0; strIndex &lt; strLen; strIndex++)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">if</span> (str[strIndex]==delineator &amp;&amp; replaceDelineator)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            str[strIndex]=0;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">if</span> (str[strIndex]==<span class="charliteral">&#39;\n&#39;</span> || str[strIndex]==<span class="charliteral">&#39;\r&#39;</span>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            str[strIndex]=0;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">if</span> (str[strIndex]==delineatorToggle)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            str[strIndex]=0;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            replaceDelineator=!replaceDelineator;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Fill up parameterList starting at each non-0</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">for</span> (strIndex=0, parameterListIndex=0; strIndex &lt; strLen; )</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">if</span> (str[strIndex]!=0)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            parameterList[parameterListIndex]=str+strIndex;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            parameterListIndex++;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(parameterListIndex &lt; parameterListLength);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">if</span> (parameterListIndex &gt;= parameterListLength)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            strIndex++;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">while</span> (str[strIndex]!=0 &amp;&amp; strIndex &lt; strLen)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                strIndex++;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            strIndex++;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    parameterList[parameterListIndex]=0;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    *numParameters=parameterListIndex;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a2e03d50221b92ab98b41d1f66b8001cb">   95</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a2e03d50221b92ab98b41d1f66b8001cb">CommandParserInterface::SendCommandList</a>(<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ad64cf6af46df6a5e68747740ee2c1fec">Size</a>())</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ad64cf6af46df6a5e68747740ee2c1fec">Size</a>(); i++)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>[i].command);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">if</span> (i &lt; <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ad64cf6af46df6a5e68747740ee2c1fec">Size</a>()-1)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;, &quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;\r\n&quot;</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;No registered commands\r\n&quot;</span>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#af567f77880a28f0662de71d2b115ee40">  111</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#af567f77880a28f0662de71d2b115ee40">CommandParserInterface::RegisterCommand</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> parameterCount, <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <span class="keyword">const</span> <span class="keywordtype">char</span> *commandHelp)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#db/db7/struct_s_l_net_1_1_registered_command">RegisteredCommand</a> rc;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    rc.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aa2335c7c9fdc8ce5e79a1f3dd4ef5879">command</a>=command;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    rc.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad6f6ba1f581aca4572fc90be40e00b8d">commandHelp</a>=commandHelp;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    rc.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a94e47272637bd24b11b1b72dda473f44">parameterCount</a>=parameterCount;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a30d44cd52bdb782478472a95cc5a4b0a">Insert</a>( command, rc, <span class="keyword">true</span>, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#af207b9dd2bd9dd57ae6263f26ae4736b">  119</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#af207b9dd2bd9dd57ae6263f26ae4736b">CommandParserInterface::GetRegisteredCommand</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *command, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#db/db7/struct_s_l_net_1_1_registered_command">RegisteredCommand</a> *rc)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">unsigned</span> index;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    index=<a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a>(command, &amp;objectExists);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        *rc=<a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9ebee7da1aed4260a4935e2954969239">commandList</a>[index];</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> objectExists;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a4910fac51a4b7c1180dd36251289def7">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a4910fac51a4b7c1180dd36251289def7" title="This is called every time transport interface is registered.">CommandParserInterface::OnTransportChange</a>(<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    (void) transport;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9a7dcfe0cc123bfd8df26ba1bd8ab4f8">  132</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a9a7dcfe0cc123bfd8df26ba1bd8ab4f8" title="A callback for when systemAddress has connected to us.">CommandParserInterface::OnNewIncomingConnection</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress, <a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    (void) systemAddress;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    (void) transport;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aff1ffd9c6fed37db3b9e06f5cdda776c">  137</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aff1ffd9c6fed37db3b9e06f5cdda776c" title="A callback for when systemAddress has disconnected, either gracefully or forcefully.">CommandParserInterface::OnConnectionLost</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress, <a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    (void) systemAddress;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    (void) transport;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aaa19fe99cd9223c972ff11369cd9179c">  142</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aaa19fe99cd9223c972ff11369cd9179c" title="Just writes a string to the remote system based on the result ( res ) of your operation.">CommandParserInterface::ReturnResult</a>(<span class="keywordtype">bool</span> res, <span class="keyword">const</span> <span class="keywordtype">char</span> *command,<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span> (res)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;%s returned true.\r\n&quot;</span>, command);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;%s returned false.\r\n&quot;</span>, command);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a86419b3c8042227f0ad30335f4e35666">  149</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aaa19fe99cd9223c972ff11369cd9179c" title="Just writes a string to the remote system based on the result ( res ) of your operation.">CommandParserInterface::ReturnResult</a>(<span class="keywordtype">int</span> res, <span class="keyword">const</span> <span class="keywordtype">char</span> *command,<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;%s returned %i.\r\n&quot;</span>, command, res);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a722b48ee2b088b3d471e978980babac6">  153</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aaa19fe99cd9223c972ff11369cd9179c" title="Just writes a string to the remote system based on the result ( res ) of your operation.">CommandParserInterface::ReturnResult</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *command, <a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;Successfully called %s.\r\n&quot;</span>, command);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#acb34c1b3b505bc602fa7ecc0af8bad1a">  157</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aaa19fe99cd9223c972ff11369cd9179c" title="Just writes a string to the remote system based on the result ( res ) of your operation.">CommandParserInterface::ReturnResult</a>(<span class="keywordtype">char</span> *res, <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;%s returned %s.\r\n&quot;</span>, command, res);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#a7409a39e68431493d7194720cbae91f9">  161</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d9a/class_s_l_net_1_1_command_parser_interface.xhtml#aaa19fe99cd9223c972ff11369cd9179c" title="Just writes a string to the remote system based on the result ( res ) of your operation.">CommandParserInterface::ReturnResult</a>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> res, <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml" title="Defines an interface that is used to send and receive null-terminated strings.">TransportInterface</a> *transport, <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;systemAddress)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">char</span> addr[128];</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>,addr,static_cast&lt;size_t&gt;(128));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">char</span> addr2[128];</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    res.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>,addr2,static_cast&lt;size_t&gt;(128));</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    transport-&gt;<a class="code" href="../../d0/d4e/class_s_l_net_1_1_transport_interface.xhtml#ab6f5d46268e400149496babd9df74125">Send</a>(systemAddress, <span class="stringliteral">&quot;%s returned %s %s:%i\r\n&quot;</span>, command,addr,addr2,res.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47" title="Returns the port in host order (this is what you normally use)">GetPort</a>());</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d9/daa/_command_parser_interface_8cpp.xhtml">CommandParserInterface.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

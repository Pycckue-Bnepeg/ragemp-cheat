<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::HTTPConnection2 Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d5/d76/class_s_l_net_1_1_h_t_t_p_connection2-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::HTTPConnection2 Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Use <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml" title="Use HTTPConnection2 to communicate with a web server.">HTTPConnection2</a> to communicate with a web server.  
 <a href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">slikenet/HTTPConnection2.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for SLNet::HTTPConnection2:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/dbd/class_s_l_net_1_1_h_t_t_p_connection2__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a></td></tr>
<tr class="separator:d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a900af7302808e3c063c1dbe0c376cffd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a900af7302808e3c063c1dbe0c376cffd">HTTPConnection2</a> ()</td></tr>
<tr class="separator:a900af7302808e3c063c1dbe0c376cffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d54196b5bf7e77b66756714a36f680e"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a6d54196b5bf7e77b66756714a36f680e">~HTTPConnection2</a> ()</td></tr>
<tr class="separator:a6d54196b5bf7e77b66756714a36f680e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13f9cf7b335a66ab1ef8e547f956bae6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a13f9cf7b335a66ab1ef8e547f956bae6">TransmitRequest</a> (const char *stringToTransmit, const char *host, unsigned short port=80, bool useSSL=false, int ipVersion=4, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> useAddress=<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d">UNASSIGNED_SYSTEM_ADDRESS</a>, void *userData=0)</td></tr>
<tr class="memdesc:a13f9cf7b335a66ab1ef8e547f956bae6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to, then transmit a request to a TCP based server.  <a href="#a13f9cf7b335a66ab1ef8e547f956bae6"></a><br/></td></tr>
<tr class="separator:a13f9cf7b335a66ab1ef8e547f956bae6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78058bf3aa684ed4baa894b586998047"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a78058bf3aa684ed4baa894b586998047">GetResponse</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;stringTransmitted, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;hostTransmitted, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;responseReceived, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;hostReceived, ptrdiff_t &amp;contentOffset, void **userData)</td></tr>
<tr class="memdesc:a78058bf3aa684ed4baa894b586998047"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check for and return a response from a prior call to <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a13f9cf7b335a66ab1ef8e547f956bae6" title="Connect to, then transmit a request to a TCP based server.">TransmitRequest()</a> As TCP is stream based, you may get a webserver reply over several calls to <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">TCPInterface::Receive()</a> <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml" title="Use HTTPConnection2 to communicate with a web server.">HTTPConnection2</a> will store <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">Packet::data</a> and return the response to you either when the connection to the webserver is lost, or enough data has been received() This will only potentially return true after a call to ProcessTCPPacket() or OnLostConnection()  <a href="#a78058bf3aa684ed4baa894b586998047"></a><br/></td></tr>
<tr class="separator:a78058bf3aa684ed4baa894b586998047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668de444cff5748caaa5539ce17da2f4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a668de444cff5748caaa5539ce17da2f4">GetResponse</a> (<a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;stringTransmitted, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;hostTransmitted, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;responseReceived, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;hostReceived, ptrdiff_t &amp;contentOffset)</td></tr>
<tr class="separator:a668de444cff5748caaa5539ce17da2f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45b280e6d3b8a5d51ddeff910fa8c65e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a45b280e6d3b8a5d51ddeff910fa8c65e">IsBusy</a> (void) const </td></tr>
<tr class="memdesc:a45b280e6d3b8a5d51ddeff910fa8c65e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return if any requests are pending.  <a href="#a45b280e6d3b8a5d51ddeff910fa8c65e"></a><br/></td></tr>
<tr class="separator:a45b280e6d3b8a5d51ddeff910fa8c65e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac735349693b7f9a330a986189504ed00"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#ac735349693b7f9a330a986189504ed00">HasResponse</a> (void) const </td></tr>
<tr class="memdesc:ac735349693b7f9a330a986189504ed00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return if any requests are waiting to be read by the user.  <a href="#ac735349693b7f9a330a986189504ed00"></a><br/></td></tr>
<tr class="separator:ac735349693b7f9a330a986189504ed00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb9a88b64a3cc3e98dc988a101579768"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#abb9a88b64a3cc3e98dc988a101579768">OnReceive</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:abb9a88b64a3cc3e98dc988a101579768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3385bd2f55c602a9f758ef4d03ca97aa"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a3385bd2f55c602a9f758ef4d03ca97aa">OnClosedConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a> lostConnectionReason)</td></tr>
<tr class="separator:a3385bd2f55c602a9f758ef4d03ca97aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e74ed0027a51995e5aecb420e5c766b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a4e74ed0027a51995e5aecb420e5c766b">OnNewConnection</a> (const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;systemAddress, <a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> rakNetGUID, bool isIncoming)</td></tr>
<tr class="separator:a4e74ed0027a51995e5aecb420e5c766b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2f4755ae50de257f81fab477e29cce5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#ad2f4755ae50de257f81fab477e29cce5">OnFailedConnectionAttempt</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a> failedConnectionAttemptReason)</td></tr>
<tr class="separator:ad2f4755ae50de257f81fab477e29cce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a2df222e1167c6290dd6d1af585154e73">PluginInterface2</a> ()</td></tr>
<tr class="separator:a2df222e1167c6290dd6d1af585154e73 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ae97f06b1fcaa2cc45de4394b89ba3a41">~PluginInterface2</a> ()</td></tr>
<tr class="separator:ae97f06b1fcaa2cc45de4394b89ba3a41 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe33b32b1729289a809ada304227cbd8">OnAttach</a> (void)</td></tr>
<tr class="memdesc:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is attached.  <a href="#afe33b32b1729289a809ada304227cbd8"></a><br/></td></tr>
<tr class="separator:afe33b32b1729289a809ada304227cbd8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aad23dec19f2567a5b64c2108f73be0e4">OnDetach</a> (void)</td></tr>
<tr class="memdesc:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the interface is detached.  <a href="#aad23dec19f2567a5b64c2108f73be0e4"></a><br/></td></tr>
<tr class="separator:aad23dec19f2567a5b64c2108f73be0e4 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa181a0ff58765c3d7878ac6dfd5e5a10">Update</a> (void)</td></tr>
<tr class="memdesc:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update is called every time a packet is checked for .  <a href="#aa181a0ff58765c3d7878ac6dfd5e5a10"></a><br/></td></tr>
<tr class="separator:aa181a0ff58765c3d7878ac6dfd5e5a10 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a9943065789510f76737975203f4d05bc">OnRakPeerStartup</a> (void)</td></tr>
<tr class="memdesc:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is initialized.  <a href="#a9943065789510f76737975203f4d05bc"></a><br/></td></tr>
<tr class="separator:a9943065789510f76737975203f4d05bc inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aea8a90c4078ecc0db77545e44531b1de">OnRakPeerShutdown</a> (void)</td></tr>
<tr class="memdesc:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> is shutdown.  <a href="#aea8a90c4078ecc0db77545e44531b1de"></a><br/></td></tr>
<tr class="separator:aea8a90c4078ecc0db77545e44531b1de inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a4bed8468dd7d3624c9d8b6e17737ba77">UsesReliabilityLayer</a> (void) const </td></tr>
<tr class="separator:a4bed8468dd7d3624c9d8b6e17737ba77 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd6172fa97f484a0b874ebbe4f32de0e">OnDirectSocketSend</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:acd6172fa97f484a0b874ebbe4f32de0e inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#afe625ccabbbfea5b8d0dd717748ef857">OnDirectSocketReceive</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:afe625ccabbbfea5b8d0dd717748ef857 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a775d3c4bf7e924a510becfa85b3f1f00">OnReliabilityLayerNotification</a> (const char *errorMessage, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, bool isError)</td></tr>
<tr class="separator:a775d3c4bf7e924a510becfa85b3f1f00 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#abb5ebc232cc45b62ea61ee7cde758a22">OnInternalPacket</a> (<a class="el" href="../../d9/d9a/struct_s_l_net_1_1_internal_packet.xhtml">InternalPacket</a> *internalPacket, unsigned frameNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time, int isSend)</td></tr>
<tr class="separator:abb5ebc232cc45b62ea61ee7cde758a22 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acc1f6b096fd6d98064a1f1a4af8500d1">OnAck</a> (unsigned int messageNumber, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> time)</td></tr>
<tr class="separator:acc1f6b096fd6d98064a1f1a4af8500d1 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a6b7373aa27360743e697c5afa38fc541">OnPushBackPacket</a> (const char *data, const <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> bitsUsed, <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> remoteSystemAddress)</td></tr>
<tr class="separator:a6b7373aa27360743e697c5afa38fc541 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#acd3c54782ccc647432571e5e5bae5e48">GetRakPeerInterface</a> (void) const </td></tr>
<tr class="separator:acd3c54782ccc647432571e5e5bae5e48 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a917f7caf3bcd763620cce934761aa8a8">GetMyGUIDUnified</a> (void) const </td></tr>
<tr class="separator:a917f7caf3bcd763620cce934761aa8a8 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a462426e3996a2f1038cac5505ed11fca">SetRakPeerInterface</a> (<a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *ptr)</td></tr>
<tr class="separator:a462426e3996a2f1038cac5505ed11fca inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa278807355590c171e787be943dbb520">SetTCPInterface</a> (<a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *ptr)</td></tr>
<tr class="separator:aa278807355590c171e787be943dbb520 inherit pub_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a6fb4f87c3059c480670e250294f64258"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a6fb4f87c3059c480670e250294f64258">IsConnected</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> sa)</td></tr>
<tr class="separator:a6fb4f87c3059c480670e250294f64258"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4a5c2ff5d478539443c8ca456ba56f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a5d4a5c2ff5d478539443c8ca456ba56f">SendRequest</a> (<a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a> *request)</td></tr>
<tr class="separator:a5d4a5c2ff5d478539443c8ca456ba56f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1965dd4bab40e13cac560d1284c68c9a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a1965dd4bab40e13cac560d1284c68c9a">RemovePendingRequest</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> sa)</td></tr>
<tr class="separator:a1965dd4bab40e13cac560d1284c68c9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a048049334b4000a6c6dab3f4c3593249"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a048049334b4000a6c6dab3f4c3593249">SendNextPendingRequest</a> (void)</td></tr>
<tr class="separator:a048049334b4000a6c6dab3f4c3593249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36d69640c881421a9bfb43fd076922d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a36d69640c881421a9bfb43fd076922d3">SendPendingRequestToConnectedSystem</a> (<a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> sa)</td></tr>
<tr class="separator:a36d69640c881421a9bfb43fd076922d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a> (const <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *bitStream, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:aa9c79c0d16ece39114231d680190d39a inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a30f7650d8045852663c46dc72c740043">SendUnified</a> (const char *data, const int length, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:a30f7650d8045852663c46dc72c740043 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ad0e4aabc93a77dfb2ec7af08710961b5">SendListUnified</a> (const char **data, const int *lengths, const int numParameters, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c">PacketPriority</a> priority, <a class="el" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, char orderingChannel, const <a class="el" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, bool broadcast)</td></tr>
<tr class="separator:ad0e4aabc93a77dfb2ec7af08710961b5 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a> (unsigned dataSize)</td></tr>
<tr class="separator:aed235e7933ca7f30448eb9c91cefab63 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet, bool pushAtHead)</td></tr>
<tr class="separator:a00bb796b830ec2130b4c11ed13c3e838 inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a71b375de9093e4116b57bf3780d1615b">DeallocPacketUnified</a> (<a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *packet)</td></tr>
<tr class="separator:a71b375de9093e4116b57bf3780d1615b inherit pro_methods_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ad9e69ccf85e423b52ea9b60f89c6ae72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt; <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#ad9e69ccf85e423b52ea9b60f89c6ae72">pendingRequests</a></td></tr>
<tr class="separator:ad9e69ccf85e423b52ea9b60f89c6ae72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bdaacce4c6d67b48a1094d4e7384cda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a3bdaacce4c6d67b48a1094d4e7384cda">sentRequests</a></td></tr>
<tr class="separator:a3bdaacce4c6d67b48a1094d4e7384cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd042acd0f2504f96157f2390a22a6a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#afd042acd0f2504f96157f2390a22a6a9">completedRequests</a></td></tr>
<tr class="separator:afd042acd0f2504f96157f2390a22a6a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab350d671ce6bd77b80197c73c0fb0fec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#ab350d671ce6bd77b80197c73c0fb0fec">pendingRequestsMutex</a></td></tr>
<tr class="separator:ab350d671ce6bd77b80197c73c0fb0fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3611c962fac3f77ac285252c18d47ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#ab3611c962fac3f77ac285252c18d47ad">sentRequestsMutex</a></td></tr>
<tr class="separator:ab3611c962fac3f77ac285252c18d47ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebb1ab8a6cbbc10079455d270e9a6a1d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#aebb1ab8a6cbbc10079455d270e9a6a1d">completedRequestsMutex</a></td></tr>
<tr class="separator:aebb1ab8a6cbbc10079455d270e9a6a1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#db/d5e/class_s_l_net_1_1_plugin_interface2">SLNet::PluginInterface2</a></td></tr>
<tr class="memitem:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml">RakPeerInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a></td></tr>
<tr class="separator:adac8deadf450a4e1d69c11b1db588bec inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a></td></tr>
<tr class="separator:ac298ef92904df807a3248e380e8edf43 inherit pro_attribs_group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Use <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml" title="Use HTTPConnection2 to communicate with a web server.">HTTPConnection2</a> to communicate with a web server. </p>
<p>Start an instance of <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> via the Start() command. This class will handle connecting to transmit a request </p>

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00044">44</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>
</div><hr/><h2 class="groupheader">Class Documentation</h2>
<a name="d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request" id="d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct SLNet::HTTPConnection2::Request</td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="textblock">
<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00085">85</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>
</div><table class="fieldtable">
<tr><th colspan="3">Class Members</th></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a709f80fd08872239dee1df6f3973df83"></a>size_t</td>
<td class="fieldname">
bytesReadForThisChunk</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a26d64849b874569ac17fc69a9664b4e8"></a>bool</td>
<td class="fieldname">
chunked</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a2a053928dba3b4b7e2de8369dfd425fd"></a>int</td>
<td class="fieldname">
contentLength</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ac55f652b4ba0dc3b7573e307c4d10224"></a>ptrdiff_t</td>
<td class="fieldname">
contentOffset</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ab141427fc9a8b5df2baef02e6fcb371f"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
host</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a61d6ca5481e4cc032108e06cb3bf9ddc"></a><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a></td>
<td class="fieldname">
hostCompletedAddress</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ab1b1a9f6272779bb2c15fec2725ad98b"></a><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a></td>
<td class="fieldname">
hostEstimatedAddress</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="ae6a2a12182e19ccb7e3805d97d46869d"></a>int</td>
<td class="fieldname">
ipVersion</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="af306a5233022de3df567a451e090e9ca"></a>unsigned short</td>
<td class="fieldname">
port</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a5520ee5b1741b3cebb8da8461262493d"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
stringReceived</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="aecbb92f72ea8d6d3927b3c25a15cda5c"></a><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a></td>
<td class="fieldname">
stringToTransmit</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a0719380881848112c7d3cd2767292264"></a>size_t</td>
<td class="fieldname">
thisChunkSize</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a883c6dc33963d3a1916e027747d2e932"></a>void *</td>
<td class="fieldname">
userData</td>
<td class="fielddoc">
</td></tr>
<tr><td class="fieldtype">
<a class="anchor" id="a01e31edee934449ef697bc421c65cdee"></a>bool</td>
<td class="fieldname">
useSSL</td>
<td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a900af7302808e3c063c1dbe0c376cffd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SLNet::HTTPConnection2::HTTPConnection2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6d54196b5bf7e77b66756714a36f680e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual SLNet::HTTPConnection2::~HTTPConnection2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a78058bf3aa684ed4baa894b586998047"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection2::GetResponse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>stringTransmitted</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>hostTransmitted</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>responseReceived</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>hostReceived</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ptrdiff_t &amp;&#160;</td>
          <td class="paramname"><em>contentOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>userData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check for and return a response from a prior call to <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a13f9cf7b335a66ab1ef8e547f956bae6" title="Connect to, then transmit a request to a TCP based server.">TransmitRequest()</a> As TCP is stream based, you may get a webserver reply over several calls to <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a71c601f7df74b40aae954757c7724ca9" title="Returns data received.">TCPInterface::Receive()</a> <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml" title="Use HTTPConnection2 to communicate with a web server.">HTTPConnection2</a> will store <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">Packet::data</a> and return the response to you either when the connection to the webserver is lost, or enough data has been received() This will only potentially return true after a call to ProcessTCPPacket() or OnLostConnection() </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">stringTransmitted</td><td>The original string transmitted </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">hostTransmitted</td><td>The parameter of the same name passed to <a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#a13f9cf7b335a66ab1ef8e547f956bae6" title="Connect to, then transmit a request to a TCP based server.">TransmitRequest()</a> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">responseReceived</td><td>The response, if any </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">hostReceived</td><td>The <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> from ProcessTCPPacket() or OnLostConnection() </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">contentOffset</td><td>The offset from the start of responseReceived to the data body. Equivalent to searching for <br/>
<br/>
 in responseReceived. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">userData</td><td>Whatever you passed to TransmitRequest </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if there was a response. false if not. </dd></dl>

</div>
</div>
<a class="anchor" id="a668de444cff5748caaa5539ce17da2f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection2::GetResponse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>stringTransmitted</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>hostTransmitted</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml">RakString</a> &amp;&#160;</td>
          <td class="paramname"><em>responseReceived</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>hostReceived</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ptrdiff_t &amp;&#160;</td>
          <td class="paramname"><em>contentOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac735349693b7f9a330a986189504ed00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection2::HasResponse </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return if any requests are waiting to be read by the user. </p>

</div>
</div>
<a class="anchor" id="a45b280e6d3b8a5d51ddeff910fa8c65e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection2::IsBusy </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return if any requests are pending. </p>

</div>
</div>
<a class="anchor" id="a6fb4f87c3059c480670e250294f64258"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection2::IsConnected </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>sa</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3385bd2f55c602a9f758ef4d03ca97aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::HTTPConnection2::OnClosedConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga4d3ac5ca8821fadad6d22d0267e06803">PI2_LostConnectionReason</a>&#160;</td>
          <td class="paramname"><em>lostConnectionReason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when a connection is dropped because the user called <a class="el" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml#adda8200ca715f0d15db7d2e599365408" title="Close the connection to another host (if we initiated the connection it will disconnect, if they did it will kick them out).">RakPeer::CloseConnection()</a> for a particular system </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>The system whose connection was closed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lostConnectionReason</td><td>How the connection was closed: manually, connection lost, or notification of disconnection </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a95cb6fb37ada42840dafdbf6ffe078e4">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="ad2f4755ae50de257f81fab477e29cce5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::HTTPConnection2::OnFailedConnectionAttempt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga111ccf3400cb3830cc7ef8c042c9b26c">PI2_FailedConnectionAttemptReason</a>&#160;</td>
          <td class="paramname"><em>failedConnectionAttemptReason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when a connection attempt fails </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> to be returned to the user </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">failedConnectionReason</td><td>Why the connection failed </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa95d4714e97480ac51a87b6b34161db7">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a4e74ed0027a51995e5aecb420e5c766b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SLNet::HTTPConnection2::OnNewConnection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a> &amp;&#160;</td>
          <td class="paramname"><em>systemAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&#160;</td>
          <td class="paramname"><em>rakNetGUID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isIncoming</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called when we got a new connection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">systemAddress</td><td>Address of the new connection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rakNetGuid</td><td>The guid of the specified system </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isIncoming</td><td>If true, this is ID_NEW_INCOMING_CONNECTION, or the equivalent </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a225b5a285e1cf2b0f9b03f6133c409e8">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="abb9a88b64a3cc3e98dc988a101579768"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> SLNet::HTTPConnection2::OnReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet">Packet</a> *&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>OnReceive is called for every packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">packet</td><td>the packet that is being returned to the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to allow the game and other plugins to get this message, false to absorb it </dd></dl>

<p>Reimplemented from <a class="el" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a3a401ad0acd5d326d7307e2f4fce20ea">SLNet::PluginInterface2</a>.</p>

</div>
</div>
<a class="anchor" id="a1965dd4bab40e13cac560d1284c68c9a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection2::RemovePendingRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>sa</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a048049334b4000a6c6dab3f4c3593249"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection2::SendNextPendingRequest </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a36d69640c881421a9bfb43fd076922d3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection2::SendPendingRequestToConnectedSystem </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>sa</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5d4a5c2ff5d478539443c8ca456ba56f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SLNet::HTTPConnection2::SendRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a13f9cf7b335a66ab1ef8e547f956bae6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SLNet::HTTPConnection2::TransmitRequest </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>stringToTransmit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em> = <code>80</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>useSSL</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ipVersion</em> = <code>4</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml">SystemAddress</a>&#160;</td>
          <td class="paramname"><em>useAddress</em> = <code><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d">UNASSIGNED_SYSTEM_ADDRESS</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>userData</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Connect to, then transmit a request to a TCP based server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tcp</td><td>An instance of <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a> that previously had <a class="el" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aacace1fc8ab33669952e9dc97596c8a3">TCPInterface::Start()</a> called </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">stringToTransmit</td><td>What string to transmit. See <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abb53629069703bdf7f333a028314f133">RakString::FormatForPOST()</a>, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a381b39fbbbb6d9d25ac00cb4cce00946">RakString::FormatForGET()</a>, <a class="el" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a37e0c1e5761c295e568f72ed24c25808">RakString::FormatForDELETE()</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">host</td><td>The IP address to connect to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">port</td><td>The port to connect to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">useSSL</td><td>If to use SSL to connect. OPEN_SSL_CLIENT_SUPPORT must be defined to 1 in <a class="el" href="../../d8/db0/defines_8h.xhtml">defines.h</a> or <a class="el" href="../../d7/dc9/defineoverrides_8h.xhtml">defineoverrides.h</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ipVersion</td><td>4 for IPV4, 6 for IPV6 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">useAddress</td><td>Assume we are connected to this address and send to it, rather than do a lookup </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">userData</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>false if host is not a valid IP address or domain name </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="afd042acd0f2504f96157f2390a22a6a9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a>*&gt; SLNet::HTTPConnection2::completedRequests</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00119">119</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>

</div>
</div>
<a class="anchor" id="aebb1ab8a6cbbc10079455d270e9a6a1d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> SLNet::HTTPConnection2::completedRequestsMutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00121">121</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad9e69ccf85e423b52ea9b60f89c6ae72"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue</a>&lt;<a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a>*&gt; SLNet::HTTPConnection2::pendingRequests</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00117">117</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab350d671ce6bd77b80197c73c0fb0fec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> SLNet::HTTPConnection2::pendingRequestsMutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00121">121</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3bdaacce4c6d67b48a1094d4e7384cda"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml#d2/d56/struct_s_l_net_1_1_h_t_t_p_connection2_1_1_request">Request</a>*&gt; SLNet::HTTPConnection2::sentRequests</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00118">118</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab3611c962fac3f77ac285252c18d47ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml">SimpleMutex</a> SLNet::HTTPConnection2::sentRequestsMutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml#l00121">121</a> of file <a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../d6/db9/_h_t_t_p_connection2_8h_source.xhtml">HTTPConnection2.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../dd/da8/class_s_l_net_1_1_h_t_t_p_connection2.xhtml">HTTPConnection2</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

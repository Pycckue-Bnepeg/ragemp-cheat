<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: SLNet::HuffmanEncodingTree Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d7/db8/class_s_l_net_1_1_huffman_encoding_tree-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SLNet::HuffmanEncodingTree Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This generates special cases of the huffman encoding tree using 8 bit keys with the additional condition that unused combinations of 8 bits are treated as a frequency of 1.  
 <a href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d78/_d_s___huffman_encoding_tree_8h_source.xhtml">slikenet/DS_HuffmanEncodingTree.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa77c33fe43a2e6441e3ec9a6190f68c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#aa77c33fe43a2e6441e3ec9a6190f68c0">HuffmanEncodingTree</a> ()</td></tr>
<tr class="separator:aa77c33fe43a2e6441e3ec9a6190f68c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe08c3a26deabe245d10e0000c43bd2a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#afe08c3a26deabe245d10e0000c43bd2a">~HuffmanEncodingTree</a> ()</td></tr>
<tr class="separator:afe08c3a26deabe245d10e0000c43bd2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d35c9afb94d954f184a72cf904c7c65"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#a1d35c9afb94d954f184a72cf904c7c65">EncodeArray</a> (unsigned char *input, size_t sizeInBytes, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *output)</td></tr>
<tr class="memdesc:a1d35c9afb94d954f184a72cf904c7c65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pass an array of bytes to array and a preallocated <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> to receive the output.  <a href="#a1d35c9afb94d954f184a72cf904c7c65"></a><br/></td></tr>
<tr class="separator:a1d35c9afb94d954f184a72cf904c7c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e1d71fee40cae1bf30526950323425b"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#a7e1d71fee40cae1bf30526950323425b">DecodeArray</a> (<a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *input, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> sizeInBits, size_t maxCharsToWrite, unsigned char *output)</td></tr>
<tr class="separator:a7e1d71fee40cae1bf30526950323425b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bcfec745a078f0a58af8deceeff3283"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#a7bcfec745a078f0a58af8deceeff3283">DecodeArray</a> (unsigned char *input, <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> sizeInBits, <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *output)</td></tr>
<tr class="separator:a7bcfec745a078f0a58af8deceeff3283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abde050a1b4a2128ec3896463f9f997a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#abde050a1b4a2128ec3896463f9f997a7">GenerateFromFrequencyTable</a> (unsigned int frequencyTable[256])</td></tr>
<tr class="memdesc:abde050a1b4a2128ec3896463f9f997a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given a frequency table of 256 elements, all with a frequency of 1 or more, generate the tree.  <a href="#abde050a1b4a2128ec3896463f9f997a7"></a><br/></td></tr>
<tr class="separator:abde050a1b4a2128ec3896463f9f997a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cb706100bfaa2afe47637347603eeb5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#a9cb706100bfaa2afe47637347603eeb5">FreeMemory</a> (void)</td></tr>
<tr class="memdesc:a9cb706100bfaa2afe47637347603eeb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free the memory used by the tree.  <a href="#a9cb706100bfaa2afe47637347603eeb5"></a><br/></td></tr>
<tr class="separator:a9cb706100bfaa2afe47637347603eeb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This generates special cases of the huffman encoding tree using 8 bit keys with the additional condition that unused combinations of 8 bits are treated as a frequency of 1. </p>

<p>Definition at line <a class="el" href="../../de/d78/_d_s___huffman_encoding_tree_8h_source.xhtml#l00034">34</a> of file <a class="el" href="../../de/d78/_d_s___huffman_encoding_tree_8h_source.xhtml">DS_HuffmanEncodingTree.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa77c33fe43a2e6441e3ec9a6190f68c0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HuffmanEncodingTree::HuffmanEncodingTree </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00023">23</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afe08c3a26deabe245d10e0000c43bd2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HuffmanEncodingTree::~HuffmanEncodingTree </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

<p>References <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00033">FreeMemory()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7e1d71fee40cae1bf30526950323425b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned HuffmanEncodingTree::DecodeArray </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a>&#160;</td>
          <td class="paramname"><em>sizeInBits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>maxCharsToWrite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00200">200</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

<p>References <a class="el" href="../../dc/d0b/_thread_pool_8h.xhtml#a35e6652907f33d8d77bdbdfbbddac127">if()</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00022">HuffmanEncodingTreeNode::left</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00332">SLNet::BitStream::ReadBit()</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00023">HuffmanEncodingTreeNode::right</a>, and <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00020">HuffmanEncodingTreeNode::value</a>.</p>

<p>Referenced by <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00404">SLNet::StringCompressor::DecodeString()</a>, and <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00053">SLNet::DataCompressor::DecompressAndAllocate()</a>.</p>

</div>
</div>
<a class="anchor" id="a7bcfec745a078f0a58af8deceeff3283"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HuffmanEncodingTree::DecodeArray </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a>&#160;</td>
          <td class="paramname"><em>sizeInBits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00233">233</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

<p>References <a class="el" href="../../d9/d49/types_8h_source.xhtml#l00093">BITS_TO_BYTES</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h.xhtml#a35e6652907f33d8d77bdbdfbbddac127">if()</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00022">HuffmanEncodingTreeNode::left</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00332">SLNet::BitStream::ReadBit()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00303">return</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00023">HuffmanEncodingTreeNode::right</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00020">HuffmanEncodingTreeNode::value</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00428">SLNet::BitStream::WriteBits()</a>.</p>

</div>
</div>
<a class="anchor" id="a1d35c9afb94d954f184a72cf904c7c65"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HuffmanEncodingTree::EncodeArray </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>sizeInBytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pass an array of bytes to array and a preallocated <a class="el" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> to receive the output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Array of bytes to encode </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sizeInBytes</td><td>size of <em>input</em> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>The bitstream to write to </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

<p>References <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l00521">SLNet::BitStream::GetNumberOfBitsUsed()</a>, <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00428">SLNet::BitStream::WriteBits()</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00025">SLNet::DataCompressor::Compress()</a>, and <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00371">SLNet::StringCompressor::EncodeString()</a>.</p>

</div>
</div>
<a class="anchor" id="a9cb706100bfaa2afe47637347603eeb5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HuffmanEncodingTree::FreeMemory </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free the memory used by the tree. </p>

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00022">HuffmanEncodingTreeNode::left</a>, <a class="el" href="../../dd/dc5/memoryoverride_8h_source.xhtml#l00182">SLNet::OP_DELETE()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00109">DataStructures::Queue&lt; queue_type &gt;::Pop()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00228">DataStructures::Queue&lt; queue_type &gt;::Push()</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00064">rakFree_Ex</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00303">return</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00023">HuffmanEncodingTreeNode::right</a>, and <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00070">DataStructures::Queue&lt; queue_type &gt;::Size()</a>.</p>

<p>Referenced by <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00069">GenerateFromFrequencyTable()</a>, and <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00028">~HuffmanEncodingTree()</a>.</p>

</div>
</div>
<a class="anchor" id="abde050a1b4a2128ec3896463f9f997a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HuffmanEncodingTree::GenerateFromFrequencyTable </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>frequencyTable</em>[256]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Given a frequency table of 256 elements, all with a frequency of 1 or more, generate the tree. </p>

<p>Definition at line <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">_FILE_AND_LINE_</a>, <a class="el" href="../../d3/dbe/class_data_structures_1_1_circular_linked_list.xhtml#a453cf3bafc9ff7ae5ab13456a88f1a98">DataStructures::CircularLinkedList&lt; LinkedListType &gt;::Beginning()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00959">SLNet::BitStream::CopyData()</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00033">FreeMemory()</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00022">HuffmanEncodingTreeNode::left</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00024">HuffmanEncodingTreeNode::parent</a>, <a class="el" href="../../d3/dbe/class_data_structures_1_1_circular_linked_list.xhtml#a4ec7084b10a554f32021a8ea298838a3">DataStructures::CircularLinkedList&lt; LinkedListType &gt;::Pop()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00144">SLNet::BitStream::Reset()</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00023">HuffmanEncodingTreeNode::right</a>, <a class="el" href="../../d3/dbe/class_data_structures_1_1_circular_linked_list.xhtml#acbd6339fc68ed1015b6811a20ee39910">DataStructures::CircularLinkedList&lt; LinkedListType &gt;::Size()</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00020">HuffmanEncodingTreeNode::value</a>, <a class="el" href="../../dd/da3/_d_s___huffman_encoding_tree_node_8h_source.xhtml#l00021">HuffmanEncodingTreeNode::weight</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00305">SLNet::BitStream::Write0()</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00317">SLNet::BitStream::Write1()</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00025">SLNet::DataCompressor::Compress()</a>, <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00053">SLNet::DataCompressor::DecompressAndAllocate()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00337">SLNet::StringCompressor::GenerateTreeFromStrings()</a>, and <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00327">SLNet::StringCompressor::StringCompressor()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Source/include/slikenet/<a class="el" href="../../de/d78/_d_s___huffman_encoding_tree_8h_source.xhtml">DS_HuffmanEncodingTree.h</a></li>
<li>Source/src/<a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml">DS_HuffmanEncodingTree.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d30/namespace_s_l_net.xhtml">SLNet</a></li><li class="navelem"><a class="el" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml">HuffmanEncodingTree</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

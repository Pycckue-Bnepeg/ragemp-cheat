<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/HTTPConnection.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d6/d1b/_h_t_t_p_connection_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">HTTPConnection.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d6/d1b/_h_t_t_p_connection_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/ddb/_native_feature_includes_8h.xhtml">slikenet/NativeFeatureIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_HTTPConnection==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/dd1/_t_c_p_interface_8h.xhtml" title="A simple TCP based server allowing sends and receives. Can be connected by any TCP client...">slikenet/TCPInterface.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/db2/_h_t_t_p_connection_8h.xhtml" title="Contains HTTPConnection, used to communicate with web servers.">slikenet/HTTPConnection.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d81/sleep_8h.xhtml">slikenet/sleep.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d66/string_8h.xhtml">slikenet/string.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<a class="code" href="../../db/dbd/_export_8h.xhtml#aa00165c970bdb25e1c757b432509533b">STATIC_FACTORY_DEFINITIONS</a>(<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml" title="Use HTTPConnection to communicate with a web server.">HTTPConnection</a>,<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml" title="Use HTTPConnection to communicate with a web server.">HTTPConnection</a>);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#af3114e4acc2865c600c2140ec2ca21e3" title="Returns a HTTP object associated with this tcp connection.">HTTPConnection::HTTPConnection</a>() : connectionState(CS_NONE)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    tcp=0;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">void</span> HTTPConnection::Init(<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml">TCPInterface</a>* _tcp, <span class="keyword">const</span> <span class="keywordtype">char</span> *_host, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> _port)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    tcp=_tcp;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    host=_host;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    port=_port;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a2915aeb07dd1ad3684be6dbb8771785b">HTTPConnection::Post</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *remote_path, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">char</span> *_contentType)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    OutgoingCommand op;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    op.contentType=_contentType;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    op.data=data;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    op.remotePath=remote_path;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    op.isPost=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aa65d5c3a2bdfff7d9b3a270555a44929">outgoingCommand</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(op, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">//printf(&quot;Adding outgoing post\n&quot;);</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a485c73e39a601972de4328f922931225">HTTPConnection::Get</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    OutgoingCommand op;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    op.remotePath=path;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    op.isPost=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aa65d5c3a2bdfff7d9b3a270555a44929">outgoingCommand</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(op, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a603695ad380d961a72bb9051a557f92a" title="Queued events of failed exchanges with the HTTP server.">HTTPConnection::HasBadResponse</a>(<span class="keywordtype">int</span> *code, <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> *data)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span>(badResponses.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>())</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (code)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        *code = badResponses.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a5e9c9de11d2dd84320d2f7c9408b80b1">Peek</a>().<a class="code" href="../../dd/d07/struct_s_l_net_1_1_h_t_t_p_connection_1_1_bad_response.xhtml#a43123c5f7437ee786f9391d5aa2ef8b4">code</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">if</span> (data)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        *data = badResponses.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>().<a class="code" href="../../dd/d07/struct_s_l_net_1_1_h_t_t_p_connection_1_1_bad_response.xhtml#afe7d8f32578a0a364f3888b052559472">data</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;   <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">void</span> HTTPConnection::CloseConnection()</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    connectionState=CS_DISCONNECTING;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#ae8f085b28f447a77d88b3d87de565d34" title="Call periodically to do time-based updates.">HTTPConnection::Update</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> sa;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    sa = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aebac46cfccd64e29214d3410722df872">HasCompletedConnectionAttempt</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">while</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">//      printf(&quot;Connected\n&quot;);</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        connectionState=CS_CONNECTED;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        server=sa;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        sa = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aebac46cfccd64e29214d3410722df872">HasCompletedConnectionAttempt</a>();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    sa = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a58fe702e887f58dbe6ea6e12210e55d2">HasFailedConnectionAttempt</a>();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">while</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">//printf(&quot;Failed connected\n&quot;);</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        CloseConnection();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        sa = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a58fe702e887f58dbe6ea6e12210e55d2">HasFailedConnectionAttempt</a>();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    sa = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0eb90925c3a0ae42d00019214446fb97" title="Queued events of lost connections.">HasLostConnection</a>();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">while</span> (sa!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">//printf(&quot;Lost connection\n&quot;);</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        CloseConnection();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        sa = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a0eb90925c3a0ae42d00019214446fb97" title="Queued events of lost connections.">HasLostConnection</a>();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">switch</span> (connectionState)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">case</span> CS_NONE:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aa65d5c3a2bdfff7d9b3a270555a44929">outgoingCommand</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">//printf(&quot;Connecting\n&quot;);</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            server = tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#aef31dfbd383b7864e0e9deb074291cb7" title="Connect to the specified host on the specified port.">Connect</a>(host, port, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            connectionState = CS_CONNECTING;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">case</span> CS_DISCONNECTING:</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span> (tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a4aa106ad458b729b163b77291583c738">ReceiveHasPackets</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keywordflow">if</span> (incomingData.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a83a4f2762a85a1e4704db0f7ac2c0abe" title="Returns if the string is empty. Also, C_String() would return &quot;&quot;.">IsEmpty</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    results.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(incomingData, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                incomingData.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a458ce4aa51b672f501f51d5941e5ac6e" title="Clear the string.">Clear</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a51fa9556886efb6772ecb0c3bd4857b4" title="Disconnects a player/address.">CloseConnection</a>(server);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                connectionState=CS_NONE;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">case</span> CS_CONNECTING:</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">case</span> CS_CONNECTED:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="comment">//printf(&quot;Connected\n&quot;);</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aa65d5c3a2bdfff7d9b3a270555a44929">outgoingCommand</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>())</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="comment">//printf(&quot;Closed connection (nothing to do)\n&quot;);</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                CloseConnection();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#if OPEN_SSL_CLIENT_SUPPORT==1</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span>            tcp-&gt;StartSSLClient(server);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="comment">//printf(&quot;Sending request\n&quot;);</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a> = <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aa65d5c3a2bdfff7d9b3a270555a44929">outgoingCommand</a>.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a> request;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a>.<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a5752e2ffb0dcaa5f5426f902810fd75d">isPost</a>)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                request.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab8a4fe36cf8ac975adafcee96074cf9b" title="Set the value of the string.">Set</a>(<span class="stringliteral">&quot;POST %s HTTP/1.0\r\n&quot;</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    <span class="stringliteral">&quot;Host: %s:%i\r\n&quot;</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    <span class="stringliteral">&quot;Content-Type: %s\r\n&quot;</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    <span class="stringliteral">&quot;Content-Length: %u\r\n&quot;</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                    <span class="stringliteral">&quot;\r\n&quot;</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                    <span class="stringliteral">&quot;%s&quot;</span>,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a>.<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#af7f2e006e454594c3912169393f0eb72">remotePath</a>.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    host.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    port,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a>.<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a08012ac9b6785b16f64126e59871e160">contentType</a>.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    (unsigned) <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a>.<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a361969502662f20bb221f9eba4db2579">data</a>.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5" title="Returns the length of the string.">GetLength</a>(),</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                    <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a>.<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a361969502662f20bb221f9eba4db2579">data</a>.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="comment">// request.Set(&quot;GET %s\r\n&quot;, host.C_String());</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="comment">// http://www.jenkinssoftware.com/forum/index.php?topic=4601.0;topicseen</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                request.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ab8a4fe36cf8ac975adafcee96074cf9b" title="Set the value of the string.">Set</a>(<span class="stringliteral">&quot;GET %s HTTP/1.0\r\n&quot;</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <span class="stringliteral">&quot;Host: %s:%i\r\n&quot;</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    <span class="stringliteral">&quot;\r\n&quot;</span>,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#aec2f74f4f84d363eaee24bdccac369fb">currentProcessingCommand</a>.<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#af7f2e006e454594c3912169393f0eb72">remotePath</a>.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    host.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    port);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="comment">//  printf(request.C_String());</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="comment">//      request.URLEncode();</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a6a2bf12f77233eec447a6496730286e7" title="Sends a byte stream.">Send</a>(request.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(), (<span class="keywordtype">unsigned</span> int) request.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5" title="Returns the length of the string.">GetLength</a>(), server,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            connectionState=CS_PROCESSING;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">case</span> CS_PROCESSING:</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">//  if (connectionState==CS_PROCESSING &amp;&amp; currentProcessingCommand.data.IsEmpty()==false)</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">//      outgoingCommand.PushAtHead(currentProcessingCommand);</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a04d57d44cca79258bf646ec2901ed90c" title="Is there a Read result ready?">HTTPConnection::HasRead</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">return</span> results.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>()==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;}</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a467a2cee536c32a0f74e0dc5cb6f0fb1">HTTPConnection::Read</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">if</span> (results.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a8a535ff9f0dceecedf31401490da3a31">IsEmpty</a>())</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">RakString</a>();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> resultStr = results.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">// const char *start_of_body = strstr(resultStr.C_String(), &quot;\r\n\r\n&quot;);</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *start_of_body = strpbrk(resultStr.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(), <span class="stringliteral">&quot;\001\002\003%&quot;</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">if</span>(start_of_body)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a24a196a615ce307db4678187c08adb65">SLNet::RakString::NonVariadic</a>(start_of_body);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">return</span> resultStr;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a5f7a0bfc3624c6f5c3684bbdd8379263" title="Returns the address of the server we are connected to.">HTTPConnection::GetServerAddress</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">return</span> server;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a94b29065642b0ef3f616476928cf8e0c">HTTPConnection::ProcessTCPPacket</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet)</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;{</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(packet);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="comment">// read all the packets possible</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a> == server)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">if</span>(incomingData.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5" title="Returns the length of the string.">GetLength</a>() == 0)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordtype">int</span> response_code = atoi((<span class="keywordtype">char</span> *)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a> + strlen(<span class="stringliteral">&quot;HTTP/1.0 &quot;</span>));</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">if</span>(response_code &gt; 299)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                badResponses.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(BadResponse(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, response_code), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <span class="comment">//printf(&quot;Closed connection (Bad response 2)\n&quot;);</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                CloseConnection();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> incomingTemp = <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a24a196a615ce307db4678187c08adb65">SLNet::RakString::NonVariadic</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*) packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        incomingTemp.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#a581f9133ed4ee1d4f68eec3084de7450" title="URL decode the string.">URLDecode</a>();</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        incomingData += incomingTemp;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="comment">//  printf((const char*) packet-&gt;data);</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="comment">//  printf(&quot;\n&quot;);</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(strlen((<span class="keywordtype">char</span> *)packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>) == packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>); <span class="comment">// otherwise it contains Null bytes</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> *start_of_body = strstr(incomingData, <span class="stringliteral">&quot;\r\n\r\n&quot;</span>);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="comment">// besides having the server close the connection, they may</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="comment">// provide a length header and supply that many bytes</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">if</span>(</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="comment">// Why was start_of_body here? Makes the GET command fail</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="comment">// start_of_body &amp;&amp; </span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            connectionState == CS_PROCESSING)</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">            // The stupid programmer that wrote this originally didn&#39;t think that just because the header contains this value doesn&#39;t mean you got the whole message</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">            if (strstr((const char*) packet-&gt;data, &quot;\r\nConnection: close\r\n&quot;))</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">                CloseConnection();</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">            }</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">            else</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">            */</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordtype">long</span> length_of_headers;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">if</span> (start_of_body)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                    length_of_headers = (long)(start_of_body + 4 - incomingData.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">char</span> *length_header = strstr(incomingData, <span class="stringliteral">&quot;\r\nLength: &quot;</span>);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="keywordflow">if</span>(length_header)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                        <span class="keywordtype">long</span> length = atol(length_header + 10) + length_of_headers;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                        <span class="keywordflow">if</span>((<span class="keywordtype">long</span>) incomingData.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5" title="Returns the length of the string.">GetLength</a>() &gt;= length)</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                        {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                            <span class="comment">//printf(&quot;Closed connection (Got all data due to length header)\n&quot;);</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                            CloseConnection();</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                    }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                    <span class="comment">// No processing needed</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="comment">//}</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a24dd376eada96acfe42bd20d11fd4ecc" title="Returns false if the connection is not doing anything else.">HTTPConnection::IsBusy</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">return</span> connectionState != CS_NONE;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a98302eca1a447a77d6988f3b6ea4d245">HTTPConnection::GetState</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">return</span> connectionState;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<a class="code" href="../../de/da4/class_s_l_net_1_1_h_t_t_p_connection.xhtml#a464193beeabd012d2d1ecddacc634d77">HTTPConnection::~HTTPConnection</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;{</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">if</span> (tcp)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        tcp-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a51fa9556886efb6772ecb0c3bd4857b4" title="Disconnects a player/address.">CloseConnection</a>(server);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="preprocessor">#endif // _RAKNET_SUPPORT_*</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d6/d1b/_h_t_t_p_connection_8cpp.xhtml">HTTPConnection.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

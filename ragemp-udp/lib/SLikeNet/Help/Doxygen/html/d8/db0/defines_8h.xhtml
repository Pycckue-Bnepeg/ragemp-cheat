<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/include/slikenet/defines.h File Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d8/db0/defines_8h.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">defines.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="../../d7/dc9/defineoverrides_8h_source.xhtml">defineoverrides.h</a>&quot;</code><br/>
</div>
<p><a href="../../d8/db0/defines_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a4c23e8c041f09fc9601bcd2bc51ae934"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a4c23e8c041f09fc9601bcd2bc51ae934">__GET_TIME_64BIT</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:a4c23e8c041f09fc9601bcd2bc51ae934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8661ec2137eef33a8cd0cd618a748871"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>&#160;&#160;&#160;__FILE__,__LINE__</td></tr>
<tr class="separator:a8661ec2137eef33a8cd0cd618a748871"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bf2bc2d4ea6acbcd9e3da316d56cd95"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a6bf2bc2d4ea6acbcd9e3da316d56cd95">MAX_ALLOCA_STACK_ALLOCATION</a>&#160;&#160;&#160;1048576</td></tr>
<tr class="memdesc:a6bf2bc2d4ea6acbcd9e3da316d56cd95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum (stack) size to use with _alloca before using new and delete instead.  <a href="#a6bf2bc2d4ea6acbcd9e3da316d56cd95"></a><br/></td></tr>
<tr class="separator:a6bf2bc2d4ea6acbcd9e3da316d56cd95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8f9344fbb8569309f4b11df52aad058"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#ab8f9344fbb8569309f4b11df52aad058">USE_WAIT_FOR_MULTIPLE_EVENTS</a></td></tr>
<tr class="separator:ab8f9344fbb8569309f4b11df52aad058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3742ef842faba0fdf7ee8b233e02189b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a3742ef842faba0fdf7ee8b233e02189b">_USE_RAK_MEMORY_OVERRIDE</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:a3742ef842faba0fdf7ee8b233e02189b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a887f5e6850c876435993a42b7a27358b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a887f5e6850c876435993a42b7a27358b">OPEN_SSL_CLIENT_SUPPORT</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:a887f5e6850c876435993a42b7a27358b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7107c4f34b970ba209b48abfd7ae70"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a5f7107c4f34b970ba209b48abfd7ae70">BITSTREAM_STACK_ALLOCATION_SIZE</a>&#160;&#160;&#160;256</td></tr>
<tr class="separator:a5f7107c4f34b970ba209b48abfd7ae70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a5d867f7ae6521f217847a78f17ab4a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>&#160;&#160;&#160;printf</td></tr>
<tr class="separator:a2a5d867f7ae6521f217847a78f17ab4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29cf458f7287265fc1b414c3f72fa9ad"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a29cf458f7287265fc1b414c3f72fa9ad">RAKNET_DEBUG_TPRINTF</a>&#160;&#160;&#160;<a class="el" href="../../db/d31/_d_r___s_h_a1_8h.xhtml#ac642483f39ee6964424790720b48aee3">_tprintf</a></td></tr>
<tr class="separator:a29cf458f7287265fc1b414c3f72fa9ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac58d0b7314b7f900c0045e0c303b80"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>&#160;&#160;&#160;10</td></tr>
<tr class="separator:aaac58d0b7314b7f900c0045e0c303b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaa3647d29f5960651eb23fd3d2b5368"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(x)</td></tr>
<tr class="separator:afaa3647d29f5960651eb23fd3d2b5368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab317fdfccccc36c15ea2ba0f3d6f2b10"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#ab317fdfccccc36c15ea2ba0f3d6f2b10">DATAGRAM_MESSAGE_ID_ARRAY_LENGTH</a>&#160;&#160;&#160;512</td></tr>
<tr class="separator:ab317fdfccccc36c15ea2ba0f3d6f2b10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1cb26d5d5b8bbb60367a848ee905ade"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#af1cb26d5d5b8bbb60367a848ee905ade">RESEND_BUFFER_ARRAY_LENGTH</a>&#160;&#160;&#160;512</td></tr>
<tr class="separator:af1cb26d5d5b8bbb60367a848ee905ade"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3abde4cfe6a8c3a20ce719c1cad27a07"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a3abde4cfe6a8c3a20ce719c1cad27a07">RESEND_BUFFER_ARRAY_MASK</a>&#160;&#160;&#160;511</td></tr>
<tr class="separator:a3abde4cfe6a8c3a20ce719c1cad27a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd271c1904495024a10d9fab4600681"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a0dd271c1904495024a10d9fab4600681">GET_TIME_SPIKE_LIMIT</a>&#160;&#160;&#160;0</td></tr>
<tr class="memdesc:a0dd271c1904495024a10d9fab4600681"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uncomment if you want to link in the DLMalloc library to use with RakMemoryOverride.  <a href="#a0dd271c1904495024a10d9fab4600681"></a><br/></td></tr>
<tr class="separator:a0dd271c1904495024a10d9fab4600681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2e1bf9d15e3408ca6c75897a5d8249"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#aee2e1bf9d15e3408ca6c75897a5d8249">USE_SLIDING_WINDOW_CONGESTION_CONTROL</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:aee2e1bf9d15e3408ca6c75897a5d8249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0baf244b8f59c91d0e70cdbe99721fa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#af0baf244b8f59c91d0e70cdbe99721fa">PREALLOCATE_LARGE_MESSAGES</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:af0baf244b8f59c91d0e70cdbe99721fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48a3e5cd2e22f7d71c1373656e80d2ef"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a48a3e5cd2e22f7d71c1373656e80d2ef">RAKNET_SUPPORT_IPV6</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:a48a3e5cd2e22f7d71c1373656e80d2ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13ec6b700b7112c1726788c3ae8317e1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a13ec6b700b7112c1726788c3ae8317e1">RAKSTRING_TYPE</a>&#160;&#160;&#160;RakString</td></tr>
<tr class="separator:a13ec6b700b7112c1726788c3ae8317e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b0d29f2a8ccb7f23cbdea648f1286b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a13b0d29f2a8ccb7f23cbdea648f1286b">RAKSTRING_TYPE_IS_UNICODE</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:a13b0d29f2a8ccb7f23cbdea648f1286b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeed5dc2e94045a66017b9cf04488aa6f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#aeed5dc2e94045a66017b9cf04488aa6f">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS</a>&#160;&#160;&#160;48</td></tr>
<tr class="separator:aeed5dc2e94045a66017b9cf04488aa6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbacf5808b1cd387e42d32823cafa5b8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#afbacf5808b1cd387e42d32823cafa5b8">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH</a>&#160;&#160;&#160;48</td></tr>
<tr class="separator:afbacf5808b1cd387e42d32823cafa5b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11301b7eb6a7cb30f78afdbc98e1f33c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a11301b7eb6a7cb30f78afdbc98e1f33c">XBOX_BYPASS_SECURITY</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:a11301b7eb6a7cb30f78afdbc98e1f33c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a419d19919ba0d7e85cd836bee64a5c87"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a419d19919ba0d7e85cd836bee64a5c87">BUFFERED_PACKETS_PAGE_SIZE</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:a419d19919ba0d7e85cd836bee64a5c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39dc00e80eb120ac177e55f2f509758d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a39dc00e80eb120ac177e55f2f509758d">INTERNAL_PACKET_PAGE_SIZE</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:a39dc00e80eb120ac177e55f2f509758d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6b967c7c085fb3a418932360cfffe25"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#af6b967c7c085fb3a418932360cfffe25">RAKPEER_USER_THREADED</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:af6b967c7c085fb3a418932360cfffe25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add1080711227ddca8bcc85a3976c989b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#add1080711227ddca8bcc85a3976c989b">USE_ALLOCA</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:add1080711227ddca8bcc85a3976c989b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f86bebc837357076fea17426799455"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db0/defines_8h.xhtml#a69f86bebc837357076fea17426799455">SLNET_MAX_RETRIEVABLE_FILESIZE</a>&#160;&#160;&#160;(0xFFFFFFFF)</td></tr>
<tr class="separator:a69f86bebc837357076fea17426799455"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a4c23e8c041f09fc9601bcd2bc51ae934"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __GET_TIME_64BIT&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Define __GET_TIME_64BIT to have <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a26b4eb1be8467562f791e3c5af4a67ae">SLNet::TimeMS</a> use a 64, rather than 32 bit value. A 32 bit value will overflow after about 5 weeks. However, this doubles the bandwidth use for sending times, so don't do it unless you have a reason to. Comment out if you are using the iPod Touch TG. See <a href="http://www.jenkinssoftware.com/forum/index.php?topic=2717.0">http://www.jenkinssoftware.com/forum/index.php?topic=2717.0</a> This must be the same on all systems, or they won't connect </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00033">33</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8661ec2137eef33a8cd0cd618a748871"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _FILE_AND_LINE_&#160;&#160;&#160;__FILE__,__LINE__</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00047">47</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/dfa/_d_s___binary_search_tree_8h_source.xhtml#l00216">DataStructures::AVLBalancedBinarySearchTree&lt; BinarySearchTreeType &gt;::Add()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00695">DataStructures::CircularLinkedList&lt; CircularLinkedListType &gt;::Add()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00697">SLNet::BitStream::AddBitsAndReallocate()</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00197">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::AddChannel()</a>, <a class="el" href="../../d1/df4/_d_s___tree_8h_source.xhtml#l00088">DataStructures::Tree&lt; TreeType &gt;::AddChild()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00291">DataStructures::Table::AddColumn()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00055">GridSectorizer::AddEntry()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00422">ThreadPool&lt; InputType, OutputType &gt;::AddInput()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00143">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::AddNode()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00432">ThreadPool&lt; InputType, OutputType &gt;::AddOutput()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04437">SLNet::RakPeer::AddPacketToProducer()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00050">SLNet::StringTable::AddReference()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00041">SLNet::StringCompressor::AddReference()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00359">DataStructures::Table::AddRow()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00415">DataStructures::Table::AddRowColumns()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00076">SLNet::StringTable::AddString()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01853">SLNet::RakPeer::AddToBanList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00837">SLNet::RakPeer::AddToSecurityExceptionList()</a>, <a class="el" href="../../dd/d79/_d_s___byte_pool_8cpp_source.xhtml#l00042">DataStructures::BytePool::Allocate()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01333">SLNet::RakString::Allocate()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02842">SLNet::RakPeer::AllocatePacket()</a>, <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00103">SLNet::PluginInterface2::AllocatePacketUnified()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00237">SLNet::VariableDeltaSerializer::AllocChangedVariablesList()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00075">SLNet::RakNetSocket2Allocator::AllocRNS2()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01032">SLNet::BitStream::AssertCopyData()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01383">SLNet::RakString::Assign()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02744">SLNet::RakPeer::AttachPlugin()</a>, <a class="el" href="../../d9/d9b/_base64_encoder_8cpp_source.xhtml#l00096">Base64Encoding()</a>, <a class="el" href="../../d8/dfa/_d_s___binary_search_tree_8h_source.xhtml#l00980">DataStructures::BinarySearchTree&lt; BinarySearchTreeType &gt;::BinarySearchTree()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00308">SLNet::RNS2_Berkley::BindShared()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00076">SLNet::BitStream::BitStream()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00419">SLNet::RNS2_Berkley::BlockOnStopRecvPollingThread()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00076">SLNet::BPSTracker::BPSTracker()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01683">SLNet::RakPeer::CancelConnectionAttempt()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00070">DataStructures::Table::Cell::Cell()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02830">SLNet::RakPeer::ChangeSystemAddress()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00446">DataStructures::CircularLinkedList&lt; CircularLinkedListType &gt;::CircularLinkedList()</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00246">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Clear()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00200">GridSectorizer::Clear()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00220">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::Clear()</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00265">DataStructures::RangeList&lt; range_type &gt;::Clear()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00243">DataStructures::Table::Cell::Clear()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00221">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::Clear()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00282">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Clear()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00278">SLNet::RakWString::Clear()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00477">ThreadPool&lt; InputType, OutputType &gt;::Clear()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00890">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Clear()</a>, <a class="el" href="../../dd/d9f/_cloud_server_8h_source.xhtml#l00157">SLNet::CloudServer::CloudData::Clear()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00953">DataStructures::CircularLinkedList&lt; CircularLinkedListType &gt;::Clear()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01073">DataStructures::Table::Clear()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01940">SLNet::RakPeer::ClearBanList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04401">SLNet::RakPeer::ClearBufferedCommands()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04050">SLNet::RakPeer::ClearBufferedPackets()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00506">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::ClearDijkstra()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00551">ThreadPool&lt; InputType, OutputType &gt;::ClearInput()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00558">ThreadPool&lt; InputType, OutputType &gt;::ClearOutput()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03917">SLNet::RakPeer::ClearRemoteSystemLookup()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04420">SLNet::RakPeer::ClearRequestedConnectionList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04415">SLNet::RakPeer::ClearSocketQueryOutput()</a>, <a class="el" href="../../dc/df7/smartptr_8h_source.xhtml#l00108">SLNet::RakNetSmartPtr&lt; T &gt;::Clone()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01647">SLNet::RakPeer::CloseConnection()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04101">SLNet::RakPeer::CloseConnectionInternal()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00959">SLNet::BitStream::CopyData()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00308">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::CopySource()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01610">SLNet::RakPeer::DeallocatePacket()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00326">SLNet::TableSerializer::DeallocateQueryList()</a>, <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00143">SLNet::PluginInterface2::DeallocPacketUnified()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00064">SLNet::RakNetSocket2Allocator::DeallocRNS2()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00486">SLNet::StringCompressor::DecodeString()</a>, <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00053">SLNet::DataCompressor::DecompressAndAllocate()</a>, <a class="el" href="../../d8/dfa/_d_s___binary_search_tree_8h_source.xhtml#l00224">DataStructures::AVLBalancedBinarySearchTree&lt; BinarySearchTreeType &gt;::Del()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00779">DataStructures::CircularLinkedList&lt; CircularLinkedListType &gt;::Del()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00190">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Delete()</a>, <a class="el" href="../../d1/df4/_d_s___tree_8h_source.xhtml#l00094">DataStructures::Tree&lt; TreeType &gt;::DeleteDecendants()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l01119">DataStructures::Table::DeleteRow()</a>, <a class="el" href="../../dd/d28/_ref_counted_obj_8h_source.xhtml#l00034">RefCountedObj::Deref()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05468">SLNet::RakPeer::DerefAllSockets()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03871">SLNet::RakPeer::DereferenceRemoteSystem()</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00127">DataStructures::RangeList&lt; range_type &gt;::Deserialize()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00318">SLNet::RakWString::Deserialize()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00823">SLNet::RakPeer::DisableSecurity()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00027">ExtendRows()</a>, <a class="el" href="../../d8/db0/_variadic_s_q_l_parser_8cpp_source.xhtml#l00075">VariadicSQLParser::ExtractArguments()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01102">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::FindIntersection()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00305">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::FixUnderflow()</a>, <a class="el" href="../../dc/d0b/_thread_pool_8h_source.xhtml#l00240">for()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01522">SLNet::RakString::Free()</a>, <a class="el" href="../../d8/db0/_variadic_s_q_l_parser_8cpp_source.xhtml#l00155">VariadicSQLParser::FreeArguments()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00244">SLNet::VariableDeltaSerializer::FreeChangedVariablesList()</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00033">SLNet::HuffmanEncodingTree::FreeMemory()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01220">SLNet::RakString::FreeMemoryNoMutex()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00948">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::FreePages()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00032">FreeRow()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00069">SLNet::HuffmanEncodingTree::GenerateFromFrequencyTable()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00337">SLNet::StringCompressor::GenerateTreeFromStrings()</a>, <a class="el" href="../../d2/d77/_d_s___hash_8h_source.xhtml#l00333">DataStructures::Hash&lt; key_type, data_type, HASH_SIZE, hashFunction &gt;::GetAsList()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00149">GridSectorizer::GetEntries()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00231">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GetShortestPath()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02847">SLNet::RakPeer::GetSocket()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02882">SLNet::RakPeer::GetSockets()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00332">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GetSpanningTree()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03080">SLNet::RakPeer::GetStatisticsList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01824">SLNet::RakPeer::GetSystemList()</a>, <a class="el" href="../../d8/db0/_variadic_s_q_l_parser_8cpp_source.xhtml#l00050">VariadicSQLParser::GetTypeMappingIndices()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00030">GridSectorizer::Init()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00762">SLNet::RakPeer::InitializeSecurity()</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00200">DataStructures::RangeList&lt; range_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00835">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Insert()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00618">DataStructures::CircularLinkedList&lt; CircularLinkedListType &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00522">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::InsertIntoNode()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01973">SLNet::RakPeer::IsBanned()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00287">SLNet::IRNS2_Berkley::IsPortInUse()</a>, <a class="el" href="../../d1/df4/_d_s___tree_8h_source.xhtml#l00069">DataStructures::Tree&lt; TreeType &gt;::LevelOrderTraversal()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00367">DataStructures::LinkedList&lt; LinkedListType &gt;::LinkedList()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00157">DataStructures::List&lt; list_type &gt;::List()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00286">operator+()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00147">SLNet::RakWString::operator+=()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00301">DataStructures::Queue&lt; queue_type &gt;::operator=()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00063">SLNet::RakWString::operator=()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00124">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::operator=()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00181">DataStructures::List&lt; list_type &gt;::operator=()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00054">DataStructures::Table::Cell::operator=()</a>, <a class="el" href="../../d8/dfa/_d_s___binary_search_tree_8h_source.xhtml#l01025">DataStructures::BinarySearchTree&lt; BinarySearchTreeType &gt;::operator=()</a>, <a class="el" href="../../dc/df7/smartptr_8h_source.xhtml#l00160">SLNet::RakNetSmartPtr&lt; T &gt;::operator=()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00529">DataStructures::CircularLinkedList&lt; CircularLinkedListType &gt;::operator=()</a>, <a class="el" href="../../d1/dc2/_d_s___linked_list_8h_source.xhtml#l00256">DataStructures::LinkedList&lt; LinkedListType &gt;::operator=()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02079">SLNet::RakPeer::Ping()</a>, <a class="el" href="../../d2/d77/_d_s___hash_8h_source.xhtml#l00131">DataStructures::Hash&lt; key_type, data_type, HASH_SIZE, hashFunction &gt;::Pop()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l01035">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::PrintGraph()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04524">SLNet::ProcessOfflineNetworkPacket()</a>, <a class="el" href="../../d8/dd5/_d_s___threadsafe_allocating_queue_8h_source.xhtml#l00063">DataStructures::ThreadsafeAllocatingQueue&lt; structureType &gt;::Push()</a>, <a class="el" href="../../dd/dba/_reliability_layer_8h_source.xhtml#l00094">SLNet::BPSTracker::Push1()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02810">SLNet::RakPeer::PushBackPacket()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04067">SLNet::RakPeer::PushBufferedPacket()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00616">DataStructures::Table::QueryTable()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00276">DataStructures::Queue&lt; queue_type &gt;::Queue()</a>, <a class="el" href="../../dc/df7/smartptr_8h_source.xhtml#l00056">SLNet::RakNetSmartPtr&lt; T &gt;::RakNetSmartPtr()</a>, <a class="el" href="../../d5/d9f/_rand_sync_8cpp_source.xhtml#l00049">SLNet::RakNetRandomSync::RandomMT()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00413">SLNet::BitStream::ReadAlignedBytesSafeAlloc()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">SLNet::RakString::Realloc()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00351">SLNet::RNS2_Berkley::RecvFromLoopInt()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03790">SLNet::RakPeer::ReferenceRemoteSystem()</a>, <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00111">SLNet::CommandParserInterface::RegisterCommand()</a>, <a class="el" href="../../dd/d79/_d_s___byte_pool_8cpp_source.xhtml#l00101">DataStructures::BytePool::Release()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02916">SLNet::RakPeer::ReleaseSockets()</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00206">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::RemoveChannel()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00304">DataStructures::Table::RemoveColumn()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01902">SLNet::RakPeer::RemoveFromBanList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00845">SLNet::RakPeer::RemoveFromSecurityExceptionList()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00149">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::RemoveNode()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00057">SLNet::StringTable::RemoveReference()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00048">SLNet::StringCompressor::RemoveReference()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00216">SLNet::VariableDeltaSerializer::RemoveRemoteSystemVariableHistory()</a>, <a class="el" href="../../de/dd1/_t_c_p_interface_8h_source.xhtml#l00253">SLNet::RemoteClient::Reset()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01555">SLNet::ReliabilityLayer::Send()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04173">SLNet::RakPeer::SendBuffered()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04209">SLNet::RakPeer::SendBufferedList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03250">SLNet::RakPeer::SendConnectionRequest()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04270">SLNet::RakPeer::SendImmediate()</a>, <a class="el" href="../../d5/d40/_plugin_interface2_8cpp_source.xhtml#l00161">SLNet::PluginInterface2::SendListUnified()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01354">SLNet::RakPeer::SendLoopback()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02981">SLNet::RakPeer::SendOutOfBand()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02715">SLNet::RakPeer::SendTTL()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00296">SLNet::RakWString::Serialize()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00189">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Set()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00104">DataStructures::Table::Cell::Set()</a>, <a class="el" href="../../d3/d93/_rak_net_types_8cpp_source.xhtml#l00532">SLNet::SystemAddress::SetBinaryAddress()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01006">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::SetMultilistType()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00234">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::SetNew()</a>, <a class="el" href="../../dc/df7/smartptr_8h_source.xhtml#l00088">SLNet::RakNetSmartPtr&lt; T &gt;::SetNull()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01041">SLNet::RakPeer::Shutdown()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00105">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::SingleProducerConsumer()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">DataStructures::Table::SortTable()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00372">SLNet::RakPeer::Startup()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00254">SLNet::VariableDeltaSerializer::StartVariableHistoryWrite()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00248">SLNet::VariableDeltaSerializer::StoreChangedVariablesList()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00327">SLNet::StringCompressor::StringCompressor()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01703">SLNet::ReliabilityLayer::Update()</a>, <a class="el" href="../../d4/d61/_variable_list_delta_tracker_8cpp_source.xhtml#l00046">SLNet::VariableListDeltaTracker::VariableLastValueNode::VariableLastValueNode()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00107">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::WeightedGraph()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00142">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::WriteLock()</a>, <a class="el" href="../../d8/d00/_variable_list_delta_tracker_8h_source.xhtml#l00043">SLNet::VariableListDeltaTracker::WriteVar()</a>, <a class="el" href="../../d8/dfa/_d_s___binary_search_tree_8h_source.xhtml#l00378">DataStructures::AVLBalancedBinarySearchTree&lt; BinarySearchTreeType &gt;::~AVLBalancedBinarySearchTree()</a>, <a class="el" href="../../d8/dfa/_d_s___binary_search_tree_8h_source.xhtml#l00427">DataStructures::BinarySearchTree&lt; BinarySearchTreeType &gt;::~BinarySearchTree()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00138">SLNet::BitStream::~BitStream()</a>, <a class="el" href="../../d7/d26/_d_s___byte_queue_8cpp_source.xhtml#l00029">DataStructures::ByteQueue::~ByteQueue()</a>, <a class="el" href="../../dd/d9f/_cloud_server_8h_source.xhtml#l00155">SLNet::CloudServer::CloudData::~CloudData()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00025">GridSectorizer::~GridSectorizer()</a>, <a class="el" href="../../d2/d77/_d_s___hash_8h_source.xhtml#l00091">DataStructures::Hash&lt; key_type, data_type, HASH_SIZE, hashFunction &gt;::~Hash()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00149">DataStructures::List&lt; list_type &gt;::~List()</a>, <a class="el" href="../../d6/d7e/_d_s___memory_pool_8h_source.xhtml#l00093">DataStructures::MemoryPool&lt; MemoryBlockType &gt;::~MemoryPool()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00287">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::~Multilist()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00078">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::~OrderedList()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00102">DataStructures::Queue&lt; queue_type &gt;::~Queue()</a>, <a class="el" href="../../dc/df7/smartptr_8h_source.xhtml#l00071">SLNet::RakNetSmartPtr&lt; T &gt;::~RakNetSmartPtr()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00319">SLNet::RakPeer::~RakPeer()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00059">SLNet::RakWString::~RakWString()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00128">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::~SingleProducerConsumer()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00365">SLNet::StringCompressor::~StringCompressor()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00040">SLNet::StringTable::~StringTable()</a>, and <a class="el" href="../../d4/d61/_variable_list_delta_tracker_8cpp_source.xhtml#l00021">SLNet::VariableListDeltaTracker::~VariableListDeltaTracker()</a>.</p>

</div>
</div>
<a class="anchor" id="a3742ef842faba0fdf7ee8b233e02189b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _USE_RAK_MEMORY_OVERRIDE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Uncomment to use RakMemoryOverride for custom memory tracking See <a class="el" href="../../dd/dc5/memoryoverride_8h.xhtml" title="If _USE_RAK_MEMORY_OVERRIDE is defined, memory allocations go through rakMalloc, rakRealloc, and rakFree.">memoryoverride.h</a>. </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00078">78</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5f7107c4f34b970ba209b48abfd7ae70"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BITSTREAM_STACK_ALLOCATION_SIZE&#160;&#160;&#160;256</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Threshold at which to do a malloc / free rather than pushing data onto a fixed stack for the bitstream class Arbitrary size, just picking something likely to be larger than most packets </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00093">93</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00697">SLNet::BitStream::AddBitsAndReallocate()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00060">SLNet::BitStream::BitStream()</a>, and <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00138">SLNet::BitStream::~BitStream()</a>.</p>

</div>
</div>
<a class="anchor" id="a419d19919ba0d7e85cd836bee64a5c87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BUFFERED_PACKETS_PAGE_SIZE&#160;&#160;&#160;8</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00201">201</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab317fdfccccc36c15ea2ba0f3d6f2b10"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DATAGRAM_MESSAGE_ID_ARRAY_LENGTH&#160;&#160;&#160;512</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This controls the amount of memory used per connection. This many datagrams are tracked by datagramNumber. If more than this many datagrams are sent, then an ack for an older datagram would be ignored This results in an unnecessary resend in that case </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00129">129</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0dd271c1904495024a10d9fab4600681"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GET_TIME_SPIKE_LIMIT&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uncomment if you want to link in the DLMalloc library to use with RakMemoryOverride. </p>
<p>Workaround for <a href="http://support.microsoft.com/kb/274323">http://support.microsoft.com/kb/274323</a> If two calls between <a class="el" href="../../dd/d30/namespace_s_l_net.xhtml#a2de556bb780580b7b7f07e99e382818d">SLNet::GetTime()</a> happen farther apart than this time in microseconds, this delta will be returned instead Note: This will cause ID_TIMESTAMP to be temporarily inaccurate if you set a breakpoint that pauses the UpdateNetworkLoop() thread in RakPeer Define in definesoverrides.h to enable (non-zero) or disable (0) </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00148">148</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a39dc00e80eb120ac177e55f2f509758d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INTERNAL_PACKET_PAGE_SIZE&#160;&#160;&#160;8</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00207">207</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00304">SLNet::ReliabilityLayer::ReliabilityLayer()</a>.</p>

</div>
</div>
<a class="anchor" id="a6bf2bc2d4ea6acbcd9e3da316d56cd95"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX_ALLOCA_STACK_ALLOCATION&#160;&#160;&#160;1048576</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum (stack) size to use with _alloca before using new and delete instead. </p>
<p>Define RAKNET_COMPATIBILITY to enable API compatibility with RakNet. This allows you to keep existing code which was compatible with RakNet 4.082 unmodified and use SLikeNet as an in-place replacement for the RakNet library without having to modify any of your code. Define __BITSTREAM_NATIVE_END to NOT support endian swapping in the BitStream class. This is faster and is what you should use unless you actually plan to have different endianness systems connect to each other Enabled by default. </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00065">65</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../df/dea/_rak_thread_8cpp_source.xhtml#l00049">SLNet::RakThread::Create()</a>, and <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00486">SLNet::StringCompressor::DecodeString()</a>.</p>

</div>
</div>
<a class="anchor" id="aaac58d0b7314b7f900c0045e0c303b80"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAXIMUM_NUMBER_OF_INTERNAL_IDS&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00107">107</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03579">SLNet::RakPeer::AssignSystemAddressToRemoteSystemList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l06442">SLNet::RakPeer::FillIPList()</a>, <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00592">SLNet::SocketLayer::GetFirstBindableIP()</a>, <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00376">GetMyIP_Win32()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02575">SLNet::RakPeer::GetNumberOfAddresses()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03990">SLNet::RakPeer::IsLoopbackAddress()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03524">SLNet::RakPeer::OnConnectionRequest()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00192">SLNet::RakPeer::RakPeer()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02325">SLNet::RakPeer::SetInternalID()</a>, and <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00372">SLNet::RakPeer::Startup()</a>.</p>

</div>
</div>
<a class="anchor" id="a887f5e6850c876435993a42b7a27358b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OPEN_SSL_CLIENT_SUPPORT&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>If defined, OpenSSL is enabled for the class TCPInterface This is necessary to use the SendEmail class with Google POP servers Note that OpenSSL carries its own license restrictions that you should be aware of. If you don't agree, don't enable this define This also requires that you enable header search paths to DependentExtensions/openssl-1.0.0d/include </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00087">87</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="af0baf244b8f59c91d0e70cdbe99721fa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PREALLOCATE_LARGE_MESSAGES&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00159">159</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="afaa3647d29f5960651eb23fd3d2b5368"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RakAssert</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">120</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00697">SLNet::BitStream::AddBitsAndReallocate()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00055">GridSectorizer::AddEntry()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00076">SLNet::StringTable::AddString()</a>, <a class="el" href="../../d6/d7e/_d_s___memory_pool_8h_source.xhtml#l00107">DataStructures::MemoryPool&lt; MemoryBlockType &gt;::Allocate()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00169">SLNet::RakPeer::AllocPacket()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01032">SLNet::BitStream::AssertCopyData()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00841">SLNet::BitStream::AssertStreamEmpty()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03579">SLNet::RakPeer::AssignSystemAddressToRemoteSystemList()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00051">SLNet::VariableDeltaSerializer::BeginUniqueSerialize()</a>, <a class="el" href="../../d2/d81/_variable_delta_serializer_8cpp_source.xhtml#l00036">SLNet::VariableDeltaSerializer::BeginUnreliableAckedSerialize()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00076">SLNet::BitStream::BitStream()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00133">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::BPlusTree()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00198">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::CancelReadLock()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00221">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::Clear()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l01502">SLNet::RakString::Clone()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04101">SLNet::RakPeer::CloseConnectionInternal()</a>, <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00025">SLNet::DataCompressor::Compress()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00990">SLNet::RakPeer::Connect()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00959">SLNet::BitStream::CopyData()</a>, <a class="el" href="../../df/dea/_rak_thread_8cpp_source.xhtml#l00049">SLNet::RakThread::Create()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00116">SLNet::StringTable::DecodeString()</a>, <a class="el" href="../../d7/dbe/_data_compressor_8cpp_source.xhtml#l00053">SLNet::DataCompressor::DecompressAndAllocate()</a>, <a class="el" href="../../d9/d4c/_rak_memory_override_8cpp_source.xhtml#l00052">DefaultOutOfMemoryHandler()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01314">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::DeleteShiftArrayLeft()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00193">SLNet::TableSerializer::DeserializeCell()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00253">SLNet::TableSerializer::DeserializeFilterQuery()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00291">SLNet::TableSerializer::DeserializeFilterQueryList()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00070">SLNet::TableSerializer::DeserializeTable()</a>, <a class="el" href="../../da/d7b/_d_s___huffman_encoding_tree_8cpp_source.xhtml#l00169">SLNet::HuffmanEncodingTree::EncodeArray()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00647">SLNet::RakString::Erase()</a>, <a class="el" href="../../d3/d93/_rak_net_types_8cpp_source.xhtml#l00605">SLNet::SystemAddress::FromString()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00133">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Get()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00146">DataStructures::Table::Cell::Get()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00534">DataStructures::Table::GetCellValueByIndex()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00105">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::GetElementFromKey()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00147">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::GetIndexAtKey()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00124">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::GetIndexFromKey()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01249">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::GetIndexFromKeyInSortedList()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00918">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::GetIndexOf()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00679">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::GetIndexOf()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00713">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::GetInsertionIndex()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05478">SLNet::RakPeer::GetRakNetSocketFromUserConnectionSocketIndex()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03373">SLNet::RakPeer::GetRemoteSystemFromSystemAddress()</a>, <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00195">SLNet::SocketLayer::GetSubNetForSocketAndIp()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, <a class="el" href="../../d9/dd5/_grid_sectorizer_8cpp_source.xhtml#l00030">GridSectorizer::Init()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00176">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::Insert()</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00200">DataStructures::RangeList&lt; range_type &gt;::Insert()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00248">DataStructures::List&lt; list_type &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00835">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::Insert()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00727">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::InsertBranchDown()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01220">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::InsertInOrderedList()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l00522">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::InsertIntoNode()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01298">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::InsertShiftArrayRight()</a>, <a class="el" href="../../d2/d77/_d_s___hash_8h_source.xhtml#l00276">DataStructures::Hash&lt; key_type, data_type, HASH_SIZE, hashFunction &gt;::ItemAtIndex()</a>, <a class="el" href="../../d2/d77/_d_s___hash_8h_source.xhtml#l00290">DataStructures::Hash&lt; key_type, data_type, HASH_SIZE, hashFunction &gt;::KeyAtIndex()</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00105">SLNet::SimpleMutex::Lock()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03524">SLNet::RakPeer::OnConnectionRequest()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00108">SLNet::RakWString::operator=()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01870">SLNet::operator&gt;&gt;()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00406">DataStructures::Queue&lt; queue_type &gt;::operator[]()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00213">DataStructures::List&lt; list_type &gt;::operator[]()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00241">SLNet::RakString::operator[]()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00333">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::operator[]()</a>, <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00288">DataStructures::Heap&lt; weight_type, data_type, isMaxHeap &gt;::Parent()</a>, <a class="el" href="../../d9/daa/_command_parser_interface_8cpp_source.xhtml#l00049">SLNet::CommandParserInterface::ParseConsoleString()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00206">DataStructures::Queue&lt; queue_type &gt;::Peek()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00425">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::Peek()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00524">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::PeekOpposite()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00216">DataStructures::Queue&lt; queue_type &gt;::PeekTail()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02079">SLNet::RakPeer::Ping()</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00161">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::Pop()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00109">DataStructures::Queue&lt; queue_type &gt;::Pop()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00238">DataStructures::List&lt; list_type &gt;::Pop()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00171">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::Pop()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00400">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::Pop()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00492">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::PopOpposite()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00126">DataStructures::Queue&lt; queue_type &gt;::PopTail()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05402">SLNet::ProcessNetworkPacket()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04524">SLNet::ProcessOfflineNetworkPacket()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00228">DataStructures::Queue&lt; queue_type &gt;::Push()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00355">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::Push()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00163">DataStructures::Queue&lt; queue_type &gt;::PushAtHead()</a>, <a class="el" href="../../d8/db6/_d_s___ordered_channel_heap_8h_source.xhtml#l00108">DataStructures::OrderedChannelHeap&lt; channel_key_type, heap_data_type, channel_key_comparison_func &gt;::PushAtHead()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00446">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::PushOpposite()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00688">DataStructures::Table::QueryRow()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00373">SLNet::BitStream::ReadAlignedBytes()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01126">SLNet::BitStream::ReadAlignedVar16()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01170">SLNet::BitStream::ReadAlignedVar32()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01097">SLNet::BitStream::ReadAlignedVar8()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01720">SLNet::BitStream::ReadBitsFromIntegerRange()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01195">SLNet::BitStream::ReadFloat16()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00207">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::ReadUnlock()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00163">SLNet::RakString::Realloc()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01476">SLNet::RakPeer::Receive()</a>, <a class="el" href="../../d5/dd3/_rak_net_socket2_8cpp_source.xhtml#l00351">SLNet::RNS2_Berkley::RecvFromLoopInt()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03790">SLNet::RakPeer::ReferenceRemoteSystem()</a>, <a class="el" href="../../dd/d79/_d_s___byte_pool_8cpp_source.xhtml#l00101">DataStructures::BytePool::Release()</a>, <a class="el" href="../../d6/d7e/_d_s___memory_pool_8h_source.xhtml#l00159">DataStructures::MemoryPool&lt; MemoryBlockType &gt;::Release()</a>, <a class="el" href="../../d6/d4d/_d_s___ordered_list_8h_source.xhtml#l00204">DataStructures::OrderedList&lt; key_type, data_type, default_comparison_function &gt;::Remove()</a>, <a class="el" href="../../dc/d8d/_d_s___queue_8h_source.xhtml#l00420">DataStructures::Queue&lt; queue_type &gt;::RemoveAtIndex()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00393">DataStructures::List&lt; list_type &gt;::RemoveAtIndex()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00612">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::RemoveAtIndex()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00416">DataStructures::List&lt; list_type &gt;::RemoveAtIndexFast()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l00666">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::RemoveAtKey()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03929">SLNet::RakPeer::RemoveFromActiveSystemList()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00430">DataStructures::List&lt; list_type &gt;::RemoveFromEnd()</a>, <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00057">SLNet::StringTable::RemoveReference()</a>, <a class="el" href="../../d5/df6/_string_compressor_8cpp_source.xhtml#l00048">SLNet::StringCompressor::RemoveReference()</a>, <a class="el" href="../../d9/d7f/_d_s___list_8h_source.xhtml#l00338">DataStructures::List&lt; list_type &gt;::Replace()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00433">SLNet::RakString::Replace()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01555">SLNet::ReliabilityLayer::Send()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01308">SLNet::RakPeer::Send()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04173">SLNet::RakPeer::SendBuffered()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l04209">SLNet::RakPeer::SendBufferedList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03250">SLNet::RakPeer::SendConnectionRequest()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01434">SLNet::RakPeer::SendList()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02981">SLNet::RakPeer::SendOutOfBand()</a>, <a class="el" href="../../d3/d41/_d_s___range_list_8h_source.xhtml#l00077">DataStructures::RangeList&lt; range_type &gt;::Serialize()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00164">SLNet::TableSerializer::SerializeCell()</a>, <a class="el" href="../../da/df7/_table_serializer_8cpp_source.xhtml#l00276">SLNet::TableSerializer::SerializeFilterQueryList()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00446">SLNet::RakString::SetChar()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00214">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::SetExisting()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02325">SLNet::RakPeer::SetInternalID()</a>, <a class="el" href="../../d1/db1/_d_s___multilist_8h_source.xhtml#l01006">DataStructures::Multilist&lt; _MultilistType, _DataType, _KeyType, _IndexType &gt;::SetMultilistType()</a>, <a class="el" href="../../de/dbe/_d_s___map_8h_source.xhtml#l00234">DataStructures::Map&lt; key_type, data_type, key_comparison_func &gt;::SetNew()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00130">SLNet::BitStream::SetNumberOfBitsAllocated()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02258">SLNet::RakPeer::SetOfflinePingResponse()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l02681">SLNet::RakPeer::SetSplitMessageProgressInterval()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l03757">SLNet::RakPeer::ShiftIncomingTimestamp()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l01041">SLNet::RakPeer::Shutdown()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00105">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::SingleProducerConsumer()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00904">DataStructures::Table::SortTable()</a>, <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00372">SLNet::RakPeer::Startup()</a>, <a class="el" href="../../d4/d44/_network_i_d_manager_8cpp_source.xhtml#l00106">SLNet::NetworkIDManager::StopTrackingNetworkIDObject()</a>, <a class="el" href="../../d4/d44/_network_i_d_manager_8cpp_source.xhtml#l00073">SLNet::NetworkIDManager::TrackNetworkIDObject()</a>, <a class="el" href="../../de/dd8/_simple_mutex_8cpp_source.xhtml#l00154">SLNet::SimpleMutex::Unlock()</a>, <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01703">SLNet::ReliabilityLayer::Update()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00462">DataStructures::Table::UpdateCell()</a>, <a class="el" href="../../d0/d0c/_d_s___table_8cpp_source.xhtml#l00498">DataStructures::Table::UpdateCellByIndex()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l01015">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::ValidateTreeRecursive()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01107">SLNet::BitStream::WriteAlignedVar16()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01147">SLNet::BitStream::WriteAlignedVar32()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01090">SLNet::BitStream::WriteAlignedVar8()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01598">SLNet::BitStream::WriteBitsFromIntegerRange()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01164">SLNet::BitStream::WriteCompressed()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l01218">SLNet::BitStream::WriteFloat16()</a>, <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00142">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::WriteLock()</a>, <a class="el" href="../../d7/dc3/_bit_stream_8h_source.xhtml#l01626">SLNet::BitStream::WriteNormVector()</a>, and <a class="el" href="../../d0/dcf/_single_producer_consumer_8h_source.xhtml#l00167">DataStructures::SingleProducerConsumer&lt; SingleProducerConsumerType &gt;::WriteUnlock()</a>.</p>

</div>
</div>
<a class="anchor" id="a2a5d867f7ae6521f217847a78f17ab4a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RAKNET_DEBUG_PRINTF&#160;&#160;&#160;printf</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00098">98</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../d7/dcf/_string_table_8cpp_source.xhtml#l00150">SLNet::StringTable::LogStringNotFound()</a>, <a class="el" href="../../d0/dea/_rak_w_string_8cpp_source.xhtml#l00108">SLNet::RakWString::operator=()</a>, <a class="el" href="../../d7/d26/_d_s___byte_queue_8cpp_source.xhtml#l00136">DataStructures::ByteQueue::Print()</a>, <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00518">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::Print()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00922">SLNet::BitStream::PrintBits()</a>, <a class="el" href="../../dd/d5f/_rak_string_8cpp_source.xhtml#l00762">SLNet::RakString::Printf()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l01035">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::PrintGraph()</a>, <a class="el" href="../../dc/dc5/_bit_stream_8cpp_source.xhtml#l00950">SLNet::BitStream::PrintHex()</a>, <a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h_source.xhtml#l01000">DataStructures::BPlusTree&lt; KeyType, DataType, order &gt;::PrintLeaf()</a>, and <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l05540">SLNet::RakPeer::RunUpdateCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a29cf458f7287265fc1b414c3f72fa9ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RAKNET_DEBUG_TPRINTF&#160;&#160;&#160;<a class="el" href="../../db/d31/_d_r___s_h_a1_8h.xhtml#ac642483f39ee6964424790720b48aee3">_tprintf</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00102">102</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../dc/d26/_w_s_a_startup_singleton_8cpp_source.xhtml#l00046">WSAStartupSingleton::AddRef()</a>, <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00376">GetMyIP_Win32()</a>, <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00529">SLNet::SocketLayer::GetSystemAddress()</a>, <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00493">SLNet::SocketLayer::GetSystemAddress_Old()</a>, and <a class="el" href="../../d8/d4f/_socket_layer_8cpp_source.xhtml#l00125">SLNet::SocketLayer::SetSocketOptions()</a>.</p>

</div>
</div>
<a class="anchor" id="a48a3e5cd2e22f7d71c1373656e80d2ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RAKNET_SUPPORT_IPV6&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00163">163</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../d5/d55/_rak_peer_8cpp_source.xhtml#l00372">SLNet::RakPeer::Startup()</a>.</p>

</div>
</div>
<a class="anchor" id="af6b967c7c085fb3a418932360cfffe25"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RAKPEER_USER_THREADED&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00212">212</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a13ec6b700b7112c1726788c3ae8317e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RAKSTRING_TYPE&#160;&#160;&#160;RakString</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00181">181</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a13b0d29f2a8ccb7f23cbdea648f1286b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RAKSTRING_TYPE_IS_UNICODE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00182">182</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="af1cb26d5d5b8bbb60367a848ee905ade"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RESEND_BUFFER_ARRAY_LENGTH&#160;&#160;&#160;512</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is the maximum number of reliable user messages that can be on the wire at a time If this is too low, then high ping connections with a large throughput will be underutilized This will be evident because RakNetStatistics::messagesInSend buffer will increase over time, yet at the same time the outgoing bandwidth per second is less than your connection supports </p>

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00136">136</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3abde4cfe6a8c3a20ce719c1cad27a07"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RESEND_BUFFER_ARRAY_MASK&#160;&#160;&#160;511</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00137">137</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

<p>Referenced by <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l00631">SLNet::ReliabilityLayer::HandleSocketReceiveFromConnectedPlayer()</a>, and <a class="el" href="../../d9/d15/_reliability_layer_8cpp_source.xhtml#l01703">SLNet::ReliabilityLayer::Update()</a>.</p>

</div>
</div>
<a class="anchor" id="afbacf5808b1cd387e42d32823cafa5b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH&#160;&#160;&#160;48</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00191">191</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="aeed5dc2e94045a66017b9cf04488aa6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS&#160;&#160;&#160;48</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00187">187</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a69f86bebc837357076fea17426799455"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SLNET_MAX_RETRIEVABLE_FILESIZE&#160;&#160;&#160;(0xFFFFFFFF)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00233">233</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="add1080711227ddca8bcc85a3976c989b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USE_ALLOCA&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00216">216</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="aee2e1bf9d15e3408ca6c75897a5d8249"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USE_SLIDING_WINDOW_CONGESTION_CONTROL&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00153">153</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab8f9344fbb8569309f4b11df52aad058"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USE_WAIT_FOR_MULTIPLE_EVENTS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00072">72</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
<a class="anchor" id="a11301b7eb6a7cb30f78afdbc98e1f33c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XBOX_BYPASS_SECURITY&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00195">195</a> of file <a class="el" href="../../d8/db0/defines_8h_source.xhtml">defines.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_bbb90e3ef9167a594ae33323139a2595.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_88467e66686deb9d3756fe4fc298e321.xhtml">slikenet</a></li><li class="navelem"><a class="el" href="../../d8/db0/defines_8h.xhtml">defines.h</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:48 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

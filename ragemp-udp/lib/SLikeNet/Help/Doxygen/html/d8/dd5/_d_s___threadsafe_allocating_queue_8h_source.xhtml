<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/include/slikenet/DS_ThreadsafeAllocatingQueue.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d8/dd5/_d_s___threadsafe_allocating_queue_8h_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DS_ThreadsafeAllocatingQueue.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d8/dd5/_d_s___threadsafe_allocating_queue_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef __THREADSAFE_ALLOCATING_QUEUE</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __THREADSAFE_ALLOCATING_QUEUE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d8d/_d_s___queue_8h.xhtml">DS_Queue.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/ddd/_simple_mutex_8h.xhtml" title="[Internal] Encapsulates a mutex">SimpleMutex.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d7e/_d_s___memory_pool_8h.xhtml">DS_MemoryPool.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">// #if defined(new)</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// #pragma push_macro(&quot;new&quot;)</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// #undef new</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// #define RMO_NEW_UNDEF_ALLOCATING_QUEUE</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>DataStructures</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml">ThreadsafeAllocatingQueue</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="comment">// Queue operations</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">void</span> Push(structureType *s);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    structureType *PopInaccurate(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    structureType *Pop(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">void</span> SetPageSize(<span class="keywordtype">int</span> size);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">bool</span> IsEmpty(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    structureType * operator[] ( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position );</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">void</span> RemoveAtIndex( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position );</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Size( <span class="keywordtype">void</span> );</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// Memory pool operations</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    structureType *Allocate(<span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">void</span> Deallocate(structureType *s, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">void</span> Clear(<span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#ad03957d4e81bbe15a87872844fa766f6">   56</a></span>&#160;    <span class="keyword">mutable</span> <a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml">MemoryPool&lt;structureType&gt;</a> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#ad03957d4e81bbe15a87872844fa766f6">memoryPool</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#ad8d18997393e8f1b1df780079fee9f25">   57</a></span>&#160;    <a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml" title="An easy to use mutex.">SLNet::SimpleMutex</a> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#ad8d18997393e8f1b1df780079fee9f25">memoryPoolMutex</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#ae89e097ad6d19614990c8566a55ec7a7">   58</a></span>&#160;    <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">Queue&lt;structureType*&gt;</a> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#ae89e097ad6d19614990c8566a55ec7a7">queue</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a8ed3acc9c79a2c5586bfe44bfc383184">   59</a></span>&#160;    <a class="code" href="../../d9/da8/class_s_l_net_1_1_simple_mutex.xhtml" title="An easy to use mutex.">SLNet::SimpleMutex</a> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a8ed3acc9c79a2c5586bfe44bfc383184">queueMutex</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">   63</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a768320d1f04005713d0d94bd3b5a7f43">ThreadsafeAllocatingQueue&lt;structureType&gt;::Push</a>(structureType *s)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    queue.Push(s, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    queueMutex.Unlock();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aad86452e470ac42bbfe656aed0b192a2">   71</a></span>&#160;structureType *<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aad86452e470ac42bbfe656aed0b192a2">ThreadsafeAllocatingQueue&lt;structureType&gt;::PopInaccurate</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    structureType *s;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (queue.IsEmpty())</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">if</span> (queue.IsEmpty()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        s=queue.Pop();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        s=0;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    queueMutex.Unlock();    </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeaee4f85f6aa6870a2eb57c533ba13f5">   86</a></span>&#160;structureType *<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeaee4f85f6aa6870a2eb57c533ba13f5">ThreadsafeAllocatingQueue&lt;structureType&gt;::Pop</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    structureType *s;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span> (queue.IsEmpty())</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        queueMutex.Unlock();    </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    s=queue.Pop();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    queueMutex.Unlock();    </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">  101</a></span>&#160;structureType *<a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa95962ea9808cd598c13048c31c52c6e">ThreadsafeAllocatingQueue&lt;structureType&gt;::Allocate</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    structureType *s;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    memoryPoolMutex.Lock();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    s=memoryPool.Allocate(file, line);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    memoryPoolMutex.Unlock();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// Call new operator, memoryPool doesn&#39;t do this</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    s = <span class="keyword">new</span> ((<span class="keywordtype">void</span>*)s) structureType;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0eec464ecd7aa8af770e1ceb406661bf">ThreadsafeAllocatingQueue&lt;structureType&gt;::Deallocate</a>(structureType *s, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// Call delete operator, memory pool doesn&#39;t do this</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    s-&gt;~structureType();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    memoryPoolMutex.Lock();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    memoryPool.Release(s, file, line);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    memoryPoolMutex.Unlock();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a48ffb49251ed59f0fbf54d0226e374e0">  122</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a48ffb49251ed59f0fbf54d0226e374e0">ThreadsafeAllocatingQueue&lt;structureType&gt;::Clear</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    memoryPoolMutex.Lock();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i &lt; queue.Size(); i++)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        queue[i]-&gt;~structureType();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        memoryPool.Release(queue[i], file, line);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    queue.Clear(file, line);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    memoryPoolMutex.Unlock();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    memoryPoolMutex.Lock();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    memoryPool.Clear(file, line);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    memoryPoolMutex.Unlock();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a833da782723daa209092fa29b29fbc94">  138</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a833da782723daa209092fa29b29fbc94">ThreadsafeAllocatingQueue&lt;structureType&gt;::SetPageSize</a>(<span class="keywordtype">int</span> size)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    memoryPool.SetPageSize(size);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0e9dcb3ab5bb94af7535c41468a233c0">  144</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#a0e9dcb3ab5bb94af7535c41468a233c0">ThreadsafeAllocatingQueue&lt;structureType&gt;::IsEmpty</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">bool</span> isEmpty;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    isEmpty=queue.IsEmpty();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    queueMutex.Unlock();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">return</span> isEmpty;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeffe0642e5cea2431c976415955a1460">  154</a></span>&#160;structureType * <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aeffe0642e5cea2431c976415955a1460">ThreadsafeAllocatingQueue&lt;structureType&gt;::operator[] </a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position )</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    structureType *s;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    s=queue[position];</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    queueMutex.Unlock();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa7a9ab0c4effa28652d64eb7624c810f">  164</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa7a9ab0c4effa28652d64eb7624c810f">ThreadsafeAllocatingQueue&lt;structureType&gt;::RemoveAtIndex</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> position )</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    queue.RemoveAtIndex(position);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    queueMutex.Unlock();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> structureType&gt;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa2887f954c636f22b9463383ec7eb144">  172</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../da/dce/class_data_structures_1_1_threadsafe_allocating_queue.xhtml#aa2887f954c636f22b9463383ec7eb144">ThreadsafeAllocatingQueue&lt;structureType&gt;::Size</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> s;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    queueMutex.Lock();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    s=queue.Size();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    queueMutex.Unlock();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> s;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">// #if defined(RMO_NEW_UNDEF_ALLOCATING_QUEUE)</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">// #pragma pop_macro(&quot;new&quot;)</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">// #undef RMO_NEW_UNDEF_ALLOCATING_QUEUE</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">// #endif</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_bbb90e3ef9167a594ae33323139a2595.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_88467e66686deb9d3756fe4fc298e321.xhtml">slikenet</a></li><li class="navelem"><a class="el" href="../../d8/dd5/_d_s___threadsafe_allocating_queue_8h.xhtml">DS_ThreadsafeAllocatingQueue.h</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

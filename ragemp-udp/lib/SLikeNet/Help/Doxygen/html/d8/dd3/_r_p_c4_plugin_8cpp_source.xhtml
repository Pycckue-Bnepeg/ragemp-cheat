<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/RPC4Plugin.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d8/dd3/_r_p_c4_plugin_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">RPC4Plugin.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d8/dd3/_r_p_c4_plugin_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/ddb/_native_feature_includes_8h.xhtml">slikenet/NativeFeatureIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_RPC4Plugin==1</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d30/_r_p_c4_plugin_8h.xhtml" title="Remote procedure call, supporting C functions only. No external dependencies required.">slikenet/RPC4Plugin.h</a>&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml" title="All the message identifiers used by RakNet. Message identifiers comprise the first byte of any messag...">slikenet/MessageIdentifiers.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/d85/peerinterface_8h.xhtml" title="An interface for RakPeer. Simply contains all user functions as pure virtuals.">slikenet/peerinterface.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d2/dd1/_packetized_t_c_p_8h.xhtml" title="A simple TCP based server allowing sends and receives. Can be connected by any TCP client...">slikenet/PacketizedTCP.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d81/sleep_8h.xhtml">slikenet/sleep.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d8/db0/defines_8h.xhtml">slikenet/defines.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d8d/_d_s___queue_8h.xhtml">slikenet/DS_Queue.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">//#include &quot;slikenet/GetTime.h&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/db2/linux__adapter_8h.xhtml">slikenet/linux_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/dff/osx__adapter_8h.xhtml">slikenet/osx_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<a class="code" href="../../db/dbd/_export_8h.xhtml#aa00165c970bdb25e1c757b432509533b">STATIC_FACTORY_DEFINITIONS</a>(<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a>,<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#de/d58/class_s_l_net_1_1_r_p_c4" title="The RPC4 plugin is just an association between a C function pointer and a string.">RPC4</a>);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">struct </span>GlobalRegistration</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    void ( *registerFunctionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet );</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    void ( *registerBlockingFunctionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *returnData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet );</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">char</span> functionName[<a class="code" href="../../d8/db0/defines_8h.xhtml#afbacf5808b1cd387e42d32823cafa5b8">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH</a>];</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a> messageId;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordtype">int</span> callPriority;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">static</span> GlobalRegistration globalRegistrationBuffer[<a class="code" href="../../d8/db0/defines_8h.xhtml#aeed5dc2e94045a66017b9cf04488aa6f">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS</a>];</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> globalRegistrationIndex=0;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<a class="code" href="../../d2/d79/class_s_l_net_1_1_r_p_c4_global_registration.xhtml#abd4f3d9e62dcd92bb9e9c19d970d5fab" title="Queue a call to RPC4::RegisterFunction() globally. Actual call occurs once RPC4 is attached to an ins...">RPC4GlobalRegistration::RPC4GlobalRegistration</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <span class="keywordtype">void</span> ( *functionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet ))</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(globalRegistrationIndex!=<a class="code" href="../../d8/db0/defines_8h.xhtml#aeed5dc2e94045a66017b9cf04488aa6f">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">for</span> (i=0; uniqueID[i]; i++)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(i&lt;=<a class="code" href="../../d8/db0/defines_8h.xhtml#afbacf5808b1cd387e42d32823cafa5b8">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH</a>-1);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        globalRegistrationBuffer[globalRegistrationIndex].functionName[i]=uniqueID[i];</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerFunctionPointer=functionPointer;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerBlockingFunctionPointer=0;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].callPriority=0xFFFFFFFF;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    globalRegistrationIndex++;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<a class="code" href="../../d2/d79/class_s_l_net_1_1_r_p_c4_global_registration.xhtml#abd4f3d9e62dcd92bb9e9c19d970d5fab" title="Queue a call to RPC4::RegisterFunction() globally. Actual call occurs once RPC4 is attached to an ins...">RPC4GlobalRegistration::RPC4GlobalRegistration</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <span class="keywordtype">void</span> ( *functionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet ), <span class="keywordtype">int</span> callPriority)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(globalRegistrationIndex!=<a class="code" href="../../d8/db0/defines_8h.xhtml#aeed5dc2e94045a66017b9cf04488aa6f">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS</a>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">for</span> (i=0; uniqueID[i]; i++)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(i&lt;=<a class="code" href="../../d8/db0/defines_8h.xhtml#afbacf5808b1cd387e42d32823cafa5b8">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH</a>-1);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        globalRegistrationBuffer[globalRegistrationIndex].functionName[i]=uniqueID[i];</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerFunctionPointer=functionPointer;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerBlockingFunctionPointer=0;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(callPriority!=(<span class="keywordtype">int</span>) 0xFFFFFFFF);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].callPriority=callPriority;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    globalRegistrationIndex++;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<a class="code" href="../../d2/d79/class_s_l_net_1_1_r_p_c4_global_registration.xhtml#abd4f3d9e62dcd92bb9e9c19d970d5fab" title="Queue a call to RPC4::RegisterFunction() globally. Actual call occurs once RPC4 is attached to an ins...">RPC4GlobalRegistration::RPC4GlobalRegistration</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <span class="keywordtype">void</span> ( *functionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *returnData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet ))</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(globalRegistrationIndex!=<a class="code" href="../../d8/db0/defines_8h.xhtml#aeed5dc2e94045a66017b9cf04488aa6f">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS</a>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">for</span> (i=0; uniqueID[i]; i++)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(i&lt;=<a class="code" href="../../d8/db0/defines_8h.xhtml#afbacf5808b1cd387e42d32823cafa5b8">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH</a>-1);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        globalRegistrationBuffer[globalRegistrationIndex].functionName[i]=uniqueID[i];</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerFunctionPointer=0;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerBlockingFunctionPointer=functionPointer;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    globalRegistrationIndex++;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<a class="code" href="../../d2/d79/class_s_l_net_1_1_r_p_c4_global_registration.xhtml#abd4f3d9e62dcd92bb9e9c19d970d5fab" title="Queue a call to RPC4::RegisterFunction() globally. Actual call occurs once RPC4 is attached to an ins...">RPC4GlobalRegistration::RPC4GlobalRegistration</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a> messageId)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(globalRegistrationIndex!=<a class="code" href="../../d8/db0/defines_8h.xhtml#aeed5dc2e94045a66017b9cf04488aa6f">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS</a>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">for</span> (i=0; uniqueID[i]; i++)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(i&lt;=<a class="code" href="../../d8/db0/defines_8h.xhtml#afbacf5808b1cd387e42d32823cafa5b8">RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH</a>-1);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        globalRegistrationBuffer[globalRegistrationIndex].functionName[i]=uniqueID[i];</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerFunctionPointer=0;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].registerBlockingFunctionPointer=0;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    globalRegistrationBuffer[globalRegistrationIndex].messageId=messageId;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    globalRegistrationIndex++;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">enum</span> RPC4Identifiers</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    ID_RPC4_CALL,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    ID_RPC4_RETURN,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    ID_RPC4_SIGNAL,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;};</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#abe1b27195128d90fb4fbf3a4b96fabe8">RPC4::LocalSlotObjectComp</a>( <span class="keyword">const</span> LocalSlotObject &amp;key, <span class="keyword">const</span> LocalSlotObject &amp;data )</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">if</span> (key.callPriority&gt;data.callPriority)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> (key.callPriority==data.callPriority)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">if</span> (key.registrationCount&lt;data.registrationCount)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> (key.registrationCount==data.registrationCount)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aeaa88b77476e12830903a7962be1458a">RPC4::LocalCallbackComp</a>(<span class="keyword">const</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a> &amp;key, <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#d2/d7d/struct_s_l_net_1_1_r_p_c4_1_1_local_callback">RPC4::LocalCallback</a>* <span class="keyword">const</span> &amp;data )</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">if</span> (key &lt; data-&gt;messageId)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">if</span> (key &gt; data-&gt;<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ab3f0bb19b886c587d873d8e4eecbeb4e">messageId</a>)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a8cf7fc7da3d60685da38f0e9fba2b506">RPC4::RPC4</a>()</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a42c6def740ccc00e4e43d3654ec91aa8">gotBlockingReturnValue</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a13e1e510840bb04488c9d65c367872ac" title="Used so slots are called in the order they are registered.">nextSlotRegistrationCount</a>=0;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a11e089e6f6518965d73bef62ed54b70a">interruptSignal</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#acf17a28094d0763464b43b3d8df7428c">RPC4::~RPC4</a>()</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#ad64cf6af46df6a5e68747740ee2c1fec">Size</a>(); i++)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>[i],<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List&lt;SLNet::RakString&gt;</a> keyList;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml" title="Array based implementation of a list.">DataStructures::List&lt;LocalSlot*&gt;</a> outputList;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a10d4e81e8087d55073e34c0677f569f0">GetAsList</a>(outputList,keyList,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">for</span> (j=0; j &lt; outputList.<a class="code" href="../../d4/d78/class_data_structures_1_1_list.xhtml#a6f13a4519693cbd16cd13b1fe284f330">Size</a>(); j++)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(outputList[j],<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#adcbf7b437513650734419bd55f736276" title="Clear the list.">Clear</a>(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RPC4::RegisterFunction</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <span class="keywordtype">void</span> ( *functionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet ))</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> skhi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(uniqueID);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">if</span> (skhi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a1cd78525c3b53c60fc5a6f1f722d53f2">Push</a>(uniqueID,functionPointer,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RPC4::RegisterSlot</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *sharedIdentifier, <span class="keywordtype">void</span> ( *functionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet ), <span class="keywordtype">int</span> callPriority)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    LocalSlotObject lso(<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a13e1e510840bb04488c9d65c367872ac" title="Used so slots are called in the order they are registered.">nextSlotRegistrationCount</a>++, callPriority, functionPointer);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> idx = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a99b121d95631c2b115d924301ef0f2db">GetLocalSlotIndex</a>(sharedIdentifier);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    LocalSlot *localSlot;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">if</span> (idx.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>())</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        localSlot = SLNet::OP_NEW&lt;LocalSlot&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a1cd78525c3b53c60fc5a6f1f722d53f2">Push</a>(sharedIdentifier, localSlot,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        localSlot=<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5fec5e2f5f479ddeebefe9a0ff1c50e4">ItemAtIndex</a>(idx);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    localSlot-&gt;<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a75d9d2c343ebe27effb3cfd12664cbbd">slotObjects</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a30d44cd52bdb782478472a95cc5a4b0a">Insert</a>(lso,lso,<span class="keyword">true</span>,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ad3b069b947e161794586f7b5c7addf00" title="Same as RegisterFunction, but is called with CallBlocking() instead of Call() and returns a value to ...">RPC4::RegisterBlockingFunction</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <span class="keywordtype">void</span> ( *functionPointer ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *userData, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *returnData, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet ))</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> skhi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a521111ffd556bddcf29ae207187063b6">registeredBlockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(uniqueID);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span> (skhi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a521111ffd556bddcf29ae207187063b6">registeredBlockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a1cd78525c3b53c60fc5a6f1f722d53f2">Push</a>(uniqueID,functionPointer,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a508f3a63f49f9b76f55cae0dceb9fd21">RPC4::RegisterLocalCallback</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a> messageId)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    LocalCallback *lc;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> str;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    str=uniqueID;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    index = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a>(messageId,&amp;objectExists);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        lc = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>[index];</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        index = lc-&gt;functions.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a>(str,&amp;objectExists);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span> (objectExists==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            lc-&gt;functions.InsertAtIndex(str,index,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        lc = SLNet::OP_NEW&lt;LocalCallback&gt;(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        lc-&gt;messageId=messageId;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        lc-&gt;functions.Insert(str,str,<span class="keyword">false</span>,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a9ed08b2c35b20d08ebfab17927f5c4a2">InsertAtIndex</a>(lc,index,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a7b44e827b381d406b9889b756019bc87" title="Unregister a function pointer previously registered with RegisterFunction()">RPC4::UnregisterFunction</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    void ( *f ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> * );</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5c3f84193a5b2d74f0138a340215679a">Pop</a>(f,uniqueID,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#afdb98185e7eb00039ccec299fcf48181" title="Same as UnregisterFunction, except for a blocking function.">RPC4::UnregisterBlockingFunction</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;{</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    void ( *f ) (<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *, <a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> *,<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> * );</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a521111ffd556bddcf29ae207187063b6">registeredBlockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5c3f84193a5b2d74f0138a340215679a">Pop</a>(f,uniqueID,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3c8b7eb5242eb1b2acf428b5bc338b09">RPC4::UnregisterLocalCallback</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a> messageId)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;{</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, index2;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    LocalCallback *lc;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> str;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    str=uniqueID;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    index = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a>(messageId,&amp;objectExists);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        lc = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>[index];</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        index2 = lc-&gt;functions.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a>(str,&amp;objectExists);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            lc-&gt;functions.RemoveAtIndex(index2);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">if</span> (lc-&gt;functions.Size()==0)</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(lc,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a65ef0eca14deb8698004b1cd074b6f0a">RemoveAtIndex</a>(index);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        }</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a766fec24de630fcc714f0d5b3431821c">RPC4::UnregisterSlot</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* sharedIdentifier)</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;{</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> hi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(sharedIdentifier);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">if</span> (hi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        LocalSlot *ls = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5fec5e2f5f479ddeebefe9a0ff1c50e4">ItemAtIndex</a>(hi);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a79772d09451f784e87bec85694fad1ed">SLNet::OP_DELETE</a>(ls, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a72237d005a83cfc02f2b573ac4336cd0">RemoveAtIndex</a>(hi, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a09dc786630a940baae7166f49823ee7f">RPC4::CallLoopback</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, SLNet::BitStream * bitStream )</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;{</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *p=0;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> skhi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(uniqueID);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">if</span> (skhi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>()==<span class="keyword">true</span>)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>) </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            p=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) strlen(uniqueID)+1);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_PacketizedTCP==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            p=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a>-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a84ab36f6d36c31690c80bb5e51f2d016" title="Return an allocated but empty packet, for custom use.">AllocatePacket</a>(<span class="keyword">sizeof</span>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>)+<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>)+(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) strlen(uniqueID)+1);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a19e5960d76ee5af2ca108978daa2fcff">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_PacketizedTCP==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]=<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a85a5903d5d7ededbe634484af8dfaad5">ID_RPC_REMOTE_ERROR</a>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[1]=<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ggaf57aae36449dec5f2df3be031e658dc9a1407810710bd678545cbe27c91263530" title="Named function was not registered with RegisterFunction(). Check your spelling.">RPC_ERROR_FUNCTION_NOT_REGISTERED</a>;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        strcpy_s((<span class="keywordtype">char</span>*) p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>+2, p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>-2, uniqueID);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a>(p,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    SLNet::BitStream out;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3ad63d6f03ee2fe6a54f6a20907f000c02" title="Plugin based replacement for RPC system.">ID_RPC_PLUGIN</a>);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC4_CALL);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b" title="Write any integral type to a bitstream.">WriteCompressed</a>(uniqueID);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<span class="keyword">false</span>); <span class="comment">// nonblocking</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">if</span> (bitStream)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1083ab999b52c839709eab5cff65a68d" title="Align the next write and/or read to a byte boundary.">AlignWriteToByteBoundary</a>();</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(bitStream);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>) </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        p=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aed235e7933ca7f30448eb9c91cefab63">AllocatePacketUnified</a>(out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>());</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_PacketizedTCP==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        p=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ac298ef92904df807a3248e380e8edf43">tcpInterface</a>-&gt;<a class="code" href="../../df/dd8/class_s_l_net_1_1_t_c_p_interface.xhtml#a84ab36f6d36c31690c80bb5e51f2d016" title="Return an allocated but empty packet, for custom use.">AllocatePacket</a>(out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>());</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>)</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        p-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a19e5960d76ee5af2ca108978daa2fcff">GetGuidFromSystemAddress</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="preprocessor">#if _RAKNET_SUPPORT_PacketizedTCP==1 &amp;&amp; _RAKNET_SUPPORT_TCPInterface==1</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        p-&gt;guid=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="preprocessor"></span>    p-&gt;systemAddress=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    p-&gt;systemAddress.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    memcpy(p-&gt;data,out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a7b4099386f6f116f0978b00ead160a0d">GetData</a>(),out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>());</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#a00bb796b830ec2130b4c11ed13c3e838">PushBackPacketUnified</a>(p,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a1614d680409aa30ea7c79112ad9a6877">RPC4::Call</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, SLNet::BitStream * bitStream, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast )</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    SLNet::BitStream out;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC_PLUGIN);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC4_CALL);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b" title="Write any integral type to a bitstream.">WriteCompressed</a>(uniqueID);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<span class="keyword">false</span>); <span class="comment">// Nonblocking</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">if</span> (bitStream)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1083ab999b52c839709eab5cff65a68d" title="Align the next write and/or read to a byte boundary.">AlignWriteToByteBoundary</a>();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(bitStream);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a>(&amp;out,priority,reliability,orderingChannel,systemIdentifier,broadcast);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a417b68c1979b3948a568c57d6cdf7d24" title="Same as call, but don&#39;t return until the remote system replies. Broadcasting parameter does not exist...">RPC4::CallBlocking</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* uniqueID, SLNet::BitStream * bitStream, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, SLNet::BitStream *returnData )</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    SLNet::BitStream out;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC_PLUGIN);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC4_CALL);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b" title="Write any integral type to a bitstream.">WriteCompressed</a>(uniqueID);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<span class="keyword">true</span>); <span class="comment">// Blocking</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keywordflow">if</span> (bitStream)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1083ab999b52c839709eab5cff65a68d" title="Align the next write and/or read to a byte boundary.">AlignWriteToByteBoundary</a>();</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(bitStream);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(returnData);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3" title="Returned from RakPeerInterface::GetConnectionState()">ConnectionState</a> cs;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    cs = <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a723925024fb74b89b2af6e0c2d19ad22">GetConnectionState</a>(systemIdentifier);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordflow">if</span> (cs!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#ad3fc8b60e351dfe5eb05cdba41d8c7a3a042290df226826435b62d02f647281ff" title="Is connected and able to communicate.">IS_CONNECTED</a>)</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a>(&amp;out,priority,reliability,orderingChannel,systemIdentifier,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    returnData-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aab4381d8b4a48dbc8e2975dba894f350" title="Resets the bitstream for reuse.">Reset</a>();</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ada24147085c7bdf3612df36348863c39">blockingReturnValue</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aab4381d8b4a48dbc8e2975dba894f350" title="Resets the bitstream for reuse.">Reset</a>();</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a42c6def740ccc00e4e43d3654ec91aa8">gotBlockingReturnValue</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml">DataStructures::Queue&lt;Packet*&gt;</a> packetQueue;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">while</span> (<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a42c6def740ccc00e4e43d3654ec91aa8">gotBlockingReturnValue</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="comment">// TODO - block, filter until gotBlockingReturnValue==true or ID_CONNECTION_LOST or ID_DISCONNECTION_NOTIFICXATION or ID_RPC_REMOTE_ERROR/RPC_ERROR_FUNCTION_NOT_REGISTERED</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <a class="code" href="../../df/d30/_rak_sleep_8cpp.xhtml#a5b4f72ab4031078e87f5ed1b6828e1c7">RakSleep</a>(30);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        packet=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a99738a11165d8d6feda63f2dfde1bf28">Receive</a>();</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keywordflow">if</span> (packet)</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">if</span> (</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a28dffd6d158f4003cb58fbe9b483a9a9">ID_CONNECTION_LOST</a> || packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3aa3c9ab42767af4b738cceb5a5b3600ae">ID_DISCONNECTION_NOTIFICATION</a>) &amp;&amp;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                ((systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a> &amp;&amp; packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>==systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>) ||</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                (systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a> &amp;&amp; packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>==systemIdentifier.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>))</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                )</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            {</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <span class="comment">// Push back to head in reverse order</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a55e4b5cdc35701904e451e81ff237d08">PushBackPacket</a>(packet,<span class="keyword">true</span>);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                <span class="keywordflow">while</span> (packetQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a55e4b5cdc35701904e451e81ff237d08">PushBackPacket</a>(packetQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>(),<span class="keyword">true</span>);</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            }</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]==<a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a85a5903d5d7ededbe634484af8dfaad5">ID_RPC_REMOTE_ERROR</a> &amp;&amp; packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[1]==<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ggaf57aae36449dec5f2df3be031e658dc9a1407810710bd678545cbe27c91263530" title="Named function was not registered with RegisterFunction(). Check your spelling.">RPC_ERROR_FUNCTION_NOT_REGISTERED</a>)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> functionName;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                SLNet::BitStream bsIn(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>,packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                bsIn.IgnoreBytes(2);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                bsIn.Read(functionName);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                <span class="keywordflow">if</span> (functionName==uniqueID)</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                {</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                    <span class="comment">// Push back to head in reverse order</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a55e4b5cdc35701904e451e81ff237d08">PushBackPacket</a>(packet,<span class="keyword">true</span>);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                    <span class="keywordflow">while</span> (packetQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                        <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a55e4b5cdc35701904e451e81ff237d08">PushBackPacket</a>(packetQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>(),<span class="keyword">true</span>);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    packetQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a3980613e44a80982708b9d1f49fa0fea">PushAtHead</a>(packet,0,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                }</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                packetQueue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a3980613e44a80982708b9d1f49fa0fea">PushAtHead</a>(packet,0,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        }</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    returnData-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ada24147085c7bdf3612df36348863c39">blockingReturnValue</a>);</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    returnData-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;}</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a60623a6701a366548a94000f5c656a26">RPC4::Signal</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *sharedIdentifier, SLNet::BitStream *bitStream, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705c" title="These enumerations are used to describe when packets are delivered.">PacketPriority</a> priority, <a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7e">PacketReliability</a> reliability, <span class="keywordtype">char</span> orderingChannel, <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> systemIdentifier, <span class="keywordtype">bool</span> broadcast, <span class="keywordtype">bool</span> invokeLocal)</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    SLNet::BitStream out;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC_PLUGIN);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC4_SIGNAL);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a24121050ec7d63a6eba5d1b243b4922b" title="Write any integral type to a bitstream.">WriteCompressed</a>(sharedIdentifier);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">if</span> (bitStream)</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    {</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1083ab999b52c839709eab5cff65a68d" title="Align the next write and/or read to a byte boundary.">AlignWriteToByteBoundary</a>();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(bitStream);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    }</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a>(&amp;out,priority,reliability,orderingChannel,systemIdentifier,broadcast);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordflow">if</span> (invokeLocal)</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="comment">//TimeUS t1 = GetTimeUS();</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> functionIndex;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        functionIndex = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(sharedIdentifier);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="comment">//TimeUS t2 = GetTimeUS();</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keywordflow">if</span> (functionIndex.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>())</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        </div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> p;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#a1b84bba5f2e64578ac7d05899bd5967e" title="Return my own GUID.">GetMyGUID</a>();</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>=<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#adac8deadf450a4e1d69c11b1db588bec">rakPeerInterface</a>-&gt;<a class="code" href="../../da/d27/class_s_l_net_1_1_rak_peer_interface.xhtml#ad3e572620ed2fc1bb127589ddb5245c3">GetInternalID</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>);</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4a736945115119681c77e168346988c4">wasGeneratedLocally</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        SLNet::BitStream *bsptr, bstemp;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keywordflow">if</span> (bitStream)</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        {</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>=bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a48740002683b46b00cbb97b8f7d0710e" title="Returns the length in bytes of the stream.">GetNumberOfBytesUsed</a>();</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=bitStream-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a0efe4cd010ac7ccc0a7aa8868e0c54c8" title="Returns the length in bits of the stream.">GetNumberOfBitsUsed</a>();</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            bsptr=bitStream;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        }</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>=0;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            p.<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a77b617c6ae559765f8ad26d1f460f082" title="The length of the data in bits.">bitSize</a>=0;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            bsptr=&amp;bstemp;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="comment">//TimeUS t3 = GetTimeUS();</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a6ac33fb920cab36b21a2ceb58f91d4dc">InvokeSignal</a>(functionIndex, bsptr, &amp;p);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="comment">//TimeUS t4 = GetTimeUS();</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="comment">//printf(&quot;b1: %I64d\n&quot;, t2-t1);</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="comment">//printf(&quot;b2: %I64d\n&quot;, t3-t2);</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="comment">//printf(&quot;b3: %I64d\n&quot;, t4-t3);</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    }</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;}</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a6ac33fb920cab36b21a2ceb58f91d4dc">RPC4::InvokeSignal</a>(<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> functionIndex, SLNet::BitStream *serializedParameters, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet)</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;{</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keywordflow">if</span> (functionIndex.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>())</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="comment">//TimeUS t1 = GetTimeUS();</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="comment">//TimeUS t2=0;</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="comment">//TimeUS t3=0;</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a11e089e6f6518965d73bef62ed54b70a">interruptSignal</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    LocalSlot *localSlot = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5fec5e2f5f479ddeebefe9a0ff1c50e4">ItemAtIndex</a>(functionIndex);</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    i=0;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">while</span> (i &lt; localSlot-&gt;slotObjects.Size())</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    {</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="comment">//t2 = GetTimeUS();</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        localSlot-&gt;<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a75d9d2c343ebe27effb3cfd12664cbbd">slotObjects</a>[i].functionPointer(serializedParameters, packet);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="comment">//t3 = GetTimeUS();</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="comment">// Not threadsafe</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a11e089e6f6518965d73bef62ed54b70a">interruptSignal</a>==<span class="keyword">true</span>)</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        serializedParameters-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        i++;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="comment">//TimeUS t4 = GetTimeUS();</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="comment">//printf(&quot;b1: %I64d\n&quot;, t2-t1);</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="comment">//printf(&quot;b2: %I64d\n&quot;, t3-t2);</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="comment">//printf(&quot;b3: %I64d\n&quot;, t4-t3);</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;}</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ad80d046f69c427b68e7d087a4409a2b8" title="If called while processing a slot, no further slots for the currently executing signal will be execut...">RPC4::InterruptSignal</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;{</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a11e089e6f6518965d73bef62ed54b70a">interruptSignal</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;}</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aaa352dac20c481024c71b96ac8e98f39" title="Called when the interface is attached.">RPC4::OnAttach</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;{</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; globalRegistrationIndex; i++)</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    {</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keywordflow">if</span> (globalRegistrationBuffer[i].registerFunctionPointer)</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="keywordflow">if</span> (globalRegistrationBuffer[i].callPriority==(<span class="keywordtype">int</span>)0xFFFFFFFF)</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a76d4f1373c622cf1a1d2c6b2bda30fd5" title="Register a function pointer to be callable from a remote system.">RegisterFunction</a>(globalRegistrationBuffer[i].functionName, globalRegistrationBuffer[i].registerFunctionPointer);</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a08c1f1cde743bf2e8dbb2eea2031e9ab">RegisterSlot</a>(globalRegistrationBuffer[i].functionName, globalRegistrationBuffer[i].registerFunctionPointer, globalRegistrationBuffer[i].callPriority);</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (globalRegistrationBuffer[i].registerBlockingFunctionPointer)</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ad3b069b947e161794586f7b5c7addf00" title="Same as RegisterFunction, but is called with CallBlocking() instead of Call() and returns a value to ...">RegisterBlockingFunction</a>(globalRegistrationBuffer[i].functionName, globalRegistrationBuffer[i].registerBlockingFunctionPointer);</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a508f3a63f49f9b76f55cae0dceb9fd21">RegisterLocalCallback</a>(globalRegistrationBuffer[i].functionName, globalRegistrationBuffer[i].messageId);</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    }</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;}</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#ga5c8f613a7c294e0b96deccbdabc38f18">PluginReceiveResult</a> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#aacbb8dd9ddba653c9df0f8ad8f154f78">RPC4::OnReceive</a>(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet)</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;{</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0]==ID_RPC_PLUGIN)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    {</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        SLNet::BitStream bsIn(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>,packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        bsIn.IgnoreBytes(2);</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[1]==ID_RPC4_CALL)</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        {</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> functionName;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            bsIn.ReadCompressed(functionName);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordtype">bool</span> isBlocking=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            bsIn.Read(isBlocking);</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            <span class="keywordflow">if</span> (isBlocking==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            {</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> skhi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(functionName.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="keywordflow">if</span> (skhi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>())</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                    SLNet::BitStream bsOut;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) <a class="code" href="../../d6/d83/_message_identifiers_8h.xhtml#ac1b471af280629f5ace02e586d5bcfd3a85a5903d5d7ededbe634484af8dfaad5">ID_RPC_REMOTE_ERROR</a>);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ggaf57aae36449dec5f2df3be031e658dc9a1407810710bd678545cbe27c91263530" title="Named function was not registered with RegisterFunction(). Check your spelling.">RPC_ERROR_FUNCTION_NOT_REGISTERED</a>);</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(functionName.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),(<span class="keywordtype">unsigned</span> int) functionName.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5" title="Returns the length of the string.">GetLength</a>()+1);</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a>(&amp;bsOut,<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705cacb1785f11dd02aa7f5d164fb314c594e">HIGH_PRIORITY</a>,<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>,0,packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a9f27ed7ccb7513dceb7ed4da3d99a1bf" title="The plugin used this message and it shouldn&#39;t be given to the user.">RR_STOP_PROCESSING_AND_DEALLOCATE</a>;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                }</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                void ( *fp ) (SLNet::BitStream *, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> * );</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                fp = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5fec5e2f5f479ddeebefe9a0ff1c50e4">ItemAtIndex</a>(skhi);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e" title="Align the next write and/or read to a byte boundary.">AlignReadToByteBoundary</a>();</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                fp(&amp;bsIn,packet);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            }</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> skhi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a521111ffd556bddcf29ae207187063b6">registeredBlockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(functionName.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>());</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                <span class="keywordflow">if</span> (skhi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>())</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                {</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                    SLNet::BitStream bsOut;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) ID_RPC_REMOTE_ERROR);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>) RPC_ERROR_FUNCTION_NOT_REGISTERED);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                    bsOut.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(functionName.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#ac661bded7f8850f8cf7bbcad8406d3e4" title="Same as std::string::c_str.">C_String</a>(),(<span class="keywordtype">unsigned</span> int) functionName.<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml#abe4d216101d087910af4d93b594847b5" title="Returns the length of the string.">GetLength</a>()+1);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                    <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a>(&amp;bsOut,<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705cacb1785f11dd02aa7f5d164fb314c594e">HIGH_PRIORITY</a>,<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>,0,packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a9f27ed7ccb7513dceb7ed4da3d99a1bf" title="The plugin used this message and it shouldn&#39;t be given to the user.">RR_STOP_PROCESSING_AND_DEALLOCATE</a>;</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                }</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                void ( *fp ) (SLNet::BitStream *, SLNet::BitStream *, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> * );</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                fp = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a521111ffd556bddcf29ae207187063b6">registeredBlockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5fec5e2f5f479ddeebefe9a0ff1c50e4">ItemAtIndex</a>(skhi);</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                SLNet::BitStream returnData;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e" title="Align the next write and/or read to a byte boundary.">AlignReadToByteBoundary</a>();</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                fp(&amp;bsIn, &amp;returnData, packet);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                SLNet::BitStream out;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC_PLUGIN);</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>((<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5b5b9eb3be9ad636af02da44b718a75f" title="First byte of a network message.">MessageID</a>) ID_RPC4_RETURN);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                returnData.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a4868f40943c8e349500ec6de3a69df20" title="Sets the read pointer back to the beginning of your data.">ResetReadPointer</a>();</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a1083ab999b52c839709eab5cff65a68d" title="Align the next write and/or read to a byte boundary.">AlignWriteToByteBoundary</a>();</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                out.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(returnData);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#aa9c79c0d16ece39114231d680190d39a">SendUnified</a>(&amp;out,<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#a659378374e516180f93640c79f59705ca416b3a41b78a58a7a5a6ee24d628e456" title="The highest possible priority. These message trigger sends immediately, and are generally not buffere...">IMMEDIATE_PRIORITY</a>,<a class="code" href="../../d7/d03/_packet_priority_8h.xhtml#ae41fa01235e99dced384d137fa874a7eaff2d39b163bcf3e142744962bfb0849f">RELIABLE_ORDERED</a>,0,packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>,<span class="keyword">false</span>);</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        }</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[1]==ID_RPC4_SIGNAL)</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> sharedIdentifier;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            bsIn.ReadCompressed(sharedIdentifier);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> functionIndex;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            functionIndex = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(sharedIdentifier);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            SLNet::BitStream serializedParameters;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e" title="Align the next write and/or read to a byte boundary.">AlignReadToByteBoundary</a>();</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            bsIn.Read(&amp;serializedParameters);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a6ac33fb920cab36b21a2ceb58f91d4dc">InvokeSignal</a>(functionIndex, &amp;serializedParameters, packet);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        }</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        {</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[1]==ID_RPC4_RETURN);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ada24147085c7bdf3612df36348863c39">blockingReturnValue</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#aab4381d8b4a48dbc8e2975dba894f350" title="Resets the bitstream for reuse.">Reset</a>();</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#ada24147085c7bdf3612df36348863c39">blockingReturnValue</a>.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a2d1187ee508dc9d231d27aed1867d201" title="Write any integral type to a bitstream.">Write</a>(bsIn);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a42c6def740ccc00e4e43d3654ec91aa8">gotBlockingReturnValue</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        }</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        </div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a9f27ed7ccb7513dceb7ed4da3d99a1bf" title="The plugin used this message and it shouldn&#39;t be given to the user.">RR_STOP_PROCESSING_AND_DEALLOCATE</a>;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    }</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordtype">bool</span> objectExists;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, index2;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    index = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>.<a class="code" href="../../da/dfc/class_data_structures_1_1_ordered_list.xhtml#a54b7abdd81f650f9d1755a4fd56b1aaa">GetIndexFromKey</a>(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>[0],&amp;objectExists);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordflow">if</span> (objectExists)</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    {</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        LocalCallback *lc;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        lc = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a3d27be774422190974d5fe9bffe3f7a1">localCallbacks</a>[index];</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keywordflow">for</span> (index2=0; index2 &lt; lc-&gt;functions.Size(); index2++)</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        {</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            SLNet::BitStream bsIn(packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aff6d115daef2787d582f9a20efd64fc0" title="The data from the sender.">data</a>, packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a75dfd0a23cc4c14dd338caedabe19341" title="The length of the data in bytes.">length</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            <a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> skhi = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(lc-&gt;functions[index2].C_String());</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="keywordflow">if</span> (skhi.<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml#a5d5347b85316db1181a65fc05a388460">IsInvalid</a>()==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            {</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                void ( *fp ) (SLNet::BitStream *, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> * );</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                fp = <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a931e229b11729ab1d674aff512092d6e">registeredNonblockingFunctions</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#a5fec5e2f5f479ddeebefe9a0ff1c50e4">ItemAtIndex</a>(skhi);</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                bsIn.<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e" title="Align the next write and/or read to a byte boundary.">AlignReadToByteBoundary</a>();</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                fp(&amp;bsIn,packet);</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            }       </div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        }</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    }</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../de/d14/group___p_l_u_g_i_n___i_n_t_e_r_f_a_c_e___g_r_o_u_p.xhtml#gga5c8f613a7c294e0b96deccbdabc38f18a5b5a476b87be78212057efd5535345d4" title="This message will be processed by other plugins, and at last by the user.">RR_CONTINUE_PROCESSING</a>;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;}</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<a class="code" href="../../df/de0/struct_data_structures_1_1_hash_index.xhtml">DataStructures::HashIndex</a> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a99b121d95631c2b115d924301ef0f2db">RPC4::GetLocalSlotIndex</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *sharedIdentifier)</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;{</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/db4/group___r_p_c___p_l_u_g_i_n___g_r_o_u_p.xhtml#a668b14b2e79ab303943992d4c52881aa">localSlots</a>.<a class="code" href="../../d6/d83/class_data_structures_1_1_hash.xhtml#af31d2ff3160e0d7e0275faf0a2e35fb7">GetIndexOf</a>(sharedIdentifier);</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;}</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="preprocessor">#endif // _RAKNET_SUPPORT_*</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d8/dd3/_r_p_c4_plugin_8cpp.xhtml">RPC4Plugin.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/SocketLayer.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d8/d4f/_socket_layer_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SocketLayer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d8/d4f/_socket_layer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2018, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d8/da4/_socket_layer_8h.xhtml" title="SocketLayer class implementation.">slikenet/SocketLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d49/types_8h.xhtml" title="Types used by RakNet, most of which involve user code.">slikenet/types.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d12/peer_8h.xhtml" title="Declares RakPeer class.">slikenet/peer.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d76/_get_time_8h.xhtml" title="Returns the value from QueryPerformanceCounter. This is the function RakNet uses to represent time...">slikenet/GetTime.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/dff/_linux_strings_8h.xhtml">slikenet/LinuxStrings.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/ded/_socket_defines_8h.xhtml">slikenet/SocketDefines.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/db2/linux__adapter_8h.xhtml">slikenet/linux_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/dff/osx__adapter_8h.xhtml">slikenet/osx_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#if (defined(__GNUC__)  || defined(__GCCXML__)) &amp;&amp; !defined(__WIN32__)</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;netdb.h&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;tchar.h&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#ifndef _T</span></div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#ae936e4c15227768f7da4e0951def89c8">   38</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _T(x) (x)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">#if defined(__native_client__)</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">using namespace pp;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">#endif</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#if USE_SLIDING_WINDOW_CONGESTION_CONTROL!=1</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="../../db/d0d/_c_c_rak_net_u_d_t_8h.xhtml">slikenet/CCRakNetUDT.h</a>&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="../../d0/dfb/_c_c_rak_net_sliding_window_8h.xhtml">slikenet/CCRakNetSlidingWindow.h</a>&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">//SocketLayerOverride *SocketLayer::slo=0;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span> <span class="comment">// memcpy</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include &lt;fcntl.h&gt;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#include &lt;arpa/inet.h&gt;</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#include &lt;errno.h&gt;</span>  <span class="comment">// error numbers</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span> <span class="comment">// RAKNET_DEBUG_PRINTF</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#if !defined(ANDROID)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;ifaddrs.h&gt;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;netinet/in.h&gt;</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#include &lt;net/if.h&gt;</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#include &lt;sys/types.h&gt;</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#include &lt;sys/socket.h&gt;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#include &lt;sys/ioctl.h&gt;</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#if   defined(_WIN32)</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="../../da/d7e/_w_s_a_startup_singleton_8h.xhtml">slikenet/WSAStartupSingleton.h</a>&quot;</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d43/_windows_includes_8h.xhtml">slikenet/WindowsIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d81/sleep_8h.xhtml">slikenet/sleep.h</a>&quot;</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d3e/_itoa_8h.xhtml">slikenet/Itoa.h</a>&quot;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">namespace </span>SLNet</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a82c565d09a5f2e3e376029cffc434bf4">ProcessNetworkPacket</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> systemAddress, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, <span class="keyword">const</span> <span class="keywordtype">int</span> length, <a class="code" href="../../d5/dbf/class_s_l_net_1_1_rak_peer.xhtml" title="Main interface for network communications.">RakPeer</a> *rakPeer, <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a3d01a3c6dcc3c11f0cc5359fe290edc7">SLNet::TimeUS</a> timeRead );</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment">//extern void ProcessNetworkPacket( const SystemAddress systemAddress, const char *data, const int length, RakPeer *rakPeer, RakNetSocket* rakNetSocket, SLNet::TimeUS timeRead );</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">// http://beej.us/guide/bgnet/output/html/singlepage/bgnet.html#ip4to6</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">// http://beej.us/guide/bgnet/output/html/singlepage/bgnet.html#getaddrinfo</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> PrepareAddrInfoHints(addrinfo *hints)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    memset(hints, 0, <span class="keyword">sizeof</span> (addrinfo)); <span class="comment">// make sure the struct is empty</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    hints-&gt;ai_socktype = SOCK_DGRAM; <span class="comment">// UDP sockets</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    hints-&gt;ai_flags = AI_PASSIVE;     <span class="comment">// fill in my IP for me</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor"></span> </div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a6af295a207f6712386df2413eff054d0">  125</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a6af295a207f6712386df2413eff054d0">SocketLayer::SetSocketOptions</a>( <a class="code" href="../../d4/dc5/_socket_includes_8h.xhtml#ad31a77c59d4b8ba8cbd1eac64fbf89e8" title="Unix/Linux uses ints for sockets.">__UDPSOCKET__</a> listenSocket, <span class="keywordtype">bool</span> blockingSocket, <span class="keywordtype">bool</span> setBroadcast)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#ifdef __native_client__</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor"></span>    (void) listenSocket;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">int</span> sock_opt = 1;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// This doubles the max throughput rate</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    sock_opt=1024*256;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#ab59c1f320f096fe127d1180efa7e2b73">setsockopt__</a>(listenSocket, SOL_SOCKET, SO_RCVBUF, ( <span class="keywordtype">char</span> * ) &amp; sock_opt, <span class="keyword">sizeof</span> ( sock_opt ) );</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// Immediate hard close. Don&#39;t linger the socket, or recreating the socket quickly on Vista fails.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// Fail with voice and xbox</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    sock_opt=0;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#ab59c1f320f096fe127d1180efa7e2b73">setsockopt__</a>(listenSocket, SOL_SOCKET, SO_LINGER, ( <span class="keywordtype">char</span> * ) &amp; sock_opt, <span class="keyword">sizeof</span> ( sock_opt ) );</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// This doesn&#39;t make much difference: 10% maybe</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// Not supported on console 2</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    sock_opt=1024*16;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#ab59c1f320f096fe127d1180efa7e2b73">setsockopt__</a>(listenSocket, SOL_SOCKET, SO_SNDBUF, ( <span class="keywordtype">char</span> * ) &amp; sock_opt, <span class="keyword">sizeof</span> ( sock_opt ) );</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (blockingSocket==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> nonblocking = 1;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#a661fb7d6cebc99640c451d25894e57b3">ioctlsocket__</a>(listenSocket, FIONBIO, &amp;nonblocking );</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor"></span>        fcntl( listenSocket, F_SETFL, O_NONBLOCK );</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">if</span> (setBroadcast)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="comment">// Note: Fails with VDP but not xbox</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">// Set broadcast capable</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        sock_opt=1;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#ab59c1f320f096fe127d1180efa7e2b73">setsockopt__</a>(listenSocket, SOL_SOCKET, SO_BROADCAST, ( <span class="keywordtype">char</span> * ) &amp; sock_opt, <span class="keyword">sizeof</span>( sock_opt ) ) == -1 )</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">#if defined(_WIN32) &amp;&amp; defined(_DEBUG)</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#if  !defined(WINDOWS_PHONE_8)</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor"></span>            DWORD dwIOError = GetLastError();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="comment">// On Vista, can get WSAEACCESS (10013)</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="comment">// See http://support.microsoft.com/kb/819124</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="comment">// http://blogs.msdn.com/wndp/archive/2007/03/19/winsock-so-exclusiveaddruse-on-vista.aspx</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="comment">// http://msdn.microsoft.com/en-us/library/ms740621(VS.85).aspx</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            LPTSTR messageBuffer;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                NULL, dwIOError, MAKELANGID( LANG_NEUTRAL, SUBLANG_DEFAULT ),  <span class="comment">// Default language</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                ( LPTSTR ) &amp; messageBuffer, 0, NULL );</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="comment">// something has gone wrong here...</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#a29cf458f7287265fc1b414c3f72fa9ad">RAKNET_DEBUG_TPRINTF</a>( <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#ae936e4c15227768f7da4e0951def89c8">_T</a>(<span class="stringliteral">&quot;setsockopt__(SO_BROADCAST) failed:Error code - %lu\n%s&quot;</span>), dwIOError, messageBuffer );</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="comment">//Free the buffer.</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            LocalFree( messageBuffer );</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#ac30ac77e20e935d094823fa6650cbd3c">  195</a></span>&#160;<a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#ac30ac77e20e935d094823fa6650cbd3c">SocketLayer::GetSubNetForSocketAndIp</a>(<a class="code" href="../../d4/dc5/_socket_includes_8h.xhtml#ad31a77c59d4b8ba8cbd1eac64fbf89e8" title="Unix/Linux uses ints for sockets.">__UDPSOCKET__</a> inSock, <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> inIpString)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> netMaskString;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="../../d2/d66/class_s_l_net_1_1_rak_string.xhtml" title="String class.">SLNet::RakString</a> ipString;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">#if   defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<span class="stringliteral">&quot;Not yet supported&quot;</span> &amp;&amp; 0);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">#elif defined(_WIN32)</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor"></span>    INTERFACE_INFO InterfaceList[20];</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> nBytesReturned;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> (WSAIoctl(inSock, SIO_GET_INTERFACE_LIST, 0, 0, &amp;InterfaceList,</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keyword">sizeof</span>(InterfaceList), &amp;nBytesReturned, 0, 0) == SOCKET_ERROR) {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">int</span> nNumInterfaces = nBytesReturned / <span class="keyword">sizeof</span>(INTERFACE_INFO);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; nNumInterfaces; ++i)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        sockaddr_in *pAddress;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        pAddress = (sockaddr_in *) &amp; (InterfaceList[i].iiAddress);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordtype">char</span> ip[65];</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        inet_ntop(pAddress-&gt;sin_family, &amp;pAddress-&gt;sin_addr, ip, 65);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        ipString = ip;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">if</span> (inIpString==ipString)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            pAddress = (sockaddr_in *) &amp; (InterfaceList[i].iiNetmask);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordtype">char</span> netmaskIP[65];</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            inet_ntop(pAddress-&gt;sin_family, &amp;pAddress-&gt;sin_addr, netmaskIP, 65);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            netMaskString=netmaskIP;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">return</span> netMaskString;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">int</span> fd,fd2;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    fd2 = <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#af9f142186ba41aca27cf6bdd4d118121">socket__</a>(AF_INET, SOCK_DGRAM, 0);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">if</span>(fd2 &lt; 0)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">struct </span>ifconf ifc;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordtype">char</span>          buf[1999];</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    ifc.ifc_len = <span class="keyword">sizeof</span>(buf);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    ifc.ifc_buf = buf;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">if</span>(ioctl(fd2, SIOCGIFCONF, &amp;ifc) &lt; 0)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        close(fd2);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">struct </span>ifreq *ifr;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    ifr         = ifc.ifc_req;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordtype">int</span> intNum = ifc.ifc_len / <span class="keyword">sizeof</span>(<span class="keyword">struct </span>ifreq);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; intNum; i++)</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordtype">char</span> ip[65];</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        inet_ntop(AF_INET, &amp;((<span class="keyword">struct</span> sockaddr_in *)&amp;ifr[i].ifr_addr)-&gt;sin_addr, ip, 65);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        ipString = ip;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">if</span> (inIpString==ipString)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="keyword">struct </span>ifreq ifr2;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            fd = <a class="code" href="../../df/ded/_socket_defines_8h.xhtml#af9f142186ba41aca27cf6bdd4d118121">socket__</a>(AF_INET, SOCK_DGRAM, 0);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordflow">if</span>(fd &lt; 0)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            ifr2.ifr_addr.sa_family = AF_INET;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            strncpy_s(ifr2.ifr_name, IFNAMSIZ, ifr[i].ifr_name, IFNAMSIZ-1);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            ioctl(fd, SIOCGIFNETMASK, &amp;ifr2);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            close(fd);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            close(fd2);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            inet_ntop(AF_INET, &amp;((<span class="keyword">struct</span> sockaddr_in *)&amp;ifr2.ifr_addr)-&gt;sin_addr, ip, 65);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            netMaskString=ip;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">return</span> netMaskString;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    close(fd2);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="preprocessor">#if   defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> GetMyIP_WinRT( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> addresses[<a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>] )</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;{</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="comment">// Perhaps DatagramSocket.BindEndpointAsynch, use localHostName as an empty string, then query what it bound to?</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(<span class="stringliteral">&quot;Not yet supported&quot;</span> &amp;&amp; 0);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;}</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#a706584940b36e1d392ff2c32764d56da">  376</a></span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#a706584940b36e1d392ff2c32764d56da">GetMyIP_Win32</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> addresses[<a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>] )</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;{</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordtype">int</span> idx=0;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    idx=0;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordtype">char</span> ac[ 80 ];</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">if</span> ( gethostname( ac, <span class="keyword">sizeof</span>( ac ) ) == -1 )</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="preprocessor"> #if defined(_WIN32) &amp;&amp; !defined(WINDOWS_PHONE_8)</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="preprocessor"></span>        DWORD dwIOError = GetLastError();</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        LPTSTR messageBuffer;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            NULL, dwIOError, MAKELANGID( LANG_NEUTRAL, SUBLANG_DEFAULT ),  <span class="comment">// Default language</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            ( LPTSTR ) &amp; messageBuffer, 0, NULL );</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="comment">// something has gone wrong here...</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a29cf458f7287265fc1b414c3f72fa9ad">RAKNET_DEBUG_TPRINTF</a>( <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#ae936e4c15227768f7da4e0951def89c8">_T</a>(<span class="stringliteral">&quot;gethostname failed:Error code - %lu\n%s&quot;</span>), dwIOError, messageBuffer );</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="comment">//Free the buffer.</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        LocalFree( messageBuffer );</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="preprocessor">        #endif</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9717e7bbecb906637e86cef6da3d83c2">return</a> ;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    }</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor"></span>    <span class="keyword">struct </span>addrinfo hints;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">struct </span>addrinfo *servinfo=0, *aip;  <span class="comment">// will point to the results</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    PrepareAddrInfoHints(&amp;hints);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    getaddrinfo(ac, <span class="stringliteral">&quot;&quot;</span>, &amp;hints, &amp;servinfo);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordflow">for</span> (idx=0, aip = servinfo; aip != NULL &amp;&amp; idx &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; aip = aip-&gt;ai_next, idx++)</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keywordflow">if</span> (aip-&gt;ai_family == AF_INET)</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keyword">struct </span>sockaddr_in *ipv4 = (<span class="keyword">struct </span>sockaddr_in *)aip-&gt;ai_addr;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            memcpy(&amp;addresses[idx].address.addr4,ipv4,<span class="keyword">sizeof</span>(sockaddr_in));</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <span class="keyword">struct </span>sockaddr_in6 *ipv6 = (<span class="keyword">struct </span>sockaddr_in6 *)aip-&gt;ai_addr;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            memcpy(&amp;addresses[idx].address.addr4,ipv6,<span class="keyword">sizeof</span>(sockaddr_in6));</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    freeaddrinfo(servinfo); <span class="comment">// free the linked-list</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="preprocessor"></span>    <span class="keyword">struct </span>addrinfo *curAddress = NULL;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordtype">int</span> err = getaddrinfo(ac, NULL, NULL, &amp;curAddress);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">if</span> ( err != 0 )</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    {</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="preprocessor">    #if defined(_WIN32) &amp;&amp; !defined(WINDOWS_PHONE_8)</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">int</span> wsaError = WSAGetLastError();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        LPTSTR messageBuffer;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            NULL, wsaError, MAKELANGID( LANG_NEUTRAL, SUBLANG_DEFAULT ),  <span class="comment">// Default language</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            ( LPTSTR ) &amp; messageBuffer, 0, NULL );</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="comment">// something has gone wrong here...</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a29cf458f7287265fc1b414c3f72fa9ad">RAKNET_DEBUG_TPRINTF</a>( <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#ae936e4c15227768f7da4e0951def89c8">_T</a>(<span class="stringliteral">&quot;getaddrinfo failed:Error code - %d\n%s&quot;</span>), wsaError, messageBuffer );</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="comment">//Free the buffer.</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        LocalFree( messageBuffer );</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a9717e7bbecb906637e86cef6da3d83c2">return</a> ;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">while</span> (curAddress != NULL &amp;&amp; idx &lt; MAXIMUM_NUMBER_OF_INTERNAL_IDS)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    {</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordflow">if</span> (curAddress-&gt;ai_family == AF_INET) {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            addresses[idx].address.addr4 = *((<span class="keyword">struct </span>sockaddr_in *)curAddress-&gt;ai_addr);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            ++idx;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        curAddress = curAddress-&gt;ai_next;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="preprocessor">#endif // else RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keywordflow">while</span> (idx &lt; MAXIMUM_NUMBER_OF_INTERNAL_IDS)</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    {</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        addresses[idx]=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        idx++;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    }</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;}</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div>
<div class="line"><a name="l00460"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a0773c1a3f0d3305ab0fbeb459636a3cd">  460</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a0773c1a3f0d3305ab0fbeb459636a3cd">SocketLayer::GetMyIP</a>( <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> addresses[<a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>] )</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;{</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="preprocessor">#if   defined(WINDOWS_STORE_RT)</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="preprocessor"></span>    GetMyIP_WinRT(addresses);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="preprocessor">#elif defined(_WIN32)</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#a706584940b36e1d392ff2c32764d56da">GetMyIP_Win32</a>(addresses);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="preprocessor"></span><span class="comment">//  GetMyIP_Linux(addresses);</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#a706584940b36e1d392ff2c32764d56da">GetMyIP_Win32</a>(addresses);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">unsigned short SocketLayer::GetLocalPort(RakNetSocket *s)</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">    SystemAddress sa;</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">    GetSystemAddress(s,&amp;sa);</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">    return sa.GetPort();</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00487"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a56392265b1a3df68615810b50f03081f">  487</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a56392265b1a3df68615810b50f03081f">SocketLayer::GetLocalPort</a>(<a class="code" href="../../d4/dc5/_socket_includes_8h.xhtml#ad31a77c59d4b8ba8cbd1eac64fbf89e8" title="Unix/Linux uses ints for sockets.">__UDPSOCKET__</a> s)</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;{</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> sa;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a8109590555d9879eaa42b684ed34151a">GetSystemAddress</a>(s,&amp;sa);</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">return</span> sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47" title="Returns the port in host order (this is what you normally use)">GetPort</a>();</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;}</div>
<div class="line"><a name="l00493"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#acf523cb179e4474df714a858f4c655de">  493</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#acf523cb179e4474df714a858f4c655de">SocketLayer::GetSystemAddress_Old</a> ( <a class="code" href="../../d4/dc5/_socket_includes_8h.xhtml#ad31a77c59d4b8ba8cbd1eac64fbf89e8" title="Unix/Linux uses ints for sockets.">__UDPSOCKET__</a> s, <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> *systemAddressOut )</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;{</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="preprocessor">#if defined(__native_client__)</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="preprocessor"></span>    *systemAddressOut = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="preprocessor"></span>    sockaddr_in sa;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    memset(&amp;sa,0,<span class="keyword">sizeof</span>(sockaddr_in));</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    socklen_t len = <span class="keyword">sizeof</span>(sa);</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../df/ded/_socket_defines_8h.xhtml#a99f94f1d975115e4840b488b3af9998f">getsockname__</a>(s, (sockaddr*)&amp;sa, &amp;len)!=0)</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="preprocessor">#if defined(_WIN32) &amp;&amp; defined(_DEBUG) &amp;&amp; !defined(WINDOWS_PHONE_8)</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="preprocessor"></span>        DWORD dwIOError = GetLastError();</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        LPTSTR messageBuffer;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            NULL, dwIOError, MAKELANGID( LANG_NEUTRAL, SUBLANG_DEFAULT ),  <span class="comment">// Default language</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            ( LPTSTR ) &amp; messageBuffer, 0, NULL );</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        <span class="comment">// something has gone wrong here...</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a29cf458f7287265fc1b414c3f72fa9ad">RAKNET_DEBUG_TPRINTF</a>( <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#ae936e4c15227768f7da4e0951def89c8">_T</a>(<span class="stringliteral">&quot;getsockname failed:Error code - %lu\n%s&quot;</span>), dwIOError, messageBuffer );</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="comment">//Free the buffer.</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        LocalFree( messageBuffer );</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="preprocessor"></span>        *systemAddressOut = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    }</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aabe9a3741607e1e6772cae6ed1443ef1">SetPortNetworkOrder</a>(sa.sin_port);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr=sa.sin_addr.s_addr;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">void SocketLayer::GetSystemAddress_Old ( RakNetSocket *s, SystemAddress *systemAddressOut )</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">    return GetSystemAddress_Old(s-&gt;s, systemAddressOut);</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00529"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a8109590555d9879eaa42b684ed34151a">  529</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a8109590555d9879eaa42b684ed34151a">SocketLayer::GetSystemAddress</a> ( <a class="code" href="../../d4/dc5/_socket_includes_8h.xhtml#ad31a77c59d4b8ba8cbd1eac64fbf89e8" title="Unix/Linux uses ints for sockets.">__UDPSOCKET__</a> s, <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> *systemAddressOut )</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;{</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#acf523cb179e4474df714a858f4c655de">GetSystemAddress_Old</a>(s, systemAddressOut);</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="preprocessor"></span>    socklen_t slen;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    sockaddr_storage ss;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    slen = <span class="keyword">sizeof</span>(ss);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../df/ded/_socket_defines_8h.xhtml#a99f94f1d975115e4840b488b3af9998f">getsockname__</a>(s, (<span class="keyword">struct</span> sockaddr *)&amp;ss, &amp;slen)!=0)</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="preprocessor">#if defined(_WIN32) &amp;&amp; defined(_DEBUG)</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="preprocessor"></span>        DWORD dwIOError = GetLastError();</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        LPVOID messageBuffer;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            NULL, dwIOError, MAKELANGID( LANG_NEUTRAL, SUBLANG_DEFAULT ),  <span class="comment">// Default language</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            ( LPTSTR ) &amp; messageBuffer, 0, NULL );</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        <span class="comment">// something has gone wrong here...</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a29cf458f7287265fc1b414c3f72fa9ad">RAKNET_DEBUG_TPRINTF</a>( <a class="code" href="../../d8/d4f/_socket_layer_8cpp.xhtml#ae936e4c15227768f7da4e0951def89c8">_T</a>(<span class="stringliteral">&quot;getsockname failed:Error code - %d\n%s&quot;</span>), dwIOError, static_cast&lt;LPTSTR&gt;(messageBuffer));</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        <span class="comment">//Free the buffer.</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        LocalFree( messageBuffer );</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="preprocessor"></span>        systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(0);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="keywordflow">if</span> (ss.ss_family==AF_INET)</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        memcpy(&amp;systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4,(sockaddr_in *)&amp;ss,<span class="keyword">sizeof</span>(sockaddr_in));</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        <a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a> zero = 0;      </div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keywordflow">if</span> (memcmp(&amp;systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr, &amp;zero, <span class="keyword">sizeof</span>(zero))==0)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aca7760ea7186a59a70697634d9d585d7" title="Call SetToLoopback(), with whatever IP version is currently held. Defaults to IPV4.">SetToLoopback</a>(4);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="comment">//  systemAddressOut-&gt;address.addr4.sin_port=ntohs(systemAddressOut-&gt;address.addr4.sin_port);</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    {</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        memcpy(&amp;systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6,(sockaddr_in6 *)&amp;ss,<span class="keyword">sizeof</span>(sockaddr_in6));</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_port);</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keywordtype">char</span> zero[16];</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        memset(zero,0,<span class="keyword">sizeof</span>(zero));</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">if</span> (memcmp(&amp;systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr, &amp;zero, <span class="keyword">sizeof</span>(zero))==0)</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            systemAddressOut-&gt;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aca7760ea7186a59a70697634d9d585d7" title="Call SetToLoopback(), with whatever IP version is currently held. Defaults to IPV4.">SetToLoopback</a>(6);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="comment">//  systemAddressOut-&gt;address.addr6.sin6_port=ntohs(systemAddressOut-&gt;address.addr6.sin6_port);</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    }</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="preprocessor">#endif // #if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">void SocketLayer::GetSystemAddress ( RakNetSocket *s, SystemAddress *systemAddressOut )</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">    return GetSystemAddress(s-&gt;s, systemAddressOut);</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment">// void SocketLayer::SetSocketLayerOverride(SocketLayerOverride *_slo)</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment">// {</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">//  slo=_slo;</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">// }</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div>
<div class="line"><a name="l00592"></a><span class="lineno"><a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#aa80daf48a0712cfabdcac966a7a60b85">  592</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#aa80daf48a0712cfabdcac966a7a60b85">SocketLayer::GetFirstBindableIP</a>(<span class="keywordtype">char</span> firstBindable[128], <span class="keywordtype">int</span> ipProto)</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;{</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> ipList[ <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a> ];</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <a class="code" href="../../d0/d86/class_s_l_net_1_1_socket_layer.xhtml#a0773c1a3f0d3305ab0fbeb459636a3cd">SocketLayer::GetMyIP</a>( ipList );</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="keywordflow">if</span> (ipProto==AF_UNSPEC)</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    {</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        ipList[0].<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>,firstBindable,static_cast&lt;size_t&gt;(128));</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    }       </div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="comment">// Find the first valid host address</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> l;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">for</span> (l=0; l &lt; <a class="code" href="../../d8/db0/defines_8h.xhtml#aaac58d0b7314b7f900c0045e0c303b80">MAXIMUM_NUMBER_OF_INTERNAL_IDS</a>; l++)</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    {</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="keywordflow">if</span> (ipList[l]==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="keywordflow">if</span> (ipList[l].GetIPVersion()==4 &amp;&amp; ipProto==AF_INET)</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keywordflow">if</span> (ipList[l].GetIPVersion()==6 &amp;&amp; ipProto==AF_INET6)</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    }</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keywordflow">if</span> (l==MAXIMUM_NUMBER_OF_INTERNAL_IDS || ipList[l]==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">//  RAKNET_DEBUG_PRINTF(&quot;%i %i %i %i\n&quot;,</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">//      ((char*)(&amp;ipList[l].address.addr4.sin_addr.s_addr))[0],</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">//      ((char*)(&amp;ipList[l].address.addr4.sin_addr.s_addr))[1],</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">//      ((char*)(&amp;ipList[l].address.addr4.sin_addr.s_addr))[2],</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment">//      ((char*)(&amp;ipList[l].address.addr4.sin_addr.s_addr))[3]</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment">//  );</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    ipList[l].<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>,firstBindable,static_cast&lt;size_t&gt;(128));</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d8/d4f/_socket_layer_8cpp.xhtml">SocketLayer.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/RakNetTypes.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d3/d93/_rak_net_types_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">RakNetTypes.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d3/d93/_rak_net_types_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2019, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d49/types_8h.xhtml" title="Types used by RakNet, most of which involve user code.">slikenet/types.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d43/_windows_includes_8h.xhtml">slikenet/WindowsIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d7e/_w_s_a_startup_singleton_8h.xhtml">slikenet/WSAStartupSingleton.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/ded/_socket_defines_8h.xhtml">slikenet/SocketDefines.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/ded/socket2_8h.xhtml">slikenet/socket2.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#if   defined(_WIN32)</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span><span class="comment">// extern __int64 _strtoui64(const char*, char**, int); // needed for Code::Blocks. Does not compile on Visual Studio 2010</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">// IP_DONTFRAGMENT is different between winsock 1 and winsock 2.  Therefore, Winsock2.h must be linked againt Ws2_32.lib</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">// winsock.h must be linked against WSock32.lib.  If these two are mixed up the flag won&#39;t work correctly</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d43/_windows_includes_8h.xhtml">slikenet/WindowsIncludes.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;sys/socket.h&gt;</span> <span class="comment">// used for getnameinfo()</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;netdb.h&gt;</span>      <span class="comment">// used for getnameinfo()</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;netinet/in.h&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;arpa/inet.h&gt;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d3e/_itoa_8h.xhtml">slikenet/Itoa.h</a>&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d8/da4/_socket_layer_8h.xhtml" title="SocketLayer class implementation.">slikenet/SocketLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/d8e/_super_fast_hash_8h.xhtml">slikenet/SuperFastHash.h</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/db2/linux__adapter_8h.xhtml">slikenet/linux_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/dff/osx__adapter_8h.xhtml">slikenet/osx_adapter.h</a>&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">   52</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">IPV6_LOOPBACK</a>=<span class="stringliteral">&quot;::1&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">   53</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">IPV4_LOOPBACK</a>=<span class="stringliteral">&quot;127.0.0.1&quot;</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a90337530578475cf8c8f5de11ce0e050">   55</a></span>&#160;<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a3b5adf6dcffe406d952738848bf28aef">AddressOrGUID::AddressOrGUID</a>( <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#d8/d23/struct_s_l_net_1_1_packet" title="This represents a user message from another system.">Packet</a> *packet )</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a4f42e82893aff6aade8a45c79d1b8fd3">guid</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>=packet-&gt;<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a5c9d18515892239712a5d8fcb46c4245" title="The system that send this packet.">systemAddress</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a93c682de6a3788535c8ae32218c48e0f">   61</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a93c682de6a3788535c8ae32218c48e0f">AddressOrGUID::ToInteger</a>( <span class="keyword">const</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml">AddressOrGUID</a> &amp;aog )</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span> (aog.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#aa1e55a3223d0e8fe0cbd17051514b579">RakNetGUID::ToUint32</a>(aog.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae283da58448d126c440fee04dfdce2c6" title="Hash the system address.">SystemAddress::ToInteger</a>(aog.<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#ad064cdfb53949eceb3f234c75ce10a5f">   67</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#ad064cdfb53949eceb3f234c75ce10a5f">AddressOrGUID::ToString</a>(<span class="keywordtype">bool</span> writePort)<span class="keyword"> const</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">ToString</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(writePort);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a3dbdb5cec6ea58c25c5faa46045b9fbd">   73</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#ad064cdfb53949eceb3f234c75ce10a5f">AddressOrGUID::ToString</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest)<span class="keyword"> const</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a> != <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">ToString</a>(dest);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(writePort, dest);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a25849292cb3e8bbdf84776ef4774870f">   79</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#ad064cdfb53949eceb3f234c75ce10a5f">AddressOrGUID::ToString</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">size_t</span> destLength)<span class="keyword"> const</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>!=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a586cd1e6fa1a832ad3e584779ea88d80">rakNetGuid</a>.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">ToString</a>(dest,destLength);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da8/struct_s_l_net_1_1_address_or_g_u_i_d.xhtml#a4d7090b1b5269c293f58fee1da43e098">systemAddress</a>.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(writePort,dest,destLength);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a9a4f2de1c5f39778584c24da13b18180">   85</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a9a4f2de1c5f39778584c24da13b18180">SLNet::NonNumericHostString</a>( <span class="keyword">const</span> <span class="keywordtype">char</span> *host )</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// Return false if IP address. Return true if domain</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">while</span> (host[i])</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="comment">// IPV4: natpunch.jenkinssoftware.com</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment">// IPV6: fe80::7c:31f7:fec4:27de%14</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> ((host[i]&gt;=<span class="charliteral">&#39;g&#39;</span> &amp;&amp; host[i]&lt;=<span class="charliteral">&#39;z&#39;</span>) ||</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            (host[i]&gt;=<span class="charliteral">&#39;G&#39;</span> &amp;&amp; host[i]&lt;=<span class="charliteral">&#39;Z&#39;</span>))</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        ++i;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#ac0abdf1976e9bec0993e44324f1b7e37">  101</a></span>&#160;<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#ac0abdf1976e9bec0993e44324f1b7e37">SocketDescriptor::SocketDescriptor</a>() {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">#ifdef __native_client__</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#af96f9bb55b6e7c5f556bd80f93eb49d3">blockingSocket</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#af96f9bb55b6e7c5f556bd80f93eb49d3">blockingSocket</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03ca93a6aa55f7448575c95fcaa86ec9" title="The local port to bind to. Pass 0 to have the OS autoassign a port.">port</a>=0; <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a2133665152ef96d0664cbc02ec8f5225" title="The local network card address to bind to, such as &quot;127.0.0.1&quot;. Pass an empty string to use INADDR_AN...">hostAddress</a>[0]=0; <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a9d6130cd4d3053f0e294bd913296f54f">remotePortRakNetWasStartedOn_PS3_PSP2</a>=0; <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03f4424b2b7052e1979127e5e7f00dc2" title="XBOX only: set IPPROTO_VDP if you want to use VDP. If enabled, this socket does not support broadcast...">extraSocketOptions</a>=0; <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#afbadb84c0b1b00add0083248370d0068">socketFamily</a>=AF_INET;}</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#aab2bd5632b0f25d28186d7de14c71035">  108</a></span>&#160;<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#ac0abdf1976e9bec0993e44324f1b7e37">SocketDescriptor::SocketDescriptor</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> _port, <span class="keyword">const</span> <span class="keywordtype">char</span> *_hostAddress)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">    #ifdef __native_client__</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#af96f9bb55b6e7c5f556bd80f93eb49d3">blockingSocket</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">    #else</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#af96f9bb55b6e7c5f556bd80f93eb49d3">blockingSocket</a>=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a9d6130cd4d3053f0e294bd913296f54f">remotePortRakNetWasStartedOn_PS3_PSP2</a>=0;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03ca93a6aa55f7448575c95fcaa86ec9" title="The local port to bind to. Pass 0 to have the OS autoassign a port.">port</a>=_port;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span> (_hostAddress)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        strcpy_s(<a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a2133665152ef96d0664cbc02ec8f5225" title="The local network card address to bind to, such as &quot;127.0.0.1&quot;. Pass an empty string to use INADDR_AN...">hostAddress</a>, _hostAddress);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a2133665152ef96d0664cbc02ec8f5225" title="The local network card address to bind to, such as &quot;127.0.0.1&quot;. Pass an empty string to use INADDR_AN...">hostAddress</a>[0]=0;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#a03f4424b2b7052e1979127e5e7f00dc2" title="XBOX only: set IPPROTO_VDP if you want to use VDP. If enabled, this socket does not support broadcast...">extraSocketOptions</a>=0;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="../../dc/d06/struct_s_l_net_1_1_socket_descriptor.xhtml#afbadb84c0b1b00add0083248370d0068">socketFamily</a>=AF_INET;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">// Defaults to not in peer to peer mode for NetworkIDs.  This only sends the localSystemAddress portion in the BitStream class</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">// This is what you want for client/server, where the server assigns all NetworkIDs and it is unnecessary to transmit the full structure.</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">// For peer to peer, this will transmit the systemAddress of the system that created the object in addition to localSystemAddress.  This allows</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">// Any system to create unique ids locally.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">// All systems must use the same value for this variable.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">//bool RAK_DLL_EXPORT NetworkID::peerToPeerMode=false;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad32d4ac04f8def766f9c8a937b72d943">  132</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad32d4ac04f8def766f9c8a937b72d943">SystemAddress::operator = </a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; input )</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    memcpy(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>, &amp;input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>, <span class="keyword">sizeof</span>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>));</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a> = input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a> = input.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5915af5dc768047a85938ae1a7a9b034">  139</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5915af5dc768047a85938ae1a7a9b034" title="Returns if two system addresses have the same IP (port is not checked)">SystemAddress::EqualsExcludingPort</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET &amp;&amp; <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr==right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor"></span>        || (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET6 &amp;&amp; memcmp(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, <span class="keyword">sizeof</span>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr))==0)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;#endif</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        ;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47">  147</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47" title="Returns the port in host order (this is what you normally use)">SystemAddress::GetPort</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> ntohs(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a311649e2a5619e10ddfb3585d5874e38">  151</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a311649e2a5619e10ddfb3585d5874e38">SystemAddress::GetPortNetworkOrder</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5f42b847875bcf297eda4ebadeda7abe">  155</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5f42b847875bcf297eda4ebadeda7abe">SystemAddress::SetPortHostOrder</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> s)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port=htons(s);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=s;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aabe9a3741607e1e6772cae6ed1443ef1">  160</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aabe9a3741607e1e6772cae6ed1443ef1">SystemAddress::SetPortNetworkOrder</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> s)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port=s;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(s);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a4663fcb0034686cf46857c39bf45de90">  165</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a4663fcb0034686cf46857c39bf45de90">SystemAddress::operator==</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port == right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port &amp;&amp; <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5915af5dc768047a85938ae1a7a9b034" title="Returns if two system addresses have the same IP (port is not checked)">EqualsExcludingPort</a>(right);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad42f34e7780fa5f102cad67cc1438454">  170</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad42f34e7780fa5f102cad67cc1438454">SystemAddress::operator!=</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> (*<span class="keyword">this</span>==right)==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#abebf47196ae436746197098514854e81">  175</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#abebf47196ae436746197098514854e81">SystemAddress::operator&gt;</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port == right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr&gt;right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">return</span> memcmp(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, <span class="keyword">sizeof</span>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr))&gt;0;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr&gt;right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port&gt;right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a29b81b769ffd8578dd5fd73824b9b803">  190</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a29b81b769ffd8578dd5fd73824b9b803">SystemAddress::operator&lt;</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port == right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr&lt;right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">return</span> memcmp(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, <span class="keyword">sizeof</span>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr))&gt;0;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr&lt;right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port&lt;right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;}</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a095761d85f4ccef00a46c6c5d45d3cc7">  204</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a095761d85f4ccef00a46c6c5d45d3cc7">SystemAddress::size</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(sockaddr_in6) + <span class="keyword">sizeof</span>(<span class="keywordtype">char</span>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(<a class="code" href="../../df/df2/_native_types_8h.xhtml#a6eb1e68cc391dd753bc8ce896dbb8315">uint32_t</a>) + <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>) + <span class="keyword">sizeof</span>(char);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae283da58448d126c440fee04dfdce2c6">  212</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae283da58448d126c440fee04dfdce2c6" title="Hash the system address.">SystemAddress::ToInteger</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;sa )</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lastHash = <a class="code" href="../../d4/dcf/_super_fast_hash_8cpp.xhtml#aa6ecdaa0cb791a159e46b91ad659f8ce">SuperFastHashIncremental</a> ((<span class="keyword">const</span> <span class="keywordtype">char</span>*) &amp; sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port, <span class="keyword">sizeof</span>(sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port), <span class="keyword">sizeof</span>(sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port) );</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d4/dcf/_super_fast_hash_8cpp.xhtml#aa6ecdaa0cb791a159e46b91ad659f8ce">SuperFastHashIncremental</a> ((<span class="keyword">const</span> <span class="keywordtype">char</span>*) &amp; sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr, <span class="keyword">sizeof</span>(sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr), lastHash );</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d4/dcf/_super_fast_hash_8cpp.xhtml#aa6ecdaa0cb791a159e46b91ad659f8ce">SuperFastHashIncremental</a> ((<span class="keyword">const</span> <span class="keywordtype">char</span>*) &amp; sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr, <span class="keyword">sizeof</span>(sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr.s6_addr), lastHash );</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="../../d4/dcf/_super_fast_hash_8cpp.xhtml#aa6ecdaa0cb791a159e46b91ad659f8ce">SuperFastHashIncremental</a> ((<span class="keyword">const</span> <span class="keywordtype">char</span>*) &amp; sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr, <span class="keyword">sizeof</span>(sa.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr), lastHash );</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad5b388ed6b6716d09042dcf3e363733a">  224</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad5b388ed6b6716d09042dcf3e363733a">SystemAddress::GetIPVersion</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">return</span> 4;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">return</span> 6;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;}</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a3e5cd976c057d99cd0cfd972cd9f9789">  230</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a3e5cd976c057d99cd0cfd972cd9f9789">SystemAddress::GetIPPROTO</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">return</span> IPPROTO_IP;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">return</span> IPPROTO_IPV6;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> IPPROTO_IP;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aca7760ea7186a59a70697634d9d585d7">  240</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aca7760ea7186a59a70697634d9d585d7" title="Call SetToLoopback(), with whatever IP version is currently held. Defaults to IPV4.">SystemAddress::SetToLoopback</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aca7760ea7186a59a70697634d9d585d7" title="Call SetToLoopback(), with whatever IP version is currently held. Defaults to IPV4.">SetToLoopback</a>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad5b388ed6b6716d09042dcf3e363733a">GetIPVersion</a>());</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a889998f29cf6e547e5fccd7da2e2c0a6">  244</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aca7760ea7186a59a70697634d9d585d7" title="Call SetToLoopback(), with whatever IP version is currently held. Defaults to IPV4.">SystemAddress::SetToLoopback</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> ipVersion)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;{</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">if</span> (ipVersion==4)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">IPV4_LOOPBACK</a>, 0, ipVersion);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">IPV6_LOOPBACK</a>, 0, ipVersion);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ac9d938134d82e42d216903e2d4bc152f">  255</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ac9d938134d82e42d216903e2d4bc152f">SystemAddress::IsLoopback</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad5b388ed6b6716d09042dcf3e363733a">GetIPVersion</a>()==4)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">// unsigned long l = htonl(address.addr4.sin_addr.s_addr);</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">if</span> (htonl(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr)==2130706433)</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr==0)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keyword">const</span> <span class="keyword">static</span> <span class="keywordtype">char</span> localhost[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span> (memcmp(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6.sin6_addr, localhost, 16)==0)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae6fa77027c7b71489430e9acc6bcdd0c">  275</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae6fa77027c7b71489430e9acc6bcdd0c" title="Old version, for crap platforms that don&#39;t support newer socket functions.">SystemAddress::ToString_Old</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">if</span> (*<span class="keyword">this</span> == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor"></span>        strcpy(dest, <span class="stringliteral">&quot;UNASSIGNED_SYSTEM_ADDRESS&quot;</span>);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordtype">char</span> portStr[2];</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    portStr[0] = portDelineator;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    portStr[1] = 0;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    in_addr in;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    in.s_addr = <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordtype">char</span> buf[1024];</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    inet_ntop(AF_INET, &amp;in, buf, 1024);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor"></span>    strcpy(dest, buf);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (writePort)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="preprocessor"></span>        strcat(dest, portStr);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../db/dad/_itoa_8cpp.xhtml#a60c5047c23d6086e1ee85dea82a26b65">Itoa</a>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47" title="Returns the port in host order (this is what you normally use)">GetPort</a>(), dest + strlen(dest), 10);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a44b753f9891b3e7ca67129b5ba18609d">  308</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae6fa77027c7b71489430e9acc6bcdd0c" title="Old version, for crap platforms that don&#39;t support newer socket functions.">SystemAddress::ToString_Old</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">size_t</span> destLength, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">if</span> (*<span class="keyword">this</span>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        strcpy_s(dest, destLength, <span class="stringliteral">&quot;UNASSIGNED_SYSTEM_ADDRESS&quot;</span>);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordtype">char</span> portStr[2];</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    portStr[0]=portDelineator;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    portStr[1]=0;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    in_addr in;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    in.s_addr = <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    inet_ntop(AF_INET, &amp;in, dest, destLength);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span> (writePort)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        strcat_s(dest, destLength, portStr);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <a class="code" href="../../db/dad/_itoa_8cpp.xhtml#a60c5047c23d6086e1ee85dea82a26b65">Itoa</a>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#afdd4a14b98b7e7b9f69afc30e8fe0d47" title="Returns the port in host order (this is what you normally use)">GetPort</a>(), dest+strlen(dest), 10);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">  330</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">SystemAddress::ToString</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> strIndex=0;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">size_t</span> strLength=INET6_ADDRSTRLEN+5+1;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">size_t</span> strLength=22+5+1;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> <span class="keywordtype">char</span> str[8][strLength];</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> lastStrIndex=strIndex;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    strIndex++;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(writePort, str[lastStrIndex&amp;7], strLength, portDelineator);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">char</span>*) str[lastStrIndex&amp;7];</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> SystemAddress::ToString_New(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordtype">int</span> ret;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    (void)ret;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">if</span> (*<span class="keyword">this</span> == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="preprocessor"></span>        strcpy(dest, <span class="stringliteral">&quot;UNASSIGNED_SYSTEM_ADDRESS&quot;</span>);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    }</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family == AF_INET)</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    {</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        ret = getnameinfo((<span class="keyword">struct</span> sockaddr *) &amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in), dest, 22, NULL, 0, NI_NUMERICHOST);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        ret = getnameinfo((<span class="keyword">struct</span> sockaddr *) &amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in6), dest, INET6_ADDRSTRLEN, NULL, 0, NI_NUMERICHOST);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">if</span> (ret != 0)</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    {</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        dest[0] = 0;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordflow">if</span> (writePort)</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> ch[2];</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        ch[0] = portDelineator;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        ch[1] = 0;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="preprocessor"></span>        strcat(dest, (<span class="keyword">const</span> <span class="keywordtype">char</span>*)ch);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../db/dad/_itoa_8cpp.xhtml#a60c5047c23d6086e1ee85dea82a26b65">Itoa</a>(ntohs(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port), dest + strlen(dest), 10);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordtype">void</span> SystemAddress::ToString_New(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">size_t</span> destLength, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordtype">int</span> ret;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    (void) ret;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keywordflow">if</span> (*<span class="keyword">this</span>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>)</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        strcpy_s(dest, destLength, <span class="stringliteral">&quot;UNASSIGNED_SYSTEM_ADDRESS&quot;</span>);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family==AF_INET)</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    {</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        ret=getnameinfo((<span class="keyword">struct</span> sockaddr *) &amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in), dest, 22, NULL, 0, NI_NUMERICHOST);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        ret=getnameinfo((<span class="keyword">struct</span> sockaddr *) &amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in6), dest, INET6_ADDRSTRLEN, NULL, 0, NI_NUMERICHOST);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordflow">if</span> (ret!=0)</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        dest[0]=0;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    }</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordflow">if</span> (writePort)</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> ch[2];</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        ch[0]=portDelineator;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        ch[1]=0;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        strcat_s(dest, destLength, (<span class="keyword">const</span> <span class="keywordtype">char</span>*) ch);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="../../db/dad/_itoa_8cpp.xhtml#a60c5047c23d6086e1ee85dea82a26b65">Itoa</a>(ntohs(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port), dest+strlen(dest), 10);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;}</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="preprocessor">#endif // #if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00419"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a1ed3718bc19678614905b94c2396edd5">  419</a></span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">SystemAddress::ToString</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae6fa77027c7b71489430e9acc6bcdd0c" title="Old version, for crap platforms that don&#39;t support newer socket functions.">ToString_Old</a>(writePort, dest, portDelineator);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor"></span>    ToString_New(writePort, dest, portDelineator);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="preprocessor">#endif // #if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00427"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a930f9743c27f8c88f4dd445baf2eba39">  427</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">SystemAddress::ToString</a>(<span class="keywordtype">bool</span> writePort, <span class="keywordtype">char</span> *dest, <span class="keywordtype">size_t</span> destLength, <span class="keywordtype">char</span> portDelineator)<span class="keyword"> const</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ae6fa77027c7b71489430e9acc6bcdd0c" title="Old version, for crap platforms that don&#39;t support newer socket functions.">ToString_Old</a>(writePort,dest,destLength,portDelineator);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="preprocessor"></span>    ToString_New(writePort,dest,destLength,portDelineator);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="preprocessor">#endif // #if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00436"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ac8ef76a0c6926f3aa26768ad7d40ed5d">  436</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ac8ef76a0c6926f3aa26768ad7d40ed5d" title="Constructors.">SystemAddress::SystemAddress</a>()</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;{</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="comment">// used for operator ==</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    memset(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>,0,<span class="keyword">sizeof</span>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>)); <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=0;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;}</div>
<div class="line"><a name="l00444"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a28f83756754f6396af6eb22121611247">  444</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ac8ef76a0c6926f3aa26768ad7d40ed5d" title="Constructors.">SystemAddress::SystemAddress</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *str)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;{</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a5f42b847875bcf297eda4ebadeda7abe">SetPortHostOrder</a>(0);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(str);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;}</div>
<div class="line"><a name="l00451"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a942e43d24989def5c1a49c97bb8ecfbe">  451</a></span>&#160;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ac8ef76a0c6926f3aa26768ad7d40ed5d" title="Constructors.">SystemAddress::SystemAddress</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *str, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> port)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">FromStringExplicitPort</a>(str,port);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aac702cdf872b7c57376b2e379845c150">systemIndex</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;}</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div>
<div class="line"><a name="l00495"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">  495</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#aa583d4ecc056ca5430eec9081213d52e">SystemAddress::FixForIPVersion</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a> &amp;boundAddressToSocket)</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;{</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordtype">char</span> str[128];</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a7a994f9c414b5fd7094017b43e7c102b">ToString</a>(<span class="keyword">false</span>,str,static_cast&lt;size_t&gt;(128));</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="comment">// TODO - what about 255.255.255.255?</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keywordflow">if</span> (strcmp(str, <a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">IPV6_LOOPBACK</a>)==0)</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    {</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <span class="keywordflow">if</span> (boundAddressToSocket.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad5b388ed6b6716d09042dcf3e363733a">GetIPVersion</a>()==4)</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">IPV4_LOOPBACK</a>,0,4);</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        }</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    }</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(str, <a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">IPV4_LOOPBACK</a>)==0)</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    {</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (boundAddressToSocket.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ad5b388ed6b6716d09042dcf3e363733a">GetIPVersion</a>()==6)</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        {</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">IPV6_LOOPBACK</a>,0,6);</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">//      if (boundAddressToSocket.GetIPVersion()==4)</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">//          // Some kind of bug with sendto: returns &quot;The requested address is not valid in its context.&quot; if loopback doesn&#39;t have the same IP address</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">//          address.addr4.sin_addr.s_addr=boundAddressToSocket.address.addr4.sin_addr.s_addr;</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    }</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;}</div>
<div class="line"><a name="l00523"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a4de69b4e577f31f50aba4a4d9a7f0a19">  523</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a4de69b4e577f31f50aba4a4d9a7f0a19">SystemAddress::IsLANAddress</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;{</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">//  return address.addr4.sin_addr.S_un.S_un_b.s_b1==10 || address.addr4.sin_addr.S_un.s_b1==192;</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="preprocessor">#if defined(__WIN32__)</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.S_un.S_un_b.s_b1==10 || <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.S_un.S_un_b.s_b1==192;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr &gt;&gt; 24) == 10 || (<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr &gt;&gt; 24) == 192;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00532"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a34071dfa14d9faa8a7e28e6d1491cb92">  532</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a34071dfa14d9faa8a7e28e6d1491cb92" title="Old version, for crap platforms that don&#39;t support newer socket functions.">SystemAddress::SetBinaryAddress</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *str, <span class="keywordtype">char</span> portDelineator)</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;{</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordtype">size_t</span> delimiterPos = 0;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <span class="keywordtype">size_t</span> stringLength = strlen(str);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">for</span> (; delimiterPos &lt; stringLength; ++delimiterPos) {</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        <span class="keywordflow">if</span> (str[delimiterPos] == portDelineator) {</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            <span class="keywordflow">break</span>; <span class="comment">// found location of port delimiter</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        }</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    }</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a9a4f2de1c5f39778584c24da13b18180">NonNumericHostString</a>(str)) {</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="comment">//const char *ip = ( char* ) SocketLayer::DomainNameToIP( str );</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordtype">char</span> ip[65];</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        ip[0]=0;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="comment">// copy the plain hostname (excluding the (optional) port part)</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="comment">// #med - change OP_NEW_ARRAY to support size_t type</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        <span class="keywordtype">char</span>* hostname = OP_NEW_ARRAY&lt;char&gt;(<span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(delimiterPos + 1), <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        strncpy_s(hostname, delimiterPos + 1, str, delimiterPos);</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <a class="code" href="../../d1/dde/class_s_l_net_1_1_rak_net_socket2.xhtml#a5afa9c585a7d5810f2a65933155cf1bb">RakNetSocket2::DomainNameToIP</a>(hostname, ip);</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acd53258ab2c0b731df325c91b2e85c9b">OP_DELETE_ARRAY</a>(hostname, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <span class="keywordflow">if</span> (ip[0] != <span class="charliteral">&#39;\0&#39;</span>) {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            inet_pton(AF_INET, ip, &amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        }</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            *<span class="keyword">this</span> = <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        }</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    }</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="comment">// Split the string into the first part, and the : part</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordtype">char</span> IPPart[22];</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="comment">// Only write the valid parts, don&#39;t change existing if invalid</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        <span class="comment">//  binaryAddress=UNASSIGNED_SYSTEM_ADDRESS.binaryAddress;</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="comment">//  port=UNASSIGNED_SYSTEM_ADDRESS.port;</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <span class="keywordtype">size_t</span> index = 0;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="comment">// #med - revise this --- if the hostname length &gt; 22 we&#39;d reject it rather than skipping what is beyond the max length...</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="keywordflow">for</span> (; index &lt; delimiterPos &amp;&amp; index &lt; 22; ++index) {</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            <span class="keywordflow">if</span> (str[index]!=<span class="charliteral">&#39;.&#39;</span> &amp;&amp; (str[index]&lt;<span class="charliteral">&#39;0&#39;</span> || str[index]&gt;<span class="charliteral">&#39;9&#39;</span>)) {</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            }</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            IPPart[index]=str[index];</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        }</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        IPPart[index]=0;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keywordflow">if</span> (index &gt; 0) {</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            inet_pton(AF_INET, IPPart, &amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_addr.s_addr);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        }</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    }</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keywordtype">char</span> portPart[10];</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    portPart[0] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordflow">if</span> (str[delimiterPos] != <span class="charliteral">&#39;\0&#39;</span>) {</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="keywordtype">size_t</span> portIndex;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        ++delimiterPos; <span class="comment">// skip the delimiter</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        <span class="keywordflow">for</span> (portIndex = 0; portIndex &lt; 10 &amp;&amp; str[delimiterPos] != <span class="charliteral">&#39;\0&#39;</span>; ++delimiterPos, ++portIndex) {</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">if</span> (str[delimiterPos] &lt; <span class="charliteral">&#39;0&#39;</span> || str[delimiterPos] &gt; <span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            }</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            portPart[portIndex] = str[delimiterPos];</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        }</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        portPart[portIndex] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    }</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keywordflow">if</span> (portPart[0] != <span class="charliteral">&#39;\0&#39;</span>) {</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        <span class="comment">// #med - missing / insufficient port range range</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port = htons((<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>)atoi(portPart));</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="comment">// #med - not set in IPv6 mode</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a> = ntohs(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    }</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;}</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div>
<div class="line"><a name="l00605"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">  605</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">SystemAddress::FromString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *str, <span class="keywordtype">char</span> portDelineator, <span class="keywordtype">int</span> ipVersion)</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;{</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="preprocessor"></span>    (void) ipVersion;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a34071dfa14d9faa8a7e28e6d1491cb92" title="Old version, for crap platforms that don&#39;t support newer socket functions.">SetBinaryAddress</a>(str,portDelineator);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (str==0)</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    {</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        memset(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>,0,<span class="keyword">sizeof</span>(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>));</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    }</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">char</span> ipPart[INET6_ADDRSTRLEN];</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">char</span> ipPart[INET_ADDRSTRLEN];</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">char</span> portPart[32];</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="comment">// TODO - what about 255.255.255.255?</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keywordflow">if</span> (ipVersion==4 &amp;&amp; strcmp(str, <a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">IPV6_LOOPBACK</a>)==0)</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    {</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        strcpy_s(ipPart,<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">IPV4_LOOPBACK</a>);</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    }</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ipVersion==6 &amp;&amp; strcmp(str, <a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#aaae5981a4adc4dfbd8fc41aa0e7b3813">IPV4_LOOPBACK</a>)==0)</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET6;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        strcpy_s(ipPart,<a class="code" href="../../d3/d93/_rak_net_types_8cpp.xhtml#a0baa661fa33defa017f8500f9f774990">IPV6_LOOPBACK</a>);</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    }</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keywordtype">int</span> i = 0;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="keywordflow">for</span> (; i &lt; <span class="keyword">sizeof</span>(ipPart) &amp;&amp; str[i] != <span class="charliteral">&#39;\0&#39;</span>; ++i) {</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="keywordflow">if</span> (str[i] == portDelineator) {</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <span class="comment">// #med - missing error checking, if portPart is non-numeric and/or exceeds max allowed port value</span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            <span class="keywordtype">int</span> j = 0;</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            ++i; <span class="comment">// skip the delimiter</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            <span class="keywordflow">for</span> (; j &lt; <span class="keyword">sizeof</span>(portPart) &amp;&amp; str[i] != <span class="charliteral">&#39;\0&#39;</span>; ++i, ++j) {</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                portPart[j] = str[i];</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            }</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            portPart[j] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            i = i - j - 1; <span class="comment">// reset the position to the last position, so the trailing &#39;\0&#39;-terminator is set correctly below</span></div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        }</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        ipPart[i] = str[i];</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    }</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    ipPart[i] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="comment">// needed for getaddrinfo</span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <a class="code" href="../../d4/dcb/class_w_s_a_startup_singleton.xhtml#aec8c21ef29199bcf9be7f3568c8afadf">WSAStartupSingleton::AddRef</a>();</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <span class="comment">// This could be a domain, or a printable address such as &quot;192.0.2.1&quot; or &quot;2001:db8:63b3:1::3490&quot;</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    <span class="comment">// I want to convert it to its binary representation</span></div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    addrinfo hints, *servinfo=0;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    memset(&amp;hints, 0, <span class="keyword">sizeof</span> hints);</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    hints.ai_socktype = SOCK_DGRAM;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <span class="keywordflow">if</span> (ipVersion==6)</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        hints.ai_family = AF_INET6;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ipVersion==4)</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        hints.ai_family = AF_INET;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        hints.ai_family = AF_UNSPEC;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    getaddrinfo(ipPart, <span class="stringliteral">&quot;&quot;</span>, &amp;hints, &amp;servinfo);</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keywordflow">if</span> (servinfo==0)</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    {</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        <span class="keywordflow">if</span> (ipVersion==6)</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        {</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            ipVersion=4;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            hints.ai_family = AF_UNSPEC;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;            getaddrinfo(ipPart, <span class="stringliteral">&quot;&quot;</span>, &amp;hints, &amp;servinfo);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordflow">if</span> (servinfo==0)</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        }</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    }</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(servinfo);</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    </div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> oldPort = <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="preprocessor">#if RAKNET_SUPPORT_IPV6==1</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (servinfo-&gt;ai_family == AF_INET)</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    {</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment">//      if (ipVersion==6)</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment">//          address.addr4.sin_family=AF_INET6;</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">//          memset(&amp;address.addr6,0,sizeof(address.addr6));</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment">//          memcpy(address.addr6.sin6_addr.s6_addr+12,&amp;((struct sockaddr_in *)servinfo-&gt;ai_addr)-&gt;sin_addr.s_addr,sizeof(unsigned long));</span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment">//      else</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment">//      {</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;            <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;            memcpy(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4, (<span class="keyword">struct</span> sockaddr_in *)servinfo-&gt;ai_addr,<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in));</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment">//      }</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    }</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    {</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET6;</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        memcpy(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr6, (<span class="keyword">struct</span> sockaddr_in6 *)servinfo-&gt;ai_addr,<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in6));</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    }</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_family=AF_INET4;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    memcpy(&amp;<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4, (<span class="keyword">struct</span> sockaddr_in *)servinfo-&gt;ai_addr,<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in));</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    freeaddrinfo(servinfo); <span class="comment">// free the linked list</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <span class="comment">// needed for getaddrinfo</span></div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <a class="code" href="../../d4/dcb/class_w_s_a_startup_singleton.xhtml#ad33efe86b5377555e3062058b5a4be01">WSAStartupSingleton::Deref</a>();</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="comment">// PORT</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keywordflow">if</span> (portPart[0])</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    {</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port=htons((<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>) atoi(portPart));</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    }</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    {</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port=oldPort;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    }</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="preprocessor">#endif // #if RAKNET_SUPPORT_IPV6!=1</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00727"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089">  727</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a8a7cfd12b532b744d42bad6ed6b5f089" title="Same as FromString(), but you explicitly set a port at the same time.">SystemAddress::FromStringExplicitPort</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *str, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> port, <span class="keywordtype">int</span> ipVersion)</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;{</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <span class="keywordtype">bool</span> b = <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#acdd52cd5981fd1b58ff68ba52a98a13e">FromString</a>(str,(<span class="keywordtype">char</span>) 0,ipVersion);</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keywordflow">if</span> (b==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    {</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        *<span class="keyword">this</span>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#acea7714c995aae0e1feaf79c9e7f073d" title="Index of an invalid SystemAddress.">UNASSIGNED_SYSTEM_ADDRESS</a>;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    }</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port=htons(port);</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=ntohs(<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port);</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;}</div>
<div class="line"><a name="l00739"></a><span class="lineno"><a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a9750eb4a3b71d71ff00d6ed856a1c5c9">  739</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a9750eb4a3b71d71ff00d6ed856a1c5c9" title="Copy the port from another SystemAddress structure.">SystemAddress::CopyPort</a>( <span class="keyword">const</span> <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml" title="Network address for a system.">SystemAddress</a>&amp; right )</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;{</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port=right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#ab9652ec65cfbbf702d84ff340b12da47">address</a>.addr4.sin_port;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>=right.<a class="code" href="../../d8/dbe/struct_s_l_net_1_1_system_address.xhtml#a2707e26293ed8eabfb8a699ac24ce14e" title="This is not used internally, but holds a copy of the port held in the address union, so for debugging it&#39;s easier to check what port is being held.">debugPort</a>;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;}</div>
<div class="line"><a name="l00744"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#adb747346200d7e4248b4ade6f4a5df7a">  744</a></span>&#160;<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#adb747346200d7e4248b4ade6f4a5df7a">RakNetGUID::RakNetGUID</a>()</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;{</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a9d09e90ad5c76fec6bdb98ede4a05cd5">systemIndex</a>=(<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#aaebbed028894590d770e7fcf8518c441">SystemIndex</a>)-1;</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    *<span class="keyword">this</span>=<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>;</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;}</div>
<div class="line"><a name="l00749"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a6ffd87fdc84ae4f43842eed310383f68">  749</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a6ffd87fdc84ae4f43842eed310383f68">RakNetGUID::operator==</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>==right.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>;</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;}</div>
<div class="line"><a name="l00753"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a56426e0065a2ac3f0f2f26aa228279c5">  753</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a56426e0065a2ac3f0f2f26aa228279c5">RakNetGUID::operator!=</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>!=right.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>;</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;}</div>
<div class="line"><a name="l00757"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a547920662d1988c788b33e0bec0808da">  757</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a547920662d1988c788b33e0bec0808da">RakNetGUID::operator &gt; </a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a> &gt; right.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>;</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;}</div>
<div class="line"><a name="l00761"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a5eaea76f4fa509471f648ad6e24609f2">  761</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a5eaea76f4fa509471f648ad6e24609f2">RakNetGUID::operator &lt; </a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a>&amp; right )<span class="keyword"> const</span></div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a> &lt; right.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>;</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;}</div>
<div class="line"><a name="l00765"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">  765</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">RakNetGUID::ToString</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> strIndex=0;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">char</span> str[8][64];</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> lastStrIndex=strIndex;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    strIndex++;</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">ToString</a>(str[lastStrIndex&amp;7], 64);</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <span class="keywordflow">return</span> (<span class="keywordtype">char</span>*) str[lastStrIndex&amp;7];</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;}</div>
<div class="line"><a name="l00775"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#aa77f22bcdd49698ea6f5d864f30f9283">  775</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">RakNetGUID::ToString</a>(<span class="keywordtype">char</span> *dest)<span class="keyword"> const</span></div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <span class="keywordflow">if</span> (*<span class="keyword">this</span> == <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="preprocessor"></span>        strcpy(dest, <span class="stringliteral">&quot;UNASSIGNED_RAKNET_GUID&quot;</span>);</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        <span class="comment">//sprintf_s(dest, destLength, &quot;%u.%u.%u.%u.%u.%u&quot;, g[0], g[1], g[2], g[3], g[4], g[5]);</span></div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning(disable:4996)</span></div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;<span class="preprocessor"></span>        sprintf(dest, <span class="stringliteral">&quot;%&quot;</span> <a class="code" href="../../d9/d49/types_8h.xhtml#a123f55e39d7666a55ea7bae5b2beaf7c">PRINTF_64_BIT_MODIFIER</a> <span class="stringliteral">&quot;u&quot;</span>, (<span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>);</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="preprocessor"></span>        <span class="comment">// sprintf_s(dest, destLength, &quot;%u.%u.%u.%u.%u.%u&quot;, g[0], g[1], g[2], g[3], g[4], g[5]);</span></div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;}</div>
<div class="line"><a name="l00790"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#ac81ebf55a3d80f2eeab0b740d947c127">  790</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a3338612fd4cc4d26497d7fa27ee19d87">RakNetGUID::ToString</a>(<span class="keywordtype">char</span> *dest, <span class="keywordtype">size_t</span> destLength)<span class="keyword"> const</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordflow">if</span> (*<span class="keyword">this</span>==<a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a242c86300509ec068e5e2ea534bbba51">UNASSIGNED_RAKNET_GUID</a>)</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        strcpy_s(dest, destLength, <span class="stringliteral">&quot;UNASSIGNED_RAKNET_GUID&quot;</span>);</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="comment">//sprintf_s(dest, destLength, &quot;%u.%u.%u.%u.%u.%u&quot;, g[0], g[1], g[2], g[3], g[4], g[5]);</span></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        sprintf_s(dest, destLength, <span class="stringliteral">&quot;%&quot;</span> <a class="code" href="../../d9/d49/types_8h.xhtml#a123f55e39d7666a55ea7bae5b2beaf7c">PRINTF_64_BIT_MODIFIER</a> <span class="stringliteral">&quot;u&quot;</span>, (<span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>);</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        <span class="comment">// sprintf_s(dest, destLength, &quot;%u.%u.%u.%u.%u.%u&quot;, g[0], g[1], g[2], g[3], g[4], g[5]);</span></div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;}</div>
<div class="line"><a name="l00799"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a7baa2a578f53f69cb6d4775d68511217">  799</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a7baa2a578f53f69cb6d4775d68511217">RakNetGUID::FromString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source)</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;{</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keywordflow">if</span> (source==0)</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="preprocessor">#if   defined(WIN32)</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="preprocessor"></span>    <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>=_strtoui64(source, NULL, 10);</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="preprocessor"></span>    <span class="comment">// Changed from g=strtoull(source,0,10); for android</span></div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a>=strtoull(source, (<span class="keywordtype">char</span> **)NULL, 10);</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;}</div>
<div class="line"><a name="l00817"></a><span class="lineno"><a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#aa1e55a3223d0e8fe0cbd17051514b579">  817</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#aa1e55a3223d0e8fe0cbd17051514b579">RakNetGUID::ToUint32</a>( <span class="keyword">const</span> <a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml">RakNetGUID</a> &amp;g )</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;{</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    <span class="keywordflow">return</span> ((<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>) (g.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a> &gt;&gt; 32)) ^ ((<span class="keywordtype">unsigned</span> long) (g.<a class="code" href="../../dd/d3f/struct_s_l_net_1_1_rak_net_g_u_i_d.xhtml#a4e529b54617b8fdfd21da8aca09f88e2">g</a> &amp; 0xFFFFFFFF));</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d3/d93/_rak_net_types_8cpp.xhtml">RakNetTypes.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:47 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

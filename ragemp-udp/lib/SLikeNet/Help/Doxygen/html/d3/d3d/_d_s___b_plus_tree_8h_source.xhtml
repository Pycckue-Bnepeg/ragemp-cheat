<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/include/slikenet/DS_BPlusTree.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d3/d3d/_d_s___b_plus_tree_8h_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DS_BPlusTree.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d3/d3d/_d_s___b_plus_tree_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2016-2018, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef __B_PLUS_TREE_CPP</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __B_PLUS_TREE_CPP</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d7e/_d_s___memory_pool_8h.xhtml">DS_MemoryPool.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d8d/_d_s___queue_8h.xhtml">DS_Queue.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/dbd/_export_8h.xhtml">Export.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// Java</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// http://www.seanster.com/BplusTree/BplusTree.html</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">// Overview</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">// http://babbage.clarku.edu/~achou/cs160/B+Trees/B+Trees.htm</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">// Deletion</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// http://dbpubs.stanford.edu:8090/pub/1995-19</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning( push )</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/dc5/memoryoverride_8h.xhtml" title="If _USE_RAK_MEMORY_OVERRIDE is defined, memory allocations go through rakMalloc, rakRealloc, and rakFree.">memoryoverride.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>DataStructures</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml">   50</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a> <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page</a></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// We use the same data structure for both leaf and index nodes.  </span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment">// It uses a little more memory for index nodes but reduces</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="comment">// memory fragmentation, allocations, and deallocations.</span></div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">   55</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="comment">// Used for both leaf and index nodes.</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="comment">// For a leaf it means the number of elements in data</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment">// For an index it means the number of keys and is one less than the number of children pointers.</span></div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">   60</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">// Used for both leaf and index nodes.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">   63</a></span>&#160;        KeyType keys[order];</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">// Used only for leaf nodes.  Data is the actual data, while next is the pointer to the next leaf (for B+)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">   66</a></span>&#160;        DataType data[order];</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">   67</a></span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a89e79b7e9bae6c2320349677f460250d">   68</a></span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a89e79b7e9bae6c2320349677f460250d">previous</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment">// Used only for index nodes.  Pointers to the children of this node.</span></div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">   71</a></span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page</a> *children[order+1];</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    };</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">   77</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../db/dbd/_export_8h.xhtml#ab0579394e418800d5c85e46ad6fcd61d">RAK_DLL_EXPORT</a> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">BPlusTree</a></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">   80</a></span>&#160;        <span class="keyword">struct </span><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        {</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">   82</a></span>&#160;            KeyType <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">   83</a></span>&#160;            KeyType <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">key2</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keyword">enum</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            {</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198a382e3f55c4a41637787862738c82d236">   86</a></span>&#160;                <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198a382e3f55c4a41637787862738c82d236">NO_ACTION</a>,</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198a1f5eb88033829d5565e1fea03a098cd1">   87</a></span>&#160;                <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198a1f5eb88033829d5565e1fea03a098cd1">REPLACE_KEY1_WITH_KEY2</a>,</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198aca6fe1052b01f0a21b8329401739abd2">   88</a></span>&#160;                <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198aca6fe1052b01f0a21b8329401739abd2">PUSH_KEY_TO_PARENT</a>,</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198ac64781786ba5e95a70a905a74c0d3d7d">   89</a></span>&#160;                <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a384f88433f4da848a0145e79f9941198ac64781786ba5e95a70a905a74c0d3d7d">SET_BRANCH_KEY</a>,</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            } action; <span class="comment">// 0=none, 1=replace key1 with key2</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        };</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">BPlusTree</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        ~<a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml">BPlusTree</a>();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordtype">void</span> SetPoolPageSize(<span class="keywordtype">int</span> size); <span class="comment">// Set the page size for the memory pool.  Optionsl</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordtype">bool</span> Get(<span class="keyword">const</span> KeyType key, DataType &amp;out) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordtype">bool</span> Delete(<span class="keyword">const</span> KeyType key);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordtype">bool</span> Delete(<span class="keyword">const</span> KeyType key, DataType &amp;out);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordtype">bool</span> Insert(<span class="keyword">const</span> KeyType key, <span class="keyword">const</span> DataType &amp;data);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordtype">unsigned</span> Size(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordtype">bool</span> IsEmpty(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *GetListHead(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        DataType GetDataHead(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordtype">void</span> PrintLeaves(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordtype">void</span> ForEachLeaf(<span class="keywordtype">void</span> (*func)(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> * leaf, <span class="keywordtype">int</span> index));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordtype">void</span> ForEachData(<span class="keywordtype">void</span> (*func)(DataType input, <span class="keywordtype">int</span> index));</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordtype">void</span> PrintGraph(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordtype">void</span> ValidateTreeRecursive(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordtype">void</span> DeleteFromPageAtIndex(<span class="keyword">const</span> <span class="keywordtype">int</span> index, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> PrintLeaf(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> * leaf, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordtype">void</span> FreePages(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordtype">bool</span> GetIndexOf(<span class="keyword">const</span> KeyType key, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *page, <span class="keywordtype">int</span> *out) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordtype">void</span> ShiftKeysLeft(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordtype">bool</span> CanRotateLeft(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordtype">bool</span> CanRotateRight(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordtype">void</span> RotateRight(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex, ReturnAction *returnAction);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordtype">void</span> RotateLeft(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex, ReturnAction *returnAction);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* InsertIntoNode(<span class="keyword">const</span> KeyType key, <span class="keyword">const</span> DataType &amp;childData, <span class="keywordtype">int</span> insertionIndex, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *nodeData, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, ReturnAction* returnAction);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* InsertBranchDown(<span class="keyword">const</span> KeyType key, <span class="keyword">const</span> DataType &amp;data,<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, ReturnAction* returnAction, <span class="keywordtype">bool</span> *success);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* GetLeafFromKey(<span class="keyword">const</span> KeyType key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordtype">bool</span> FindDeleteRebalance(<span class="keyword">const</span> KeyType key, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">bool</span> *underflow, KeyType rightRootKey, ReturnAction *returnAction, DataType &amp;out);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordtype">bool</span> FixUnderflow(<span class="keywordtype">int</span> branchIndex, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, KeyType rightRootKey, ReturnAction *returnAction);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordtype">void</span> ShiftNodeLeft(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordtype">void</span> ShiftNodeRight(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a204cdd55060f14a2e5dbbaa4768859df">  128</a></span>&#160;        <a class="code" href="../../de/df9/class_data_structures_1_1_memory_pool.xhtml">MemoryPool&lt;Page&lt;KeyType, DataType, order&gt;</a> &gt; <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a204cdd55060f14a2e5dbbaa4768859df">pagePool</a>;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a6a2002e71af1cfd4abc759c63bfc768e">  129</a></span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *<a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a6a2002e71af1cfd4abc759c63bfc768e">root</a>, *leftmostLeaf;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    };</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aa4fcd5d47b25f14f3706ab5df65a9adb">  133</a></span>&#160;        <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aa4fcd5d47b25f14f3706ab5df65a9adb">BPlusTree&lt;KeyType, DataType, order&gt;::BPlusTree</a> ()</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(order&gt;1);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        root=0;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        leftmostLeaf=0;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae36690037c364d6152bc422c75e337e4">  140</a></span>&#160;        <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae36690037c364d6152bc422c75e337e4">BPlusTree&lt;KeyType, DataType, order&gt;::~BPlusTree</a> ()</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        Clear();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aa0ecdf41d260dd15cf57dec86052f35f">  145</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aa0ecdf41d260dd15cf57dec86052f35f">BPlusTree&lt;KeyType, DataType, order&gt;::SetPoolPageSize</a>(<span class="keywordtype">int</span> size)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        pagePool.SetPageSize(size);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aee8a1b00f0ed25dc368dd464364a0098">  150</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aee8a1b00f0ed25dc368dd464364a0098">BPlusTree&lt;KeyType, DataType, order&gt;::Get</a>(<span class="keyword">const</span> KeyType key, DataType &amp;out)<span class="keyword"> const</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">if</span> (root==0)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* leaf = GetLeafFromKey(key);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordtype">int</span> childIndex;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> (GetIndexOf(key, leaf, &amp;childIndex))</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            out=leaf-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[childIndex];</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a5ff8a5876ab576982650b7fb02205a48">  166</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a5ff8a5876ab576982650b7fb02205a48">BPlusTree&lt;KeyType, DataType, order&gt;::DeleteFromPageAtIndex</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> index, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">for</span> (i=index; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1; i++)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i+1];</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a35e6652907f33d8d77bdbdfbbddac127">if</a> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">for</span> (i=index; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1; i++)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i+1];</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">for</span> (i=index; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1; i++)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i+1]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i+2];</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a93480fa15a725c118927b4348eaa3197">  184</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a93480fa15a725c118927b4348eaa3197">BPlusTree&lt;KeyType, DataType, order&gt;::Delete</a>(<span class="keyword">const</span> KeyType key)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        DataType temp;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">return</span> Delete(key, temp);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a090dbcd47c705a995e5b1c8edef2c95c">  190</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a93480fa15a725c118927b4348eaa3197">BPlusTree&lt;KeyType, DataType, order&gt;::Delete</a>(<span class="keyword">const</span> KeyType key, DataType &amp;out)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">if</span> (root==0)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> returnAction;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        returnAction.<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::NO_ACTION;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordtype">int</span> childIndex;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordtype">bool</span> underflow=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">if</span> (root==leftmostLeaf)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">if</span> (GetIndexOf(key, root, &amp;childIndex)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            out=root-&gt;data[childIndex];</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            DeleteFromPageAtIndex(childIndex,root);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">if</span> (root-&gt;size==0)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                pagePool.Release(root, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                root=0;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                leftmostLeaf=0;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (FindDeleteRebalance(key, root, &amp;underflow,root-&gt;keys[0], &amp;returnAction, out)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">//      RakAssert(returnAction.action==ReturnAction::NO_ACTION);</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span> (underflow &amp;&amp; root-&gt;size==0)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="comment">// Move the root down.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *oldRoot=root;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            root=root-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0];</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            pagePool.Release(oldRoot, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="comment">// memset(oldRoot,0,sizeof(root));</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        }       </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a62ad6d18868d637a258a0cd0b26b5e73">  230</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a62ad6d18868d637a258a0cd0b26b5e73">BPlusTree&lt;KeyType, DataType, order&gt;::FindDeleteRebalance</a>(<span class="keyword">const</span> KeyType key, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">bool</span> *underflow, KeyType rightRootKey, <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> *returnAction, DataType &amp;out)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="comment">// Get index of child to follow.</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordtype">int</span> branchIndex, childIndex;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">if</span> (GetIndexOf(key, cur, &amp;childIndex))</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            branchIndex=childIndex+1;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            branchIndex=childIndex;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">// If child is not a leaf, call recursively</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="keywordflow">if</span> (branchIndex&lt;cur-&gt;size)</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                rightRootKey=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex]; <span class="comment">// Shift right to left</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                rightRootKey=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]; <span class="comment">// Shift center to left</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordflow">if</span> (FindDeleteRebalance(key, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], underflow, rightRootKey, returnAction, out)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="comment">// Call again in case the root key changed</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="keywordflow">if</span> (branchIndex&lt;cur-&gt;size)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                rightRootKey=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex]; <span class="comment">// Shift right to left</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                rightRootKey=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]; <span class="comment">// Shift center to left</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">if</span> (returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>==ReturnAction::SET_BRANCH_KEY &amp;&amp; branchIndex!=childIndex)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::NO_ACTION;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[childIndex]=returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keywordflow">if</span> (branchIndex&lt;cur-&gt;size)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    rightRootKey=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex]; <span class="comment">// Shift right to left</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    rightRootKey=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]; <span class="comment">// Shift center to left</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="comment">// If child is a leaf, get the index of the key.  If the item is not found, cancel delete.</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">if</span> (GetIndexOf(key, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], &amp;childIndex)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="comment">// Delete:</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="comment">// Remove childIndex from the child at branchIndex</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            out=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[childIndex];</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            DeleteFromPageAtIndex(childIndex, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">if</span> (childIndex==0)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keywordflow">if</span> (branchIndex&gt;0)</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keywordflow">if</span> (branchIndex==0)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::SET_BRANCH_KEY;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                }               </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a> &lt; order/2)</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                *underflow=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                *underflow=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">// Fix underflow:</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">if</span> (*underflow)</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            *underflow=FixUnderflow(branchIndex, cur, rightRootKey, returnAction);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aee940b30b35605a776913b81ebed718f">  305</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aee940b30b35605a776913b81ebed718f">BPlusTree&lt;KeyType, DataType, order&gt;::FixUnderflow</a>(<span class="keywordtype">int</span> branchIndex, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, KeyType rightRootKey, <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> *returnAction)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="comment">// Borrow from a neighbor that has excess.</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *source;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *dest;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">if</span> (branchIndex&gt;0 &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex-1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a> &gt; order/2)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            dest=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex];</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            source=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex-1];</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="comment">// Left has excess</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            ShiftNodeRight(dest);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span> (dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1];</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[0]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1];</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>];</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1];</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            <span class="comment">// Update the parent key for the child (middle)</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1];</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="comment">//      if (branchIndex==0)</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">//      {</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="comment">//          returnAction-&gt;action=ReturnAction::SET_BRANCH_KEY;</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="comment">//          returnAction-&gt;key1=dest-&gt;keys[0];</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="comment">//      }</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="comment">// No underflow</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (branchIndex&lt;cur-&gt;size &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex+1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a> &gt; order/2)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            dest=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex];</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            source=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex+1];</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="comment">// Right has excess</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">if</span> (dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            {</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[0];</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                <span class="comment">// The first key in the leaf after shifting is the parent key for the right branch</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[1];</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="preprocessor"></span>                <span class="keywordflow">if</span> (order&lt;=3 &amp;&amp; dest-&gt;size==0)</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                {</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                    <span class="keywordflow">if</span> (branchIndex==0)</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                    {</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::SET_BRANCH_KEY;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                    }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                        cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                <span class="keywordflow">if</span> (returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>==ReturnAction::NO_ACTION)</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::SET_BRANCH_KEY;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                }</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                </div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=rightRootKey;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0];</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                <span class="comment">// The shifted off key is the leftmost key for a node</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            ShiftNodeLeft(source);</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="comment">//cur-&gt;keys[branchIndex]=source-&gt;keys[0];</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">//          returnAction-&gt;action=ReturnAction::SET_BRANCH_KEY;</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">//          returnAction-&gt;key1=dest-&gt;keys[dest-&gt;size-1];</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="comment">// No underflow</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        }</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        {</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordtype">int</span> sourceIndex;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            <span class="comment">// If no neighbors have excess, merge two branches.</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="comment">//</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="comment">// To merge two leaves, just copy the data and keys over.</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="comment">//</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="comment">// To merge two branches, copy the pointers and keys over, using rightRootKey as the key for the extra pointer</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordflow">if</span> (branchIndex&lt;cur-&gt;size)</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="comment">// Merge right child to current child and delete right child.</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                dest=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex];</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                source=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex+1];</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            }</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="comment">// Move current child to left and delete current child</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                dest=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex-1];</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                source=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex];</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="comment">// Merge</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">if</span> (dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                <span class="keywordflow">for</span> (sourceIndex=0; sourceIndex&lt;source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; sourceIndex++)</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                    dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[sourceIndex];</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[sourceIndex];</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            }</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            {</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="comment">// We want the tree root key of the source, not the current.</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=rightRootKey;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++ + 1]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0];</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                <span class="keywordflow">for</span> (sourceIndex=0; sourceIndex&lt;source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; sourceIndex++)</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[sourceIndex];</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                    dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++ + 1]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[sourceIndex + 1];</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            }</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning( disable : 4127 ) // warning C4127: conditional expression is constant</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="preprocessor"></span>            <span class="keywordflow">if</span> (order&lt;=3 &amp;&amp; branchIndex&gt;0 &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>) <span class="comment">// With order==2 it is possible to delete data[0], which is not possible with higher orders.</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordflow">if</span> (branchIndex&lt;cur-&gt;size)</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            {</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                <span class="comment">// Update the parent key, removing the source (right)</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                DeleteFromPageAtIndex(branchIndex, cur);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            }</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            {</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">if</span> (branchIndex&gt;0)</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                {</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                    <span class="comment">// Update parent key, removing the source (current)</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                    DeleteFromPageAtIndex(branchIndex-1, cur);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                }</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            }</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordflow">if</span> (branchIndex==0 &amp;&amp; dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            {</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::SET_BRANCH_KEY;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            }</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">if</span> (source==leftmostLeaf)</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                leftmostLeaf=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            <span class="keywordflow">if</span> (source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                <span class="keywordflow">if</span> (source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a89e79b7e9bae6c2320349677f460250d">previous</a>)</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                    source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a89e79b7e9bae6c2320349677f460250d">previous</a>-&gt;next=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <span class="keywordflow">if</span> (source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>)</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                    source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>-&gt;previous=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a89e79b7e9bae6c2320349677f460250d">previous</a>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            }           </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            <span class="comment">// Free the source node</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            pagePool.Release(source, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="comment">// memset(source,0,sizeof(root));</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            <span class="comment">// Return underflow or not of parent.</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            <span class="keywordflow">return</span> cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a> &lt; order/2;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        }</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00485"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae83f0e9a65601d1eb9136fd0c38efb80">  485</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae83f0e9a65601d1eb9136fd0c38efb80">BPlusTree&lt;KeyType, DataType, order&gt;::ShiftNodeRight</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur)</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    {</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">for</span> (i=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i&gt;0; i--)</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i-1];</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        {</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">for</span> (i=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i&gt;0; i--)</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i-1];</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        {</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <span class="keywordflow">for</span> (i=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1; i&gt;0; i--)</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i-1];</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    }</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00504"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ad6f6b2ccc94f4ec8bf4e5ac5c96a5f67">  504</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ad6f6b2ccc94f4ec8bf4e5ac5c96a5f67">BPlusTree&lt;KeyType, DataType, order&gt;::ShiftNodeLeft</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur)</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    {</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1; i++)</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i+1];</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a35e6652907f33d8d77bdbdfbbddac127">if</a> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        {</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i++)</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i+1];</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i++)</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i+1];</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00522"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#adba3c8c7e7fb630a52ed41350dde27ea">  522</a></span>&#160;    <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#adba3c8c7e7fb630a52ed41350dde27ea">BPlusTree&lt;KeyType, DataType, order&gt;::InsertIntoNode</a>(<span class="keyword">const</span> KeyType key, <span class="keyword">const</span> DataType &amp;leafData, <span class="keywordtype">int</span> insertionIndex, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *nodeData, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a>* returnAction)</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a> &lt; order)</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        {</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordflow">for</span> (i=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i &gt; insertionIndex; i--)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i-1];</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            {</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                <span class="keywordflow">for</span> (i=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i &gt; insertionIndex; i--)</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i-1];</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                <span class="keywordflow">for</span> (i=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1; i &gt; insertionIndex+1; i--)</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i-1];</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            }</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[insertionIndex]=key;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[insertionIndex]=leafData;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[insertionIndex+1]=nodeData;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        }</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        {</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* newPage = pagePool.Allocate( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;            newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            {</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>)</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>-&gt;previous=newPage;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a89e79b7e9bae6c2320349677f460250d">previous</a>=cur;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>=newPage;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="keywordtype">int</span> destIndex, sourceIndex;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keywordflow">if</span> (insertionIndex&gt;=(order+1)/2)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            {</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                destIndex=0;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                sourceIndex=order/2;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                <span class="keywordflow">for</span> (; sourceIndex &lt; insertionIndex; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                {</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[sourceIndex];</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                }</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[destIndex++]=key;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                <span class="keywordflow">for</span> (; sourceIndex &lt; order; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                {</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[sourceIndex];</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                }</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                destIndex=0;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                sourceIndex=order/2;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                    <span class="keywordflow">for</span> (; sourceIndex &lt; insertionIndex; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                    {</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[sourceIndex];</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                    }</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[destIndex++]=leafData;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                    <span class="keywordflow">for</span> (; sourceIndex &lt; order; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                    {</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[sourceIndex];</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                    }</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                }</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                {</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                    </div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                    <span class="keywordflow">for</span> (; sourceIndex &lt; insertionIndex; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                    {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[sourceIndex+1];</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                    }</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[destIndex++]=nodeData;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                    <span class="comment">// sourceIndex+1 is sort of a hack but it works - because there is one extra child than keys</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                    <span class="comment">// skip past the last child for cur</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                    <span class="keywordflow">for</span> (; sourceIndex+1 &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                    {</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[sourceIndex+1];</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                    }</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                    <span class="comment">// the first key is the middle key.  Remove it from the page and push it to the parent</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::PUSH_KEY_TO_PARENT;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j &lt; destIndex-1; j++)</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[j]=newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[j+1];</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                    </div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                }</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>=order/2;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            }</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            {</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                destIndex=0;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                sourceIndex=(order+1)/2-1;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                <span class="keywordflow">for</span> (; sourceIndex &lt; order; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[sourceIndex];</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                destIndex=0;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a35e6652907f33d8d77bdbdfbbddac127">if</a> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                    sourceIndex=(order+1)/2-1;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                    <span class="keywordflow">for</span> (; sourceIndex &lt; order; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[sourceIndex];</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                }</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                {</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                    sourceIndex=(order+1)/2;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                    <span class="keywordflow">for</span> (; sourceIndex &lt; order+1; sourceIndex++, destIndex++)</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[destIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[sourceIndex];</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                    <span class="comment">// the first key is the middle key.  Remove it from the page and push it to the parent</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::PUSH_KEY_TO_PARENT;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                    <a class="code" href="../../dc/d0b/_thread_pool_8h.xhtml#a8b9eb702eb3f9bcba3923532d1e801db">for</a> (<span class="keywordtype">int</span> j=0; j &lt; destIndex-1; j++)</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                        newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[j]=newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[j+1];</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                }</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>=(order+1)/2-1;</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>)</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                {</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                    <span class="keywordtype">bool</span> b = GetIndexOf(key, cur, &amp;insertionIndex);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                    (void) b;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(b==<span class="keyword">false</span>);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                }</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                    insertionIndex=0;</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                InsertIntoNode(key, leafData, insertionIndex, nodeData, cur, returnAction);</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            }</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>=destIndex;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            <span class="keywordflow">return</span> newPage;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        }</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    }</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00662"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a46efd46dde7ff95cb0f5d3ddae9156e7">  662</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a46efd46dde7ff95cb0f5d3ddae9156e7">BPlusTree&lt;KeyType, DataType, order&gt;::CanRotateLeft</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex)</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    {</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">return</span> childIndex&gt;0 &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex-1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>&lt;order;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    }</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00668"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#af6ac3613a87554754db36216ce3d27b0">  668</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#af6ac3613a87554754db36216ce3d27b0">BPlusTree&lt;KeyType, DataType, order&gt;::RotateLeft</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex, <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> *returnAction)</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    {</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *dest = cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex-1];</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *source = cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex];</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[0];</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1; i++)</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        {</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i+1];</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i+1];</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        }</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--;</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[childIndex-1]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">key2</a>=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    }</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00687"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a398b17d14837d5092d2d572ed742ce51">  687</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a398b17d14837d5092d2d572ed742ce51">BPlusTree&lt;KeyType, DataType, order&gt;::CanRotateRight</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex)</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    {</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="keywordflow">return</span> childIndex &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a> &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex+1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>&lt;order;</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    }</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00693"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aaa78c3ef86a10f0f403ea3145bf27dcd">  693</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aaa78c3ef86a10f0f403ea3145bf27dcd">BPlusTree&lt;KeyType, DataType, order&gt;::RotateRight</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <span class="keywordtype">int</span> childIndex, <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> *returnAction)</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    {</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *dest = cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex+1];</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *source = cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex];</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i= dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i &gt; 0; i--)</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        {</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i-1];</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i-1];</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        }</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1];</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[0]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1];</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--;</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[childIndex]=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">key2</a>=dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    }</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00712"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ad061eceac63ffdc684c3b8777e36925e">  712</a></span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ad061eceac63ffdc684c3b8777e36925e">BPlusTree&lt;KeyType, DataType, order&gt;::GetLeafFromKey</a>(<span class="keyword">const</span> KeyType key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* cur = root;</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <span class="keywordtype">int</span> childIndex;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordflow">while</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        {</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="comment">// When searching, if we match the exact key we go down the pointer after that index</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            <span class="keywordflow">if</span> (GetIndexOf(key, cur, &amp;childIndex))</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                childIndex++;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;            cur = cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[childIndex];</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        }</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keywordflow">return</span> cur;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    }</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00727"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae459abd650445f328e74f11ddfa0e9fe">  727</a></span>&#160;    <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae459abd650445f328e74f11ddfa0e9fe">BPlusTree&lt;KeyType, DataType, order&gt;::InsertBranchDown</a>(<span class="keyword">const</span> KeyType key, <span class="keyword">const</span> DataType &amp;data,<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur, <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> *returnAction, <span class="keywordtype">bool</span> *success)</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    {</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keywordtype">int</span> childIndex;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordtype">int</span> branchIndex;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keywordflow">if</span> (GetIndexOf(key, cur, &amp;childIndex))</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;            branchIndex=childIndex+1;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            branchIndex=childIndex;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* newPage;</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        {</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">true</span> &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>==order)</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            {</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                <span class="keywordflow">if</span> (branchIndex==childIndex+1)</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                {</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                    *success=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                    <span class="keywordflow">return</span> 0; <span class="comment">// Already exists</span></div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                }</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                <span class="keywordflow">if</span> (CanRotateLeft(cur, branchIndex))</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                {</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::REPLACE_KEY1_WITH_KEY2;</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                    <span class="keywordflow">if</span> (key &gt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0])</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                    {                       </div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                        RotateLeft(cur, branchIndex, returnAction);</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                        <span class="keywordtype">int</span> insertionIndex;</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                        GetIndexOf(key, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], &amp;insertionIndex);</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                        InsertIntoNode(key, data, insertionIndex, 0, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], 0);</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                    }</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                    {</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                        <span class="comment">// Move head element to left and replace it with key,data</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* dest=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex-1];</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* source=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex];</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">key2</a>=key;</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>]=source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[0];</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                        dest-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>++;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                        source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]=key;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                        source-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[0]=data;   </div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                    }</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                    </div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                }</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (CanRotateRight(cur, branchIndex))</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                {</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                    returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::REPLACE_KEY1_WITH_KEY2;</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                    </div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                    <span class="keywordflow">if</span> (key &lt; cur-&gt;children[branchIndex]-&gt;keys[cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1])</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                    {</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                        RotateRight(cur, branchIndex, returnAction);</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                        <span class="keywordtype">int</span> insertionIndex;</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                        GetIndexOf(key, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], &amp;insertionIndex);</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                        InsertIntoNode(key, data, insertionIndex, 0, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], 0);</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                        </div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                    }</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                    {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                        <span class="comment">// Insert to the head of the right leaf instead and change our key</span></div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex+1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                        InsertIntoNode(key, data, 0, 0, cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex+1], 0);                       </div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                        returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">key2</a>=key;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                    }</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex+1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                    <span class="keywordflow">return</span> 0;                   </div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                }</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            }</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;            newPage=InsertBranchDown(key,data,cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[branchIndex], returnAction, success);</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            <span class="keywordflow">if</span> (returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>==ReturnAction::REPLACE_KEY1_WITH_KEY2)</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            {</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                <span class="keywordflow">if</span> (branchIndex&gt;0 &amp;&amp; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]==returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>)</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                    cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[branchIndex-1]=returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a74926f4150507042a7ddc641033b6b06">key2</a>;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            }</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;            <span class="keywordflow">if</span> (newPage)</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;            {</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                <span class="keywordflow">if</span> (newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                {</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>==ReturnAction::PUSH_KEY_TO_PARENT);</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--; </div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                    <span class="keywordflow">return</span> InsertIntoNode(returnAction-&gt;<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>, data, branchIndex, newPage, cur, returnAction);</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                }</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;                {</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;                    <span class="keywordflow">return</span> InsertIntoNode(newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0], data, branchIndex, newPage, cur, returnAction);</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                }               </div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;            }</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        }</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        {</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;            <span class="keywordflow">if</span> (branchIndex==childIndex+1)</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;            {</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                *success=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                <span class="keywordflow">return</span> 0; <span class="comment">// Already exists             </span></div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;            }</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;            {</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;                <span class="keywordflow">return</span> InsertIntoNode(key, data, branchIndex, 0, cur, returnAction);</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;            }</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;        }</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;        </div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    }</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00835"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#abbfee8f6cb57f3a4b855c7b880196015">  835</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#abbfee8f6cb57f3a4b855c7b880196015">BPlusTree&lt;KeyType, DataType, order&gt;::Insert</a>(<span class="keyword">const</span> KeyType key, <span class="keyword">const</span> DataType &amp;data)</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    {</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;        <span class="keywordflow">if</span> (root==0)</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;        {</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            <span class="comment">// Allocate root and make root a leaf</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;            root = pagePool.Allocate( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;            root-&gt;isLeaf=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            leftmostLeaf=root;</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;            root-&gt;size=1;</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;            root-&gt;keys[0]=key;</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            root-&gt;data[0]=data;</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;            root-&gt;next=0;</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;            root-&gt;previous=0;</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        }</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        {</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;            <span class="keywordtype">bool</span> success=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;            <a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml">ReturnAction</a> returnAction;</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;            returnAction.<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>=ReturnAction::NO_ACTION;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;            <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* newPage = InsertBranchDown(key, data, root, &amp;returnAction, &amp;success);</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;            <span class="keywordflow">if</span> (success==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;            <span class="keywordflow">if</span> (newPage)</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;            {</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                KeyType newKey;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                <span class="keywordflow">if</span> (newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                {</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                    <span class="comment">// One key is pushed up through the stack.  I store that at keys[0] but it has to be removed for the page to be correct</span></div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(returnAction.<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a3b149085b7cf0707c55fa28fb1fa9045">action</a>==ReturnAction::PUSH_KEY_TO_PARENT);</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                    newKey=returnAction.<a class="code" href="../../d5/dd1/struct_data_structures_1_1_b_plus_tree_1_1_return_action.xhtml#a577102c927311ac9f5c371210bd24802">key1</a>;</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                    newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>--;</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                }</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                     newKey = newPage-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0];</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                <span class="comment">// propagate the root</span></div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a>* newRoot = pagePool.Allocate( <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                newRoot-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                newRoot-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>=1;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                newRoot-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]=newKey;</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                newRoot-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0]=root;</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                newRoot-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[1]=newPage;</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                root=newRoot;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;            }</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        }</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    }</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00883"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a84da41ad11bd71d28d510b9941b9ae78">  883</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a84da41ad11bd71d28d510b9941b9ae78">BPlusTree&lt;KeyType, DataType, order&gt;::ShiftKeysLeft</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur)</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    {</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i++)</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;            cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i+1];</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    }</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00890"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#abe3120d0a4822be3eca4e9835d9d2a1a">  890</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#abe3120d0a4822be3eca4e9835d9d2a1a">BPlusTree&lt;KeyType, DataType, order&gt;::Clear</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    {</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        <span class="keywordflow">if</span> (root)</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        {</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;            FreePages();</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            leftmostLeaf=0;</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;            root=0;</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        }</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        pagePool.Clear(<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    }</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00901"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a350138159df5e5f885a30270ef1409dc">  901</a></span>&#160;        <span class="keywordtype">unsigned</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a350138159df5e5f885a30270ef1409dc">BPlusTree&lt;KeyType, DataType, order&gt;::Size</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> count=0;</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *cur = GetListHead();</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;        <span class="keywordflow">while</span> (cur)</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;        {</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;            count+=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;            cur=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;        }</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        <span class="keywordflow">return</span> count;</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    }</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00913"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ac8e7b0969a81b3fffc8a8d0933bf55e8">  913</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ac8e7b0969a81b3fffc8a8d0933bf55e8">BPlusTree&lt;KeyType, DataType, order&gt;::IsEmpty</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        <span class="keywordflow">return</span> root==0;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    }</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00918"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ada2880997cd13505338358ce2c5365ac">  918</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ada2880997cd13505338358ce2c5365ac">BPlusTree&lt;KeyType, DataType, order&gt;::GetIndexOf</a>(<span class="keyword">const</span> KeyType key, <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *page, <span class="keywordtype">int</span> *out)<span class="keyword"> const</span></div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(page-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>&gt;0);</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;        <span class="keywordtype">int</span> index, upperBound, lowerBound;</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        upperBound=page-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>-1;</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        lowerBound=0;</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        index = page-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>/2;</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;        <span class="keywordflow">for</span>(;;)</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;        {</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;            <span class="keywordflow">if</span> (key==page-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[index])</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            {</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                *out=index;</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;            }</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (key&lt;page-&gt;keys[index])</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                upperBound=index-1;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                lowerBound=index+1;</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;            index=lowerBound+(upperBound-lowerBound)/2;</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;            <span class="keywordflow">if</span> (lowerBound&gt;upperBound)</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;            {</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                *out=lowerBound;</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">// No match</span></div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;            }</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;        }</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    }</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00948"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a0d8c994dbc67e9a9d23a5a829b6e84e8">  948</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a0d8c994dbc67e9a9d23a5a829b6e84e8">BPlusTree&lt;KeyType, DataType, order&gt;::FreePages</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    {</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;        <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml" title="A queue implemented as an array with a read and write index.">DataStructures::Queue&lt;DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *&gt; queue;</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *ptr;</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;        queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(root, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;        <span class="keywordflow">while</span> (queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        {</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;            ptr=queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;            <span class="keywordflow">if</span> (ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;            {</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1; i++)</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;                    queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i], <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a> );</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;            }           </div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;            pagePool.Release(ptr, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;        <span class="comment">//  memset(ptr,0,sizeof(root));</span></div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;        };</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    }</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00967"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ab3794a44684972dd5e2d45f7ad895ef5">  967</a></span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *<a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ab3794a44684972dd5e2d45f7ad895ef5">BPlusTree&lt;KeyType, DataType, order&gt;::GetListHead</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        <span class="keywordflow">return</span> leftmostLeaf;</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    }</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00972"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a60ae9643d4a785271617560704ad984e">  972</a></span>&#160;    DataType <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a60ae9643d4a785271617560704ad984e">BPlusTree&lt;KeyType, DataType, order&gt;::GetDataHead</a>(<span class="keywordtype">void</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;        <span class="keywordflow">return</span> leftmostLeaf-&gt;data[0];</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;    }</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00977"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae9d219abdf3c1e4eb92f86386f02a155">  977</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#ae9d219abdf3c1e4eb92f86386f02a155">BPlusTree&lt;KeyType, DataType, order&gt;::ForEachLeaf</a>(<span class="keywordtype">void</span> (*func)(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> * leaf, <span class="keywordtype">int</span> index))</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    {</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;        <span class="keywordtype">int</span> count=0;</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *cur = GetListHead();</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        <span class="keywordflow">while</span> (cur)</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        {</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;            func(cur, count++);</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;            cur=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;        }</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    }</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l00988"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a80e720c175d3bf3612f2cb1777f90053">  988</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a80e720c175d3bf3612f2cb1777f90053">BPlusTree&lt;KeyType, DataType, order&gt;::ForEachData</a>(<span class="keywordtype">void</span> (*func)(DataType input, <span class="keywordtype">int</span> index))</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    {</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        <span class="keywordtype">int</span> count=0,i;</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *cur = GetListHead();</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;        <span class="keywordflow">while</span> (cur)</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;        {</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i++)</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;                func(cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i], count++);</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;            cur=cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#af356c65ea5891e42e1eacd3e79eae304">next</a>;</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;        }</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    }</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l01000"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a020c0a1da18064a095707eaa5ce1a55e"> 1000</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a020c0a1da18064a095707eaa5ce1a55e">BPlusTree&lt;KeyType, DataType, order&gt;::PrintLeaf</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> * leaf, <span class="keywordtype">int</span> index)</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    {</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;        <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%i] SELF=%p\n&quot;</span>, index+1, leaf);</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        <span class="keywordflow">for</span> (i=0; i &lt; leaf-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i++)</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;            <span class="comment">// #med - need to adjust printf-format specified based on the actual datatype</span></div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot; %i. %p\n&quot;</span>, i+1, leaf-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a75e91d62d50b35588a4ec213b455ad73">data</a>[i]);</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    }</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l01009"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a13b0bb9cfe607796ac9655531b7c8d27"> 1009</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#a13b0bb9cfe607796ac9655531b7c8d27">BPlusTree&lt;KeyType, DataType, order&gt;::PrintLeaves</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    {</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;        ForEachLeaf(PrintLeaf);</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    }</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l01015"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#af2df9815c4b1a9bda8d426c14e873bb6"> 1015</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#af2df9815c4b1a9bda8d426c14e873bb6">BPlusTree&lt;KeyType, DataType, order&gt;::ValidateTreeRecursive</a>(<a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">Page&lt;KeyType, DataType, order&gt;</a> *cur)</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    {</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(cur==root || cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>&gt;=order/2);</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        <span class="keywordflow">if</span> (cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>)</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        {</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[0]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0] &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]);</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; i++)</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;            {</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i+1]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[0]==cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[i]);</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;            }</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;        }</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        {</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1; i++)</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;                ValidateTreeRecursive(cur-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]);</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;        }</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    }</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> KeyType, <span class="keyword">class</span> DataType, <span class="keywordtype">int</span> order&gt;</div>
<div class="line"><a name="l01035"></a><span class="lineno"><a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aa95c0d019b5d7b34b9a0c56a5b46813a"> 1035</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d7/d58/class_data_structures_1_1_b_plus_tree.xhtml#aa95c0d019b5d7b34b9a0c56a5b46813a">BPlusTree&lt;KeyType, DataType, order&gt;::PrintGraph</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    {</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;        <a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml" title="A queue implemented as an array with a read and write index.">DataStructures::Queue&lt;DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *&gt; queue;</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;        queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(root,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;        queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(0,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;        <a class="code" href="../../da/d80/namespace_data_structures.xhtml#da/da1/struct_data_structures_1_1_page">DataStructures::Page&lt;KeyType, DataType, order&gt;</a> *ptr;</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;        <span class="keywordtype">int</span> i,j;</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;        <span class="keywordflow">if</span> (root)</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;        {</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%p(&quot;</span>, root);</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;            <span class="keywordflow">for</span> (i=0; i &lt; root-&gt;size; i++)</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;            {</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%i &quot;</span>, root-&gt;keys[i]);</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;            }</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;) &quot;</span>);</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;            <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;        }</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;        <span class="keywordflow">while</span> (queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae2aec093c82f780558c23f8ae9f296b8">Size</a>())</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        {</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;            ptr=queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#a25272370e684388afd807c5369e4ef87">Pop</a>();</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;            <span class="keywordflow">if</span> (ptr==0)</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a9b2b5cb1fdd5ef355032162e6da67fb8">isLeaf</a>==<span class="keyword">false</span>)</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;            {</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;                <span class="keywordflow">for</span> (i=0; i &lt; ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>+1; i++)</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;                {</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%p(&quot;</span>, ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]);</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;                    <span class="comment">//RAKNET_DEBUG_PRINTF(&quot;(&quot;, ptr-&gt;children[i]);</span></div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;                    <span class="keywordflow">for</span> (j=0; j &lt; ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a4440cd3ce0db1898fe3511b6e675e04c">size</a>; j++)</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;                        <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;%i &quot;</span>, ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i]-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2e61c5f5aaa2f2093e9ea66ba91ab0f4">keys</a>[j]);</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;                    <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;) &quot;</span>);</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                    queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(ptr-&gt;<a class="code" href="../../da/d80/namespace_data_structures.xhtml#a2c786de0cb834c236c6b47923f1c6010">children</a>[i],<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                }</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                queue.<a class="code" href="../../d3/d87/class_data_structures_1_1_queue.xhtml#ae564a88f3367a786777694e778a4500d">Push</a>(0,<a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot; -- &quot;</span>);</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;            }</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;        }</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;        <a class="code" href="../../d8/db0/defines_8h.xhtml#a2a5d867f7ae6521f217847a78f17ab4a">RAKNET_DEBUG_PRINTF</a>(<span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    }</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;}</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma warning( pop )</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="comment">// Code to test this hellish data structure.</span></div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="comment">#include &quot;DS_BPlusTree.h&quot;</span></div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="comment">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;<span class="comment">// Handle underflow on root.  If there is only one item left then I can go downwards.</span></div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;<span class="comment">// Make sure I keep the leftmost pointer valid by traversing it</span></div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;<span class="comment">// When I free a leaf, be sure to adjust the pointers around it.</span></div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;<span class="comment">#include &quot;Rand.h&quot;</span></div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="comment">void main(void)</span></div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="comment">    DataStructures::BPlusTree&lt;int, int, 16&gt; btree;</span></div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="comment">    DataStructures::List&lt;int&gt; haveList, removedList;</span></div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;<span class="comment">    int temp;</span></div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;<span class="comment">    int i, j, index;</span></div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;<span class="comment">    int testSize;</span></div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;<span class="comment">    bool b;</span></div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;<span class="comment">    for (testSize=0; testSize &lt; 514; testSize++)</span></div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;<span class="comment">        RAKNET_DEBUG_PRINTF(&quot;TestSize=%i\n&quot;, testSize);</span></div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;<span class="comment">        for (i=0; i &lt; testSize; i++)</span></div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;<span class="comment">            haveList.Insert(i);</span></div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="comment">        for (i=0; i &lt; testSize; i++)</span></div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<span class="comment">            index=i+randomMT()%(testSize-i);</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<span class="comment">            temp=haveList[index];</span></div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;<span class="comment">            haveList[index]=haveList[i];</span></div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="comment">            haveList[i]=temp;</span></div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="comment">        for (i=0; i&lt;testSize; i++)</span></div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;<span class="comment">            btree.Insert(haveList[i], haveList[i]);</span></div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;<span class="comment">            btree.ValidateTree();</span></div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;<span class="comment">        for (i=0; i &lt; testSize; i++)</span></div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="comment">            index=i+randomMT()%(testSize-i);</span></div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="comment">            temp=haveList[index];</span></div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;<span class="comment">            haveList[index]=haveList[i];</span></div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;<span class="comment">            haveList[i]=temp;</span></div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;<span class="comment">        for (i=0; i&lt;testSize; i++)</span></div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;<span class="comment">            btree.Delete(haveList[0]); // Asserts on 8th call.  Fails on going to remove 8 (7th call)</span></div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;<span class="comment">            removedList.Insert(haveList[0]);</span></div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="comment">            haveList.RemoveAtIndex(0);</span></div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;<span class="comment">            for (j=0; j &lt; removedList.Size(); j++)</span></div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;<span class="comment">                b=btree.Get(removedList[j], temp);</span></div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;<span class="comment">                RakAssert(b==false);</span></div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="comment">            }</span></div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;<span class="comment">            for (j=0; j &lt; haveList.Size(); j++)</span></div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<span class="comment">            {</span></div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;<span class="comment">                b=btree.Get(haveList[j], temp);</span></div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;<span class="comment">                RakAssert(b==true);</span></div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;<span class="comment">                RakAssert(haveList[j]==temp);</span></div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="comment">            }</span></div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;<span class="comment">            RakAssert(btree.Size()==haveList.Size());</span></div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;<span class="comment">            btree.ValidateTree();</span></div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment">        btree.Clear(_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;<span class="comment">        removedList.Clear(_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;<span class="comment">        haveList.Clear(_FILE_AND_LINE_);</span></div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;<span class="comment">    RAKNET_DEBUG_PRINTF(&quot;Done. %i\n&quot;, btree.Size());</span></div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="comment">    char ch[256];</span></div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;<span class="comment">    Gets(ch, sizeof(ch));</span></div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;<span class="comment">*/</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_bbb90e3ef9167a594ae33323139a2595.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_88467e66686deb9d3756fe4fc298e321.xhtml">slikenet</a></li><li class="navelem"><a class="el" href="../../d3/d3d/_d_s___b_plus_tree_8h.xhtml">DS_BPlusTree.h</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

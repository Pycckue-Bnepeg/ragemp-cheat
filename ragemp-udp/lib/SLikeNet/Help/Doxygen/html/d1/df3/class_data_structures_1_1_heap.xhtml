<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: DataStructures::Heap&lt; weight_type, data_type, isMaxHeap &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d1/df3/class_data_structures_1_1_heap.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../da/de5/class_data_structures_1_1_heap-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataStructures::Heap&lt; weight_type, data_type, isMaxHeap &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">slikenet/DS_Heap.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for DataStructures::Heap&lt; weight_type, data_type, isMaxHeap &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d5/d77/class_data_structures_1_1_heap__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d74/struct_data_structures_1_1_heap_1_1_heap_node.xhtml">HeapNode</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2331fc1cdcd5d814c97da4a3d8d16de1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a2331fc1cdcd5d814c97da4a3d8d16de1">Heap</a> ()</td></tr>
<tr class="separator:a2331fc1cdcd5d814c97da4a3d8d16de1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc3b571e2c4cd62ea55da95f71201b93"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#acc3b571e2c4cd62ea55da95f71201b93">~Heap</a> ()</td></tr>
<tr class="separator:acc3b571e2c4cd62ea55da95f71201b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa01a134957e811c1af719805d493b700"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#aa01a134957e811c1af719805d493b700">Push</a> (const weight_type &amp;weight, const data_type &amp;data, const char *file, unsigned int line)</td></tr>
<tr class="separator:aa01a134957e811c1af719805d493b700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15fd87c401e7bbe80ebec8a316d2ede7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a15fd87c401e7bbe80ebec8a316d2ede7">StartSeries</a> (void)</td></tr>
<tr class="memdesc:a15fd87c401e7bbe80ebec8a316d2ede7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call before calling PushSeries, for a new series of items.  <a href="#a15fd87c401e7bbe80ebec8a316d2ede7"></a><br/></td></tr>
<tr class="separator:a15fd87c401e7bbe80ebec8a316d2ede7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fed605d6f9b5afc6e3e63f449afade6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a1fed605d6f9b5afc6e3e63f449afade6">PushSeries</a> (const weight_type &amp;weight, const data_type &amp;data, const char *file, unsigned int line)</td></tr>
<tr class="memdesc:a1fed605d6f9b5afc6e3e63f449afade6"><td class="mdescLeft">&#160;</td><td class="mdescRight">If you are going to push a list of items, where the weights of the items on the list are in order and follow the heap order, PushSeries is faster than <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#aa01a134957e811c1af719805d493b700">Push()</a>  <a href="#a1fed605d6f9b5afc6e3e63f449afade6"></a><br/></td></tr>
<tr class="separator:a1fed605d6f9b5afc6e3e63f449afade6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ce961937f06f77b7ad82a02ce8d64ac"><td class="memItemLeft" align="right" valign="top">data_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a9ce961937f06f77b7ad82a02ce8d64ac">Pop</a> (const unsigned startingIndex)</td></tr>
<tr class="separator:a9ce961937f06f77b7ad82a02ce8d64ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99bc18efa747659ec6891ef056d8a4ab"><td class="memItemLeft" align="right" valign="top">data_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a99bc18efa747659ec6891ef056d8a4ab">Peek</a> (const unsigned startingIndex=0) const </td></tr>
<tr class="separator:a99bc18efa747659ec6891ef056d8a4ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50ae6f55a75156e2ab679a0575ebe7ef"><td class="memItemLeft" align="right" valign="top">weight_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a50ae6f55a75156e2ab679a0575ebe7ef">PeekWeight</a> (const unsigned startingIndex=0) const </td></tr>
<tr class="separator:a50ae6f55a75156e2ab679a0575ebe7ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab573390b91ff42db9465a289f1c417de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#ab573390b91ff42db9465a289f1c417de">Clear</a> (bool doNotDeallocateSmallBlocks, const char *file, unsigned int line)</td></tr>
<tr class="separator:ab573390b91ff42db9465a289f1c417de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6acedaf4d89f1de86e0ea256a4773b31"><td class="memItemLeft" align="right" valign="top">data_type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a6acedaf4d89f1de86e0ea256a4773b31">operator[]</a> (const unsigned int position) const </td></tr>
<tr class="separator:a6acedaf4d89f1de86e0ea256a4773b31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdb7d16c52998d6fc8a7b1a8602b8906"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#acdb7d16c52998d6fc8a7b1a8602b8906">Size</a> (void) const </td></tr>
<tr class="separator:acdb7d16c52998d6fc8a7b1a8602b8906"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a9317b3913a553113cd3a04ef471e595e"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a9317b3913a553113cd3a04ef471e595e">LeftChild</a> (const unsigned i) const </td></tr>
<tr class="separator:a9317b3913a553113cd3a04ef471e595e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5363b61f35910c7754ded825000df27"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#aa5363b61f35910c7754ded825000df27">RightChild</a> (const unsigned i) const </td></tr>
<tr class="separator:aa5363b61f35910c7754ded825000df27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b7d3b580d84c3884139f8599142ca51"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a4b7d3b580d84c3884139f8599142ca51">Parent</a> (const unsigned i) const </td></tr>
<tr class="separator:a4b7d3b580d84c3884139f8599142ca51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6037614b00405c5a57d06d0b98264f3f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#a6037614b00405c5a57d06d0b98264f3f">Swap</a> (const unsigned i, const unsigned j)</td></tr>
<tr class="separator:a6037614b00405c5a57d06d0b98264f3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ad8407ff11d87c8ebf97481e5c45e9859"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt; <a class="el" href="../../d6/d74/struct_data_structures_1_1_heap_1_1_heap_node.xhtml">HeapNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#ad8407ff11d87c8ebf97481e5c45e9859">heap</a></td></tr>
<tr class="separator:ad8407ff11d87c8ebf97481e5c45e9859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9136bef0034e8227c8ad3a22b0443d7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#af9136bef0034e8227c8ad3a22b0443d7">optimizeNextSeriesPush</a></td></tr>
<tr class="separator:af9136bef0034e8227c8ad3a22b0443d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class weight_type, class data_type, bool isMaxHeap&gt;<br/>
class DataStructures::Heap&lt; weight_type, data_type, isMaxHeap &gt;</h3>


<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00040">40</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a2331fc1cdcd5d814c97da4a3d8d16de1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::<a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">Heap</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00075">75</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="acc3b571e2c4cd62ea55da95f71201b93"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::~<a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">Heap</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00081">81</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab573390b91ff42db9465a289f1c417de"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Clear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>doNotDeallocateSmallBlocks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00259">259</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="a9317b3913a553113cd3a04ef471e595e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::LeftChild </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00276">276</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6acedaf4d89f1de86e0ea256a4773b31"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">data_type &amp; <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00265">265</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4b7d3b580d84c3884139f8599142ca51"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Parent </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00288">288</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

<p>References <a class="el" href="../../d8/db0/defines_8h_source.xhtml#l00120">RakAssert</a>.</p>

</div>
</div>
<a class="anchor" id="a99bc18efa747659ec6891ef056d8a4ab"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">data_type <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Peek </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>startingIndex</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00247">247</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="a50ae6f55a75156e2ab679a0575ebe7ef"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">weight_type <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::PeekWeight </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>startingIndex</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00253">253</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="a9ce961937f06f77b7ad82a02ce8d64ac"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">data_type <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Pop </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>startingIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00170">170</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="aa01a134957e811c1af719805d493b700"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type, class data_type, bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Push </td>
          <td>(</td>
          <td class="paramtype">const weight_type &amp;&#160;</td>
          <td class="paramname"><em>weight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00135">135</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="a1fed605d6f9b5afc6e3e63f449afade6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type, class data_type, bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::PushSeries </td>
          <td>(</td>
          <td class="paramtype">const weight_type &amp;&#160;</td>
          <td class="paramname"><em>weight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const data_type &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If you are going to push a list of items, where the weights of the items on the list are in order and follow the heap order, PushSeries is faster than <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml#aa01a134957e811c1af719805d493b700">Push()</a> </p>

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00087">87</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa5363b61f35910c7754ded825000df27"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::RightChild </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00282">282</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="acdb7d16c52998d6fc8a7b1a8602b8906"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00270">270</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

<p>Referenced by <a class="el" href="../../d8/deb/_d_s___weighted_graph_8h_source.xhtml#l00398">DataStructures::WeightedGraph&lt; node_type, weight_type, allow_unlinkedNodes &gt;::GenerateDisjktraMatrix()</a>.</p>

</div>
</div>
<a class="anchor" id="a15fd87c401e7bbe80ebec8a316d2ede7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type, class data_type, bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::StartSeries </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Call before calling PushSeries, for a new series of items. </p>

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00055">55</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6037614b00405c5a57d06d0b98264f3f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type , class data_type , bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::Swap </td>
          <td>(</td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00297">297</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ad8407ff11d87c8ebf97481e5c45e9859"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type, class data_type, bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d78/class_data_structures_1_1_list.xhtml">DataStructures::List</a>&lt;<a class="el" href="../../d6/d74/struct_data_structures_1_1_heap_1_1_heap_node.xhtml">HeapNode</a>&gt; <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::heap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00070">70</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<a class="anchor" id="af9136bef0034e8227c8ad3a22b0443d7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class weight_type, class data_type, bool isMaxHeap&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">DataStructures::Heap</a>&lt; weight_type, data_type, isMaxHeap &gt;::optimizeNextSeriesPush</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml#l00071">71</a> of file <a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Source/include/slikenet/<a class="el" href="../../da/dcb/_d_s___heap_8h_source.xhtml">DS_Heap.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d80/namespace_data_structures.xhtml">DataStructures</a></li><li class="navelem"><a class="el" href="../../d1/df3/class_data_structures_1_1_heap.xhtml">Heap</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:49 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

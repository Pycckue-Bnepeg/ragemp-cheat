<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SLikeNet: Source/src/DataCompressor.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SLikeNet
   &#160;<span id="projectnumber">0.1.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.xhtml"><span>Modules</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d7/dbe/_data_compressor_8cpp_source.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DataCompressor.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d7/dbe/_data_compressor_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Original work: Copyright (c) 2014, Oculus VR, Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  This source code is licensed under the BSD-style license found in the</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  RakNet License.txt file in the licenses directory of this source tree. An additional grant </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  of patent rights can be found in the RakNet Patents.txt file in the same directory.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  Modified work: Copyright (c) 2017, SLikeSoft UG (haftungsbeschr√§nkt)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  This source code was modified by SLikeSoft. Modifications are licensed under the MIT-style</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  license found in the license.txt file in the root directory of this source tree.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d45/_data_compressor_8h.xhtml" title="DataCompressor does compression on a block of data.">slikenet/DataCompressor.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../de/d78/_d_s___huffman_encoding_tree_8h.xhtml" title="[Internal] Generates a huffman encoding tree, used for string and global compression.">slikenet/DS_HuffmanEncodingTree.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/da7/assert_8h.xhtml">slikenet/assert.h</a>&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="../../da/d66/string_8h.xhtml">string.h</a>&gt;</span> <span class="comment">// Use string.h rather than memory.h for a console</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using namespace </span>SLNet;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<a class="code" href="../../db/dbd/_export_8h.xhtml#aa00165c970bdb25e1c757b432509533b">STATIC_FACTORY_DEFINITIONS</a>(<a class="code" href="../../da/d5f/class_s_l_net_1_1_data_compressor.xhtml" title="Does compression on a block of data. Not very good compression, but it&#39;s small and fast so is somethi...">DataCompressor</a>,<a class="code" href="../../da/d5f/class_s_l_net_1_1_data_compressor.xhtml" title="Does compression on a block of data. Not very good compression, but it&#39;s small and fast so is somethi...">DataCompressor</a>)</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="code" href="../../da/d5f/class_s_l_net_1_1_data_compressor.xhtml#af18a75451d79cf052cf9715ff8968de8">   25</a></span>&#160;void <a class="code" href="../../da/d5f/class_s_l_net_1_1_data_compressor.xhtml" title="Does compression on a block of data. Not very good compression, but it&#39;s small and fast so is somethi...">DataCompressor</a>::Compress( <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *userData, <span class="keywordtype">unsigned</span> sizeInBytes, SLNet::<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">BitStream</a> * output )</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="comment">// Don&#39;t use this for small files as you will just make them bigger!</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(sizeInBytes &gt; 2048);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> frequencyTable[ 256 ];</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    memset(frequencyTable,0,256*<span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>));</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; sizeInBytes; i++)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        ++frequencyTable[userData[i]];</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml" title="This generates special cases of the huffman encoding tree using 8 bit keys with the additional condit...">HuffmanEncodingTree</a> tree;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="../../dd/d30/namespace_s_l_net.xhtml#a227d2a5f9683a34d9d1e70772fd556ec">BitSize_t</a> writeOffset1, writeOffset2, bitsUsed1, bitsUsed2;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    tree.<a class="code" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#abde050a1b4a2128ec3896463f9f997a7" title="Given a frequency table of 256 elements, all with a frequency of 1 or more, generate the tree...">GenerateFromFrequencyTable</a>(frequencyTable);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    output-&gt;WriteCompressed(sizeInBytes);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; 256; i++)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        output-&gt;WriteCompressed(frequencyTable[i]);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    output-&gt;AlignWriteToByteBoundary();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    writeOffset1=output-&gt;GetWriteOffset();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    output-&gt;Write((<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)0); <span class="comment">// Dummy value</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    bitsUsed1=output-&gt;GetNumberOfBitsUsed();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    tree.<a class="code" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#a1d35c9afb94d954f184a72cf904c7c65" title="Pass an array of bytes to array and a preallocated BitStream to receive the output.">EncodeArray</a>(userData, sizeInBytes, output);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    bitsUsed2=output-&gt;GetNumberOfBitsUsed();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    writeOffset2=output-&gt;GetWriteOffset();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    output-&gt;SetWriteOffset(writeOffset1);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    output-&gt;Write(bitsUsed2-bitsUsed1); <span class="comment">// Go back and write how many bits were used for the encoding</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    output-&gt;SetWriteOffset(writeOffset2);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="../../da/d5f/class_s_l_net_1_1_data_compressor.xhtml#ae6c868e1af182b327011b9e795928143">   53</a></span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="../../da/d5f/class_s_l_net_1_1_data_compressor.xhtml#ae6c868e1af182b327011b9e795928143">DataCompressor::DecompressAndAllocate</a>(<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml">SLNet::BitStream</a> * input, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> **output )</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml" title="This generates special cases of the huffman encoding tree using 8 bit keys with the additional condit...">HuffmanEncodingTree</a> tree;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bitsUsed, destinationSizeInBytes;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> decompressedBytes;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> frequencyTable[ 256 ];</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">unsigned</span> i;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    input-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac7fcbda7a05b5c7bd7018205cb1bb7b0" title="Read any integral type from a bitstream.">ReadCompressed</a>(destinationSizeInBytes);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">for</span> (i=0; i &lt; 256; i++)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        input-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#ac7fcbda7a05b5c7bd7018205cb1bb7b0" title="Read any integral type from a bitstream.">ReadCompressed</a>(frequencyTable[i]);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    input-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#af64b3663a865840e013f5aef490d891e" title="Align the next write and/or read to a byte boundary.">AlignReadToByteBoundary</a>();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> (input-&gt;<a class="code" href="../../df/d75/class_s_l_net_1_1_bit_stream.xhtml#a59f38126d8d19bfd264a2e2cace7d1db" title="Read any integral type from a bitstream.">Read</a>(bitsUsed)==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">// Read error</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#ifdef _DEBUG</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span>        <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(0);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    *output = (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <a class="code" href="../../d9/d4c/_rak_memory_override_8cpp.xhtml#aebeb2e4754399ea3e2c7af3dd9bbe8c3">rakMalloc_Ex</a>(destinationSizeInBytes, <a class="code" href="../../d8/db0/defines_8h.xhtml#a8661ec2137eef33a8cd0cd618a748871">_FILE_AND_LINE_</a>);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    tree.<a class="code" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#abde050a1b4a2128ec3896463f9f997a7" title="Given a frequency table of 256 elements, all with a frequency of 1 or more, generate the tree...">GenerateFromFrequencyTable</a>(frequencyTable);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    decompressedBytes=tree.<a class="code" href="../../d6/d52/class_s_l_net_1_1_huffman_encoding_tree.xhtml#a7e1d71fee40cae1bf30526950323425b">DecodeArray</a>(input, bitsUsed, destinationSizeInBytes, *output );</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="../../d8/db0/defines_8h.xhtml#afaa3647d29f5960651eb23fd3d2b5368">RakAssert</a>(decompressedBytes==destinationSizeInBytes);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> destinationSizeInBytes;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_74389ed8173ad57b461b9d623a1f3867.xhtml">Source</a></li><li class="navelem"><a class="el" href="../../dir_d1eb22c2ecfd8b50f59e9cbaf8260105.xhtml">src</a></li><li class="navelem"><a class="el" href="../../d7/dbe/_data_compressor_8cpp.xhtml">DataCompressor.cpp</a></li>
    <li class="footer">Generated on Wed Aug 14 2019 22:09:46 for SLikeNet by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>

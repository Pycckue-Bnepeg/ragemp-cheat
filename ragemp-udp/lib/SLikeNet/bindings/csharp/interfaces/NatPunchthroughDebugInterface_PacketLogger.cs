/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace SLNet {

using System;
using System.Runtime.InteropServices;

public class NatPunchthroughDebugInterface_PacketLogger : NatPunchthroughDebugInterface {
  private HandleRef swigCPtr;

  internal NatPunchthroughDebugInterface_PacketLogger(IntPtr cPtr, bool cMemoryOwn) : base(SLikeNetPINVOKE.NatPunchthroughDebugInterface_PacketLogger_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(NatPunchthroughDebugInterface_PacketLogger obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~NatPunchthroughDebugInterface_PacketLogger() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SLikeNetPINVOKE.delete_NatPunchthroughDebugInterface_PacketLogger(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PacketLogger pl {
    set {
      SLikeNetPINVOKE.NatPunchthroughDebugInterface_PacketLogger_pl_set(swigCPtr, PacketLogger.getCPtr(value));
    } 
    get {
      IntPtr cPtr = SLikeNetPINVOKE.NatPunchthroughDebugInterface_PacketLogger_pl_get(swigCPtr);
      PacketLogger ret = (cPtr == IntPtr.Zero) ? null : new PacketLogger(cPtr, false);
      return ret;
    } 
  }

  public NatPunchthroughDebugInterface_PacketLogger() : this(SLikeNetPINVOKE.new_NatPunchthroughDebugInterface_PacketLogger(), true) {
  }

  public override void OnClientMessage(string msg) {
    SLikeNetPINVOKE.NatPunchthroughDebugInterface_PacketLogger_OnClientMessage(swigCPtr, msg);
  }

}

}
